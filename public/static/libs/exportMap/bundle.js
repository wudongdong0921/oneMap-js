!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=4)}([function(t,e){t.exports=mapboxgl},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){var r;
/*!
 * jQuery JavaScript Library v3.5.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2020-05-04T22:49Z
 */!function(e,n){"use strict";"object"==typeof t.exports?t.exports=e.document?n(e,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return n(t)}:n(e)}("undefined"!=typeof window?window:this,(function(n,i){"use strict";var o=[],a=Object.getPrototypeOf,s=o.slice,u=o.flat?function(t){return o.flat.call(t)}:function(t){return o.concat.apply([],t)},c=o.push,l=o.indexOf,f={},h=f.toString,p=f.hasOwnProperty,d=p.toString,g=d.call(Object),m={},v=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType},y=function(t){return null!=t&&t===t.window},b=n.document,w={type:!0,src:!0,nonce:!0,noModule:!0};function x(t,e,n){var r,i,o=(n=n||b).createElement("script");if(o.text=t,e)for(r in w)(i=e[r]||e.getAttribute&&e.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function N(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?f[h.call(t)]||"object":typeof t}var L=function(t,e){return new L.fn.init(t,e)};function A(t){var e=!!t&&"length"in t&&t.length,n=N(t);return!v(t)&&!y(t)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t)}L.fn=L.prototype={jquery:"3.5.1",constructor:L,length:0,toArray:function(){return s.call(this)},get:function(t){return null==t?s.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=L.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return L.each(this,t)},map:function(t){return this.pushStack(L.map(this,(function(e,n){return t.call(e,n,e)})))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(L.grep(this,(function(t,e){return(e+1)%2})))},odd:function(){return this.pushStack(L.grep(this,(function(t,e){return e%2})))},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:c,sort:o.sort,splice:o.splice},L.extend=L.fn.extend=function(){var t,e,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,c=!1;for("boolean"==typeof a&&(c=a,a=arguments[s]||{},s++),"object"==typeof a||v(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(t=arguments[s]))for(e in t)r=t[e],"__proto__"!==e&&a!==r&&(c&&r&&(L.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[e],o=i&&!Array.isArray(n)?[]:i||L.isPlainObject(n)?n:{},i=!1,a[e]=L.extend(c,o,r)):void 0!==r&&(a[e]=r));return a},L.extend({expando:"jQuery"+("3.5.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,n;return!(!t||"[object Object]"!==h.call(t))&&(!(e=a(t))||"function"==typeof(n=p.call(e,"constructor")&&e.constructor)&&d.call(n)===g)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t,e,n){x(t,{nonce:e&&e.nonce},n)},each:function(t,e){var n,r=0;if(A(t))for(n=t.length;r<n&&!1!==e.call(t[r],r,t[r]);r++);else for(r in t)if(!1===e.call(t[r],r,t[r]))break;return t},makeArray:function(t,e){var n=e||[];return null!=t&&(A(Object(t))?L.merge(n,"string"==typeof t?[t]:t):c.call(n,t)),n},inArray:function(t,e,n){return null==e?-1:l.call(e,t,n)},merge:function(t,e){for(var n=+e.length,r=0,i=t.length;r<n;r++)t[i++]=e[r];return t.length=i,t},grep:function(t,e,n){for(var r=[],i=0,o=t.length,a=!n;i<o;i++)!e(t[i],i)!==a&&r.push(t[i]);return r},map:function(t,e,n){var r,i,o=0,a=[];if(A(t))for(r=t.length;o<r;o++)null!=(i=e(t[o],o,n))&&a.push(i);else for(o in t)null!=(i=e(t[o],o,n))&&a.push(i);return u(a)},guid:1,support:m}),"function"==typeof Symbol&&(L.fn[Symbol.iterator]=o[Symbol.iterator]),L.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(t,e){f["[object "+e+"]"]=e.toLowerCase()}));var S=
/*!
 * Sizzle CSS Selector Engine v2.3.5
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2020-03-14
 */
function(t){var e,n,r,i,o,a,s,u,c,l,f,h,p,d,g,m,v,y,b,w="sizzle"+1*new Date,x=t.document,N=0,L=0,A=ut(),S=ut(),_=ut(),C=ut(),k=function(t,e){return t===e&&(f=!0),0},P={}.hasOwnProperty,F=[],T=F.pop,E=F.push,j=F.push,I=F.slice,B=function(t,e){for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return n;return-1},O="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",q="(?:\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",D="\\["+M+"*("+q+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+q+"))|)"+M+"*\\]",R=":("+q+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+D+")*)|.*)\\)|)",U=new RegExp(M+"+","g"),z=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),H=new RegExp("^"+M+"*,"+M+"*"),W=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),V=new RegExp(M+"|>"),G=new RegExp(R),Y=new RegExp("^"+q+"$"),X={ID:new RegExp("^#("+q+")"),CLASS:new RegExp("^\\.("+q+")"),TAG:new RegExp("^("+q+"|[*])"),ATTR:new RegExp("^"+D),PSEUDO:new RegExp("^"+R),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+O+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},J=/HTML$/i,$=/^(?:input|select|textarea|button)$/i,K=/^h\d$/i,Q=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,tt=/[+~]/,et=new RegExp("\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\([^\\r\\n\\f])","g"),nt=function(t,e){var n="0x"+t.slice(1)-65536;return e||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},rt=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,it=function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},ot=function(){h()},at=wt((function(t){return!0===t.disabled&&"fieldset"===t.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{j.apply(F=I.call(x.childNodes),x.childNodes),F[x.childNodes.length].nodeType}catch(t){j={apply:F.length?function(t,e){E.apply(t,I.call(e))}:function(t,e){for(var n=t.length,r=0;t[n++]=e[r++];);t.length=n-1}}}function st(t,e,r,i){var o,s,c,l,f,d,v,y=e&&e.ownerDocument,x=e?e.nodeType:9;if(r=r||[],"string"!=typeof t||!t||1!==x&&9!==x&&11!==x)return r;if(!i&&(h(e),e=e||p,g)){if(11!==x&&(f=Z.exec(t)))if(o=f[1]){if(9===x){if(!(c=e.getElementById(o)))return r;if(c.id===o)return r.push(c),r}else if(y&&(c=y.getElementById(o))&&b(e,c)&&c.id===o)return r.push(c),r}else{if(f[2])return j.apply(r,e.getElementsByTagName(t)),r;if((o=f[3])&&n.getElementsByClassName&&e.getElementsByClassName)return j.apply(r,e.getElementsByClassName(o)),r}if(n.qsa&&!C[t+" "]&&(!m||!m.test(t))&&(1!==x||"object"!==e.nodeName.toLowerCase())){if(v=t,y=e,1===x&&(V.test(t)||W.test(t))){for((y=tt.test(t)&&vt(e.parentNode)||e)===e&&n.scope||((l=e.getAttribute("id"))?l=l.replace(rt,it):e.setAttribute("id",l=w)),s=(d=a(t)).length;s--;)d[s]=(l?"#"+l:":scope")+" "+bt(d[s]);v=d.join(",")}try{return j.apply(r,y.querySelectorAll(v)),r}catch(e){C(t,!0)}finally{l===w&&e.removeAttribute("id")}}}return u(t.replace(z,"$1"),e,r,i)}function ut(){var t=[];return function e(n,i){return t.push(n+" ")>r.cacheLength&&delete e[t.shift()],e[n+" "]=i}}function ct(t){return t[w]=!0,t}function lt(t){var e=p.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function ft(t,e){for(var n=t.split("|"),i=n.length;i--;)r.attrHandle[n[i]]=e}function ht(t,e){var n=e&&t,r=n&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(r)return r;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function pt(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function dt(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}function gt(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&at(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function mt(t){return ct((function(e){return e=+e,ct((function(n,r){for(var i,o=t([],n.length,e),a=o.length;a--;)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))}))}))}function vt(t){return t&&void 0!==t.getElementsByTagName&&t}for(e in n=st.support={},o=st.isXML=function(t){var e=t.namespaceURI,n=(t.ownerDocument||t).documentElement;return!J.test(e||n&&n.nodeName||"HTML")},h=st.setDocument=function(t){var e,i,a=t?t.ownerDocument||t:x;return a!=p&&9===a.nodeType&&a.documentElement?(d=(p=a).documentElement,g=!o(p),x!=p&&(i=p.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",ot,!1):i.attachEvent&&i.attachEvent("onunload",ot)),n.scope=lt((function(t){return d.appendChild(t).appendChild(p.createElement("div")),void 0!==t.querySelectorAll&&!t.querySelectorAll(":scope fieldset div").length})),n.attributes=lt((function(t){return t.className="i",!t.getAttribute("className")})),n.getElementsByTagName=lt((function(t){return t.appendChild(p.createComment("")),!t.getElementsByTagName("*").length})),n.getElementsByClassName=Q.test(p.getElementsByClassName),n.getById=lt((function(t){return d.appendChild(t).id=w,!p.getElementsByName||!p.getElementsByName(w).length})),n.getById?(r.filter.ID=function(t){var e=t.replace(et,nt);return function(t){return t.getAttribute("id")===e}},r.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var n=e.getElementById(t);return n?[n]:[]}}):(r.filter.ID=function(t){var e=t.replace(et,nt);return function(t){var n=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}},r.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var n,r,i,o=e.getElementById(t);if(o){if((n=o.getAttributeNode("id"))&&n.value===t)return[o];for(i=e.getElementsByName(t),r=0;o=i[r++];)if((n=o.getAttributeNode("id"))&&n.value===t)return[o]}return[]}}),r.find.TAG=n.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):n.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,r=[],i=0,o=e.getElementsByTagName(t);if("*"===t){for(;n=o[i++];)1===n.nodeType&&r.push(n);return r}return o},r.find.CLASS=n.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&g)return e.getElementsByClassName(t)},v=[],m=[],(n.qsa=Q.test(p.querySelectorAll))&&(lt((function(t){var e;d.appendChild(t).innerHTML="<a id='"+w+"'></a><select id='"+w+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+M+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||m.push("\\["+M+"*(?:value|"+O+")"),t.querySelectorAll("[id~="+w+"-]").length||m.push("~="),(e=p.createElement("input")).setAttribute("name",""),t.appendChild(e),t.querySelectorAll("[name='']").length||m.push("\\["+M+"*name"+M+"*="+M+"*(?:''|\"\")"),t.querySelectorAll(":checked").length||m.push(":checked"),t.querySelectorAll("a#"+w+"+*").length||m.push(".#.+[+~]"),t.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]")})),lt((function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=p.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&m.push("name"+M+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),d.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),m.push(",.*:")}))),(n.matchesSelector=Q.test(y=d.matches||d.webkitMatchesSelector||d.mozMatchesSelector||d.oMatchesSelector||d.msMatchesSelector))&&lt((function(t){n.disconnectedMatch=y.call(t,"*"),y.call(t,"[s!='']:x"),v.push("!=",R)})),m=m.length&&new RegExp(m.join("|")),v=v.length&&new RegExp(v.join("|")),e=Q.test(d.compareDocumentPosition),b=e||Q.test(d.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,r=e&&e.parentNode;return t===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):t.compareDocumentPosition&&16&t.compareDocumentPosition(r)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},k=e?function(t,e){if(t===e)return f=!0,0;var r=!t.compareDocumentPosition-!e.compareDocumentPosition;return r||(1&(r=(t.ownerDocument||t)==(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!n.sortDetached&&e.compareDocumentPosition(t)===r?t==p||t.ownerDocument==x&&b(x,t)?-1:e==p||e.ownerDocument==x&&b(x,e)?1:l?B(l,t)-B(l,e):0:4&r?-1:1)}:function(t,e){if(t===e)return f=!0,0;var n,r=0,i=t.parentNode,o=e.parentNode,a=[t],s=[e];if(!i||!o)return t==p?-1:e==p?1:i?-1:o?1:l?B(l,t)-B(l,e):0;if(i===o)return ht(t,e);for(n=t;n=n.parentNode;)a.unshift(n);for(n=e;n=n.parentNode;)s.unshift(n);for(;a[r]===s[r];)r++;return r?ht(a[r],s[r]):a[r]==x?-1:s[r]==x?1:0},p):p},st.matches=function(t,e){return st(t,null,null,e)},st.matchesSelector=function(t,e){if(h(t),n.matchesSelector&&g&&!C[e+" "]&&(!v||!v.test(e))&&(!m||!m.test(e)))try{var r=y.call(t,e);if(r||n.disconnectedMatch||t.document&&11!==t.document.nodeType)return r}catch(t){C(e,!0)}return st(e,p,null,[t]).length>0},st.contains=function(t,e){return(t.ownerDocument||t)!=p&&h(t),b(t,e)},st.attr=function(t,e){(t.ownerDocument||t)!=p&&h(t);var i=r.attrHandle[e.toLowerCase()],o=i&&P.call(r.attrHandle,e.toLowerCase())?i(t,e,!g):void 0;return void 0!==o?o:n.attributes||!g?t.getAttribute(e):(o=t.getAttributeNode(e))&&o.specified?o.value:null},st.escape=function(t){return(t+"").replace(rt,it)},st.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},st.uniqueSort=function(t){var e,r=[],i=0,o=0;if(f=!n.detectDuplicates,l=!n.sortStable&&t.slice(0),t.sort(k),f){for(;e=t[o++];)e===t[o]&&(i=r.push(o));for(;i--;)t.splice(r[i],1)}return l=null,t},i=st.getText=function(t){var e,n="",r=0,o=t.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=i(t)}else if(3===o||4===o)return t.nodeValue}else for(;e=t[r++];)n+=i(e);return n},(r=st.selectors={cacheLength:50,createPseudo:ct,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(et,nt),t[3]=(t[3]||t[4]||t[5]||"").replace(et,nt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||st.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&st.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return X.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&G.test(n)&&(e=a(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(et,nt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=A[t+" "];return e||(e=new RegExp("(^|"+M+")"+t+"("+M+"|$)"))&&A(t,(function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")}))},ATTR:function(t,e,n){return function(r){var i=st.attr(r,t);return null==i?"!="===e:!e||(i+="","="===e?i===n:"!="===e?i!==n:"^="===e?n&&0===i.indexOf(n):"*="===e?n&&i.indexOf(n)>-1:"$="===e?n&&i.slice(-n.length)===n:"~="===e?(" "+i.replace(U," ")+" ").indexOf(n)>-1:"|="===e&&(i===n||i.slice(0,n.length+1)===n+"-"))}},CHILD:function(t,e,n,r,i){var o="nth"!==t.slice(0,3),a="last"!==t.slice(-4),s="of-type"===e;return 1===r&&0===i?function(t){return!!t.parentNode}:function(e,n,u){var c,l,f,h,p,d,g=o!==a?"nextSibling":"previousSibling",m=e.parentNode,v=s&&e.nodeName.toLowerCase(),y=!u&&!s,b=!1;if(m){if(o){for(;g;){for(h=e;h=h[g];)if(s?h.nodeName.toLowerCase()===v:1===h.nodeType)return!1;d=g="only"===t&&!d&&"nextSibling"}return!0}if(d=[a?m.firstChild:m.lastChild],a&&y){for(b=(p=(c=(l=(f=(h=m)[w]||(h[w]={}))[h.uniqueID]||(f[h.uniqueID]={}))[t]||[])[0]===N&&c[1])&&c[2],h=p&&m.childNodes[p];h=++p&&h&&h[g]||(b=p=0)||d.pop();)if(1===h.nodeType&&++b&&h===e){l[t]=[N,p,b];break}}else if(y&&(b=p=(c=(l=(f=(h=e)[w]||(h[w]={}))[h.uniqueID]||(f[h.uniqueID]={}))[t]||[])[0]===N&&c[1]),!1===b)for(;(h=++p&&h&&h[g]||(b=p=0)||d.pop())&&((s?h.nodeName.toLowerCase()!==v:1!==h.nodeType)||!++b||(y&&((l=(f=h[w]||(h[w]={}))[h.uniqueID]||(f[h.uniqueID]={}))[t]=[N,b]),h!==e)););return(b-=i)===r||b%r==0&&b/r>=0}}},PSEUDO:function(t,e){var n,i=r.pseudos[t]||r.setFilters[t.toLowerCase()]||st.error("unsupported pseudo: "+t);return i[w]?i(e):i.length>1?(n=[t,t,"",e],r.setFilters.hasOwnProperty(t.toLowerCase())?ct((function(t,n){for(var r,o=i(t,e),a=o.length;a--;)t[r=B(t,o[a])]=!(n[r]=o[a])})):function(t){return i(t,0,n)}):i}},pseudos:{not:ct((function(t){var e=[],n=[],r=s(t.replace(z,"$1"));return r[w]?ct((function(t,e,n,i){for(var o,a=r(t,null,i,[]),s=t.length;s--;)(o=a[s])&&(t[s]=!(e[s]=o))})):function(t,i,o){return e[0]=t,r(e,null,o,n),e[0]=null,!n.pop()}})),has:ct((function(t){return function(e){return st(t,e).length>0}})),contains:ct((function(t){return t=t.replace(et,nt),function(e){return(e.textContent||i(e)).indexOf(t)>-1}})),lang:ct((function(t){return Y.test(t||"")||st.error("unsupported lang: "+t),t=t.replace(et,nt).toLowerCase(),function(e){var n;do{if(n=g?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(n=n.toLowerCase())===t||0===n.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}})),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===d},focus:function(t){return t===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:gt(!1),disabled:gt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!r.pseudos.empty(t)},header:function(t){return K.test(t.nodeName)},input:function(t){return $.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:mt((function(){return[0]})),last:mt((function(t,e){return[e-1]})),eq:mt((function(t,e,n){return[n<0?n+e:n]})),even:mt((function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t})),odd:mt((function(t,e){for(var n=1;n<e;n+=2)t.push(n);return t})),lt:mt((function(t,e,n){for(var r=n<0?n+e:n>e?e:n;--r>=0;)t.push(r);return t})),gt:mt((function(t,e,n){for(var r=n<0?n+e:n;++r<e;)t.push(r);return t}))}}).pseudos.nth=r.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})r.pseudos[e]=pt(e);for(e in{submit:!0,reset:!0})r.pseudos[e]=dt(e);function yt(){}function bt(t){for(var e=0,n=t.length,r="";e<n;e++)r+=t[e].value;return r}function wt(t,e,n){var r=e.dir,i=e.next,o=i||r,a=n&&"parentNode"===o,s=L++;return e.first?function(e,n,i){for(;e=e[r];)if(1===e.nodeType||a)return t(e,n,i);return!1}:function(e,n,u){var c,l,f,h=[N,s];if(u){for(;e=e[r];)if((1===e.nodeType||a)&&t(e,n,u))return!0}else for(;e=e[r];)if(1===e.nodeType||a)if(l=(f=e[w]||(e[w]={}))[e.uniqueID]||(f[e.uniqueID]={}),i&&i===e.nodeName.toLowerCase())e=e[r]||e;else{if((c=l[o])&&c[0]===N&&c[1]===s)return h[2]=c[2];if(l[o]=h,h[2]=t(e,n,u))return!0}return!1}}function xt(t){return t.length>1?function(e,n,r){for(var i=t.length;i--;)if(!t[i](e,n,r))return!1;return!0}:t[0]}function Nt(t,e,n,r,i){for(var o,a=[],s=0,u=t.length,c=null!=e;s<u;s++)(o=t[s])&&(n&&!n(o,r,i)||(a.push(o),c&&e.push(s)));return a}function Lt(t,e,n,r,i,o){return r&&!r[w]&&(r=Lt(r)),i&&!i[w]&&(i=Lt(i,o)),ct((function(o,a,s,u){var c,l,f,h=[],p=[],d=a.length,g=o||function(t,e,n){for(var r=0,i=e.length;r<i;r++)st(t,e[r],n);return n}(e||"*",s.nodeType?[s]:s,[]),m=!t||!o&&e?g:Nt(g,h,t,s,u),v=n?i||(o?t:d||r)?[]:a:m;if(n&&n(m,v,s,u),r)for(c=Nt(v,p),r(c,[],s,u),l=c.length;l--;)(f=c[l])&&(v[p[l]]=!(m[p[l]]=f));if(o){if(i||t){if(i){for(c=[],l=v.length;l--;)(f=v[l])&&c.push(m[l]=f);i(null,v=[],c,u)}for(l=v.length;l--;)(f=v[l])&&(c=i?B(o,f):h[l])>-1&&(o[c]=!(a[c]=f))}}else v=Nt(v===a?v.splice(d,v.length):v),i?i(null,a,v,u):j.apply(a,v)}))}function At(t){for(var e,n,i,o=t.length,a=r.relative[t[0].type],s=a||r.relative[" "],u=a?1:0,l=wt((function(t){return t===e}),s,!0),f=wt((function(t){return B(e,t)>-1}),s,!0),h=[function(t,n,r){var i=!a&&(r||n!==c)||((e=n).nodeType?l(t,n,r):f(t,n,r));return e=null,i}];u<o;u++)if(n=r.relative[t[u].type])h=[wt(xt(h),n)];else{if((n=r.filter[t[u].type].apply(null,t[u].matches))[w]){for(i=++u;i<o&&!r.relative[t[i].type];i++);return Lt(u>1&&xt(h),u>1&&bt(t.slice(0,u-1).concat({value:" "===t[u-2].type?"*":""})).replace(z,"$1"),n,u<i&&At(t.slice(u,i)),i<o&&At(t=t.slice(i)),i<o&&bt(t))}h.push(n)}return xt(h)}return yt.prototype=r.filters=r.pseudos,r.setFilters=new yt,a=st.tokenize=function(t,e){var n,i,o,a,s,u,c,l=S[t+" "];if(l)return e?0:l.slice(0);for(s=t,u=[],c=r.preFilter;s;){for(a in n&&!(i=H.exec(s))||(i&&(s=s.slice(i[0].length)||s),u.push(o=[])),n=!1,(i=W.exec(s))&&(n=i.shift(),o.push({value:n,type:i[0].replace(z," ")}),s=s.slice(n.length)),r.filter)!(i=X[a].exec(s))||c[a]&&!(i=c[a](i))||(n=i.shift(),o.push({value:n,type:a,matches:i}),s=s.slice(n.length));if(!n)break}return e?s.length:s?st.error(t):S(t,u).slice(0)},s=st.compile=function(t,e){var n,i=[],o=[],s=_[t+" "];if(!s){for(e||(e=a(t)),n=e.length;n--;)(s=At(e[n]))[w]?i.push(s):o.push(s);(s=_(t,function(t,e){var n=e.length>0,i=t.length>0,o=function(o,a,s,u,l){var f,d,m,v=0,y="0",b=o&&[],w=[],x=c,L=o||i&&r.find.TAG("*",l),A=N+=null==x?1:Math.random()||.1,S=L.length;for(l&&(c=a==p||a||l);y!==S&&null!=(f=L[y]);y++){if(i&&f){for(d=0,a||f.ownerDocument==p||(h(f),s=!g);m=t[d++];)if(m(f,a||p,s)){u.push(f);break}l&&(N=A)}n&&((f=!m&&f)&&v--,o&&b.push(f))}if(v+=y,n&&y!==v){for(d=0;m=e[d++];)m(b,w,a,s);if(o){if(v>0)for(;y--;)b[y]||w[y]||(w[y]=T.call(u));w=Nt(w)}j.apply(u,w),l&&!o&&w.length>0&&v+e.length>1&&st.uniqueSort(u)}return l&&(N=A,c=x),b};return n?ct(o):o}(o,i))).selector=t}return s},u=st.select=function(t,e,n,i){var o,u,c,l,f,h="function"==typeof t&&t,p=!i&&a(t=h.selector||t);if(n=n||[],1===p.length){if((u=p[0]=p[0].slice(0)).length>2&&"ID"===(c=u[0]).type&&9===e.nodeType&&g&&r.relative[u[1].type]){if(!(e=(r.find.ID(c.matches[0].replace(et,nt),e)||[])[0]))return n;h&&(e=e.parentNode),t=t.slice(u.shift().value.length)}for(o=X.needsContext.test(t)?0:u.length;o--&&(c=u[o],!r.relative[l=c.type]);)if((f=r.find[l])&&(i=f(c.matches[0].replace(et,nt),tt.test(u[0].type)&&vt(e.parentNode)||e))){if(u.splice(o,1),!(t=i.length&&bt(u)))return j.apply(n,i),n;break}}return(h||s(t,p))(i,e,!g,n,!e||tt.test(t)&&vt(e.parentNode)||e),n},n.sortStable=w.split("").sort(k).join("")===w,n.detectDuplicates=!!f,h(),n.sortDetached=lt((function(t){return 1&t.compareDocumentPosition(p.createElement("fieldset"))})),lt((function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")}))||ft("type|href|height|width",(function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)})),n.attributes&&lt((function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")}))||ft("value",(function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue})),lt((function(t){return null==t.getAttribute("disabled")}))||ft(O,(function(t,e,n){var r;if(!n)return!0===t[e]?e.toLowerCase():(r=t.getAttributeNode(e))&&r.specified?r.value:null})),st}(n);L.find=S,L.expr=S.selectors,L.expr[":"]=L.expr.pseudos,L.uniqueSort=L.unique=S.uniqueSort,L.text=S.getText,L.isXMLDoc=S.isXML,L.contains=S.contains,L.escapeSelector=S.escape;var _=function(t,e,n){for(var r=[],i=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(i&&L(t).is(n))break;r.push(t)}return r},C=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},k=L.expr.match.needsContext;function P(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var F=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function T(t,e,n){return v(e)?L.grep(t,(function(t,r){return!!e.call(t,r,t)!==n})):e.nodeType?L.grep(t,(function(t){return t===e!==n})):"string"!=typeof e?L.grep(t,(function(t){return l.call(e,t)>-1!==n})):L.filter(e,t,n)}L.filter=function(t,e,n){var r=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===r.nodeType?L.find.matchesSelector(r,t)?[r]:[]:L.find.matches(t,L.grep(e,(function(t){return 1===t.nodeType})))},L.fn.extend({find:function(t){var e,n,r=this.length,i=this;if("string"!=typeof t)return this.pushStack(L(t).filter((function(){for(e=0;e<r;e++)if(L.contains(i[e],this))return!0})));for(n=this.pushStack([]),e=0;e<r;e++)L.find(t,i[e],n);return r>1?L.uniqueSort(n):n},filter:function(t){return this.pushStack(T(this,t||[],!1))},not:function(t){return this.pushStack(T(this,t||[],!0))},is:function(t){return!!T(this,"string"==typeof t&&k.test(t)?L(t):t||[],!1).length}});var E,j=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(L.fn.init=function(t,e,n){var r,i;if(!t)return this;if(n=n||E,"string"==typeof t){if(!(r="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:j.exec(t))||!r[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(r[1]){if(e=e instanceof L?e[0]:e,L.merge(this,L.parseHTML(r[1],e&&e.nodeType?e.ownerDocument||e:b,!0)),F.test(r[1])&&L.isPlainObject(e))for(r in e)v(this[r])?this[r](e[r]):this.attr(r,e[r]);return this}return(i=b.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):v(t)?void 0!==n.ready?n.ready(t):t(L):L.makeArray(t,this)}).prototype=L.fn,E=L(b);var I=/^(?:parents|prev(?:Until|All))/,B={children:!0,contents:!0,next:!0,prev:!0};function O(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}L.fn.extend({has:function(t){var e=L(t,this),n=e.length;return this.filter((function(){for(var t=0;t<n;t++)if(L.contains(this,e[t]))return!0}))},closest:function(t,e){var n,r=0,i=this.length,o=[],a="string"!=typeof t&&L(t);if(!k.test(t))for(;r<i;r++)for(n=this[r];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&L.find.matchesSelector(n,t))){o.push(n);break}return this.pushStack(o.length>1?L.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?l.call(L(t),this[0]):l.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(L.uniqueSort(L.merge(this.get(),L(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),L.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return _(t,"parentNode")},parentsUntil:function(t,e,n){return _(t,"parentNode",n)},next:function(t){return O(t,"nextSibling")},prev:function(t){return O(t,"previousSibling")},nextAll:function(t){return _(t,"nextSibling")},prevAll:function(t){return _(t,"previousSibling")},nextUntil:function(t,e,n){return _(t,"nextSibling",n)},prevUntil:function(t,e,n){return _(t,"previousSibling",n)},siblings:function(t){return C((t.parentNode||{}).firstChild,t)},children:function(t){return C(t.firstChild)},contents:function(t){return null!=t.contentDocument&&a(t.contentDocument)?t.contentDocument:(P(t,"template")&&(t=t.content||t),L.merge([],t.childNodes))}},(function(t,e){L.fn[t]=function(n,r){var i=L.map(this,e,n);return"Until"!==t.slice(-5)&&(r=n),r&&"string"==typeof r&&(i=L.filter(r,i)),this.length>1&&(B[t]||L.uniqueSort(i),I.test(t)&&i.reverse()),this.pushStack(i)}}));var M=/[^\x20\t\r\n\f]+/g;function q(t){return t}function D(t){throw t}function R(t,e,n,r){var i;try{t&&v(i=t.promise)?i.call(t).done(e).fail(n):t&&v(i=t.then)?i.call(t,e,n):e.apply(void 0,[t].slice(r))}catch(t){n.apply(void 0,[t])}}L.Callbacks=function(t){t="string"==typeof t?function(t){var e={};return L.each(t.match(M)||[],(function(t,n){e[n]=!0})),e}(t):L.extend({},t);var e,n,r,i,o=[],a=[],s=-1,u=function(){for(i=i||t.once,r=e=!0;a.length;s=-1)for(n=a.shift();++s<o.length;)!1===o[s].apply(n[0],n[1])&&t.stopOnFalse&&(s=o.length,n=!1);t.memory||(n=!1),e=!1,i&&(o=n?[]:"")},c={add:function(){return o&&(n&&!e&&(s=o.length-1,a.push(n)),function e(n){L.each(n,(function(n,r){v(r)?t.unique&&c.has(r)||o.push(r):r&&r.length&&"string"!==N(r)&&e(r)}))}(arguments),n&&!e&&u()),this},remove:function(){return L.each(arguments,(function(t,e){for(var n;(n=L.inArray(e,o,n))>-1;)o.splice(n,1),n<=s&&s--})),this},has:function(t){return t?L.inArray(t,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return i=a=[],o=n="",this},disabled:function(){return!o},lock:function(){return i=a=[],n||e||(o=n=""),this},locked:function(){return!!i},fireWith:function(t,n){return i||(n=[t,(n=n||[]).slice?n.slice():n],a.push(n),e||u()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},L.extend({Deferred:function(t){var e=[["notify","progress",L.Callbacks("memory"),L.Callbacks("memory"),2],["resolve","done",L.Callbacks("once memory"),L.Callbacks("once memory"),0,"resolved"],["reject","fail",L.Callbacks("once memory"),L.Callbacks("once memory"),1,"rejected"]],r="pending",i={state:function(){return r},always:function(){return o.done(arguments).fail(arguments),this},catch:function(t){return i.then(null,t)},pipe:function(){var t=arguments;return L.Deferred((function(n){L.each(e,(function(e,r){var i=v(t[r[4]])&&t[r[4]];o[r[1]]((function(){var t=i&&i.apply(this,arguments);t&&v(t.promise)?t.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[r[0]+"With"](this,i?[t]:arguments)}))})),t=null})).promise()},then:function(t,r,i){var o=0;function a(t,e,r,i){return function(){var s=this,u=arguments,c=function(){var n,c;if(!(t<o)){if((n=r.apply(s,u))===e.promise())throw new TypeError("Thenable self-resolution");c=n&&("object"==typeof n||"function"==typeof n)&&n.then,v(c)?i?c.call(n,a(o,e,q,i),a(o,e,D,i)):(o++,c.call(n,a(o,e,q,i),a(o,e,D,i),a(o,e,q,e.notifyWith))):(r!==q&&(s=void 0,u=[n]),(i||e.resolveWith)(s,u))}},l=i?c:function(){try{c()}catch(n){L.Deferred.exceptionHook&&L.Deferred.exceptionHook(n,l.stackTrace),t+1>=o&&(r!==D&&(s=void 0,u=[n]),e.rejectWith(s,u))}};t?l():(L.Deferred.getStackHook&&(l.stackTrace=L.Deferred.getStackHook()),n.setTimeout(l))}}return L.Deferred((function(n){e[0][3].add(a(0,n,v(i)?i:q,n.notifyWith)),e[1][3].add(a(0,n,v(t)?t:q)),e[2][3].add(a(0,n,v(r)?r:D))})).promise()},promise:function(t){return null!=t?L.extend(t,i):i}},o={};return L.each(e,(function(t,n){var a=n[2],s=n[5];i[n[1]]=a.add,s&&a.add((function(){r=s}),e[3-t][2].disable,e[3-t][3].disable,e[0][2].lock,e[0][3].lock),a.add(n[3].fire),o[n[0]]=function(){return o[n[0]+"With"](this===o?void 0:this,arguments),this},o[n[0]+"With"]=a.fireWith})),i.promise(o),t&&t.call(o,o),o},when:function(t){var e=arguments.length,n=e,r=Array(n),i=s.call(arguments),o=L.Deferred(),a=function(t){return function(n){r[t]=this,i[t]=arguments.length>1?s.call(arguments):n,--e||o.resolveWith(r,i)}};if(e<=1&&(R(t,o.done(a(n)).resolve,o.reject,!e),"pending"===o.state()||v(i[n]&&i[n].then)))return o.then();for(;n--;)R(i[n],a(n),o.reject);return o.promise()}});var U=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;L.Deferred.exceptionHook=function(t,e){n.console&&n.console.warn&&t&&U.test(t.name)&&n.console.warn("jQuery.Deferred exception: "+t.message,t.stack,e)},L.readyException=function(t){n.setTimeout((function(){throw t}))};var z=L.Deferred();function H(){b.removeEventListener("DOMContentLoaded",H),n.removeEventListener("load",H),L.ready()}L.fn.ready=function(t){return z.then(t).catch((function(t){L.readyException(t)})),this},L.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--L.readyWait:L.isReady)||(L.isReady=!0,!0!==t&&--L.readyWait>0||z.resolveWith(b,[L]))}}),L.ready.then=z.then,"complete"===b.readyState||"loading"!==b.readyState&&!b.documentElement.doScroll?n.setTimeout(L.ready):(b.addEventListener("DOMContentLoaded",H),n.addEventListener("load",H));var W=function(t,e,n,r,i,o,a){var s=0,u=t.length,c=null==n;if("object"===N(n))for(s in i=!0,n)W(t,e,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,v(r)||(a=!0),c&&(a?(e.call(t,r),e=null):(c=e,e=function(t,e,n){return c.call(L(t),n)})),e))for(;s<u;s++)e(t[s],n,a?r:r.call(t[s],s,e(t[s],n)));return i?t:c?e.call(t):u?e(t[0],n):o},V=/^-ms-/,G=/-([a-z])/g;function Y(t,e){return e.toUpperCase()}function X(t){return t.replace(V,"ms-").replace(G,Y)}var J=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function $(){this.expando=L.expando+$.uid++}$.uid=1,$.prototype={cache:function(t){var e=t[this.expando];return e||(e={},J(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var r,i=this.cache(t);if("string"==typeof e)i[X(e)]=n;else for(r in e)i[X(r)]=e[r];return i},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][X(e)]},access:function(t,e,n){return void 0===e||e&&"string"==typeof e&&void 0===n?this.get(t,e):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,r=t[this.expando];if(void 0!==r){if(void 0!==e){n=(e=Array.isArray(e)?e.map(X):(e=X(e))in r?[e]:e.match(M)||[]).length;for(;n--;)delete r[e[n]]}(void 0===e||L.isEmptyObject(r))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!L.isEmptyObject(e)}};var K=new $,Q=new $,Z=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,tt=/[A-Z]/g;function et(t,e,n){var r;if(void 0===n&&1===t.nodeType)if(r="data-"+e.replace(tt,"-$&").toLowerCase(),"string"==typeof(n=t.getAttribute(r))){try{n=function(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:Z.test(t)?JSON.parse(t):t)}(n)}catch(t){}Q.set(t,e,n)}else n=void 0;return n}L.extend({hasData:function(t){return Q.hasData(t)||K.hasData(t)},data:function(t,e,n){return Q.access(t,e,n)},removeData:function(t,e){Q.remove(t,e)},_data:function(t,e,n){return K.access(t,e,n)},_removeData:function(t,e){K.remove(t,e)}}),L.fn.extend({data:function(t,e){var n,r,i,o=this[0],a=o&&o.attributes;if(void 0===t){if(this.length&&(i=Q.get(o),1===o.nodeType&&!K.get(o,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&0===(r=a[n].name).indexOf("data-")&&(r=X(r.slice(5)),et(o,r,i[r]));K.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof t?this.each((function(){Q.set(this,t)})):W(this,(function(e){var n;if(o&&void 0===e)return void 0!==(n=Q.get(o,t))||void 0!==(n=et(o,t))?n:void 0;this.each((function(){Q.set(this,t,e)}))}),null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each((function(){Q.remove(this,t)}))}}),L.extend({queue:function(t,e,n){var r;if(t)return e=(e||"fx")+"queue",r=K.get(t,e),n&&(!r||Array.isArray(n)?r=K.access(t,e,L.makeArray(n)):r.push(n)),r||[]},dequeue:function(t,e){e=e||"fx";var n=L.queue(t,e),r=n.length,i=n.shift(),o=L._queueHooks(t,e);"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===e&&n.unshift("inprogress"),delete o.stop,i.call(t,(function(){L.dequeue(t,e)}),o)),!r&&o&&o.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return K.get(t,n)||K.access(t,n,{empty:L.Callbacks("once memory").add((function(){K.remove(t,[e+"queue",n])}))})}}),L.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?L.queue(this[0],t):void 0===e?this:this.each((function(){var n=L.queue(this,t,e);L._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&L.dequeue(this,t)}))},dequeue:function(t){return this.each((function(){L.dequeue(this,t)}))},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,r=1,i=L.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";a--;)(n=K.get(o[a],t+"queueHooks"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(e)}});var nt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,rt=new RegExp("^(?:([+-])=|)("+nt+")([a-z%]*)$","i"),it=["Top","Right","Bottom","Left"],ot=b.documentElement,at=function(t){return L.contains(t.ownerDocument,t)},st={composed:!0};ot.getRootNode&&(at=function(t){return L.contains(t.ownerDocument,t)||t.getRootNode(st)===t.ownerDocument});var ut=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&at(t)&&"none"===L.css(t,"display")};function ct(t,e,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return L.css(t,e,"")},u=s(),c=n&&n[3]||(L.cssNumber[e]?"":"px"),l=t.nodeType&&(L.cssNumber[e]||"px"!==c&&+u)&&rt.exec(L.css(t,e));if(l&&l[3]!==c){for(u/=2,c=c||l[3],l=+u||1;a--;)L.style(t,e,l+c),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),l/=o;l*=2,L.style(t,e,l+c),n=n||[]}return n&&(l=+l||+u||0,i=n[1]?l+(n[1]+1)*n[2]:+n[2],r&&(r.unit=c,r.start=l,r.end=i)),i}var lt={};function ft(t){var e,n=t.ownerDocument,r=t.nodeName,i=lt[r];return i||(e=n.body.appendChild(n.createElement(r)),i=L.css(e,"display"),e.parentNode.removeChild(e),"none"===i&&(i="block"),lt[r]=i,i)}function ht(t,e){for(var n,r,i=[],o=0,a=t.length;o<a;o++)(r=t[o]).style&&(n=r.style.display,e?("none"===n&&(i[o]=K.get(r,"display")||null,i[o]||(r.style.display="")),""===r.style.display&&ut(r)&&(i[o]=ft(r))):"none"!==n&&(i[o]="none",K.set(r,"display",n)));for(o=0;o<a;o++)null!=i[o]&&(t[o].style.display=i[o]);return t}L.fn.extend({show:function(){return ht(this,!0)},hide:function(){return ht(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each((function(){ut(this)?L(this).show():L(this).hide()}))}});var pt,dt,gt=/^(?:checkbox|radio)$/i,mt=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,vt=/^$|^module$|\/(?:java|ecma)script/i;pt=b.createDocumentFragment().appendChild(b.createElement("div")),(dt=b.createElement("input")).setAttribute("type","radio"),dt.setAttribute("checked","checked"),dt.setAttribute("name","t"),pt.appendChild(dt),m.checkClone=pt.cloneNode(!0).cloneNode(!0).lastChild.checked,pt.innerHTML="<textarea>x</textarea>",m.noCloneChecked=!!pt.cloneNode(!0).lastChild.defaultValue,pt.innerHTML="<option></option>",m.option=!!pt.lastChild;var yt={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function bt(t,e){var n;return n=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&P(t,e)?L.merge([t],n):n}function wt(t,e){for(var n=0,r=t.length;n<r;n++)K.set(t[n],"globalEval",!e||K.get(e[n],"globalEval"))}yt.tbody=yt.tfoot=yt.colgroup=yt.caption=yt.thead,yt.th=yt.td,m.option||(yt.optgroup=yt.option=[1,"<select multiple='multiple'>","</select>"]);var xt=/<|&#?\w+;/;function Nt(t,e,n,r,i){for(var o,a,s,u,c,l,f=e.createDocumentFragment(),h=[],p=0,d=t.length;p<d;p++)if((o=t[p])||0===o)if("object"===N(o))L.merge(h,o.nodeType?[o]:o);else if(xt.test(o)){for(a=a||f.appendChild(e.createElement("div")),s=(mt.exec(o)||["",""])[1].toLowerCase(),u=yt[s]||yt._default,a.innerHTML=u[1]+L.htmlPrefilter(o)+u[2],l=u[0];l--;)a=a.lastChild;L.merge(h,a.childNodes),(a=f.firstChild).textContent=""}else h.push(e.createTextNode(o));for(f.textContent="",p=0;o=h[p++];)if(r&&L.inArray(o,r)>-1)i&&i.push(o);else if(c=at(o),a=bt(f.appendChild(o),"script"),c&&wt(a),n)for(l=0;o=a[l++];)vt.test(o.type||"")&&n.push(o);return f}var Lt=/^key/,At=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,St=/^([^.]*)(?:\.(.+)|)/;function _t(){return!0}function Ct(){return!1}function kt(t,e){return t===function(){try{return b.activeElement}catch(t){}}()==("focus"===e)}function Pt(t,e,n,r,i,o){var a,s;if("object"==typeof e){for(s in"string"!=typeof n&&(r=r||n,n=void 0),e)Pt(t,s,n,r,e[s],o);return t}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=Ct;else if(!i)return t;return 1===o&&(a=i,(i=function(t){return L().off(t),a.apply(this,arguments)}).guid=a.guid||(a.guid=L.guid++)),t.each((function(){L.event.add(this,e,i,r,n)}))}function Ft(t,e,n){n?(K.set(t,e,!1),L.event.add(t,e,{namespace:!1,handler:function(t){var r,i,o=K.get(this,e);if(1&t.isTrigger&&this[e]){if(o.length)(L.event.special[e]||{}).delegateType&&t.stopPropagation();else if(o=s.call(arguments),K.set(this,e,o),r=n(this,e),this[e](),o!==(i=K.get(this,e))||r?K.set(this,e,!1):i={},o!==i)return t.stopImmediatePropagation(),t.preventDefault(),i.value}else o.length&&(K.set(this,e,{value:L.event.trigger(L.extend(o[0],L.Event.prototype),o.slice(1),this)}),t.stopImmediatePropagation())}})):void 0===K.get(t,e)&&L.event.add(t,e,_t)}L.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,c,l,f,h,p,d,g,m=K.get(t);if(J(t))for(n.handler&&(n=(o=n).handler,i=o.selector),i&&L.find.matchesSelector(ot,i),n.guid||(n.guid=L.guid++),(u=m.events)||(u=m.events=Object.create(null)),(a=m.handle)||(a=m.handle=function(e){return void 0!==L&&L.event.triggered!==e.type?L.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(M)||[""]).length;c--;)p=g=(s=St.exec(e[c])||[])[1],d=(s[2]||"").split(".").sort(),p&&(f=L.event.special[p]||{},p=(i?f.delegateType:f.bindType)||p,f=L.event.special[p]||{},l=L.extend({type:p,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&L.expr.match.needsContext.test(i),namespace:d.join(".")},o),(h=u[p])||((h=u[p]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,d,a)||t.addEventListener&&t.addEventListener(p,a)),f.add&&(f.add.call(t,l),l.handler.guid||(l.handler.guid=n.guid)),i?h.splice(h.delegateCount++,0,l):h.push(l),L.event.global[p]=!0)},remove:function(t,e,n,r,i){var o,a,s,u,c,l,f,h,p,d,g,m=K.hasData(t)&&K.get(t);if(m&&(u=m.events)){for(c=(e=(e||"").match(M)||[""]).length;c--;)if(p=g=(s=St.exec(e[c])||[])[1],d=(s[2]||"").split(".").sort(),p){for(f=L.event.special[p]||{},h=u[p=(r?f.delegateType:f.bindType)||p]||[],s=s[2]&&new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=h.length;o--;)l=h[o],!i&&g!==l.origType||n&&n.guid!==l.guid||s&&!s.test(l.namespace)||r&&r!==l.selector&&("**"!==r||!l.selector)||(h.splice(o,1),l.selector&&h.delegateCount--,f.remove&&f.remove.call(t,l));a&&!h.length&&(f.teardown&&!1!==f.teardown.call(t,d,m.handle)||L.removeEvent(t,p,m.handle),delete u[p])}else for(p in u)L.event.remove(t,p+e[c],n,r,!0);L.isEmptyObject(u)&&K.remove(t,"handle events")}},dispatch:function(t){var e,n,r,i,o,a,s=new Array(arguments.length),u=L.event.fix(t),c=(K.get(this,"events")||Object.create(null))[u.type]||[],l=L.event.special[u.type]||{};for(s[0]=u,e=1;e<arguments.length;e++)s[e]=arguments[e];if(u.delegateTarget=this,!l.preDispatch||!1!==l.preDispatch.call(this,u)){for(a=L.event.handlers.call(this,u,c),e=0;(i=a[e++])&&!u.isPropagationStopped();)for(u.currentTarget=i.elem,n=0;(o=i.handlers[n++])&&!u.isImmediatePropagationStopped();)u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((L.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,u),u.result}},handlers:function(t,e){var n,r,i,o,a,s=[],u=e.delegateCount,c=t.target;if(u&&c.nodeType&&!("click"===t.type&&t.button>=1))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==t.type||!0!==c.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=e[n]).selector+" "]&&(a[i]=r.needsContext?L(i,this).index(c)>-1:L.find(i,this,null,[c]).length),a[i]&&o.push(r);o.length&&s.push({elem:c,handlers:o})}return c=this,u<e.length&&s.push({elem:c,handlers:e.slice(u)}),s},addProp:function(t,e){Object.defineProperty(L.Event.prototype,t,{enumerable:!0,configurable:!0,get:v(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[L.expando]?t:new L.Event(t)},special:{load:{noBubble:!0},click:{setup:function(t){var e=this||t;return gt.test(e.type)&&e.click&&P(e,"input")&&Ft(e,"click",_t),!1},trigger:function(t){var e=this||t;return gt.test(e.type)&&e.click&&P(e,"input")&&Ft(e,"click"),!0},_default:function(t){var e=t.target;return gt.test(e.type)&&e.click&&P(e,"input")&&K.get(e,"click")||P(e,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},L.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},L.Event=function(t,e){if(!(this instanceof L.Event))return new L.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?_t:Ct,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&L.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[L.expando]=!0},L.Event.prototype={constructor:L.Event,isDefaultPrevented:Ct,isPropagationStopped:Ct,isImmediatePropagationStopped:Ct,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=_t,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=_t,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=_t,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},L.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&Lt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&At.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},L.event.addProp),L.each({focus:"focusin",blur:"focusout"},(function(t,e){L.event.special[t]={setup:function(){return Ft(this,t,kt),!1},trigger:function(){return Ft(this,t),!0},delegateType:e}})),L.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(t,e){L.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,r=this,i=t.relatedTarget,o=t.handleObj;return i&&(i===r||L.contains(r,i))||(t.type=o.origType,n=o.handler.apply(this,arguments),t.type=e),n}}})),L.fn.extend({on:function(t,e,n,r){return Pt(this,t,e,n,r)},one:function(t,e,n,r){return Pt(this,t,e,n,r,1)},off:function(t,e,n){var r,i;if(t&&t.preventDefault&&t.handleObj)return r=t.handleObj,L(t.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof t){for(i in t)this.off(i,e,t[i]);return this}return!1!==e&&"function"!=typeof e||(n=e,e=void 0),!1===n&&(n=Ct),this.each((function(){L.event.remove(this,t,n,e)}))}});var Tt=/<script|<style|<link/i,Et=/checked\s*(?:[^=]|=\s*.checked.)/i,jt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function It(t,e){return P(t,"table")&&P(11!==e.nodeType?e:e.firstChild,"tr")&&L(t).children("tbody")[0]||t}function Bt(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Ot(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function Mt(t,e){var n,r,i,o,a,s;if(1===e.nodeType){if(K.hasData(t)&&(s=K.get(t).events))for(i in K.remove(e,"handle events"),s)for(n=0,r=s[i].length;n<r;n++)L.event.add(e,i,s[i][n]);Q.hasData(t)&&(o=Q.access(t),a=L.extend({},o),Q.set(e,a))}}function qt(t,e){var n=e.nodeName.toLowerCase();"input"===n&&gt.test(t.type)?e.checked=t.checked:"input"!==n&&"textarea"!==n||(e.defaultValue=t.defaultValue)}function Dt(t,e,n,r){e=u(e);var i,o,a,s,c,l,f=0,h=t.length,p=h-1,d=e[0],g=v(d);if(g||h>1&&"string"==typeof d&&!m.checkClone&&Et.test(d))return t.each((function(i){var o=t.eq(i);g&&(e[0]=d.call(this,i,o.html())),Dt(o,e,n,r)}));if(h&&(o=(i=Nt(e,t[0].ownerDocument,!1,t,r)).firstChild,1===i.childNodes.length&&(i=o),o||r)){for(s=(a=L.map(bt(i,"script"),Bt)).length;f<h;f++)c=i,f!==p&&(c=L.clone(c,!0,!0),s&&L.merge(a,bt(c,"script"))),n.call(t[f],c,f);if(s)for(l=a[a.length-1].ownerDocument,L.map(a,Ot),f=0;f<s;f++)c=a[f],vt.test(c.type||"")&&!K.access(c,"globalEval")&&L.contains(l,c)&&(c.src&&"module"!==(c.type||"").toLowerCase()?L._evalUrl&&!c.noModule&&L._evalUrl(c.src,{nonce:c.nonce||c.getAttribute("nonce")},l):x(c.textContent.replace(jt,""),c,l))}return t}function Rt(t,e,n){for(var r,i=e?L.filter(e,t):t,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||L.cleanData(bt(r)),r.parentNode&&(n&&at(r)&&wt(bt(r,"script")),r.parentNode.removeChild(r));return t}L.extend({htmlPrefilter:function(t){return t},clone:function(t,e,n){var r,i,o,a,s=t.cloneNode(!0),u=at(t);if(!(m.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||L.isXMLDoc(t)))for(a=bt(s),r=0,i=(o=bt(t)).length;r<i;r++)qt(o[r],a[r]);if(e)if(n)for(o=o||bt(t),a=a||bt(s),r=0,i=o.length;r<i;r++)Mt(o[r],a[r]);else Mt(t,s);return(a=bt(s,"script")).length>0&&wt(a,!u&&bt(t,"script")),s},cleanData:function(t){for(var e,n,r,i=L.event.special,o=0;void 0!==(n=t[o]);o++)if(J(n)){if(e=n[K.expando]){if(e.events)for(r in e.events)i[r]?L.event.remove(n,r):L.removeEvent(n,r,e.handle);n[K.expando]=void 0}n[Q.expando]&&(n[Q.expando]=void 0)}}}),L.fn.extend({detach:function(t){return Rt(this,t,!0)},remove:function(t){return Rt(this,t)},text:function(t){return W(this,(function(t){return void 0===t?L.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)}))}),null,t,arguments.length)},append:function(){return Dt(this,arguments,(function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||It(this,t).appendChild(t)}))},prepend:function(){return Dt(this,arguments,(function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=It(this,t);e.insertBefore(t,e.firstChild)}}))},before:function(){return Dt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this)}))},after:function(){return Dt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)}))},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(L.cleanData(bt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map((function(){return L.clone(this,t,e)}))},html:function(t){return W(this,(function(t){var e=this[0]||{},n=0,r=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Tt.test(t)&&!yt[(mt.exec(t)||["",""])[1].toLowerCase()]){t=L.htmlPrefilter(t);try{for(;n<r;n++)1===(e=this[n]||{}).nodeType&&(L.cleanData(bt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)}),null,t,arguments.length)},replaceWith:function(){var t=[];return Dt(this,arguments,(function(e){var n=this.parentNode;L.inArray(this,t)<0&&(L.cleanData(bt(this)),n&&n.replaceChild(e,this))}),t)}}),L.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(t,e){L.fn[t]=function(t){for(var n,r=[],i=L(t),o=i.length-1,a=0;a<=o;a++)n=a===o?this:this.clone(!0),L(i[a])[e](n),c.apply(r,n.get());return this.pushStack(r)}}));var Ut=new RegExp("^("+nt+")(?!px)[a-z%]+$","i"),zt=function(t){var e=t.ownerDocument.defaultView;return e&&e.opener||(e=n),e.getComputedStyle(t)},Ht=function(t,e,n){var r,i,o={};for(i in e)o[i]=t.style[i],t.style[i]=e[i];for(i in r=n.call(t),e)t.style[i]=o[i];return r},Wt=new RegExp(it.join("|"),"i");function Vt(t,e,n){var r,i,o,a,s=t.style;return(n=n||zt(t))&&(""!==(a=n.getPropertyValue(e)||n[e])||at(t)||(a=L.style(t,e)),!m.pixelBoxStyles()&&Ut.test(a)&&Wt.test(e)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+"":a}function Gt(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function t(){if(l){c.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",l.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ot.appendChild(c).appendChild(l);var t=n.getComputedStyle(l);r="1%"!==t.top,u=12===e(t.marginLeft),l.style.right="60%",a=36===e(t.right),i=36===e(t.width),l.style.position="absolute",o=12===e(l.offsetWidth/3),ot.removeChild(c),l=null}}function e(t){return Math.round(parseFloat(t))}var r,i,o,a,s,u,c=b.createElement("div"),l=b.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",m.clearCloneStyle="content-box"===l.style.backgroundClip,L.extend(m,{boxSizingReliable:function(){return t(),i},pixelBoxStyles:function(){return t(),a},pixelPosition:function(){return t(),r},reliableMarginLeft:function(){return t(),u},scrollboxSize:function(){return t(),o},reliableTrDimensions:function(){var t,e,r,i;return null==s&&(t=b.createElement("table"),e=b.createElement("tr"),r=b.createElement("div"),t.style.cssText="position:absolute;left:-11111px",e.style.height="1px",r.style.height="9px",ot.appendChild(t).appendChild(e).appendChild(r),i=n.getComputedStyle(e),s=parseInt(i.height)>3,ot.removeChild(t)),s}}))}();var Yt=["Webkit","Moz","ms"],Xt=b.createElement("div").style,Jt={};function $t(t){var e=L.cssProps[t]||Jt[t];return e||(t in Xt?t:Jt[t]=function(t){for(var e=t[0].toUpperCase()+t.slice(1),n=Yt.length;n--;)if((t=Yt[n]+e)in Xt)return t}(t)||t)}var Kt=/^(none|table(?!-c[ea]).+)/,Qt=/^--/,Zt={position:"absolute",visibility:"hidden",display:"block"},te={letterSpacing:"0",fontWeight:"400"};function ee(t,e,n){var r=rt.exec(e);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):e}function ne(t,e,n,r,i,o){var a="width"===e?1:0,s=0,u=0;if(n===(r?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(u+=L.css(t,n+it[a],!0,i)),r?("content"===n&&(u-=L.css(t,"padding"+it[a],!0,i)),"margin"!==n&&(u-=L.css(t,"border"+it[a]+"Width",!0,i))):(u+=L.css(t,"padding"+it[a],!0,i),"padding"!==n?u+=L.css(t,"border"+it[a]+"Width",!0,i):s+=L.css(t,"border"+it[a]+"Width",!0,i));return!r&&o>=0&&(u+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-o-u-s-.5))||0),u}function re(t,e,n){var r=zt(t),i=(!m.boxSizingReliable()||n)&&"border-box"===L.css(t,"boxSizing",!1,r),o=i,a=Vt(t,e,r),s="offset"+e[0].toUpperCase()+e.slice(1);if(Ut.test(a)){if(!n)return a;a="auto"}return(!m.boxSizingReliable()&&i||!m.reliableTrDimensions()&&P(t,"tr")||"auto"===a||!parseFloat(a)&&"inline"===L.css(t,"display",!1,r))&&t.getClientRects().length&&(i="border-box"===L.css(t,"boxSizing",!1,r),(o=s in t)&&(a=t[s])),(a=parseFloat(a)||0)+ne(t,e,n||(i?"border":"content"),o,r,a)+"px"}function ie(t,e,n,r,i){return new ie.prototype.init(t,e,n,r,i)}L.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=Vt(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,n,r){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var i,o,a,s=X(e),u=Qt.test(e),c=t.style;if(u||(e=$t(s)),a=L.cssHooks[e]||L.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(t,!1,r))?i:c[e];"string"===(o=typeof n)&&(i=rt.exec(n))&&i[1]&&(n=ct(t,e,i),o="number"),null!=n&&n==n&&("number"!==o||u||(n+=i&&i[3]||(L.cssNumber[s]?"":"px")),m.clearCloneStyle||""!==n||0!==e.indexOf("background")||(c[e]="inherit"),a&&"set"in a&&void 0===(n=a.set(t,n,r))||(u?c.setProperty(e,n):c[e]=n))}},css:function(t,e,n,r){var i,o,a,s=X(e);return Qt.test(e)||(e=$t(s)),(a=L.cssHooks[e]||L.cssHooks[s])&&"get"in a&&(i=a.get(t,!0,n)),void 0===i&&(i=Vt(t,e,r)),"normal"===i&&e in te&&(i=te[e]),""===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),L.each(["height","width"],(function(t,e){L.cssHooks[e]={get:function(t,n,r){if(n)return!Kt.test(L.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?re(t,e,r):Ht(t,Zt,(function(){return re(t,e,r)}))},set:function(t,n,r){var i,o=zt(t),a=!m.scrollboxSize()&&"absolute"===o.position,s=(a||r)&&"border-box"===L.css(t,"boxSizing",!1,o),u=r?ne(t,e,r,s,o):0;return s&&a&&(u-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(o[e])-ne(t,e,"border",!1,o)-.5)),u&&(i=rt.exec(n))&&"px"!==(i[3]||"px")&&(t.style[e]=n,n=L.css(t,e)),ee(0,n,u)}}})),L.cssHooks.marginLeft=Gt(m.reliableMarginLeft,(function(t,e){if(e)return(parseFloat(Vt(t,"marginLeft"))||t.getBoundingClientRect().left-Ht(t,{marginLeft:0},(function(){return t.getBoundingClientRect().left})))+"px"})),L.each({margin:"",padding:"",border:"Width"},(function(t,e){L.cssHooks[t+e]={expand:function(n){for(var r=0,i={},o="string"==typeof n?n.split(" "):[n];r<4;r++)i[t+it[r]+e]=o[r]||o[r-2]||o[0];return i}},"margin"!==t&&(L.cssHooks[t+e].set=ee)})),L.fn.extend({css:function(t,e){return W(this,(function(t,e,n){var r,i,o={},a=0;if(Array.isArray(e)){for(r=zt(t),i=e.length;a<i;a++)o[e[a]]=L.css(t,e[a],!1,r);return o}return void 0!==n?L.style(t,e,n):L.css(t,e)}),t,e,arguments.length>1)}}),L.Tween=ie,ie.prototype={constructor:ie,init:function(t,e,n,r,i,o){this.elem=t,this.prop=n,this.easing=i||L.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=r,this.unit=o||(L.cssNumber[n]?"":"px")},cur:function(){var t=ie.propHooks[this.prop];return t&&t.get?t.get(this):ie.propHooks._default.get(this)},run:function(t){var e,n=ie.propHooks[this.prop];return this.options.duration?this.pos=e=L.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):ie.propHooks._default.set(this),this}},ie.prototype.init.prototype=ie.prototype,ie.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=L.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){L.fx.step[t.prop]?L.fx.step[t.prop](t):1!==t.elem.nodeType||!L.cssHooks[t.prop]&&null==t.elem.style[$t(t.prop)]?t.elem[t.prop]=t.now:L.style(t.elem,t.prop,t.now+t.unit)}}},ie.propHooks.scrollTop=ie.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},L.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},L.fx=ie.prototype.init,L.fx.step={};var oe,ae,se=/^(?:toggle|show|hide)$/,ue=/queueHooks$/;function ce(){ae&&(!1===b.hidden&&n.requestAnimationFrame?n.requestAnimationFrame(ce):n.setTimeout(ce,L.fx.interval),L.fx.tick())}function le(){return n.setTimeout((function(){oe=void 0})),oe=Date.now()}function fe(t,e){var n,r=0,i={height:t};for(e=e?1:0;r<4;r+=2-e)i["margin"+(n=it[r])]=i["padding"+n]=t;return e&&(i.opacity=i.width=t),i}function he(t,e,n){for(var r,i=(pe.tweeners[e]||[]).concat(pe.tweeners["*"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,e,t))return r}function pe(t,e,n){var r,i,o=0,a=pe.prefilters.length,s=L.Deferred().always((function(){delete u.elem})),u=function(){if(i)return!1;for(var e=oe||le(),n=Math.max(0,c.startTime+c.duration-e),r=1-(n/c.duration||0),o=0,a=c.tweens.length;o<a;o++)c.tweens[o].run(r);return s.notifyWith(t,[c,r,n]),r<1&&a?n:(a||s.notifyWith(t,[c,1,0]),s.resolveWith(t,[c]),!1)},c=s.promise({elem:t,props:L.extend({},e),opts:L.extend(!0,{specialEasing:{},easing:L.easing._default},n),originalProperties:e,originalOptions:n,startTime:oe||le(),duration:n.duration,tweens:[],createTween:function(e,n){var r=L.Tween(t,c.opts,e,n,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(r),r},stop:function(e){var n=0,r=e?c.tweens.length:0;if(i)return this;for(i=!0;n<r;n++)c.tweens[n].run(1);return e?(s.notifyWith(t,[c,1,0]),s.resolveWith(t,[c,e])):s.rejectWith(t,[c,e]),this}}),l=c.props;for(!function(t,e){var n,r,i,o,a;for(n in t)if(i=e[r=X(n)],o=t[n],Array.isArray(o)&&(i=o[1],o=t[n]=o[0]),n!==r&&(t[r]=o,delete t[n]),(a=L.cssHooks[r])&&"expand"in a)for(n in o=a.expand(o),delete t[r],o)n in t||(t[n]=o[n],e[n]=i);else e[r]=i}(l,c.opts.specialEasing);o<a;o++)if(r=pe.prefilters[o].call(c,t,l,c.opts))return v(r.stop)&&(L._queueHooks(c.elem,c.opts.queue).stop=r.stop.bind(r)),r;return L.map(l,he,c),v(c.opts.start)&&c.opts.start.call(t,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),L.fx.timer(L.extend(u,{elem:t,anim:c,queue:c.opts.queue})),c}L.Animation=L.extend(pe,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return ct(n.elem,t,rt.exec(e),n),n}]},tweener:function(t,e){v(t)?(e=t,t=["*"]):t=t.match(M);for(var n,r=0,i=t.length;r<i;r++)n=t[r],pe.tweeners[n]=pe.tweeners[n]||[],pe.tweeners[n].unshift(e)},prefilters:[function(t,e,n){var r,i,o,a,s,u,c,l,f="width"in e||"height"in e,h=this,p={},d=t.style,g=t.nodeType&&ut(t),m=K.get(t,"fxshow");for(r in n.queue||(null==(a=L._queueHooks(t,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,h.always((function(){h.always((function(){a.unqueued--,L.queue(t,"fx").length||a.empty.fire()}))}))),e)if(i=e[r],se.test(i)){if(delete e[r],o=o||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!m||void 0===m[r])continue;g=!0}p[r]=m&&m[r]||L.style(t,r)}if((u=!L.isEmptyObject(e))||!L.isEmptyObject(p))for(r in f&&1===t.nodeType&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],null==(c=m&&m.display)&&(c=K.get(t,"display")),"none"===(l=L.css(t,"display"))&&(c?l=c:(ht([t],!0),c=t.style.display||c,l=L.css(t,"display"),ht([t]))),("inline"===l||"inline-block"===l&&null!=c)&&"none"===L.css(t,"float")&&(u||(h.done((function(){d.display=c})),null==c&&(l=d.display,c="none"===l?"":l)),d.display="inline-block")),n.overflow&&(d.overflow="hidden",h.always((function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}))),u=!1,p)u||(m?"hidden"in m&&(g=m.hidden):m=K.access(t,"fxshow",{display:c}),o&&(m.hidden=!g),g&&ht([t],!0),h.done((function(){for(r in g||ht([t]),K.remove(t,"fxshow"),p)L.style(t,r,p[r])}))),u=he(g?m[r]:0,r,h),r in m||(m[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(t,e){e?pe.prefilters.unshift(t):pe.prefilters.push(t)}}),L.speed=function(t,e,n){var r=t&&"object"==typeof t?L.extend({},t):{complete:n||!n&&e||v(t)&&t,duration:t,easing:n&&e||e&&!v(e)&&e};return L.fx.off?r.duration=0:"number"!=typeof r.duration&&(r.duration in L.fx.speeds?r.duration=L.fx.speeds[r.duration]:r.duration=L.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){v(r.old)&&r.old.call(this),r.queue&&L.dequeue(this,r.queue)},r},L.fn.extend({fadeTo:function(t,e,n,r){return this.filter(ut).css("opacity",0).show().end().animate({opacity:e},t,n,r)},animate:function(t,e,n,r){var i=L.isEmptyObject(t),o=L.speed(e,n,r),a=function(){var e=pe(this,L.extend({},t),o);(i||K.get(this,"finish"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(t,e,n){var r=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&this.queue(t||"fx",[]),this.each((function(){var e=!0,i=null!=t&&t+"queueHooks",o=L.timers,a=K.get(this);if(i)a[i]&&a[i].stop&&r(a[i]);else for(i in a)a[i]&&a[i].stop&&ue.test(i)&&r(a[i]);for(i=o.length;i--;)o[i].elem!==this||null!=t&&o[i].queue!==t||(o[i].anim.stop(n),e=!1,o.splice(i,1));!e&&n||L.dequeue(this,t)}))},finish:function(t){return!1!==t&&(t=t||"fx"),this.each((function(){var e,n=K.get(this),r=n[t+"queue"],i=n[t+"queueHooks"],o=L.timers,a=r?r.length:0;for(n.finish=!0,L.queue(this,t,[]),i&&i.stop&&i.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<a;e++)r[e]&&r[e].finish&&r[e].finish.call(this);delete n.finish}))}}),L.each(["toggle","show","hide"],(function(t,e){var n=L.fn[e];L.fn[e]=function(t,r,i){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(fe(e,!0),t,r,i)}})),L.each({slideDown:fe("show"),slideUp:fe("hide"),slideToggle:fe("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(t,e){L.fn[t]=function(t,n,r){return this.animate(e,t,n,r)}})),L.timers=[],L.fx.tick=function(){var t,e=0,n=L.timers;for(oe=Date.now();e<n.length;e++)(t=n[e])()||n[e]!==t||n.splice(e--,1);n.length||L.fx.stop(),oe=void 0},L.fx.timer=function(t){L.timers.push(t),L.fx.start()},L.fx.interval=13,L.fx.start=function(){ae||(ae=!0,ce())},L.fx.stop=function(){ae=null},L.fx.speeds={slow:600,fast:200,_default:400},L.fn.delay=function(t,e){return t=L.fx&&L.fx.speeds[t]||t,e=e||"fx",this.queue(e,(function(e,r){var i=n.setTimeout(e,t);r.stop=function(){n.clearTimeout(i)}}))},function(){var t=b.createElement("input"),e=b.createElement("select").appendChild(b.createElement("option"));t.type="checkbox",m.checkOn=""!==t.value,m.optSelected=e.selected,(t=b.createElement("input")).value="t",t.type="radio",m.radioValue="t"===t.value}();var de,ge=L.expr.attrHandle;L.fn.extend({attr:function(t,e){return W(this,L.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each((function(){L.removeAttr(this,t)}))}}),L.extend({attr:function(t,e,n){var r,i,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===t.getAttribute?L.prop(t,e,n):(1===o&&L.isXMLDoc(t)||(i=L.attrHooks[e.toLowerCase()]||(L.expr.match.bool.test(e)?de:void 0)),void 0!==n?null===n?void L.removeAttr(t,e):i&&"set"in i&&void 0!==(r=i.set(t,n,e))?r:(t.setAttribute(e,n+""),n):i&&"get"in i&&null!==(r=i.get(t,e))?r:null==(r=L.find.attr(t,e))?void 0:r)},attrHooks:{type:{set:function(t,e){if(!m.radioValue&&"radio"===e&&P(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,r=0,i=e&&e.match(M);if(i&&1===t.nodeType)for(;n=i[r++];)t.removeAttribute(n)}}),de={set:function(t,e,n){return!1===e?L.removeAttr(t,n):t.setAttribute(n,n),n}},L.each(L.expr.match.bool.source.match(/\w+/g),(function(t,e){var n=ge[e]||L.find.attr;ge[e]=function(t,e,r){var i,o,a=e.toLowerCase();return r||(o=ge[a],ge[a]=i,i=null!=n(t,e,r)?a:null,ge[a]=o),i}}));var me=/^(?:input|select|textarea|button)$/i,ve=/^(?:a|area)$/i;function ye(t){return(t.match(M)||[]).join(" ")}function be(t){return t.getAttribute&&t.getAttribute("class")||""}function we(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(M)||[]}L.fn.extend({prop:function(t,e){return W(this,L.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each((function(){delete this[L.propFix[t]||t]}))}}),L.extend({prop:function(t,e,n){var r,i,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&L.isXMLDoc(t)||(e=L.propFix[e]||e,i=L.propHooks[e]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(t,n,e))?r:t[e]=n:i&&"get"in i&&null!==(r=i.get(t,e))?r:t[e]},propHooks:{tabIndex:{get:function(t){var e=L.find.attr(t,"tabindex");return e?parseInt(e,10):me.test(t.nodeName)||ve.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),m.optSelected||(L.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),L.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){L.propFix[this.toLowerCase()]=this})),L.fn.extend({addClass:function(t){var e,n,r,i,o,a,s,u=0;if(v(t))return this.each((function(e){L(this).addClass(t.call(this,e,be(this)))}));if((e=we(t)).length)for(;n=this[u++];)if(i=be(n),r=1===n.nodeType&&" "+ye(i)+" "){for(a=0;o=e[a++];)r.indexOf(" "+o+" ")<0&&(r+=o+" ");i!==(s=ye(r))&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,r,i,o,a,s,u=0;if(v(t))return this.each((function(e){L(this).removeClass(t.call(this,e,be(this)))}));if(!arguments.length)return this.attr("class","");if((e=we(t)).length)for(;n=this[u++];)if(i=be(n),r=1===n.nodeType&&" "+ye(i)+" "){for(a=0;o=e[a++];)for(;r.indexOf(" "+o+" ")>-1;)r=r.replace(" "+o+" "," ");i!==(s=ye(r))&&n.setAttribute("class",s)}return this},toggleClass:function(t,e){var n=typeof t,r="string"===n||Array.isArray(t);return"boolean"==typeof e&&r?e?this.addClass(t):this.removeClass(t):v(t)?this.each((function(n){L(this).toggleClass(t.call(this,n,be(this),e),e)})):this.each((function(){var e,i,o,a;if(r)for(i=0,o=L(this),a=we(t);e=a[i++];)o.hasClass(e)?o.removeClass(e):o.addClass(e);else void 0!==t&&"boolean"!==n||((e=be(this))&&K.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":K.get(this,"__className__")||""))}))},hasClass:function(t){var e,n,r=0;for(e=" "+t+" ";n=this[r++];)if(1===n.nodeType&&(" "+ye(be(n))+" ").indexOf(e)>-1)return!0;return!1}});var xe=/\r/g;L.fn.extend({val:function(t){var e,n,r,i=this[0];return arguments.length?(r=v(t),this.each((function(n){var i;1===this.nodeType&&(null==(i=r?t.call(this,n,L(this).val()):t)?i="":"number"==typeof i?i+="":Array.isArray(i)&&(i=L.map(i,(function(t){return null==t?"":t+""}))),(e=L.valHooks[this.type]||L.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,i,"value")||(this.value=i))}))):i?(e=L.valHooks[i.type]||L.valHooks[i.nodeName.toLowerCase()])&&"get"in e&&void 0!==(n=e.get(i,"value"))?n:"string"==typeof(n=i.value)?n.replace(xe,""):null==n?"":n:void 0}}),L.extend({valHooks:{option:{get:function(t){var e=L.find.attr(t,"value");return null!=e?e:ye(L.text(t))}},select:{get:function(t){var e,n,r,i=t.options,o=t.selectedIndex,a="select-one"===t.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!P(n.parentNode,"optgroup"))){if(e=L(n).val(),a)return e;s.push(e)}return s},set:function(t,e){for(var n,r,i=t.options,o=L.makeArray(e),a=i.length;a--;)((r=i[a]).selected=L.inArray(L.valHooks.option.get(r),o)>-1)&&(n=!0);return n||(t.selectedIndex=-1),o}}}}),L.each(["radio","checkbox"],(function(){L.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=L.inArray(L(t).val(),e)>-1}},m.checkOn||(L.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})})),m.focusin="onfocusin"in n;var Ne=/^(?:focusinfocus|focusoutblur)$/,Le=function(t){t.stopPropagation()};L.extend(L.event,{trigger:function(t,e,r,i){var o,a,s,u,c,l,f,h,d=[r||b],g=p.call(t,"type")?t.type:t,m=p.call(t,"namespace")?t.namespace.split("."):[];if(a=h=s=r=r||b,3!==r.nodeType&&8!==r.nodeType&&!Ne.test(g+L.event.triggered)&&(g.indexOf(".")>-1&&(m=g.split("."),g=m.shift(),m.sort()),c=g.indexOf(":")<0&&"on"+g,(t=t[L.expando]?t:new L.Event(g,"object"==typeof t&&t)).isTrigger=i?2:3,t.namespace=m.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=r),e=null==e?[t]:L.makeArray(e,[t]),f=L.event.special[g]||{},i||!f.trigger||!1!==f.trigger.apply(r,e))){if(!i&&!f.noBubble&&!y(r)){for(u=f.delegateType||g,Ne.test(u+g)||(a=a.parentNode);a;a=a.parentNode)d.push(a),s=a;s===(r.ownerDocument||b)&&d.push(s.defaultView||s.parentWindow||n)}for(o=0;(a=d[o++])&&!t.isPropagationStopped();)h=a,t.type=o>1?u:f.bindType||g,(l=(K.get(a,"events")||Object.create(null))[t.type]&&K.get(a,"handle"))&&l.apply(a,e),(l=c&&a[c])&&l.apply&&J(a)&&(t.result=l.apply(a,e),!1===t.result&&t.preventDefault());return t.type=g,i||t.isDefaultPrevented()||f._default&&!1!==f._default.apply(d.pop(),e)||!J(r)||c&&v(r[g])&&!y(r)&&((s=r[c])&&(r[c]=null),L.event.triggered=g,t.isPropagationStopped()&&h.addEventListener(g,Le),r[g](),t.isPropagationStopped()&&h.removeEventListener(g,Le),L.event.triggered=void 0,s&&(r[c]=s)),t.result}},simulate:function(t,e,n){var r=L.extend(new L.Event,n,{type:t,isSimulated:!0});L.event.trigger(r,null,e)}}),L.fn.extend({trigger:function(t,e){return this.each((function(){L.event.trigger(t,e,this)}))},triggerHandler:function(t,e){var n=this[0];if(n)return L.event.trigger(t,e,n,!0)}}),m.focusin||L.each({focus:"focusin",blur:"focusout"},(function(t,e){var n=function(t){L.event.simulate(e,t.target,L.event.fix(t))};L.event.special[e]={setup:function(){var r=this.ownerDocument||this.document||this,i=K.access(r,e);i||r.addEventListener(t,n,!0),K.access(r,e,(i||0)+1)},teardown:function(){var r=this.ownerDocument||this.document||this,i=K.access(r,e)-1;i?K.access(r,e,i):(r.removeEventListener(t,n,!0),K.remove(r,e))}}}));var Ae=n.location,Se={guid:Date.now()},_e=/\?/;L.parseXML=function(t){var e;if(!t||"string"!=typeof t)return null;try{e=(new n.DOMParser).parseFromString(t,"text/xml")}catch(t){e=void 0}return e&&!e.getElementsByTagName("parsererror").length||L.error("Invalid XML: "+t),e};var Ce=/\[\]$/,ke=/\r?\n/g,Pe=/^(?:submit|button|image|reset|file)$/i,Fe=/^(?:input|select|textarea|keygen)/i;function Te(t,e,n,r){var i;if(Array.isArray(e))L.each(e,(function(e,i){n||Ce.test(t)?r(t,i):Te(t+"["+("object"==typeof i&&null!=i?e:"")+"]",i,n,r)}));else if(n||"object"!==N(e))r(t,e);else for(i in e)Te(t+"["+i+"]",e[i],n,r)}L.param=function(t,e){var n,r=[],i=function(t,e){var n=v(e)?e():e;r[r.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==n?"":n)};if(null==t)return"";if(Array.isArray(t)||t.jquery&&!L.isPlainObject(t))L.each(t,(function(){i(this.name,this.value)}));else for(n in t)Te(n,t[n],e,i);return r.join("&")},L.fn.extend({serialize:function(){return L.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var t=L.prop(this,"elements");return t?L.makeArray(t):this})).filter((function(){var t=this.type;return this.name&&!L(this).is(":disabled")&&Fe.test(this.nodeName)&&!Pe.test(t)&&(this.checked||!gt.test(t))})).map((function(t,e){var n=L(this).val();return null==n?null:Array.isArray(n)?L.map(n,(function(t){return{name:e.name,value:t.replace(ke,"\r\n")}})):{name:e.name,value:n.replace(ke,"\r\n")}})).get()}});var Ee=/%20/g,je=/#.*$/,Ie=/([?&])_=[^&]*/,Be=/^(.*?):[ \t]*([^\r\n]*)$/gm,Oe=/^(?:GET|HEAD)$/,Me=/^\/\//,qe={},De={},Re="*/".concat("*"),Ue=b.createElement("a");function ze(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var r,i=0,o=e.toLowerCase().match(M)||[];if(v(n))for(;r=o[i++];)"+"===r[0]?(r=r.slice(1)||"*",(t[r]=t[r]||[]).unshift(n)):(t[r]=t[r]||[]).push(n)}}function He(t,e,n,r){var i={},o=t===De;function a(s){var u;return i[s]=!0,L.each(t[s]||[],(function(t,s){var c=s(e,n,r);return"string"!=typeof c||o||i[c]?o?!(u=c):void 0:(e.dataTypes.unshift(c),a(c),!1)})),u}return a(e.dataTypes[0])||!i["*"]&&a("*")}function We(t,e){var n,r,i=L.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((i[n]?t:r||(r={}))[n]=e[n]);return r&&L.extend(!0,t,r),t}Ue.href=Ae.href,L.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ae.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Ae.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Re,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":L.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?We(We(t,L.ajaxSettings),e):We(L.ajaxSettings,t)},ajaxPrefilter:ze(qe),ajaxTransport:ze(De),ajax:function(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var r,i,o,a,s,u,c,l,f,h,p=L.ajaxSetup({},e),d=p.context||p,g=p.context&&(d.nodeType||d.jquery)?L(d):L.event,m=L.Deferred(),v=L.Callbacks("once memory"),y=p.statusCode||{},w={},x={},N="canceled",A={readyState:0,getResponseHeader:function(t){var e;if(c){if(!a)for(a={};e=Be.exec(o);)a[e[1].toLowerCase()+" "]=(a[e[1].toLowerCase()+" "]||[]).concat(e[2]);e=a[t.toLowerCase()+" "]}return null==e?null:e.join(", ")},getAllResponseHeaders:function(){return c?o:null},setRequestHeader:function(t,e){return null==c&&(t=x[t.toLowerCase()]=x[t.toLowerCase()]||t,w[t]=e),this},overrideMimeType:function(t){return null==c&&(p.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)A.always(t[A.status]);else for(e in t)y[e]=[y[e],t[e]];return this},abort:function(t){var e=t||N;return r&&r.abort(e),S(0,e),this}};if(m.promise(A),p.url=((t||p.url||Ae.href)+"").replace(Me,Ae.protocol+"//"),p.type=e.method||e.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(M)||[""],null==p.crossDomain){u=b.createElement("a");try{u.href=p.url,u.href=u.href,p.crossDomain=Ue.protocol+"//"+Ue.host!=u.protocol+"//"+u.host}catch(t){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=L.param(p.data,p.traditional)),He(qe,p,e,A),c)return A;for(f in(l=L.event&&p.global)&&0==L.active++&&L.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Oe.test(p.type),i=p.url.replace(je,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(Ee,"+")):(h=p.url.slice(i.length),p.data&&(p.processData||"string"==typeof p.data)&&(i+=(_e.test(i)?"&":"?")+p.data,delete p.data),!1===p.cache&&(i=i.replace(Ie,"$1"),h=(_e.test(i)?"&":"?")+"_="+Se.guid+++h),p.url=i+h),p.ifModified&&(L.lastModified[i]&&A.setRequestHeader("If-Modified-Since",L.lastModified[i]),L.etag[i]&&A.setRequestHeader("If-None-Match",L.etag[i])),(p.data&&p.hasContent&&!1!==p.contentType||e.contentType)&&A.setRequestHeader("Content-Type",p.contentType),A.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+Re+"; q=0.01":""):p.accepts["*"]),p.headers)A.setRequestHeader(f,p.headers[f]);if(p.beforeSend&&(!1===p.beforeSend.call(d,A,p)||c))return A.abort();if(N="abort",v.add(p.complete),A.done(p.success),A.fail(p.error),r=He(De,p,e,A)){if(A.readyState=1,l&&g.trigger("ajaxSend",[A,p]),c)return A;p.async&&p.timeout>0&&(s=n.setTimeout((function(){A.abort("timeout")}),p.timeout));try{c=!1,r.send(w,S)}catch(t){if(c)throw t;S(-1,t)}}else S(-1,"No Transport");function S(t,e,a,u){var f,h,b,w,x,N=e;c||(c=!0,s&&n.clearTimeout(s),r=void 0,o=u||"",A.readyState=t>0?4:0,f=t>=200&&t<300||304===t,a&&(w=function(t,e,n){for(var r,i,o,a,s=t.contents,u=t.dataTypes;"*"===u[0];)u.shift(),void 0===r&&(r=t.mimeType||e.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||t.converters[i+" "+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(p,A,a)),!f&&L.inArray("script",p.dataTypes)>-1&&(p.converters["text script"]=function(){}),w=function(t,e,n,r){var i,o,a,s,u,c={},l=t.dataTypes.slice();if(l[1])for(a in t.converters)c[a.toLowerCase()]=t.converters[a];for(o=l.shift();o;)if(t.responseFields[o]&&(n[t.responseFields[o]]=e),!u&&r&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),u=o,o=l.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(!(a=c[u+" "+o]||c["* "+o]))for(i in c)if((s=i.split(" "))[1]===o&&(a=c[u+" "+s[0]]||c["* "+s[0]])){!0===a?a=c[i]:!0!==c[i]&&(o=s[0],l.unshift(s[1]));break}if(!0!==a)if(a&&t.throws)e=a(e);else try{e=a(e)}catch(t){return{state:"parsererror",error:a?t:"No conversion from "+u+" to "+o}}}return{state:"success",data:e}}(p,w,A,f),f?(p.ifModified&&((x=A.getResponseHeader("Last-Modified"))&&(L.lastModified[i]=x),(x=A.getResponseHeader("etag"))&&(L.etag[i]=x)),204===t||"HEAD"===p.type?N="nocontent":304===t?N="notmodified":(N=w.state,h=w.data,f=!(b=w.error))):(b=N,!t&&N||(N="error",t<0&&(t=0))),A.status=t,A.statusText=(e||N)+"",f?m.resolveWith(d,[h,N,A]):m.rejectWith(d,[A,N,b]),A.statusCode(y),y=void 0,l&&g.trigger(f?"ajaxSuccess":"ajaxError",[A,p,f?h:b]),v.fireWith(d,[A,N]),l&&(g.trigger("ajaxComplete",[A,p]),--L.active||L.event.trigger("ajaxStop")))}return A},getJSON:function(t,e,n){return L.get(t,e,n,"json")},getScript:function(t,e){return L.get(t,void 0,e,"script")}}),L.each(["get","post"],(function(t,e){L[e]=function(t,n,r,i){return v(n)&&(i=i||r,r=n,n=void 0),L.ajax(L.extend({url:t,type:e,dataType:i,data:n,success:r},L.isPlainObject(t)&&t))}})),L.ajaxPrefilter((function(t){var e;for(e in t.headers)"content-type"===e.toLowerCase()&&(t.contentType=t.headers[e]||"")})),L._evalUrl=function(t,e,n){return L.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(t){L.globalEval(t,e,n)}})},L.fn.extend({wrapAll:function(t){var e;return this[0]&&(v(t)&&(t=t.call(this[0])),e=L(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map((function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t})).append(this)),this},wrapInner:function(t){return v(t)?this.each((function(e){L(this).wrapInner(t.call(this,e))})):this.each((function(){var e=L(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)}))},wrap:function(t){var e=v(t);return this.each((function(n){L(this).wrapAll(e?t.call(this,n):t)}))},unwrap:function(t){return this.parent(t).not("body").each((function(){L(this).replaceWith(this.childNodes)})),this}}),L.expr.pseudos.hidden=function(t){return!L.expr.pseudos.visible(t)},L.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},L.ajaxSettings.xhr=function(){try{return new n.XMLHttpRequest}catch(t){}};var Ve={0:200,1223:204},Ge=L.ajaxSettings.xhr();m.cors=!!Ge&&"withCredentials"in Ge,m.ajax=Ge=!!Ge,L.ajaxTransport((function(t){var e,r;if(m.cors||Ge&&!t.crossDomain)return{send:function(i,o){var a,s=t.xhr();if(s.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(a in t.xhrFields)s[a]=t.xhrFields[a];for(a in t.mimeType&&s.overrideMimeType&&s.overrideMimeType(t.mimeType),t.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest"),i)s.setRequestHeader(a,i[a]);e=function(t){return function(){e&&(e=r=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===t?s.abort():"error"===t?"number"!=typeof s.status?o(0,"error"):o(s.status,s.statusText):o(Ve[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=e(),r=s.onerror=s.ontimeout=e("error"),void 0!==s.onabort?s.onabort=r:s.onreadystatechange=function(){4===s.readyState&&n.setTimeout((function(){e&&r()}))},e=e("abort");try{s.send(t.hasContent&&t.data||null)}catch(t){if(e)throw t}},abort:function(){e&&e()}}})),L.ajaxPrefilter((function(t){t.crossDomain&&(t.contents.script=!1)})),L.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return L.globalEval(t),t}}}),L.ajaxPrefilter("script",(function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")})),L.ajaxTransport("script",(function(t){var e,n;if(t.crossDomain||t.scriptAttrs)return{send:function(r,i){e=L("<script>").attr(t.scriptAttrs||{}).prop({charset:t.scriptCharset,src:t.url}).on("load error",n=function(t){e.remove(),n=null,t&&i("error"===t.type?404:200,t.type)}),b.head.appendChild(e[0])},abort:function(){n&&n()}}}));var Ye,Xe=[],Je=/(=)\?(?=&|$)|\?\?/;L.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Xe.pop()||L.expando+"_"+Se.guid++;return this[t]=!0,t}}),L.ajaxPrefilter("json jsonp",(function(t,e,r){var i,o,a,s=!1!==t.jsonp&&(Je.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Je.test(t.data)&&"data");if(s||"jsonp"===t.dataTypes[0])return i=t.jsonpCallback=v(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(Je,"$1"+i):!1!==t.jsonp&&(t.url+=(_e.test(t.url)?"&":"?")+t.jsonp+"="+i),t.converters["script json"]=function(){return a||L.error(i+" was not called"),a[0]},t.dataTypes[0]="json",o=n[i],n[i]=function(){a=arguments},r.always((function(){void 0===o?L(n).removeProp(i):n[i]=o,t[i]&&(t.jsonpCallback=e.jsonpCallback,Xe.push(i)),a&&v(o)&&o(a[0]),a=o=void 0})),"script"})),m.createHTMLDocument=((Ye=b.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Ye.childNodes.length),L.parseHTML=function(t,e,n){return"string"!=typeof t?[]:("boolean"==typeof e&&(n=e,e=!1),e||(m.createHTMLDocument?((r=(e=b.implementation.createHTMLDocument("")).createElement("base")).href=b.location.href,e.head.appendChild(r)):e=b),o=!n&&[],(i=F.exec(t))?[e.createElement(i[1])]:(i=Nt([t],e,o),o&&o.length&&L(o).remove(),L.merge([],i.childNodes)));var r,i,o},L.fn.load=function(t,e,n){var r,i,o,a=this,s=t.indexOf(" ");return s>-1&&(r=ye(t.slice(s)),t=t.slice(0,s)),v(e)?(n=e,e=void 0):e&&"object"==typeof e&&(i="POST"),a.length>0&&L.ajax({url:t,type:i||"GET",dataType:"html",data:e}).done((function(t){o=arguments,a.html(r?L("<div>").append(L.parseHTML(t)).find(r):t)})).always(n&&function(t,e){a.each((function(){n.apply(this,o||[t.responseText,e,t])}))}),this},L.expr.pseudos.animated=function(t){return L.grep(L.timers,(function(e){return t===e.elem})).length},L.offset={setOffset:function(t,e,n){var r,i,o,a,s,u,c=L.css(t,"position"),l=L(t),f={};"static"===c&&(t.style.position="relative"),s=l.offset(),o=L.css(t,"top"),u=L.css(t,"left"),("absolute"===c||"fixed"===c)&&(o+u).indexOf("auto")>-1?(a=(r=l.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),v(e)&&(e=e.call(t,n,L.extend({},s))),null!=e.top&&(f.top=e.top-s.top+a),null!=e.left&&(f.left=e.left-s.left+i),"using"in e?e.using.call(t,f):("number"==typeof f.top&&(f.top+="px"),"number"==typeof f.left&&(f.left+="px"),l.css(f))}},L.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each((function(e){L.offset.setOffset(this,t,e)}));var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,n,r=this[0],i={top:0,left:0};if("fixed"===L.css(r,"position"))e=r.getBoundingClientRect();else{for(e=this.offset(),n=r.ownerDocument,t=r.offsetParent||n.documentElement;t&&(t===n.body||t===n.documentElement)&&"static"===L.css(t,"position");)t=t.parentNode;t&&t!==r&&1===t.nodeType&&((i=L(t).offset()).top+=L.css(t,"borderTopWidth",!0),i.left+=L.css(t,"borderLeftWidth",!0))}return{top:e.top-i.top-L.css(r,"marginTop",!0),left:e.left-i.left-L.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var t=this.offsetParent;t&&"static"===L.css(t,"position");)t=t.offsetParent;return t||ot}))}}),L.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(t,e){var n="pageYOffset"===e;L.fn[t]=function(r){return W(this,(function(t,r,i){var o;if(y(t)?o=t:9===t.nodeType&&(o=t.defaultView),void 0===i)return o?o[e]:t[r];o?o.scrollTo(n?o.pageXOffset:i,n?i:o.pageYOffset):t[r]=i}),t,r,arguments.length)}})),L.each(["top","left"],(function(t,e){L.cssHooks[e]=Gt(m.pixelPosition,(function(t,n){if(n)return n=Vt(t,e),Ut.test(n)?L(t).position()[e]+"px":n}))})),L.each({Height:"height",Width:"width"},(function(t,e){L.each({padding:"inner"+t,content:e,"":"outer"+t},(function(n,r){L.fn[r]=function(i,o){var a=arguments.length&&(n||"boolean"!=typeof i),s=n||(!0===i||!0===o?"margin":"border");return W(this,(function(e,n,i){var o;return y(e)?0===r.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(o=e.documentElement,Math.max(e.body["scroll"+t],o["scroll"+t],e.body["offset"+t],o["offset"+t],o["client"+t])):void 0===i?L.css(e,n,s):L.style(e,n,i,s)}),e,a?i:void 0,a)}}))})),L.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(t,e){L.fn[e]=function(t){return this.on(e,t)}})),L.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,r){return this.on(e,t,n,r)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)},hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),L.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(t,e){L.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}));var $e=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;L.proxy=function(t,e){var n,r,i;if("string"==typeof e&&(n=t[e],e=t,t=n),v(t))return r=s.call(arguments,2),(i=function(){return t.apply(e||this,r.concat(s.call(arguments)))}).guid=t.guid=t.guid||L.guid++,i},L.holdReady=function(t){t?L.readyWait++:L.ready(!0)},L.isArray=Array.isArray,L.parseJSON=JSON.parse,L.nodeName=P,L.isFunction=v,L.isWindow=y,L.camelCase=X,L.type=N,L.now=Date.now,L.isNumeric=function(t){var e=L.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},L.trim=function(t){return null==t?"":(t+"").replace($e,"")},void 0===(r=function(){return L}.apply(e,[]))||(t.exports=r);var Ke=n.jQuery,Qe=n.$;return L.noConflict=function(t){return n.$===L&&(n.$=Qe),t&&n.jQuery===L&&(n.jQuery=Ke),L},void 0===i&&(n.jQuery=n.$=L),L}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=n(5);e.default=class{constructor(){this.onDocumentClick=this.onDocumentClick.bind(this)}getDefaultPosition(){return"top-right"}onAdd(t){this.map=t,this.controlContainer=document.createElement("div"),this.controlContainer.classList.add("mapboxgl-ctrl"),this.controlContainer.classList.add("mapboxgl-ctrl-group"),this.exportContainer=document.createElement("div"),this.exportContainer.classList.add("mapboxgl-export-list"),this.exportButton=document.createElement("button"),this.exportButton.classList.add("mapboxgl-ctrl-icon"),this.exportButton.classList.add("mapboxgl-export-control"),this.exportButton.addEventListener("click",()=>{this.exportButton.style.display="none",this.exportContainer.style.display="block"}),document.addEventListener("click",this.onDocumentClick),this.controlContainer.appendChild(this.exportButton),this.controlContainer.appendChild(this.exportContainer);var e=document.createElement("TABLE");e.className="print-table";let n=document.createElement("label");n.textContent="Page Size";const i=document.createElement("select");i.style.width="100%";const o=document.createElement("option");o.setAttribute("value",JSON.stringify(r.Size.A4_landscape)),o.appendChild(document.createTextNode("A4 Landscape"));const a=document.createElement("option");a.setAttribute("value",JSON.stringify(r.Size.A4_portrait)),a.appendChild(document.createTextNode("A4 Portrait")),i.setAttribute("name","page-size"),i.appendChild(o),i.appendChild(a);var s=document.createElement("TR"),u=document.createElement("TD"),c=document.createElement("TD");u.appendChild(n),c.appendChild(i),s.appendChild(u),s.appendChild(c),e.appendChild(s);let l=document.createElement("label");l.textContent="Format";const f=document.createElement("select");f.style.width="100%";const h=document.createElement("option");h.setAttribute("value",r.Format.PDF),h.appendChild(document.createTextNode("PDF"));const p=document.createElement("option");p.setAttribute("value",r.Format.PNG),p.appendChild(document.createTextNode("PNG")),f.setAttribute("name","format-type"),f.appendChild(h),f.appendChild(p);var d=document.createElement("TR"),g=document.createElement("TD"),m=document.createElement("TD");g.appendChild(l),m.appendChild(f),d.appendChild(g),d.appendChild(m),e.appendChild(d),this.exportContainer.appendChild(e);const v=document.createElement("button");return v.textContent="Generate",v.classList.add("generate-button"),v.addEventListener("click",()=>{console.log(i.value);new r.default(t,JSON.parse(i.value),300,f.value).generate()}),this.exportContainer.appendChild(v),this.controlContainer}onRemove(){this.controlContainer&&this.controlContainer.parentNode&&this.map&&this.exportButton&&(this.exportButton.removeEventListener("click",this.onDocumentClick),this.controlContainer.parentNode.removeChild(this.controlContainer),document.removeEventListener("click",this.onDocumentClick),this.map=void 0)}onDocumentClick(t){this.controlContainer&&!this.controlContainer.contains(t.target)&&this.exportContainer&&this.exportButton&&(this.exportContainer.style.display="none",this.exportButton.style.display="block")}}},function(t,e,n){"use strict";n.r(e);var r=n(2),i=n.n(r),o=n(0),a=n.n(o),s=n(3),u=n.n(s);n(10);i()((function(){const t=new a.a.Map({container:"map",style:"https://narwassco.github.io/mapbox-stylefiles/unvt/style.json",center:[35.87063,-1.08551],zoom:12,hash:!0});t.addControl(new a.a.NavigationControl,"top-right"),t.addControl(new u.a,"top-right")}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Size=e.Unit=e.Format=void 0;const r=n(6),i=n(9),o=n(0);e.Format={PNG:"png",PDF:"pdf"},e.Unit={in:"in",mm:"mm"},e.Size={A4_landscape:[297,210],A4_portrait:[210,297]};e.default=class{constructor(t,n=e.Size.A4_landscape,r=300,i=e.Format.PNG.toString(),o=e.Unit.mm){this.map=t,this.width=n[0],this.height=n[1],this.dpi=r,this.format=i,this.unit=o}generate(){const t=this;var n=window.devicePixelRatio;Object.defineProperty(window,"devicePixelRatio",{get:function(){return t.dpi/96}});var a=document.createElement("div");a.className="hidden-map",document.body.appendChild(a);var s=document.createElement("div");s.style.width=this.toPixels(this.width),s.style.height=this.toPixels(this.height),a.appendChild(s);var u=new o.Map({container:s,center:this.map.getCenter(),zoom:this.map.getZoom(),style:this.map.getStyle(),bearing:this.map.getBearing(),pitch:this.map.getPitch(),interactive:!1,preserveDrawingBuffer:!0,fadeDuration:0,attributionControl:!1});u.once("idle",(function(){var o;if(t.format==e.Format.PNG)u.getCanvas().toBlob((function(t){i.saveAs(t,"map.png")}));else{var s=new r({orientation:t.width>t.height?"l":"p",unit:t.unit,compress:!0});s.addImage(u.getCanvas().toDataURL("image/png"),"png",0,0,t.width,t.height,null,"FAST");var{lng:c,lat:l}=u.getCenter();s.setProperties({title:u.getStyle().name,subject:`center: [${c}, ${l}], zoom: ${u.getZoom()}`,creator:"Mapbox GL Print Plugin",author:"(c)Mapbox, (c)OpenStreetMap"}),s.save("map.pdf")}u.remove(),null===(o=a.parentNode)||void 0===o||o.removeChild(a),Object.defineProperty(window,"devicePixelRatio",{get:function(){return n}})}))}toPixels(t){var n=96;return this.unit==e.Unit.mm&&(n/=25.4),n*t+"px"}}},function(t,e,n){(function(r,i){var o,a;o=function(){"use strict";
/** @license
   * jsPDF - PDF Document creation from JavaScript
   * Version 1.5.3 Built on 2018-12-27T14:11:42.696Z
   *                      CommitID d93d28db14
   *
   * Copyright (c) 2010-2016 James Hall <james@parall.ax>, https://github.com/MrRio/jsPDF
   *               2010 Aaron Spike, https://github.com/acspike
   *               2012 Willow Systems Corporation, willow-systems.com
   *               2012 Pablo Hess, https://github.com/pablohess
   *               2012 Florian Jenett, https://github.com/fjenett
   *               2013 Warren Weckesser, https://github.com/warrenweckesser
   *               2013 Youssef Beddad, https://github.com/lifof
   *               2013 Lee Driscoll, https://github.com/lsdriscoll
   *               2013 Stefan Slonevskiy, https://github.com/stefslon
   *               2013 Jeremy Morel, https://github.com/jmorel
   *               2013 Christoph Hartmann, https://github.com/chris-rock
   *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
   *               2014 James Makes, https://github.com/dollaruw
   *               2014 Diego Casorran, https://github.com/diegocr
   *               2014 Steven Spungin, https://github.com/Flamenco
   *               2014 Kenneth Glassey, https://github.com/Gavvers
   *
   * Licensed under the MIT License
   *
   * Contributor(s):
   *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,
   *    kim3er, mfo, alnorth, Flamenco
   */function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t){if("object"!==o(t.console)){t.console={};for(var e,n,r=t.console,i=function(){},a=["memory"],s="assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn".split(",");e=a.pop();)r[e]||(r[e]={});for(;n=s.pop();)r[n]||(r[n]=i)}var u,c,l,f,h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";void 0===t.btoa&&(t.btoa=function(t){var e,n,r,i,o,a=0,s=0,u="",c=[];if(!t)return t;for(;e=(o=t.charCodeAt(a++)<<16|t.charCodeAt(a++)<<8|t.charCodeAt(a++))>>18&63,n=o>>12&63,r=o>>6&63,i=63&o,c[s++]=h.charAt(e)+h.charAt(n)+h.charAt(r)+h.charAt(i),a<t.length;);u=c.join("");var l=t.length%3;return(l?u.slice(0,l-3):u)+"===".slice(l||3)}),void 0===t.atob&&(t.atob=function(t){var e,n,r,i,o,a,s=0,u=0,c=[];if(!t)return t;for(t+="";e=(a=h.indexOf(t.charAt(s++))<<18|h.indexOf(t.charAt(s++))<<12|(i=h.indexOf(t.charAt(s++)))<<6|(o=h.indexOf(t.charAt(s++))))>>16&255,n=a>>8&255,r=255&a,c[u++]=64==i?String.fromCharCode(e):64==o?String.fromCharCode(e,n):String.fromCharCode(e,n,r),s<t.length;);return c.join("")}),Array.prototype.map||(Array.prototype.map=function(t){if(null==this||"function"!=typeof t)throw new TypeError;for(var e=Object(this),n=e.length>>>0,r=new Array(n),i=1<arguments.length?arguments[1]:void 0,o=0;o<n;o++)o in e&&(r[o]=t.call(i,e[o],o,e));return r}),Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),Array.prototype.forEach||(Array.prototype.forEach=function(t,e){if(null==this||"function"!=typeof t)throw new TypeError;for(var n=Object(this),r=n.length>>>0,i=0;i<r;i++)i in n&&t.call(e,n[i],i,n)}),Array.prototype.find||Object.defineProperty(Array.prototype,"find",{value:function(t){if(null==this)throw new TypeError('"this" is null or not defined');var e=Object(this),n=e.length>>>0;if("function"!=typeof t)throw new TypeError("predicate must be a function");for(var r=arguments[1],i=0;i<n;){var o=e[i];if(t.call(r,o,i,e))return o;i++}},configurable:!0,writable:!0}),Object.keys||(Object.keys=(u=Object.prototype.hasOwnProperty,c=!{toString:null}.propertyIsEnumerable("toString"),f=(l=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"]).length,function(t){if("object"!==o(t)&&("function"!=typeof t||null===t))throw new TypeError;var e,n,r=[];for(e in t)u.call(t,e)&&r.push(e);if(c)for(n=0;n<f;n++)u.call(t,l[n])&&r.push(l[n]);return r})),"function"!=typeof Object.assign&&(Object.assign=function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");t=Object(t);for(var e=1;e<arguments.length;e++){var n=arguments[e];if(null!=n)for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),String.prototype.trimLeft||(String.prototype.trimLeft=function(){return this.replace(/^\s+/g,"")}),String.prototype.trimRight||(String.prototype.trimRight=function(){return this.replace(/\s+$/g,"")}),Number.isInteger=Number.isInteger||function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")());var s,u,c,l,f,h,p,d,g,m,v,y,b,w,x,N,L,A,S,_,C,k,P,F,T,E,j,I,B,O,M,q,D,R,U,z,H,W,V,G,Y,X,J,$,K,Q,Z,tt,et,nt,rt,it,ot,at,st,ut,ct,lt,ft,ht,pt,dt,gt=function(r){function s(t){if("object"!==o(t))throw new Error("Invalid Context passed to initialize PubSub (jsPDF-module)");var e={};this.subscribe=function(t,n,r){if(r=r||!1,"string"!=typeof t||"function"!=typeof n||"boolean"!=typeof r)throw new Error("Invalid arguments passed to PubSub.subscribe (jsPDF-module)");e.hasOwnProperty(t)||(e[t]={});var i=Math.random().toString(35);return e[t][i]=[n,!!r],i},this.unsubscribe=function(t){for(var n in e)if(e[n][t])return delete e[n][t],0===Object.keys(e[n]).length&&delete e[n],!0;return!1},this.publish=function(n){if(e.hasOwnProperty(n)){var i=Array.prototype.slice.call(arguments,1),o=[];for(var a in e[n]){var s=e[n][a];try{s[0].apply(t,i)}catch(n){r.console&&console.error("jsPDF PubSub Error",n.message,n)}s[1]&&o.push(a)}o.length&&o.forEach(this.unsubscribe)}},this.getTopics=function(){return e}}function u(t,e,n,a){var c={},l=[],f=1;"object"===o(t)&&(t=(c=t).orientation,e=c.unit||e,n=c.format||n,a=c.compress||c.compressPdf||a,l=c.filters||(!0===a?["FlateEncode"]:l),f="number"==typeof c.userUnit?Math.abs(c.userUnit):1),e=e||"mm",t=(""+(t||"P")).toLowerCase();var h=c.putOnlyUsedFonts||!0,p={},d={internal:{},__private__:{}};d.__private__.PubSub=s;var g="1.3",m=d.__private__.getPdfVersion=function(){return g},v=(d.__private__.setPdfVersion=function(t){g=t},{a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],"government-letter":[576,756],legal:[612,1008],"junior-legal":[576,360],ledger:[1224,792],tabloid:[792,1224],"credit-card":[153,243]}),y=(d.__private__.getPageFormats=function(){return v},d.__private__.getPageFormat=function(t){return v[t]});"string"==typeof n&&(n=y(n)),n=n||y("a4");var b,w=d.f2=d.__private__.f2=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.f2");return t.toFixed(2)},x=d.__private__.f3=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.f3");return t.toFixed(3)},N="00000000000000000000000000000000",L=d.__private__.getFileId=function(){return N},A=d.__private__.setFileId=function(t){return t=t||"12345678901234567890123456789012".split("").map((function(){return"ABCDEF0123456789".charAt(Math.floor(16*Math.random()))})).join(""),N=t};d.setFileId=function(t){return A(t),this},d.getFileId=function(){return L()};var S=d.__private__.convertDateToPDFDate=function(t){var e=t.getTimezoneOffset(),n=e<0?"+":"-",r=Math.floor(Math.abs(e/60)),i=Math.abs(e%60),o=[n,M(r),"'",M(i),"'"].join("");return["D:",t.getFullYear(),M(t.getMonth()+1),M(t.getDate()),M(t.getHours()),M(t.getMinutes()),M(t.getSeconds()),o].join("")},_=d.__private__.convertPDFDateToDate=function(t){var e=parseInt(t.substr(2,4),10),n=parseInt(t.substr(6,2),10)-1,r=parseInt(t.substr(8,2),10),i=parseInt(t.substr(10,2),10),o=parseInt(t.substr(12,2),10),a=parseInt(t.substr(14,2),10);return parseInt(t.substr(16,2),10),parseInt(t.substr(20,2),10),new Date(e,n,r,i,o,a,0)},C=d.__private__.setCreationDate=function(t){var e;if(void 0===t&&(t=new Date),"object"===o(t)&&"[object Date]"===Object.prototype.toString.call(t))e=S(t);else{if(!/^D:(20[0-2][0-9]|203[0-7]|19[7-9][0-9])(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])(0[0-9]|[1-5][0-9])(\+0[0-9]|\+1[0-4]|\-0[0-9]|\-1[0-1])\'(0[0-9]|[1-5][0-9])\'?$/.test(t))throw new Error("Invalid argument passed to jsPDF.setCreationDate");e=t}return b=e},k=d.__private__.getCreationDate=function(t){var e=b;return"jsDate"===t&&(e=_(b)),e};d.setCreationDate=function(t){return C(t),this},d.getCreationDate=function(t){return k(t)};var P,F,T,E,j,I,B,O,M=d.__private__.padd2=function(t){return("0"+parseInt(t)).slice(-2)},q=!1,D=[],R=[],U=0,z=(d.__private__.setCustomOutputDestination=function(t){F=t},d.__private__.resetCustomOutputDestination=function(t){F=void 0},d.__private__.out=function(t){var e;return t="string"==typeof t?t:t.toString(),(e=void 0===F?q?D[P]:R:F).push(t),q||(U+=t.length+1),e}),H=d.__private__.write=function(t){return z(1===arguments.length?t.toString():Array.prototype.join.call(arguments," "))},W=d.__private__.getArrayBuffer=function(t){for(var e=t.length,n=new ArrayBuffer(e),r=new Uint8Array(n);e--;)r[e]=t.charCodeAt(e);return n},V=[["Helvetica","helvetica","normal","WinAnsiEncoding"],["Helvetica-Bold","helvetica","bold","WinAnsiEncoding"],["Helvetica-Oblique","helvetica","italic","WinAnsiEncoding"],["Helvetica-BoldOblique","helvetica","bolditalic","WinAnsiEncoding"],["Courier","courier","normal","WinAnsiEncoding"],["Courier-Bold","courier","bold","WinAnsiEncoding"],["Courier-Oblique","courier","italic","WinAnsiEncoding"],["Courier-BoldOblique","courier","bolditalic","WinAnsiEncoding"],["Times-Roman","times","normal","WinAnsiEncoding"],["Times-Bold","times","bold","WinAnsiEncoding"],["Times-Italic","times","italic","WinAnsiEncoding"],["Times-BoldItalic","times","bolditalic","WinAnsiEncoding"],["ZapfDingbats","zapfdingbats","normal",null],["Symbol","symbol","normal",null]],G=(d.__private__.getStandardFonts=function(t){return V},c.fontSize||16),Y=(d.__private__.setFontSize=d.setFontSize=function(t){return G=t,this},d.__private__.getFontSize=d.getFontSize=function(){return G}),X=c.R2L||!1,J=(d.__private__.setR2L=d.setR2L=function(t){return X=t,this},d.__private__.getR2L=d.getR2L=function(t){return X},d.__private__.setZoomMode=function(t){if(/^\d*\.?\d*\%$/.test(t))T=t;else if(isNaN(t)){if(-1===[void 0,null,"fullwidth","fullheight","fullpage","original"].indexOf(t))throw new Error('zoom must be Integer (e.g. 2), a percentage Value (e.g. 300%) or fullwidth, fullheight, fullpage, original. "'+t+'" is not recognized.');T=t}else T=parseInt(t,10)}),$=(d.__private__.getZoomMode=function(){return T},d.__private__.setPageMode=function(t){if(-1==[void 0,null,"UseNone","UseOutlines","UseThumbs","FullScreen"].indexOf(t))throw new Error('Page mode must be one of UseNone, UseOutlines, UseThumbs, or FullScreen. "'+t+'" is not recognized.');E=t}),K=(d.__private__.getPageMode=function(){return E},d.__private__.setLayoutMode=function(t){if(-1==[void 0,null,"continuous","single","twoleft","tworight","two"].indexOf(t))throw new Error('Layout mode must be one of continuous, single, twoleft, tworight. "'+t+'" is not recognized.');j=t}),Q=(d.__private__.getLayoutMode=function(){return j},d.__private__.setDisplayMode=d.setDisplayMode=function(t,e,n){return J(t),K(e),$(n),this},{title:"",subject:"",author:"",keywords:"",creator:""}),Z=(d.__private__.getDocumentProperty=function(t){if(-1===Object.keys(Q).indexOf(t))throw new Error("Invalid argument passed to jsPDF.getDocumentProperty");return Q[t]},d.__private__.getDocumentProperties=function(t){return Q},d.__private__.setDocumentProperties=d.setProperties=d.setDocumentProperties=function(t){for(var e in Q)Q.hasOwnProperty(e)&&t[e]&&(Q[e]=t[e]);return this},d.__private__.setDocumentProperty=function(t,e){if(-1===Object.keys(Q).indexOf(t))throw new Error("Invalid arguments passed to jsPDF.setDocumentProperty");return Q[t]=e},0),tt=[],et={},nt={},rt=0,it=[],ot=[],at=new s(d),st=c.hotfixes||[],ut=d.__private__.newObject=function(){var t=ct();return lt(t,!0),t},ct=d.__private__.newObjectDeferred=function(){return tt[++Z]=function(){return U},Z},lt=function(t,e){return e="boolean"==typeof e&&e,tt[t]=U,e&&z(t+" 0 obj"),t},ft=d.__private__.newAdditionalObject=function(){var t={objId:ct(),content:""};return ot.push(t),t},ht=ct(),pt=ct(),dt=d.__private__.decodeColorString=function(t){var e=t.split(" ");if(2===e.length&&("g"===e[1]||"G"===e[1])){var n=parseFloat(e[0]);e=[n,n,n,"r"]}for(var r="#",i=0;i<3;i++)r+=("0"+Math.floor(255*parseFloat(e[i])).toString(16)).slice(-2);return r},gt=d.__private__.encodeColorString=function(t){var e;"string"==typeof t&&(t={ch1:t});var n=t.ch1,r=t.ch2,i=t.ch3,a=t.ch4,s=(t.precision,"draw"===t.pdfColorType?["G","RG","K"]:["g","rg","k"]);if("string"==typeof n&&"#"!==n.charAt(0)){var u=new RGBColor(n);if(u.ok)n=u.toHex();else if(!/^\d*\.?\d*$/.test(n))throw new Error('Invalid color "'+n+'" passed to jsPDF.encodeColorString.')}if("string"==typeof n&&/^#[0-9A-Fa-f]{3}$/.test(n)&&(n="#"+n[1]+n[1]+n[2]+n[2]+n[3]+n[3]),"string"==typeof n&&/^#[0-9A-Fa-f]{6}$/.test(n)){var c=parseInt(n.substr(1),16);n=c>>16&255,r=c>>8&255,i=255&c}if(void 0===r||void 0===a&&n===r&&r===i)if("string"==typeof n)e=n+" "+s[0];else switch(t.precision){case 2:e=w(n/255)+" "+s[0];break;case 3:default:e=x(n/255)+" "+s[0]}else if(void 0===a||"object"===o(a)){if(a&&!isNaN(a.a)&&0===a.a)return["1.000","1.000","1.000",s[1]].join(" ");if("string"==typeof n)e=[n,r,i,s[1]].join(" ");else switch(t.precision){case 2:e=[w(n/255),w(r/255),w(i/255),s[1]].join(" ");break;default:case 3:e=[x(n/255),x(r/255),x(i/255),s[1]].join(" ")}}else if("string"==typeof n)e=[n,r,i,a,s[2]].join(" ");else switch(t.precision){case 2:e=[w(n/255),w(r/255),w(i/255),w(a/255),s[2]].join(" ");break;case 3:default:e=[x(n/255),x(r/255),x(i/255),x(a/255),s[2]].join(" ")}return e},mt=d.__private__.getFilters=function(){return l},vt=d.__private__.putStream=function(t){var e,n=(t=t||{}).data||"",r=t.filters||mt(),i=t.alreadyAppliedFilters||[],o=t.addLength1||!1,a=n.length;!0===r&&(r=["FlateEncode"]);var s=t.additionalKeyValues||[],c=(e=void 0!==u.API.processDataByFilters?u.API.processDataByFilters(n,r):{data:n,reverseChain:[]}).reverseChain+(Array.isArray(i)?i.join(" "):i.toString());0!==e.data.length&&(s.push({key:"Length",value:e.data.length}),!0===o&&s.push({key:"Length1",value:a})),0!=c.length&&(c.split("/").length-1==1?s.push({key:"Filter",value:c}):s.push({key:"Filter",value:"["+c+"]"})),z("<<");for(var l=0;l<s.length;l++)z("/"+s[l].key+" "+s[l].value);z(">>"),0!==e.data.length&&(z("stream"),z(e.data),z("endstream"))},yt=d.__private__.putPage=function(t){t.mediaBox;var e=t.number,n=t.data,r=t.objId,i=t.contentsObjId;lt(r,!0),it[P].mediaBox.topRightX,it[P].mediaBox.bottomLeftX,it[P].mediaBox.topRightY,it[P].mediaBox.bottomLeftY,z("<</Type /Page"),z("/Parent "+t.rootDictionaryObjId+" 0 R"),z("/Resources "+t.resourceDictionaryObjId+" 0 R"),z("/MediaBox ["+parseFloat(w(t.mediaBox.bottomLeftX))+" "+parseFloat(w(t.mediaBox.bottomLeftY))+" "+w(t.mediaBox.topRightX)+" "+w(t.mediaBox.topRightY)+"]"),null!==t.cropBox&&z("/CropBox ["+w(t.cropBox.bottomLeftX)+" "+w(t.cropBox.bottomLeftY)+" "+w(t.cropBox.topRightX)+" "+w(t.cropBox.topRightY)+"]"),null!==t.bleedBox&&z("/BleedBox ["+w(t.bleedBox.bottomLeftX)+" "+w(t.bleedBox.bottomLeftY)+" "+w(t.bleedBox.topRightX)+" "+w(t.bleedBox.topRightY)+"]"),null!==t.trimBox&&z("/TrimBox ["+w(t.trimBox.bottomLeftX)+" "+w(t.trimBox.bottomLeftY)+" "+w(t.trimBox.topRightX)+" "+w(t.trimBox.topRightY)+"]"),null!==t.artBox&&z("/ArtBox ["+w(t.artBox.bottomLeftX)+" "+w(t.artBox.bottomLeftY)+" "+w(t.artBox.topRightX)+" "+w(t.artBox.topRightY)+"]"),"number"==typeof t.userUnit&&1!==t.userUnit&&z("/UserUnit "+t.userUnit),at.publish("putPage",{objId:r,pageContext:it[e],pageNumber:e,page:n}),z("/Contents "+i+" 0 R"),z(">>"),z("endobj");var o=n.join("\n");return lt(i,!0),vt({data:o,filters:mt()}),z("endobj"),r},bt=d.__private__.putPages=function(){var t,e,n=[];for(t=1;t<=rt;t++)it[t].objId=ct(),it[t].contentsObjId=ct();for(t=1;t<=rt;t++)n.push(yt({number:t,data:D[t],objId:it[t].objId,contentsObjId:it[t].contentsObjId,mediaBox:it[t].mediaBox,cropBox:it[t].cropBox,bleedBox:it[t].bleedBox,trimBox:it[t].trimBox,artBox:it[t].artBox,userUnit:it[t].userUnit,rootDictionaryObjId:ht,resourceDictionaryObjId:pt}));lt(ht,!0),z("<</Type /Pages");var r="/Kids [";for(e=0;e<rt;e++)r+=n[e]+" 0 R ";z(r+"]"),z("/Count "+rt),z(">>"),z("endobj"),at.publish("postPutPages")},wt=function(t,e,n){nt.hasOwnProperty(e)||(nt[e]={}),nt[e][n]=t},xt=function(t,e,n,r,i){i=i||!1;var o="F"+(Object.keys(et).length+1).toString(10),a={id:o,postScriptName:t,fontName:e,fontStyle:n,encoding:r,isStandardFont:i,metadata:{}};return at.publish("addFont",{font:a,instance:this}),void 0!==o&&(et[o]=a,wt(o,e,n)),o},Nt=d.__private__.pdfEscape=d.pdfEscape=function(t,e){return function(t,e){var n,r,i,o,a,s,u,c,l;if(i=(e=e||{}).sourceEncoding||"Unicode",a=e.outputEncoding,(e.autoencode||a)&&et[I].metadata&&et[I].metadata[i]&&et[I].metadata[i].encoding&&(o=et[I].metadata[i].encoding,!a&&et[I].encoding&&(a=et[I].encoding),!a&&o.codePages&&(a=o.codePages[0]),"string"==typeof a&&(a=o[a]),a)){for(u=!1,s=[],n=0,r=t.length;n<r;n++)(c=a[t.charCodeAt(n)])?s.push(String.fromCharCode(c)):s.push(t[n]),s[n].charCodeAt(0)>>8&&(u=!0);t=s.join("")}for(n=t.length;void 0===u&&0!==n;)t.charCodeAt(n-1)>>8&&(u=!0),n--;if(!u)return t;for(s=e.noBOM?[]:[254,255],n=0,r=t.length;n<r;n++){if((l=(c=t.charCodeAt(n))>>8)>>8)throw new Error("Character at position "+n+" of string '"+t+"' exceeds 16bits. Cannot be encoded into UCS-2 BE");s.push(l),s.push(c-(l<<8))}return String.fromCharCode.apply(void 0,s)}(t,e).replace(/\\/g,"\\\\").replace(/\(/g,"\\(").replace(/\)/g,"\\)")},Lt=d.__private__.beginPage=function(t,e){var r,i="string"==typeof e&&e.toLowerCase();if("string"==typeof t&&(r=y(t.toLowerCase()))&&(t=r[0],e=r[1]),Array.isArray(t)&&(e=t[1],t=t[0]),(isNaN(t)||isNaN(e))&&(t=n[0],e=n[1]),i){switch(i.substr(0,1)){case"l":t<e&&(i="s");break;case"p":e<t&&(i="s")}"s"===i&&(r=t,t=e,e=r)}(14400<t||14400<e)&&(console.warn("A page in a PDF can not be wider or taller than 14400 userUnit. jsPDF limits the width/height to 14400"),t=Math.min(14400,t),e=Math.min(14400,e)),n=[t,e],q=!0,D[++rt]=[],it[rt]={objId:0,contentsObjId:0,userUnit:Number(f),artBox:null,bleedBox:null,cropBox:null,trimBox:null,mediaBox:{bottomLeftX:0,bottomLeftY:0,topRightX:Number(t),topRightY:Number(e)}},St(rt)},At=function(){Lt.apply(this,arguments),Vt(Wt),z(Zt),0!==oe&&z(oe+" J"),0!==se&&z(se+" j"),at.publish("addPage",{pageNumber:rt})},St=function(t){0<t&&t<=rt&&(P=t)},_t=d.__private__.getNumberOfPages=d.getNumberOfPages=function(){return D.length-1},Ct=function(t,e,n){var r,i=void 0;return n=n||{},t=void 0!==t?t:et[I].fontName,e=void 0!==e?e:et[I].fontStyle,r=t.toLowerCase(),void 0!==nt[r]&&void 0!==nt[r][e]?i=nt[r][e]:void 0!==nt[t]&&void 0!==nt[t][e]?i=nt[t][e]:!1===n.disableWarning&&console.warn("Unable to look up font label for font '"+t+"', '"+e+"'. Refer to getFontList() for available fonts."),i||n.noFallback||null==(i=nt.times[e])&&(i=nt.times.normal),i},kt=d.__private__.putInfo=function(){for(var t in ut(),z("<<"),z("/Producer (jsPDF "+u.version+")"),Q)Q.hasOwnProperty(t)&&Q[t]&&z("/"+t.substr(0,1).toUpperCase()+t.substr(1)+" ("+Nt(Q[t])+")");z("/CreationDate ("+b+")"),z(">>"),z("endobj")},Pt=d.__private__.putCatalog=function(t){var e=(t=t||{}).rootDictionaryObjId||ht;switch(ut(),z("<<"),z("/Type /Catalog"),z("/Pages "+e+" 0 R"),T||(T="fullwidth"),T){case"fullwidth":z("/OpenAction [3 0 R /FitH null]");break;case"fullheight":z("/OpenAction [3 0 R /FitV null]");break;case"fullpage":z("/OpenAction [3 0 R /Fit]");break;case"original":z("/OpenAction [3 0 R /XYZ null null 1]");break;default:var n=""+T;"%"===n.substr(n.length-1)&&(T=parseInt(T)/100),"number"==typeof T&&z("/OpenAction [3 0 R /XYZ null null "+w(T)+"]")}switch(j||(j="continuous"),j){case"continuous":z("/PageLayout /OneColumn");break;case"single":z("/PageLayout /SinglePage");break;case"two":case"twoleft":z("/PageLayout /TwoColumnLeft");break;case"tworight":z("/PageLayout /TwoColumnRight")}E&&z("/PageMode /"+E),at.publish("putCatalog"),z(">>"),z("endobj")},Ft=d.__private__.putTrailer=function(){z("trailer"),z("<<"),z("/Size "+(Z+1)),z("/Root "+Z+" 0 R"),z("/Info "+(Z-1)+" 0 R"),z("/ID [ <"+N+"> <"+N+"> ]"),z(">>")},Et=d.__private__.putHeader=function(){z("%PDF-"+g),z("%ÂºÃÂ¬Ã ")},jt=d.__private__.putXRef=function(){var t=1,e="0000000000";for(z("xref"),z("0 "+(Z+1)),z("0000000000 65535 f "),t=1;t<=Z;t++)"function"==typeof tt[t]?z((e+tt[t]()).slice(-10)+" 00000 n "):void 0!==tt[t]?z((e+tt[t]).slice(-10)+" 00000 n "):z("0000000000 00000 n ")},It=d.__private__.buildDocument=function(){q=!1,U=Z=0,R=[],tt=[],ot=[],ht=ct(),pt=ct(),at.publish("buildDocument"),Et(),bt(),function(){at.publish("putAdditionalObjects");for(var t=0;t<ot.length;t++){var e=ot[t];lt(e.objId,!0),z(e.content),z("endobj")}at.publish("postPutAdditionalObjects")}(),function(){for(var t in et)et.hasOwnProperty(t)&&(!1===h||!0===h&&p.hasOwnProperty(t))&&(e=et[t],at.publish("putFont",{font:e,out:z,newObject:ut,putStream:vt}),!0!==e.isAlreadyPutted&&(e.objectNumber=ut(),z("<<"),z("/Type /Font"),z("/BaseFont /"+e.postScriptName),z("/Subtype /Type1"),"string"==typeof e.encoding&&z("/Encoding /"+e.encoding),z("/FirstChar 32"),z("/LastChar 255"),z(">>"),z("endobj")));var e}(),at.publish("putResources"),lt(pt,!0),z("<<"),function(){for(var t in z("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]"),z("/Font <<"),et)et.hasOwnProperty(t)&&(!1===h||!0===h&&p.hasOwnProperty(t))&&z("/"+t+" "+et[t].objectNumber+" 0 R");z(">>"),z("/XObject <<"),at.publish("putXobjectDict"),z(">>")}(),z(">>"),z("endobj"),at.publish("postPutResources"),kt(),Pt();var t=U;return jt(),Ft(),z("startxref"),z(""+t),z("%%EOF"),q=!0,R.join("\n")},Bt=d.__private__.getBlob=function(t){return new Blob([W(t)],{type:"application/pdf"})},Ot=d.output=d.__private__.output=((O=function(t,e){e=e||{};var n=It();switch("string"==typeof e?e={filename:e}:e.filename=e.filename||"generated.pdf",t){case void 0:return n;case"save":d.save(e.filename);break;case"arraybuffer":return W(n);case"blob":return Bt(n);case"bloburi":case"bloburl":if(void 0!==r.URL&&"function"==typeof r.URL.createObjectURL)return r.URL&&r.URL.createObjectURL(Bt(n))||void 0;console.warn("bloburl is not supported by your system, because URL.createObjectURL is not supported by your browser.");break;case"datauristring":case"dataurlstring":return"data:application/pdf;filename="+e.filename+";base64,"+btoa(n);case"dataurlnewwindow":var i='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe src="'+this.output("datauristring")+'"></iframe></body></html>',o=r.open();if(null!==o&&o.document.write(i),o||"undefined"==typeof safari)return o;case"datauri":case"dataurl":return r.document.location.href="data:application/pdf;filename="+e.filename+";base64,"+btoa(n);default:return null}}).foo=function(){try{return O.apply(this,arguments)}catch(n){var t=n.stack||"";~t.indexOf(" at ")&&(t=t.split(" at ")[1]);var e="Error in function "+t.split("\n")[0].split("<")[0]+": "+n.message;if(!r.console)throw new Error(e);r.console.error(e,n),r.alert&&alert(e)}},(O.foo.bar=O).foo),Mt=function(t){return!0===Array.isArray(st)&&-1<st.indexOf(t)};switch(e){case"pt":B=1;break;case"mm":B=72/25.4;break;case"cm":B=72/2.54;break;case"in":B=72;break;case"px":B=1==Mt("px_scaling")?.75:96/72;break;case"pc":case"em":B=12;break;case"ex":B=6;break;default:throw new Error("Invalid unit: "+e)}C(),A();var qt=d.__private__.getPageInfo=function(t){if(isNaN(t)||t%1!=0)throw new Error("Invalid argument passed to jsPDF.getPageInfo");return{objId:it[t].objId,pageNumber:t,pageContext:it[t]}},Dt=d.__private__.getPageInfoByObjId=function(t){for(var e in it)if(it[e].objId===t)break;if(isNaN(t)||t%1!=0)throw new Error("Invalid argument passed to jsPDF.getPageInfoByObjId");return qt(e)},Rt=d.__private__.getCurrentPageInfo=function(){return{objId:it[P].objId,pageNumber:P,pageContext:it[P]}};d.addPage=function(){return At.apply(this,arguments),this},d.setPage=function(){return St.apply(this,arguments),this},d.insertPage=function(t){return this.addPage(),this.movePage(P,t),this},d.movePage=function(t,e){if(e<t){for(var n=D[t],r=it[t],i=t;e<i;i--)D[i]=D[i-1],it[i]=it[i-1];D[e]=n,it[e]=r,this.setPage(e)}else if(t<e){for(n=D[t],r=it[t],i=t;i<e;i++)D[i]=D[i+1],it[i]=it[i+1];D[e]=n,it[e]=r,this.setPage(e)}return this},d.deletePage=function(){return function(t){0<t&&t<=rt&&(D.splice(t,1),--rt<P&&(P=rt),this.setPage(P))}.apply(this,arguments),this},d.__private__.text=d.text=function(t,e,n,r){var i;"number"!=typeof t||"number"!=typeof e||"string"!=typeof n&&!Array.isArray(n)||(i=n,n=e,e=t,t=i);var a=arguments[3],s=arguments[4],u=arguments[5];if("object"===o(a)&&null!==a||("string"==typeof s&&(u=s,s=null),"string"==typeof a&&(u=a,a=null),"number"==typeof a&&(s=a,a=null),r={flags:a,angle:s,align:u}),(a=a||{}).noBOM=a.noBOM||!0,a.autoencode=a.autoencode||!0,isNaN(e)||isNaN(n)||null==t)throw new Error("Invalid arguments passed to jsPDF.text");if(0===t.length)return h;var c,l="",f="number"==typeof r.lineHeightFactor?r.lineHeightFactor:Ht,h=r.scope||this;function d(t){for(var e,n=t.concat(),r=[],i=n.length;i--;)"string"==typeof(e=n.shift())?r.push(e):Array.isArray(t)&&1===e.length?r.push(e[0]):r.push([e[0],e[1],e[2]]);return r}function g(t,e){var n;if("string"==typeof t)n=e(t)[0];else if(Array.isArray(t)){for(var r,i,o=t.concat(),a=[],s=o.length;s--;)"string"==typeof(r=o.shift())?a.push(e(r)[0]):Array.isArray(r)&&"string"===r[0]&&(i=e(r[0],r[1],r[2]),a.push([i[0],i[1],i[2]]));n=a}return n}var m=!1,v=!0;if("string"==typeof t)m=!0;else if(Array.isArray(t)){for(var y,b=t.concat(),N=[],L=b.length;L--;)("string"!=typeof(y=b.shift())||Array.isArray(y)&&"string"!=typeof y[0])&&(v=!1);m=v}if(!1===m)throw new Error('Type of text must be string or Array. "'+t+'" is not recognized.');var A=et[I].encoding;"WinAnsiEncoding"!==A&&"StandardEncoding"!==A||(t=g(t,(function(t,e,n){return[(i=t,i=i.split("\t").join(Array(r.TabLen||9).join(" ")),Nt(i,a)),e,n];var i}))),"string"==typeof t&&(t=t.match(/[\r?\n]/)?t.split(/\r\n|\r|\n/g):[t]);var S=G/h.internal.scaleFactor,_=S*(Ht-1);switch(r.baseline){case"bottom":n-=_;break;case"top":n+=S-_;break;case"hanging":n+=S-2*_;break;case"middle":n+=S/2-_}0<(U=r.maxWidth||0)&&("string"==typeof t?t=h.splitTextToSize(t,U):"[object Array]"===Object.prototype.toString.call(t)&&(t=h.splitTextToSize(t.join(" "),U)));var C={text:t,x:e,y:n,options:r,mutex:{pdfEscape:Nt,activeFontKey:I,fonts:et,activeFontSize:G}};at.publish("preProcessText",C),t=C.text,s=(r=C.options).angle;var k=h.internal.scaleFactor,P=[];if(s){s*=Math.PI/180;var F=Math.cos(s),T=Math.sin(s);P=[w(F),w(T),w(-1*T),w(F)]}void 0!==(R=r.charSpace)&&(l+=x(R*k)+" Tc\n"),r.lang;var E=-1,j=void 0!==r.renderingMode?r.renderingMode:r.stroke,B=h.internal.getCurrentPageInfo().pageContext;switch(j){case 0:case!1:case"fill":E=0;break;case 1:case!0:case"stroke":E=1;break;case 2:case"fillThenStroke":E=2;break;case 3:case"invisible":E=3;break;case 4:case"fillAndAddForClipping":E=4;break;case 5:case"strokeAndAddPathForClipping":E=5;break;case 6:case"fillThenStrokeAndAddToPathForClipping":E=6;break;case 7:case"addToPathForClipping":E=7}var O=void 0!==B.usedRenderingMode?B.usedRenderingMode:-1;-1!==E?l+=E+" Tr\n":-1!==O&&(l+="0 Tr\n"),-1!==E&&(B.usedRenderingMode=E),u=r.align||"left";var M=G*f,q=h.internal.pageSize.getWidth(),D=(k=h.internal.scaleFactor,et[I]),R=r.charSpace||re,U=r.maxWidth||0,H=(a={},[]);if("[object Array]"===Object.prototype.toString.call(t)){var W,V;N=d(t),"left"!==u&&(V=N.map((function(t){return h.getStringUnitWidth(t,{font:D,charSpace:R,fontSize:G})*G/k}))),Math.max.apply(Math,V);var Y,J=0;if("right"===u){e-=V[0],t=[];var $=0;for(L=N.length;$<L;$++)V[$],W=0===$?(Y=Jt(e),$t(n)):(Y=(J-V[$])*k,-M),t.push([N[$],Y,W]),J=V[$]}else if("center"===u)for(e-=V[0]/2,t=[],$=0,L=N.length;$<L;$++)V[$],W=0===$?(Y=Jt(e),$t(n)):(Y=(J-V[$])/2*k,-M),t.push([N[$],Y,W]),J=V[$];else if("left"===u)for(t=[],$=0,L=N.length;$<L;$++)W=0===$?$t(n):-M,Y=0===$?Jt(e):0,t.push(N[$]);else{if("justify"!==u)throw new Error('Unrecognized alignment option, use "left", "center", "right" or "justify".');for(t=[],U=0!==U?U:q,$=0,L=N.length;$<L;$++)W=0===$?$t(n):-M,Y=0===$?Jt(e):0,$<L-1&&H.push(((U-V[$])/(N[$].split(" ").length-1)*k).toFixed(2)),t.push([N[$],Y,W])}}!0===("boolean"==typeof r.R2L?r.R2L:X)&&(t=g(t,(function(t,e,n){return[t.split("").reverse().join(""),e,n]}))),C={text:t,x:e,y:n,options:r,mutex:{pdfEscape:Nt,activeFontKey:I,fonts:et,activeFontSize:G}},at.publish("postProcessText",C),t=C.text,c=C.mutex.isHex,N=d(t),t=[];var K,Q,Z,tt=0,nt=(L=N.length,"");for($=0;$<L;$++)nt="",Array.isArray(N[$])?(K=parseFloat(N[$][1]),Q=parseFloat(N[$][2]),Z=(c?"<":"(")+N[$][0]+(c?">":")"),tt=1):(K=Jt(e),Q=$t(n),Z=(c?"<":"(")+N[$]+(c?">":")")),void 0!==H&&void 0!==H[$]&&(nt=H[$]+" Tw\n"),0!==P.length&&0===$?t.push(nt+P.join(" ")+" "+K.toFixed(2)+" "+Q.toFixed(2)+" Tm\n"+Z):1===tt||0===tt&&0===$?t.push(nt+K.toFixed(2)+" "+Q.toFixed(2)+" Td\n"+Z):t.push(nt+Z);t=0===tt?t.join(" Tj\nT* "):t.join(" Tj\n"),t+=" Tj\n";var rt="BT\n/"+I+" "+G+" Tf\n"+(G*f).toFixed(2)+" TL\n"+ee+"\n";return rt+=l,rt+=t,z(rt+="ET"),p[I]=!0,h},d.__private__.lstext=d.lstext=function(t,e,n,r){return console.warn("jsPDF.lstext is deprecated"),this.text(t,e,n,{charSpace:r})},d.__private__.clip=d.clip=function(t){z("evenodd"===t?"W*":"W"),z("n")},d.__private__.clip_fixed=d.clip_fixed=function(t){console.log("clip_fixed is deprecated"),d.clip(t)};var Ut=d.__private__.isValidStyle=function(t){var e=!1;return-1!==[void 0,null,"S","F","DF","FD","f","f*","B","B*"].indexOf(t)&&(e=!0),e},zt=d.__private__.getStyle=function(t){var e="S";return"F"===t?e="f":"FD"===t||"DF"===t?e="B":"f"!==t&&"f*"!==t&&"B"!==t&&"B*"!==t||(e=t),e};d.__private__.line=d.line=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw new Error("Invalid arguments passed to jsPDF.line");return this.lines([[n-t,r-e]],t,e)},d.__private__.lines=d.lines=function(t,e,n,r,i,o){var a,s,u,c,l,f,h,p,d,g,m,v;if("number"==typeof t&&(v=n,n=e,e=t,t=v),r=r||[1,1],o=o||!1,isNaN(e)||isNaN(n)||!Array.isArray(t)||!Array.isArray(r)||!Ut(i)||"boolean"!=typeof o)throw new Error("Invalid arguments passed to jsPDF.lines");for(z(x(Jt(e))+" "+x($t(n))+" m "),a=r[0],s=r[1],c=t.length,g=e,m=n,u=0;u<c;u++)2===(l=t[u]).length?(g=l[0]*a+g,m=l[1]*s+m,z(x(Jt(g))+" "+x($t(m))+" l")):(f=l[0]*a+g,h=l[1]*s+m,p=l[2]*a+g,d=l[3]*s+m,g=l[4]*a+g,m=l[5]*s+m,z(x(Jt(f))+" "+x($t(h))+" "+x(Jt(p))+" "+x($t(d))+" "+x(Jt(g))+" "+x($t(m))+" c"));return o&&z(" h"),null!==i&&z(zt(i)),this},d.__private__.rect=d.rect=function(t,e,n,r,i){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||!Ut(i))throw new Error("Invalid arguments passed to jsPDF.rect");return z([w(Jt(t)),w($t(e)),w(n*B),w(-r*B),"re"].join(" ")),null!==i&&z(zt(i)),this},d.__private__.triangle=d.triangle=function(t,e,n,r,i,o,a){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(o)||!Ut(a))throw new Error("Invalid arguments passed to jsPDF.triangle");return this.lines([[n-t,r-e],[i-n,o-r],[t-i,e-o]],t,e,[1,1],a,!0),this},d.__private__.roundedRect=d.roundedRect=function(t,e,n,r,i,o,a){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(o)||!Ut(a))throw new Error("Invalid arguments passed to jsPDF.roundedRect");var s=4/3*(Math.SQRT2-1);return this.lines([[n-2*i,0],[i*s,0,i,o-o*s,i,o],[0,r-2*o],[0,o*s,-i*s,o,-i,o],[2*i-n,0],[-i*s,0,-i,-o*s,-i,-o],[0,2*o-r],[0,-o*s,i*s,-o,i,-o]],t+i,e,[1,1],a),this},d.__private__.ellipse=d.ellipse=function(t,e,n,r,i){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||!Ut(i))throw new Error("Invalid arguments passed to jsPDF.ellipse");var o=4/3*(Math.SQRT2-1)*n,a=4/3*(Math.SQRT2-1)*r;return z([w(Jt(t+n)),w($t(e)),"m",w(Jt(t+n)),w($t(e-a)),w(Jt(t+o)),w($t(e-r)),w(Jt(t)),w($t(e-r)),"c"].join(" ")),z([w(Jt(t-o)),w($t(e-r)),w(Jt(t-n)),w($t(e-a)),w(Jt(t-n)),w($t(e)),"c"].join(" ")),z([w(Jt(t-n)),w($t(e+a)),w(Jt(t-o)),w($t(e+r)),w(Jt(t)),w($t(e+r)),"c"].join(" ")),z([w(Jt(t+o)),w($t(e+r)),w(Jt(t+n)),w($t(e+a)),w(Jt(t+n)),w($t(e)),"c"].join(" ")),null!==i&&z(zt(i)),this},d.__private__.circle=d.circle=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||!Ut(r))throw new Error("Invalid arguments passed to jsPDF.circle");return this.ellipse(t,e,n,n,r)},d.setFont=function(t,e){return I=Ct(t,e,{disableWarning:!1}),this},d.setFontStyle=d.setFontType=function(t){return I=Ct(void 0,t),this},d.__private__.getFontList=d.getFontList=function(){var t,e,n,r={};for(t in nt)if(nt.hasOwnProperty(t))for(e in r[t]=n=[],nt[t])nt[t].hasOwnProperty(e)&&n.push(e);return r},d.addFont=function(t,e,n,r){xt.call(this,t,e,n,r=r||"Identity-H")};var Ht,Wt=c.lineWidth||.200025,Vt=d.__private__.setLineWidth=d.setLineWidth=function(t){return z((t*B).toFixed(2)+" w"),this},Gt=(d.__private__.setLineDash=u.API.setLineDash=function(t,e){if(t=t||[],e=e||0,isNaN(e)||!Array.isArray(t))throw new Error("Invalid arguments passed to jsPDF.setLineDash");return t=t.map((function(t){return(t*B).toFixed(3)})).join(" "),e=parseFloat((e*B).toFixed(3)),z("["+t+"] "+e+" d"),this},d.__private__.getLineHeight=d.getLineHeight=function(){return G*Ht}),Yt=(Gt=d.__private__.getLineHeight=d.getLineHeight=function(){return G*Ht},d.__private__.setLineHeightFactor=d.setLineHeightFactor=function(t){return"number"==typeof(t=t||1.15)&&(Ht=t),this}),Xt=d.__private__.getLineHeightFactor=d.getLineHeightFactor=function(){return Ht};Yt(c.lineHeight);var Jt=d.__private__.getHorizontalCoordinate=function(t){return t*B},$t=d.__private__.getVerticalCoordinate=function(t){return it[P].mediaBox.topRightY-it[P].mediaBox.bottomLeftY-t*B},Kt=d.__private__.getHorizontalCoordinateString=function(t){return w(t*B)},Qt=d.__private__.getVerticalCoordinateString=function(t){return w(it[P].mediaBox.topRightY-it[P].mediaBox.bottomLeftY-t*B)},Zt=c.strokeColor||"0 G",te=(d.__private__.getStrokeColor=d.getDrawColor=function(){return dt(Zt)},d.__private__.setStrokeColor=d.setDrawColor=function(t,e,n,r){return Zt=gt({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:"draw",precision:2}),z(Zt),this},c.fillColor||"0 g"),ee=(d.__private__.getFillColor=d.getFillColor=function(){return dt(te)},d.__private__.setFillColor=d.setFillColor=function(t,e,n,r){return te=gt({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:"fill",precision:2}),z(te),this},c.textColor||"0 g"),ne=d.__private__.getTextColor=d.getTextColor=function(){return dt(ee)},re=(d.__private__.setTextColor=d.setTextColor=function(t,e,n,r){return ee=gt({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:"text",precision:3}),this},c.charSpace||0),ie=d.__private__.getCharSpace=d.getCharSpace=function(){return re},oe=(d.__private__.setCharSpace=d.setCharSpace=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.setCharSpace");return re=t,this},0);d.CapJoinStyles={0:0,butt:0,but:0,miter:0,1:1,round:1,rounded:1,circle:1,2:2,projecting:2,project:2,square:2,bevel:2},d.__private__.setLineCap=d.setLineCap=function(t){var e=d.CapJoinStyles[t];if(void 0===e)throw new Error("Line cap style of '"+t+"' is not recognized. See or extend .CapJoinStyles property for valid styles");return z((oe=e)+" J"),this};var ae,se=0;for(var ue in d.__private__.setLineJoin=d.setLineJoin=function(t){var e=d.CapJoinStyles[t];if(void 0===e)throw new Error("Line join style of '"+t+"' is not recognized. See or extend .CapJoinStyles property for valid styles");return z((se=e)+" j"),this},d.__private__.setMiterLimit=d.setMiterLimit=function(t){if(t=t||0,isNaN(t))throw new Error("Invalid argument passed to jsPDF.setMiterLimit");return ae=parseFloat(w(t*B)),z(ae+" M"),this},d.save=function(t,e){if(t=t||"generated.pdf",(e=e||{}).returnPromise=e.returnPromise||!1,!1!==e.returnPromise)return new i((function(e,n){try{var i=Tt(Bt(It()),t);"function"==typeof Tt.unload&&r.setTimeout&&setTimeout(Tt.unload,911),e(i)}catch(e){n(e.message)}}));Tt(Bt(It()),t),"function"==typeof Tt.unload&&r.setTimeout&&setTimeout(Tt.unload,911)},u.API)u.API.hasOwnProperty(ue)&&("events"===ue&&u.API.events.length?function(t,e){var n,r,i;for(i=e.length-1;-1!==i;i--)n=e[i][0],r=e[i][1],t.subscribe.apply(t,[n].concat("function"==typeof r?[r]:r))}(at,u.API.events):d[ue]=u.API[ue]);return d.internal={pdfEscape:Nt,getStyle:zt,getFont:function(){return et[Ct.apply(d,arguments)]},getFontSize:Y,getCharSpace:ie,getTextColor:ne,getLineHeight:Gt,getLineHeightFactor:Xt,write:H,getHorizontalCoordinate:Jt,getVerticalCoordinate:$t,getCoordinateString:Kt,getVerticalCoordinateString:Qt,collections:{},newObject:ut,newAdditionalObject:ft,newObjectDeferred:ct,newObjectDeferredBegin:lt,getFilters:mt,putStream:vt,events:at,scaleFactor:B,pageSize:{getWidth:function(){return(it[P].mediaBox.topRightX-it[P].mediaBox.bottomLeftX)/B},setWidth:function(t){it[P].mediaBox.topRightX=t*B+it[P].mediaBox.bottomLeftX},getHeight:function(){return(it[P].mediaBox.topRightY-it[P].mediaBox.bottomLeftY)/B},setHeight:function(t){it[P].mediaBox.topRightY=t*B+it[P].mediaBox.bottomLeftY}},output:Ot,getNumberOfPages:_t,pages:D,out:z,f2:w,f3:x,getPageInfo:qt,getPageInfoByObjId:Dt,getCurrentPageInfo:Rt,getPDFVersion:m,hasHotfix:Mt},Object.defineProperty(d.internal.pageSize,"width",{get:function(){return(it[P].mediaBox.topRightX-it[P].mediaBox.bottomLeftX)/B},set:function(t){it[P].mediaBox.topRightX=t*B+it[P].mediaBox.bottomLeftX},enumerable:!0,configurable:!0}),Object.defineProperty(d.internal.pageSize,"height",{get:function(){return(it[P].mediaBox.topRightY-it[P].mediaBox.bottomLeftY)/B},set:function(t){it[P].mediaBox.topRightY=t*B+it[P].mediaBox.bottomLeftY},enumerable:!0,configurable:!0}),function(t){for(var e=0,n=V.length;e<n;e++){var r=xt(t[e][0],t[e][1],t[e][2],V[e][3],!0);p[r]=!0;var i=t[e][0].split("-");wt(r,i[0],i[1]||"")}at.publish("addFonts",{fonts:et,dictionary:nt})}(V),I="F1",At(n,t),at.publish("initialized"),d}return u.API={events:[]},u.version="1.5.3",void 0!==(a=function(){return u}.call(e,n,e,t))&&(t.exports=a),u}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")());
/**
   * @license
   * Copyright (c) 2016 Alexander Weidt,
   * https://github.com/BiggA94
   * 
   * Licensed under the MIT License. http://opensource.org/licenses/mit-license
   */(function(t,e){var n,r=1,i=function(t){return t.replace(/\\/g,"\\\\").replace(/\(/g,"\\(").replace(/\)/g,"\\)")},a=function(t){return t.replace(/\\\\/g,"\\").replace(/\\\(/g,"(").replace(/\\\)/g,")")},s=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.f2");return t.toFixed(2)},u=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.f2");return t.toFixed(5)};t.__acroform__={};var c=function(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t},l=function(t){return t*r},f=function(t){return t/r},h=function(t){var e=new I,n=X.internal.getHeight(t)||0,r=X.internal.getWidth(t)||0;return e.BBox=[0,0,Number(s(r)),Number(s(n))],e},p=t.__acroform__.setBit=function(t,e){if(t=t||0,e=e||0,isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBit");return t|1<<e},d=t.__acroform__.clearBit=function(t,e){if(t=t||0,e=e||0,isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBit");return t&~(1<<e)},g=t.__acroform__.getBit=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBit");return 0==(t&1<<e)?0:1},m=t.__acroform__.getBitForPdf=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf");return g(t,e-1)},v=t.__acroform__.setBitForPdf=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf");return p(t,e-1)},y=t.__acroform__.clearBitForPdf=function(t,e,n){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf");return d(t,e-1)},b=t.__acroform__.calculateCoordinates=function(t){var e=this.internal.getHorizontalCoordinate,n=this.internal.getVerticalCoordinate,r=t[0],i=t[1],o=t[2],a=t[3],u={};return u.lowerLeft_X=e(r)||0,u.lowerLeft_Y=n(i+a)||0,u.upperRight_X=e(r+o)||0,u.upperRight_Y=n(i)||0,[Number(s(u.lowerLeft_X)),Number(s(u.lowerLeft_Y)),Number(s(u.upperRight_X)),Number(s(u.upperRight_Y))]},w=function(t){if(t.appearanceStreamContent)return t.appearanceStreamContent;if(t.V||t.DV){var e=[],r=t.V||t.DV,i=x(t,r),o=n.internal.getFont(t.fontName,t.fontStyle).id;e.push("/Tx BMC"),e.push("q"),e.push("BT"),e.push(n.__private__.encodeColorString(t.color)),e.push("/"+o+" "+s(i.fontSize)+" Tf"),e.push("1 0 0 1 0 0 Tm"),e.push(i.text),e.push("ET"),e.push("Q"),e.push("EMC");var a=new h(t);return a.stream=e.join("\n"),a}},x=function(t,e){var r=t.maxFontSize||12,o=(t.fontName,{text:"",fontSize:""}),a=(e=")"==(e="("==e.substr(0,1)?e.substr(1):e).substr(e.length-1)?e.substr(0,e.length-1):e).split(" "),u=(n.__private__.encodeColorString(t.color),r),c=X.internal.getHeight(t)||0;c=c<0?-c:c;var l=X.internal.getWidth(t)||0;l=l<0?-l:l;var f=function(e,n,r){if(e+1<a.length){var i=n+" "+a[e+1];return N(i,t,r).width<=l-4}return!1};u++;t:for(;;){e="";var h=N("3",t,--u).height,p=t.multiline?c-u:(c-h)/2,d=-2,g=p+=2,m=0,v=0,y=0;if(u<=0){e="(...) Tj\n",e+="% Width of Text: "+N(e,t,u=12).width+", FieldWidth:"+l+"\n";break}y=N(a[0]+" ",t,u).width;var b="",w=0;for(var x in a)if(a.hasOwnProperty(x)){b=" "==(b+=a[x]+" ").substr(b.length-1)?b.substr(0,b.length-1):b;var L=parseInt(x);y=N(b+" ",t,u).width;var A=f(L,b,u),S=x>=a.length-1;if(A&&!S){b+=" ";continue}if(A||S){if(S)v=L;else if(t.multiline&&c<(h+2)*(w+2)+2)continue t}else{if(!t.multiline)continue t;if(c<(h+2)*(w+2)+2)continue t;v=L}for(var _="",C=m;C<=v;C++)_+=a[C]+" ";switch(_=" "==_.substr(_.length-1)?_.substr(0,_.length-1):_,y=N(_,t,u).width,t.textAlign){case"right":d=l-y-2;break;case"center":d=(l-y)/2;break;case"left":default:d=2}e+=s(d)+" "+s(g)+" Td\n",e+="("+i(_)+") Tj\n",e+=-s(d)+" 0 Td\n",g=-(u+2),y=0,m=v+1,w++,b=""}break}return o.text=e,o.fontSize=u,o},N=function(t,e,r){var i=n.internal.getFont(e.fontName,e.fontStyle),o=n.getStringUnitWidth(t,{font:i,fontSize:parseFloat(r),charSpace:0})*parseFloat(r);return{height:n.getStringUnitWidth("3",{font:i,fontSize:parseFloat(r),charSpace:0})*parseFloat(r)*1.5,width:o}},L={fields:[],xForms:[],acroFormDictionaryRoot:null,printedOut:!1,internal:null,isInitialized:!1},A=function(){n.internal.acroformPlugin.acroFormDictionaryRoot.objId=void 0;var t=n.internal.acroformPlugin.acroFormDictionaryRoot.Fields;for(var e in t)if(t.hasOwnProperty(e)){var r=t[e];r.objId=void 0,r.hasAnnotation&&S.call(n,r)}},S=function(t){var e={type:"reference",object:t};void 0===n.internal.getPageInfo(t.page).pageContext.annotations.find((function(t){return t.type===e.type&&t.object===e.object}))&&n.internal.getPageInfo(t.page).pageContext.annotations.push(e)},_=function(){if(void 0===n.internal.acroformPlugin.acroFormDictionaryRoot)throw new Error("putCatalogCallback: Root missing.");n.internal.write("/AcroForm "+n.internal.acroformPlugin.acroFormDictionaryRoot.objId+" 0 R")},C=function(){n.internal.events.unsubscribe(n.internal.acroformPlugin.acroFormDictionaryRoot._eventID),delete n.internal.acroformPlugin.acroFormDictionaryRoot._eventID,n.internal.acroformPlugin.printedOut=!0},k=function(t){var e=!t;for(var r in t||(n.internal.newObjectDeferredBegin(n.internal.acroformPlugin.acroFormDictionaryRoot.objId,!0),n.internal.acroformPlugin.acroFormDictionaryRoot.putStream()),t=t||n.internal.acroformPlugin.acroFormDictionaryRoot.Kids)if(t.hasOwnProperty(r)){var i=t[r],a=[],s=i.Rect;if(i.Rect&&(i.Rect=b.call(this,i.Rect)),n.internal.newObjectDeferredBegin(i.objId,!0),i.DA=X.createDefaultAppearanceStream(i),"object"===o(i)&&"function"==typeof i.getKeyValueListForStream&&(a=i.getKeyValueListForStream()),i.Rect=s,i.hasAppearanceStream&&!i.appearanceStreamContent){var u=w.call(this,i);a.push({key:"AP",value:"<</N "+u+">>"}),n.internal.acroformPlugin.xForms.push(u)}if(i.appearanceStreamContent){var c="";for(var l in i.appearanceStreamContent)if(i.appearanceStreamContent.hasOwnProperty(l)){var f=i.appearanceStreamContent[l];if(c+="/"+l+" ",c+="<<",1<=Object.keys(f).length||Array.isArray(f))for(var r in f){var h;f.hasOwnProperty(r)&&("function"==typeof(h=f[r])&&(h=h.call(this,i)),c+="/"+r+" "+h+" ",0<=n.internal.acroformPlugin.xForms.indexOf(h)||n.internal.acroformPlugin.xForms.push(h))}else"function"==typeof(h=f)&&(h=h.call(this,i)),c+="/"+r+" "+h,0<=n.internal.acroformPlugin.xForms.indexOf(h)||n.internal.acroformPlugin.xForms.push(h);c+=">>"}a.push({key:"AP",value:"<<\n"+c+">>"})}n.internal.putStream({additionalKeyValues:a}),n.internal.out("endobj")}e&&P.call(this,n.internal.acroformPlugin.xForms)},P=function(t){for(var e in t)if(t.hasOwnProperty(e)){var r=e,i=t[e];n.internal.newObjectDeferredBegin(i&&i.objId,!0),"object"===o(i)&&"function"==typeof i.putStream&&i.putStream(),delete t[r]}},F=function(){if(void 0!==this.internal&&(void 0===this.internal.acroformPlugin||!1===this.internal.acroformPlugin.isInitialized)){if(n=this,O.FieldNum=0,this.internal.acroformPlugin=JSON.parse(JSON.stringify(L)),this.internal.acroformPlugin.acroFormDictionaryRoot)throw new Error("Exception while creating AcroformDictionary");r=n.internal.scaleFactor,n.internal.acroformPlugin.acroFormDictionaryRoot=new B,n.internal.acroformPlugin.acroFormDictionaryRoot._eventID=n.internal.events.subscribe("postPutResources",C),n.internal.events.subscribe("buildDocument",A),n.internal.events.subscribe("putCatalog",_),n.internal.events.subscribe("postPutPages",k),n.internal.acroformPlugin.isInitialized=!0}},T=t.__acroform__.arrayToPdfArray=function(t){if(Array.isArray(t)){for(var e="[",n=0;n<t.length;n++)switch(0!==n&&(e+=" "),o(t[n])){case"boolean":case"number":case"object":e+=t[n].toString();break;case"string":"/"!==t[n].substr(0,1)?e+="("+i(t[n].toString())+")":e+=t[n].toString()}return e+"]"}throw new Error("Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray")},E=function(t){return(t=t||"").toString(),"("+i(t)+")"},j=function(){var t;Object.defineProperty(this,"objId",{configurable:!0,get:function(){if(t||(t=n.internal.newObjectDeferred()),!t)throw new Error("AcroFormPDFObject: Couldn't create Object ID");return t},set:function(e){t=e}})};j.prototype.toString=function(){return this.objId+" 0 R"},j.prototype.putStream=function(){var t=this.getKeyValueListForStream();n.internal.putStream({data:this.stream,additionalKeyValues:t}),n.internal.out("endobj")},j.prototype.getKeyValueListForStream=function(){return function(t){var e=[],n=Object.getOwnPropertyNames(t).filter((function(t){return"content"!=t&&"appearanceStreamContent"!=t&&"_"!=t.substring(0,1)}));for(var r in n)if(!1===Object.getOwnPropertyDescriptor(t,n[r]).configurable){var i=n[r],o=t[i];o&&(Array.isArray(o)?e.push({key:i,value:T(o)}):o instanceof j?e.push({key:i,value:o.objId+" 0 R"}):"function"!=typeof o&&e.push({key:i,value:o}))}return e}(this)};var I=function(){j.call(this),Object.defineProperty(this,"Type",{value:"/XObject",configurable:!1,writeable:!0}),Object.defineProperty(this,"Subtype",{value:"/Form",configurable:!1,writeable:!0}),Object.defineProperty(this,"FormType",{value:1,configurable:!1,writeable:!0});var t,e=[];Object.defineProperty(this,"BBox",{configurable:!1,writeable:!0,get:function(){return e},set:function(t){e=t}}),Object.defineProperty(this,"Resources",{value:"2 0 R",configurable:!1,writeable:!0}),Object.defineProperty(this,"stream",{enumerable:!1,configurable:!0,set:function(e){t=e.trim()},get:function(){return t||null}})};c(I,j);var B=function(){j.call(this);var t,e=[];Object.defineProperty(this,"Kids",{enumerable:!1,configurable:!0,get:function(){return 0<e.length?e:void 0}}),Object.defineProperty(this,"Fields",{enumerable:!1,configurable:!1,get:function(){return e}}),Object.defineProperty(this,"DA",{enumerable:!1,configurable:!1,get:function(){if(t)return"("+t+")"},set:function(e){t=e}})};c(B,j);var O=function t(){j.call(this);var e=4;Object.defineProperty(this,"F",{enumerable:!1,configurable:!1,get:function(){return e},set:function(t){if(isNaN(t))throw new Error('Invalid value "'+t+'" for attribute F supplied.');e=t}}),Object.defineProperty(this,"showWhenPrinted",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(e,3))},set:function(t){!0===Boolean(t)?this.F=v(e,3):this.F=y(e,3)}});var n=0;Object.defineProperty(this,"Ff",{enumerable:!1,configurable:!1,get:function(){return n},set:function(t){if(isNaN(t))throw new Error('Invalid value "'+t+'" for attribute Ff supplied.');n=t}});var r=[];Object.defineProperty(this,"Rect",{enumerable:!1,configurable:!1,get:function(){if(0!==r.length)return r},set:function(t){r=void 0!==t?t:[]}}),Object.defineProperty(this,"x",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[0])?0:f(r[0])},set:function(t){r[0]=l(t)}}),Object.defineProperty(this,"y",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[1])?0:f(r[1])},set:function(t){r[1]=l(t)}}),Object.defineProperty(this,"width",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[2])?0:f(r[2])},set:function(t){r[2]=l(t)}}),Object.defineProperty(this,"height",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[3])?0:f(r[3])},set:function(t){r[3]=l(t)}});var o="";Object.defineProperty(this,"FT",{enumerable:!0,configurable:!1,get:function(){return o},set:function(t){switch(t){case"/Btn":case"/Tx":case"/Ch":case"/Sig":o=t;break;default:throw new Error('Invalid value "'+t+'" for attribute FT supplied.')}}});var s=null;Object.defineProperty(this,"T",{enumerable:!0,configurable:!1,get:function(){if(!s||s.length<1){if(this instanceof W)return;s="FieldObject"+t.FieldNum++}return"("+i(s)+")"},set:function(t){s=t.toString()}}),Object.defineProperty(this,"fieldName",{configurable:!0,enumerable:!0,get:function(){return s},set:function(t){s=t}});var u="helvetica";Object.defineProperty(this,"fontName",{enumerable:!0,configurable:!0,get:function(){return u},set:function(t){u=t}});var c="normal";Object.defineProperty(this,"fontStyle",{enumerable:!0,configurable:!0,get:function(){return c},set:function(t){c=t}});var h=0;Object.defineProperty(this,"fontSize",{enumerable:!0,configurable:!0,get:function(){return f(h)},set:function(t){h=l(t)}});var p=50;Object.defineProperty(this,"maxFontSize",{enumerable:!0,configurable:!0,get:function(){return f(p)},set:function(t){p=l(t)}});var d="black";Object.defineProperty(this,"color",{enumerable:!0,configurable:!0,get:function(){return d},set:function(t){d=t}});var g="/F1 0 Tf 0 g";Object.defineProperty(this,"DA",{enumerable:!0,configurable:!1,get:function(){if(!(!g||this instanceof W||this instanceof G))return E(g)},set:function(t){t=t.toString(),g=t}});var b=null;Object.defineProperty(this,"DV",{enumerable:!1,configurable:!1,get:function(){if(b)return this instanceof U==0?E(b):b},set:function(t){t=t.toString(),b=this instanceof U==0?"("===t.substr(0,1)?a(t.substr(1,t.length-2)):a(t):t}}),Object.defineProperty(this,"defaultValue",{enumerable:!0,configurable:!0,get:function(){return this instanceof U==1?a(b.substr(1,b.length-1)):b},set:function(t){t=t.toString(),b=this instanceof U==1?"/"+t:t}});var w=null;Object.defineProperty(this,"V",{enumerable:!1,configurable:!1,get:function(){if(w)return this instanceof U==0?E(w):w},set:function(t){t=t.toString(),w=this instanceof U==0?"("===t.substr(0,1)?a(t.substr(1,t.length-2)):a(t):t}}),Object.defineProperty(this,"value",{enumerable:!0,configurable:!0,get:function(){return this instanceof U==1?a(w.substr(1,w.length-1)):w},set:function(t){t=t.toString(),w=this instanceof U==1?"/"+t:t}}),Object.defineProperty(this,"hasAnnotation",{enumerable:!0,configurable:!0,get:function(){return this.Rect}}),Object.defineProperty(this,"Type",{enumerable:!0,configurable:!1,get:function(){return this.hasAnnotation?"/Annot":null}}),Object.defineProperty(this,"Subtype",{enumerable:!0,configurable:!1,get:function(){return this.hasAnnotation?"/Widget":null}});var x,N=!1;Object.defineProperty(this,"hasAppearanceStream",{enumerable:!0,configurable:!0,writeable:!0,get:function(){return N},set:function(t){t=Boolean(t),N=t}}),Object.defineProperty(this,"page",{enumerable:!0,configurable:!0,writeable:!0,get:function(){if(x)return x},set:function(t){x=t}}),Object.defineProperty(this,"readOnly",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,1))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,1):this.Ff=y(this.Ff,1)}}),Object.defineProperty(this,"required",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,2))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,2):this.Ff=y(this.Ff,2)}}),Object.defineProperty(this,"noExport",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,3))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,3):this.Ff=y(this.Ff,3)}});var L=null;Object.defineProperty(this,"Q",{enumerable:!0,configurable:!1,get:function(){if(null!==L)return L},set:function(t){if(-1===[0,1,2].indexOf(t))throw new Error('Invalid value "'+t+'" for attribute Q supplied.');L=t}}),Object.defineProperty(this,"textAlign",{get:function(){var t="left";switch(L){case 0:default:t="left";break;case 1:t="center";break;case 2:t="right"}return t},configurable:!0,enumerable:!0,set:function(t){switch(t){case"right":case 2:L=2;break;case"center":case 1:L=1;break;case"left":case 0:default:L=0}}})};c(O,j);var M=function(){O.call(this),this.FT="/Ch",this.V="()",this.fontName="zapfdingbats";var t=0;Object.defineProperty(this,"TI",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"topIndex",{enumerable:!0,configurable:!0,get:function(){return t},set:function(e){t=e}});var e=[];Object.defineProperty(this,"Opt",{enumerable:!0,configurable:!1,get:function(){return T(e)},set:function(t){var n,r;r=[],"string"==typeof(n=t)&&(r=function(t,e,n){n||(n=1);for(var r,i=[];r=e.exec(t);)i.push(r[n]);return i}(n,/\((.*?)\)/g)),e=r}}),this.getOptions=function(){return e},this.setOptions=function(t){e=t,this.sort&&e.sort()},this.addOption=function(t){t=(t=t||"").toString(),e.push(t),this.sort&&e.sort()},this.removeOption=function(t,n){for(n=n||!1,t=(t=t||"").toString();-1!==e.indexOf(t)&&(e.splice(e.indexOf(t),1),!1!==n););},Object.defineProperty(this,"combo",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,18))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,18):this.Ff=y(this.Ff,18)}}),Object.defineProperty(this,"edit",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,19))},set:function(t){!0===this.combo&&(!0===Boolean(t)?this.Ff=v(this.Ff,19):this.Ff=y(this.Ff,19))}}),Object.defineProperty(this,"sort",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,20))},set:function(t){!0===Boolean(t)?(this.Ff=v(this.Ff,20),e.sort()):this.Ff=y(this.Ff,20)}}),Object.defineProperty(this,"multiSelect",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,22))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,22):this.Ff=y(this.Ff,22)}}),Object.defineProperty(this,"doNotSpellCheck",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,23))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,23):this.Ff=y(this.Ff,23)}}),Object.defineProperty(this,"commitOnSelChange",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,27))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,27):this.Ff=y(this.Ff,27)}}),this.hasAppearanceStream=!1};c(M,O);var q=function(){M.call(this),this.fontName="helvetica",this.combo=!1};c(q,M);var D=function(){q.call(this),this.combo=!0};c(D,q);var R=function(){D.call(this),this.edit=!0};c(R,D);var U=function(){O.call(this),this.FT="/Btn",Object.defineProperty(this,"noToggleToOff",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,15))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,15):this.Ff=y(this.Ff,15)}}),Object.defineProperty(this,"radio",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,16))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,16):this.Ff=y(this.Ff,16)}}),Object.defineProperty(this,"pushButton",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,17))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,17):this.Ff=y(this.Ff,17)}}),Object.defineProperty(this,"radioIsUnison",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,26))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,26):this.Ff=y(this.Ff,26)}});var t,e={};Object.defineProperty(this,"MK",{enumerable:!1,configurable:!1,get:function(){if(0!==Object.keys(e).length){var t,n=[];for(t in n.push("<<"),e)n.push("/"+t+" ("+e[t]+")");return n.push(">>"),n.join("\n")}},set:function(t){"object"===o(t)&&(e=t)}}),Object.defineProperty(this,"caption",{enumerable:!0,configurable:!0,get:function(){return e.CA||""},set:function(t){"string"==typeof t&&(e.CA=t)}}),Object.defineProperty(this,"AS",{enumerable:!1,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"appearanceState",{enumerable:!0,configurable:!0,get:function(){return t.substr(1,t.length-1)},set:function(e){t="/"+e}})};c(U,O);var z=function(){U.call(this),this.pushButton=!0};c(z,U);var H=function(){U.call(this),this.radio=!0,this.pushButton=!1;var t=[];Object.defineProperty(this,"Kids",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=void 0!==e?e:[]}})};c(H,U);var W=function(){var t,e;O.call(this),Object.defineProperty(this,"Parent",{enumerable:!1,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"optionName",{enumerable:!1,configurable:!0,get:function(){return e},set:function(t){e=t}});var n,r={};Object.defineProperty(this,"MK",{enumerable:!1,configurable:!1,get:function(){var t,e=[];for(t in e.push("<<"),r)e.push("/"+t+" ("+r[t]+")");return e.push(">>"),e.join("\n")},set:function(t){"object"===o(t)&&(r=t)}}),Object.defineProperty(this,"caption",{enumerable:!0,configurable:!0,get:function(){return r.CA||""},set:function(t){"string"==typeof t&&(r.CA=t)}}),Object.defineProperty(this,"AS",{enumerable:!1,configurable:!1,get:function(){return n},set:function(t){n=t}}),Object.defineProperty(this,"appearanceState",{enumerable:!0,configurable:!0,get:function(){return n.substr(1,n.length-1)},set:function(t){n="/"+t}}),this.optionName=name,this.caption="l",this.appearanceState="Off",this._AppearanceType=X.RadioButton.Circle,this.appearanceStreamContent=this._AppearanceType.createAppearanceStream(name)};c(W,O),H.prototype.setAppearance=function(t){if(!("createAppearanceStream"in t)||!("getCA"in t))throw new Error("Couldn't assign Appearance to RadioButton. Appearance was Invalid!");for(var e in this.Kids)if(this.Kids.hasOwnProperty(e)){var n=this.Kids[e];n.appearanceStreamContent=t.createAppearanceStream(n.optionName),n.caption=t.getCA()}},H.prototype.createOption=function(t){this.Kids.length;var e=new W;return e.Parent=this,e.optionName=t,this.Kids.push(e),J.call(this,e),e};var V=function(){U.call(this),this.fontName="zapfdingbats",this.caption="3",this.appearanceState="On",this.value="On",this.textAlign="center",this.appearanceStreamContent=X.CheckBox.createAppearanceStream()};c(V,U);var G=function(){O.call(this),this.FT="/Tx",Object.defineProperty(this,"multiline",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,13))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,13):this.Ff=y(this.Ff,13)}}),Object.defineProperty(this,"fileSelect",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,21))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,21):this.Ff=y(this.Ff,21)}}),Object.defineProperty(this,"doNotSpellCheck",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,23))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,23):this.Ff=y(this.Ff,23)}}),Object.defineProperty(this,"doNotScroll",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,24))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,24):this.Ff=y(this.Ff,24)}}),Object.defineProperty(this,"comb",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,25))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,25):this.Ff=y(this.Ff,25)}}),Object.defineProperty(this,"richText",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,26))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,26):this.Ff=y(this.Ff,26)}});var t=null;Object.defineProperty(this,"MaxLen",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"maxLength",{enumerable:!0,configurable:!0,get:function(){return t},set:function(e){Number.isInteger(e)&&(t=e)}}),Object.defineProperty(this,"hasAppearanceStream",{enumerable:!0,configurable:!0,get:function(){return this.V||this.DV}})};c(G,O);var Y=function(){G.call(this),Object.defineProperty(this,"password",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,14))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,14):this.Ff=y(this.Ff,14)}}),this.password=!0};c(Y,G);var X={CheckBox:{createAppearanceStream:function(){return{N:{On:X.CheckBox.YesNormal},D:{On:X.CheckBox.YesPushDown,Off:X.CheckBox.OffPushDown}}},YesPushDown:function(t){var e=h(t),r=[],i=n.internal.getFont(t.fontName,t.fontStyle).id,o=n.__private__.encodeColorString(t.color),a=x(t,t.caption);return r.push("0.749023 g"),r.push("0 0 "+s(X.internal.getWidth(t))+" "+s(X.internal.getHeight(t))+" re"),r.push("f"),r.push("BMC"),r.push("q"),r.push("0 0 1 rg"),r.push("/"+i+" "+s(a.fontSize)+" Tf "+o),r.push("BT"),r.push(a.text),r.push("ET"),r.push("Q"),r.push("EMC"),e.stream=r.join("\n"),e},YesNormal:function(t){var e=h(t),r=n.internal.getFont(t.fontName,t.fontStyle).id,i=n.__private__.encodeColorString(t.color),o=[],a=X.internal.getHeight(t),u=X.internal.getWidth(t),c=x(t,t.caption);return o.push("1 g"),o.push("0 0 "+s(u)+" "+s(a)+" re"),o.push("f"),o.push("q"),o.push("0 0 1 rg"),o.push("0 0 "+s(u-1)+" "+s(a-1)+" re"),o.push("W"),o.push("n"),o.push("0 g"),o.push("BT"),o.push("/"+r+" "+s(c.fontSize)+" Tf "+i),o.push(c.text),o.push("ET"),o.push("Q"),e.stream=o.join("\n"),e},OffPushDown:function(t){var e=h(t),n=[];return n.push("0.749023 g"),n.push("0 0 "+s(X.internal.getWidth(t))+" "+s(X.internal.getHeight(t))+" re"),n.push("f"),e.stream=n.join("\n"),e}},RadioButton:{Circle:{createAppearanceStream:function(t){var e={D:{Off:X.RadioButton.Circle.OffPushDown},N:{}};return e.N[t]=X.RadioButton.Circle.YesNormal,e.D[t]=X.RadioButton.Circle.YesPushDown,e},getCA:function(){return"l"},YesNormal:function(t){var e=h(t),n=[],r=X.internal.getWidth(t)<=X.internal.getHeight(t)?X.internal.getWidth(t)/4:X.internal.getHeight(t)/4;r=Number((.9*r).toFixed(5));var i=X.internal.Bezier_C,o=Number((r*i).toFixed(5));return n.push("q"),n.push("1 0 0 1 "+u(X.internal.getWidth(t)/2)+" "+u(X.internal.getHeight(t)/2)+" cm"),n.push(r+" 0 m"),n.push(r+" "+o+" "+o+" "+r+" 0 "+r+" c"),n.push("-"+o+" "+r+" -"+r+" "+o+" -"+r+" 0 c"),n.push("-"+r+" -"+o+" -"+o+" -"+r+" 0 -"+r+" c"),n.push(o+" -"+r+" "+r+" -"+o+" "+r+" 0 c"),n.push("f"),n.push("Q"),e.stream=n.join("\n"),e},YesPushDown:function(t){var e=h(t),n=[],r=X.internal.getWidth(t)<=X.internal.getHeight(t)?X.internal.getWidth(t)/4:X.internal.getHeight(t)/4,i=(r=Number((.9*r).toFixed(5)),Number((2*r).toFixed(5))),o=Number((i*X.internal.Bezier_C).toFixed(5)),a=Number((r*X.internal.Bezier_C).toFixed(5));return n.push("0.749023 g"),n.push("q"),n.push("1 0 0 1 "+u(X.internal.getWidth(t)/2)+" "+u(X.internal.getHeight(t)/2)+" cm"),n.push(i+" 0 m"),n.push(i+" "+o+" "+o+" "+i+" 0 "+i+" c"),n.push("-"+o+" "+i+" -"+i+" "+o+" -"+i+" 0 c"),n.push("-"+i+" -"+o+" -"+o+" -"+i+" 0 -"+i+" c"),n.push(o+" -"+i+" "+i+" -"+o+" "+i+" 0 c"),n.push("f"),n.push("Q"),n.push("0 g"),n.push("q"),n.push("1 0 0 1 "+u(X.internal.getWidth(t)/2)+" "+u(X.internal.getHeight(t)/2)+" cm"),n.push(r+" 0 m"),n.push(r+" "+a+" "+a+" "+r+" 0 "+r+" c"),n.push("-"+a+" "+r+" -"+r+" "+a+" -"+r+" 0 c"),n.push("-"+r+" -"+a+" -"+a+" -"+r+" 0 -"+r+" c"),n.push(a+" -"+r+" "+r+" -"+a+" "+r+" 0 c"),n.push("f"),n.push("Q"),e.stream=n.join("\n"),e},OffPushDown:function(t){var e=h(t),n=[],r=X.internal.getWidth(t)<=X.internal.getHeight(t)?X.internal.getWidth(t)/4:X.internal.getHeight(t)/4,i=(r=Number((.9*r).toFixed(5)),Number((2*r).toFixed(5))),o=Number((i*X.internal.Bezier_C).toFixed(5));return n.push("0.749023 g"),n.push("q"),n.push("1 0 0 1 "+u(X.internal.getWidth(t)/2)+" "+u(X.internal.getHeight(t)/2)+" cm"),n.push(i+" 0 m"),n.push(i+" "+o+" "+o+" "+i+" 0 "+i+" c"),n.push("-"+o+" "+i+" -"+i+" "+o+" -"+i+" 0 c"),n.push("-"+i+" -"+o+" -"+o+" -"+i+" 0 -"+i+" c"),n.push(o+" -"+i+" "+i+" -"+o+" "+i+" 0 c"),n.push("f"),n.push("Q"),e.stream=n.join("\n"),e}},Cross:{createAppearanceStream:function(t){var e={D:{Off:X.RadioButton.Cross.OffPushDown},N:{}};return e.N[t]=X.RadioButton.Cross.YesNormal,e.D[t]=X.RadioButton.Cross.YesPushDown,e},getCA:function(){return"8"},YesNormal:function(t){var e=h(t),n=[],r=X.internal.calculateCross(t);return n.push("q"),n.push("1 1 "+s(X.internal.getWidth(t)-2)+" "+s(X.internal.getHeight(t)-2)+" re"),n.push("W"),n.push("n"),n.push(s(r.x1.x)+" "+s(r.x1.y)+" m"),n.push(s(r.x2.x)+" "+s(r.x2.y)+" l"),n.push(s(r.x4.x)+" "+s(r.x4.y)+" m"),n.push(s(r.x3.x)+" "+s(r.x3.y)+" l"),n.push("s"),n.push("Q"),e.stream=n.join("\n"),e},YesPushDown:function(t){var e=h(t),n=X.internal.calculateCross(t),r=[];return r.push("0.749023 g"),r.push("0 0 "+s(X.internal.getWidth(t))+" "+s(X.internal.getHeight(t))+" re"),r.push("f"),r.push("q"),r.push("1 1 "+s(X.internal.getWidth(t)-2)+" "+s(X.internal.getHeight(t)-2)+" re"),r.push("W"),r.push("n"),r.push(s(n.x1.x)+" "+s(n.x1.y)+" m"),r.push(s(n.x2.x)+" "+s(n.x2.y)+" l"),r.push(s(n.x4.x)+" "+s(n.x4.y)+" m"),r.push(s(n.x3.x)+" "+s(n.x3.y)+" l"),r.push("s"),r.push("Q"),e.stream=r.join("\n"),e},OffPushDown:function(t){var e=h(t),n=[];return n.push("0.749023 g"),n.push("0 0 "+s(X.internal.getWidth(t))+" "+s(X.internal.getHeight(t))+" re"),n.push("f"),e.stream=n.join("\n"),e}}},createDefaultAppearanceStream:function(t){var e=n.internal.getFont(t.fontName,t.fontStyle).id,r=n.__private__.encodeColorString(t.color);return"/"+e+" "+t.fontSize+" Tf "+r}};X.internal={Bezier_C:.551915024494,calculateCross:function(t){var e=X.internal.getWidth(t),n=X.internal.getHeight(t),r=Math.min(e,n);return{x1:{x:(e-r)/2,y:(n-r)/2+r},x2:{x:(e-r)/2+r,y:(n-r)/2},x3:{x:(e-r)/2,y:(n-r)/2},x4:{x:(e-r)/2+r,y:(n-r)/2+r}}}},X.internal.getWidth=function(t){var e=0;return"object"===o(t)&&(e=l(t.Rect[2])),e},X.internal.getHeight=function(t){var e=0;return"object"===o(t)&&(e=l(t.Rect[3])),e};var J=t.addField=function(t){if(F.call(this),!(t instanceof O))throw new Error("Invalid argument passed to jsPDF.addField.");return function(t){n.internal.acroformPlugin.printedOut&&(n.internal.acroformPlugin.printedOut=!1,n.internal.acroformPlugin.acroFormDictionaryRoot=null),n.internal.acroformPlugin.acroFormDictionaryRoot||F.call(n),n.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(t)}.call(this,t),t.page=n.internal.getCurrentPageInfo().pageNumber,this};t.addButton=function(t){if(t instanceof U==0)throw new Error("Invalid argument passed to jsPDF.addButton.");return J.call(this,t)},t.addTextField=function(t){if(t instanceof G==0)throw new Error("Invalid argument passed to jsPDF.addTextField.");return J.call(this,t)},t.addChoiceField=function(t){if(t instanceof M==0)throw new Error("Invalid argument passed to jsPDF.addChoiceField.");return J.call(this,t)},"object"==o(e)&&void 0===e.ChoiceField&&void 0===e.ListBox&&void 0===e.ComboBox&&void 0===e.EditBox&&void 0===e.Button&&void 0===e.PushButton&&void 0===e.RadioButton&&void 0===e.CheckBox&&void 0===e.TextField&&void 0===e.PasswordField?(e.ChoiceField=M,e.ListBox=q,e.ComboBox=D,e.EditBox=R,e.Button=U,e.PushButton=z,e.RadioButton=H,e.CheckBox=V,e.TextField=G,e.PasswordField=Y,e.AcroForm={Appearance:X}):console.warn("AcroForm-Classes are not populated into global-namespace, because the class-Names exist already."),t.AcroFormChoiceField=M,t.AcroFormListBox=q,t.AcroFormComboBox=D,t.AcroFormEditBox=R,t.AcroFormButton=U,t.AcroFormPushButton=z,t.AcroFormRadioButton=H,t.AcroFormCheckBox=V,t.AcroFormTextField=G,t.AcroFormPasswordField=Y,t.AcroFormAppearance=X,t.AcroForm={ChoiceField:M,ListBox:q,ComboBox:D,EditBox:R,Button:U,PushButton:z,RadioButton:H,CheckBox:V,TextField:G,PasswordField:Y,Appearance:X}})((window.tmp=gt).API,"undefined"!=typeof window&&window||void 0!==r&&r),
/** @license
   * jsPDF addImage plugin
   * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/
   *               2013 Chris Dowling, https://github.com/gingerchris
   *               2013 Trinh Ho, https://github.com/ineedfat
   *               2013 Edwin Alejandro Perez, https://github.com/eaparango
   *               2013 Norah Smith, https://github.com/burnburnrocket
   *               2014 Diego Casorran, https://github.com/diegocr
   *               2014 James Robb, https://github.com/jamesbrobb
   *
   * 
   */
function(t){var e="addImage_",n={PNG:[[137,80,78,71]],TIFF:[[77,77,0,42],[73,73,42,0]],JPEG:[[255,216,255,224,void 0,void 0,74,70,73,70,0],[255,216,255,225,void 0,void 0,69,120,105,102,0,0]],JPEG2000:[[0,0,0,12,106,80,32,32]],GIF87a:[[71,73,70,56,55,97]],GIF89a:[[71,73,70,56,57,97]],BMP:[[66,77],[66,65],[67,73],[67,80],[73,67],[80,84]]},r=t.getImageFileTypeByImageData=function(e,r){var i,o;r=r||"UNKNOWN";var a,s,u,c="UNKNOWN";for(u in t.isArrayBufferView(e)&&(e=t.arrayBufferToBinaryString(e)),n)for(a=n[u],i=0;i<a.length;i+=1){for(s=!0,o=0;o<a[i].length;o+=1)if(void 0!==a[i][o]&&a[i][o]!==e.charCodeAt(o)){s=!1;break}if(!0===s){c=u;break}}return"UNKNOWN"===c&&"UNKNOWN"!==r&&(console.warn('FileType of Image not recognized. Processing image as "'+r+'".'),c=r),c},i=function t(e){for(var n=this.internal.newObject(),r=this.internal.write,i=this.internal.putStream,o=(0,this.internal.getFilters)();-1!==o.indexOf("FlateEncode");)o.splice(o.indexOf("FlateEncode"),1);e.n=n;var a=[];if(a.push({key:"Type",value:"/XObject"}),a.push({key:"Subtype",value:"/Image"}),a.push({key:"Width",value:e.w}),a.push({key:"Height",value:e.h}),e.cs===this.color_spaces.INDEXED?a.push({key:"ColorSpace",value:"[/Indexed /DeviceRGB "+(e.pal.length/3-1)+" "+("smask"in e?n+2:n+1)+" 0 R]"}):(a.push({key:"ColorSpace",value:"/"+e.cs}),e.cs===this.color_spaces.DEVICE_CMYK&&a.push({key:"Decode",value:"[1 0 1 0 1 0 1 0]"})),a.push({key:"BitsPerComponent",value:e.bpc}),"dp"in e&&a.push({key:"DecodeParms",value:"<<"+e.dp+">>"}),"trns"in e&&e.trns.constructor==Array){for(var s="",u=0,c=e.trns.length;u<c;u++)s+=e.trns[u]+" "+e.trns[u]+" ";a.push({key:"Mask",value:"["+s+"]"})}"smask"in e&&a.push({key:"SMask",value:n+1+" 0 R"});var l=void 0!==e.f?["/"+e.f]:void 0;if(i({data:e.data,additionalKeyValues:a,alreadyAppliedFilters:l}),r("endobj"),"smask"in e){var f="/Predictor "+e.p+" /Colors 1 /BitsPerComponent "+e.bpc+" /Columns "+e.w,h={w:e.w,h:e.h,cs:"DeviceGray",bpc:e.bpc,dp:f,data:e.smask};"f"in e&&(h.f=e.f),t.call(this,h)}e.cs===this.color_spaces.INDEXED&&(this.internal.newObject(),i({data:this.arrayBufferToBinaryString(new Uint8Array(e.pal))}),r("endobj"))},a=function(){var t=this.internal.collections[e+"images"];for(var n in t)i.call(this,t[n])},s=function(){var t,n=this.internal.collections[e+"images"],r=this.internal.write;for(var i in n)r("/I"+(t=n[i]).i,t.n,"0","R")},u=function(e){return"function"==typeof t["process"+e.toUpperCase()]},c=function(t){return"object"===o(t)&&1===t.nodeType},l=function(e,n){if("IMG"===e.nodeName&&e.hasAttribute("src")){var r=""+e.getAttribute("src");if(0===r.indexOf("data:image/"))return unescape(r);var i=t.loadFile(r);if(void 0!==i)return btoa(i)}if("CANVAS"===e.nodeName){var o=e;return e.toDataURL("image/jpeg",1)}(o=document.createElement("canvas")).width=e.clientWidth||e.width,o.height=e.clientHeight||e.height;var a=o.getContext("2d");if(!a)throw"addImage requires canvas to be supported by browser.";return a.drawImage(e,0,0,o.width,o.height),o.toDataURL("png"==(""+n).toLowerCase()?"image/png":"image/jpeg")},f=function(t,e){var n;if(e)for(var r in e)if(t===e[r].alias){n=e[r];break}return n};t.color_spaces={DEVICE_RGB:"DeviceRGB",DEVICE_GRAY:"DeviceGray",DEVICE_CMYK:"DeviceCMYK",CAL_GREY:"CalGray",CAL_RGB:"CalRGB",LAB:"Lab",ICC_BASED:"ICCBased",INDEXED:"Indexed",PATTERN:"Pattern",SEPARATION:"Separation",DEVICE_N:"DeviceN"},t.decode={DCT_DECODE:"DCTDecode",FLATE_DECODE:"FlateDecode",LZW_DECODE:"LZWDecode",JPX_DECODE:"JPXDecode",JBIG2_DECODE:"JBIG2Decode",ASCII85_DECODE:"ASCII85Decode",ASCII_HEX_DECODE:"ASCIIHexDecode",RUN_LENGTH_DECODE:"RunLengthDecode",CCITT_FAX_DECODE:"CCITTFaxDecode"},t.image_compression={NONE:"NONE",FAST:"FAST",MEDIUM:"MEDIUM",SLOW:"SLOW"},t.sHashCode=function(t){var e,n=0;if(0===(t=t||"").length)return n;for(e=0;e<t.length;e++)n=(n<<5)-n+t.charCodeAt(e),n|=0;return n},t.isString=function(t){return"string"==typeof t},t.validateStringAsBase64=function(t){(t=t||"").toString().trim();var e=!0;return 0===t.length&&(e=!1),t.length%4!=0&&(e=!1),!1===/^[A-Za-z0-9+\/]+$/.test(t.substr(0,t.length-2))&&(e=!1),!1===/^[A-Za-z0-9\/][A-Za-z0-9+\/]|[A-Za-z0-9+\/]=|==$/.test(t.substr(-2))&&(e=!1),e},t.extractInfoFromBase64DataURI=function(t){return/^data:([\w]+?\/([\w]+?));\S*;*base64,(.+)$/g.exec(t)},t.extractImageFromDataUrl=function(t){var e=(t=t||"").split("base64,"),n=null;if(2===e.length){var r=/^data:(\w*\/\w*);*(charset=[\w=-]*)*;*$/.exec(e[0]);Array.isArray(r)&&(n={mimeType:r[1],charset:r[2],data:e[1]})}return n},t.supportsArrayBuffer=function(){return"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array},t.isArrayBuffer=function(t){return!!this.supportsArrayBuffer()&&t instanceof ArrayBuffer},t.isArrayBufferView=function(t){return!!this.supportsArrayBuffer()&&"undefined"!=typeof Uint32Array&&(t instanceof Int8Array||t instanceof Uint8Array||"undefined"!=typeof Uint8ClampedArray&&t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)},t.binaryStringToUint8Array=function(t){for(var e=t.length,n=new Uint8Array(e),r=0;r<e;r++)n[r]=t.charCodeAt(r);return n},t.arrayBufferToBinaryString=function(t){if("function"==typeof atob)return atob(this.arrayBufferToBase64(t))},t.arrayBufferToBase64=function(t){for(var e,n="",r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=new Uint8Array(t),o=i.byteLength,a=o%3,s=o-a,u=0;u<s;u+=3)n+=r[(16515072&(e=i[u]<<16|i[u+1]<<8|i[u+2]))>>18]+r[(258048&e)>>12]+r[(4032&e)>>6]+r[63&e];return 1==a?n+=r[(252&(e=i[s]))>>2]+r[(3&e)<<4]+"==":2==a&&(n+=r[(64512&(e=i[s]<<8|i[s+1]))>>10]+r[(1008&e)>>4]+r[(15&e)<<2]+"="),n},t.createImageInfo=function(t,e,n,r,i,o,a,s,u,c,l,f,h){var p={alias:s,w:e,h:n,cs:r,bpc:i,i:a,data:t};return o&&(p.f=o),u&&(p.dp=u),c&&(p.trns=c),l&&(p.pal=l),f&&(p.smask=f),h&&(p.p=h),p},t.addImage=function(n,r,i,h,p,d,g,m,v){var y="";if("string"!=typeof r){var b=d;d=p,p=h,h=i,i=r,r=b}if("object"===o(n)&&!c(n)&&"imageData"in n){var w=n;n=w.imageData,r=w.format||r||"UNKNOWN",i=w.x||i||0,h=w.y||h||0,p=w.w||p,d=w.h||d,g=w.alias||g,m=w.compression||m,v=w.rotation||w.angle||v}var x=this.internal.getFilters();if(void 0===m&&-1!==x.indexOf("FlateEncode")&&(m="SLOW"),"string"==typeof n&&(n=unescape(n)),isNaN(i)||isNaN(h))throw console.error("jsPDF.addImage: Invalid coordinates",arguments),new Error("Invalid coordinates passed to jsPDF.addImage");var N,L,A,S,_,C,k,P=function(){var t=this.internal.collections[e+"images"];return t||(this.internal.collections[e+"images"]=t={},this.internal.events.subscribe("putResources",a),this.internal.events.subscribe("putXobjectDict",s)),t}.call(this);if(!((N=f(n,P))||(c(n)&&(n=l(n,r)),(null==(k=g)||0===k.length)&&(g="string"==typeof(C=n)?t.sHashCode(C):t.isArrayBufferView(C)?t.sHashCode(t.arrayBufferToBinaryString(C)):null),N=f(g,P)))){if(this.isString(n)&&(""!==(y=this.convertStringToImageData(n))||void 0!==(y=t.loadFile(n)))&&(n=y),r=this.getImageFileTypeByImageData(n,r),!u(r))throw new Error("addImage does not support files of type '"+r+"', please ensure that a plugin for '"+r+"' support is added.");if(this.supportsArrayBuffer()&&(n instanceof Uint8Array||(L=n,n=this.binaryStringToUint8Array(n))),!(N=this["process"+r.toUpperCase()](n,(_=0,(S=P)&&(_=Object.keys?Object.keys(S).length:function(t){var e=0;for(var n in t)t.hasOwnProperty(n)&&e++;return e}(S)),_),g,((A=m)&&"string"==typeof A&&(A=A.toUpperCase()),A in t.image_compression?A:t.image_compression.NONE),L)))throw new Error("An unknown error occurred whilst processing the image")}return function(t,e,n,r,i,o,a,s){var u=function(t,e,n){return t||e||(e=t=-96),t<0&&(t=-1*n.w*72/t/this.internal.scaleFactor),e<0&&(e=-1*n.h*72/e/this.internal.scaleFactor),0===t&&(t=e*n.w/n.h),0===e&&(e=t*n.h/n.w),[t,e]}.call(this,n,r,i),c=this.internal.getCoordinateString,l=this.internal.getVerticalCoordinateString;if(n=u[0],r=u[1],a[o]=i,s){s*=Math.PI/180;var f=Math.cos(s),h=Math.sin(s),p=function(t){return t.toFixed(4)},d=[p(f),p(h),p(-1*h),p(f),0,0,"cm"]}this.internal.write("q"),s?(this.internal.write([1,"0","0",1,c(t),l(e+r),"cm"].join(" ")),this.internal.write(d.join(" ")),this.internal.write([c(n),"0","0",c(r),"0","0","cm"].join(" "))):this.internal.write([c(n),"0","0",c(r),c(t),l(e+r),"cm"].join(" ")),this.internal.write("/I"+i.i+" Do"),this.internal.write("Q")}.call(this,i,h,p,d,N,N.i,P,v),this},t.convertStringToImageData=function(e){var n,r="";if(this.isString(e)){var i;n=null!==(i=this.extractImageFromDataUrl(e))?i.data:e;try{r=atob(n)}catch(e){throw t.validateStringAsBase64(n)?new Error("atob-Error in jsPDF.convertStringToImageData "+e.message):new Error("Supplied Data is not a valid base64-String jsPDF.convertStringToImageData ")}}return r};var h=function(t,e){return t.subarray(e,e+5)};t.processJPEG=function(t,e,n,i,o,a){var s,u=this.decode.DCT_DECODE;if(!this.isString(t)&&!this.isArrayBuffer(t)&&!this.isArrayBufferView(t))return null;if(this.isString(t)&&(s=function(t){var e;if("JPEG"!==r(t))throw new Error("getJpegSize requires a binary string jpeg file");for(var n=256*t.charCodeAt(4)+t.charCodeAt(5),i=4,o=t.length;i<o;){if(i+=n,255!==t.charCodeAt(i))throw new Error("getJpegSize could not find the size of the image");if(192===t.charCodeAt(i+1)||193===t.charCodeAt(i+1)||194===t.charCodeAt(i+1)||195===t.charCodeAt(i+1)||196===t.charCodeAt(i+1)||197===t.charCodeAt(i+1)||198===t.charCodeAt(i+1)||199===t.charCodeAt(i+1))return e=256*t.charCodeAt(i+5)+t.charCodeAt(i+6),[256*t.charCodeAt(i+7)+t.charCodeAt(i+8),e,t.charCodeAt(i+9)];i+=2,n=256*t.charCodeAt(i)+t.charCodeAt(i+1)}}(t)),this.isArrayBuffer(t)&&(t=new Uint8Array(t)),this.isArrayBufferView(t)&&(s=function(t){if(65496!=(t[0]<<8|t[1]))throw new Error("Supplied data is not a JPEG");for(var e,n=t.length,r=(t[4]<<8)+t[5],i=4;i<n;){if(r=((e=h(t,i+=r))[2]<<8)+e[3],(192===e[1]||194===e[1])&&255===e[0]&&7<r)return{width:((e=h(t,i+5))[2]<<8)+e[3],height:(e[0]<<8)+e[1],numcomponents:e[4]};i+=2}throw new Error("getJpegSizeFromBytes could not find the size of the image")}(t),t=o||this.arrayBufferToBinaryString(t)),void 0===a)switch(s.numcomponents){case 1:a=this.color_spaces.DEVICE_GRAY;break;case 4:a=this.color_spaces.DEVICE_CMYK;break;default:case 3:a=this.color_spaces.DEVICE_RGB}return this.createImageInfo(t,s.width,s.height,a,8,u,e,n)},t.processJPG=function(){return this.processJPEG.apply(this,arguments)},t.getImageProperties=function(e){var n,r,i="";if(c(e)&&(e=l(e)),this.isString(e)&&(""!==(i=this.convertStringToImageData(e))||void 0!==(i=t.loadFile(e)))&&(e=i),r=this.getImageFileTypeByImageData(e),!u(r))throw new Error("addImage does not support files of type '"+r+"', please ensure that a plugin for '"+r+"' support is added.");if(this.supportsArrayBuffer()&&(e instanceof Uint8Array||(e=this.binaryStringToUint8Array(e))),!(n=this["process"+r.toUpperCase()](e)))throw new Error("An unknown error occurred whilst processing the image");return{fileType:r,width:n.w,height:n.h,colorSpace:n.cs,compressionMode:n.f,bitsPerComponent:n.bpc}}}(gt.API),
/**
   * @license
   * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */
s=gt.API,gt.API.events.push(["addPage",function(t){this.internal.getPageInfo(t.pageNumber).pageContext.annotations=[]}]),s.events.push(["putPage",function(t){for(var e=this.internal.getPageInfoByObjId(t.objId),n=t.pageContext.annotations,r=function(t){if(void 0!==t&&""!=t)return!0},i=!1,o=0;o<n.length&&!i;o++)switch((u=n[o]).type){case"link":if(r(u.options.url)||r(u.options.pageNumber)){i=!0;break}case"reference":case"text":case"freetext":i=!0}if(0!=i){this.internal.write("/Annots ["),this.internal.pageSize.height;var a=this.internal.getCoordinateString,s=this.internal.getVerticalCoordinateString;for(o=0;o<n.length;o++){var u;switch((u=n[o]).type){case"reference":this.internal.write(" "+u.object.objId+" 0 R ");break;case"text":var c=this.internal.newAdditionalObject(),l=this.internal.newAdditionalObject(),f=u.title||"Note";m="<</Type /Annot /Subtype /Text "+(p="/Rect ["+a(u.bounds.x)+" "+s(u.bounds.y+u.bounds.h)+" "+a(u.bounds.x+u.bounds.w)+" "+s(u.bounds.y)+"] ")+"/Contents ("+u.contents+")",m+=" /Popup "+l.objId+" 0 R",m+=" /P "+e.objId+" 0 R",m+=" /T ("+f+") >>",c.content=m;var h=c.objId+" 0 R";m="<</Type /Annot /Subtype /Popup "+(p="/Rect ["+a(u.bounds.x+30)+" "+s(u.bounds.y+u.bounds.h)+" "+a(u.bounds.x+u.bounds.w+30)+" "+s(u.bounds.y)+"] ")+" /Parent "+h,u.open&&(m+=" /Open true"),m+=" >>",l.content=m,this.internal.write(c.objId,"0 R",l.objId,"0 R");break;case"freetext":var p="/Rect ["+a(u.bounds.x)+" "+s(u.bounds.y)+" "+a(u.bounds.x+u.bounds.w)+" "+s(u.bounds.y+u.bounds.h)+"] ",d=u.color||"#000000";m="<</Type /Annot /Subtype /FreeText "+p+"/Contents ("+u.contents+")",m+=" /DS(font: Helvetica,sans-serif 12.0pt; text-align:left; color:#"+d+")",m+=" /Border [0 0 0]",m+=" >>",this.internal.write(m);break;case"link":if(u.options.name){var g=this.annotations._nameMap[u.options.name];u.options.pageNumber=g.page,u.options.top=g.y}else u.options.top||(u.options.top=0);p="/Rect ["+a(u.x)+" "+s(u.y)+" "+a(u.x+u.w)+" "+s(u.y+u.h)+"] ";var m="";if(u.options.url)m="<</Type /Annot /Subtype /Link "+p+"/Border [0 0 0] /A <</S /URI /URI ("+u.options.url+") >>";else if(u.options.pageNumber)switch(m="<</Type /Annot /Subtype /Link "+p+"/Border [0 0 0] /Dest ["+this.internal.getPageInfo(u.options.pageNumber).objId+" 0 R",u.options.magFactor=u.options.magFactor||"XYZ",u.options.magFactor){case"Fit":m+=" /Fit]";break;case"FitH":m+=" /FitH "+u.options.top+"]";break;case"FitV":u.options.left=u.options.left||0,m+=" /FitV "+u.options.left+"]";break;case"XYZ":default:var v=s(u.options.top);u.options.left=u.options.left||0,void 0===u.options.zoom&&(u.options.zoom=0),m+=" /XYZ "+u.options.left+" "+v+" "+u.options.zoom+"]"}""!=m&&(m+=" >>",this.internal.write(m))}}this.internal.write("]")}}]),s.createAnnotation=function(t){var e=this.internal.getCurrentPageInfo();switch(t.type){case"link":this.link(t.bounds.x,t.bounds.y,t.bounds.w,t.bounds.h,t);break;case"text":case"freetext":e.pageContext.annotations.push(t)}},s.link=function(t,e,n,r,i){this.internal.getCurrentPageInfo().pageContext.annotations.push({x:t,y:e,w:n,h:r,options:i,type:"link"})},s.textWithLink=function(t,e,n,r){var i=this.getTextWidth(t),o=this.internal.getLineHeight()/this.internal.scaleFactor;return this.text(t,e,n),n+=.2*o,this.link(e,n-o,i,o,r),i},s.getTextWidth=function(t){var e=this.internal.getFontSize();return this.getStringUnitWidth(t)*e/this.internal.scaleFactor},
/**
   * @license
   * Copyright (c) 2017 Aras Abbasi 
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */
function(t){var e={1569:[65152],1570:[65153,65154],1571:[65155,65156],1572:[65157,65158],1573:[65159,65160],1574:[65161,65162,65163,65164],1575:[65165,65166],1576:[65167,65168,65169,65170],1577:[65171,65172],1578:[65173,65174,65175,65176],1579:[65177,65178,65179,65180],1580:[65181,65182,65183,65184],1581:[65185,65186,65187,65188],1582:[65189,65190,65191,65192],1583:[65193,65194],1584:[65195,65196],1585:[65197,65198],1586:[65199,65200],1587:[65201,65202,65203,65204],1588:[65205,65206,65207,65208],1589:[65209,65210,65211,65212],1590:[65213,65214,65215,65216],1591:[65217,65218,65219,65220],1592:[65221,65222,65223,65224],1593:[65225,65226,65227,65228],1594:[65229,65230,65231,65232],1601:[65233,65234,65235,65236],1602:[65237,65238,65239,65240],1603:[65241,65242,65243,65244],1604:[65245,65246,65247,65248],1605:[65249,65250,65251,65252],1606:[65253,65254,65255,65256],1607:[65257,65258,65259,65260],1608:[65261,65262],1609:[65263,65264,64488,64489],1610:[65265,65266,65267,65268],1649:[64336,64337],1655:[64477],1657:[64358,64359,64360,64361],1658:[64350,64351,64352,64353],1659:[64338,64339,64340,64341],1662:[64342,64343,64344,64345],1663:[64354,64355,64356,64357],1664:[64346,64347,64348,64349],1667:[64374,64375,64376,64377],1668:[64370,64371,64372,64373],1670:[64378,64379,64380,64381],1671:[64382,64383,64384,64385],1672:[64392,64393],1676:[64388,64389],1677:[64386,64387],1678:[64390,64391],1681:[64396,64397],1688:[64394,64395],1700:[64362,64363,64364,64365],1702:[64366,64367,64368,64369],1705:[64398,64399,64400,64401],1709:[64467,64468,64469,64470],1711:[64402,64403,64404,64405],1713:[64410,64411,64412,64413],1715:[64406,64407,64408,64409],1722:[64414,64415],1723:[64416,64417,64418,64419],1726:[64426,64427,64428,64429],1728:[64420,64421],1729:[64422,64423,64424,64425],1733:[64480,64481],1734:[64473,64474],1735:[64471,64472],1736:[64475,64476],1737:[64482,64483],1739:[64478,64479],1740:[64508,64509,64510,64511],1744:[64484,64485,64486,64487],1746:[64430,64431],1747:[64432,64433]},n={65247:{65154:65269,65156:65271,65160:65273,65166:65275},65248:{65154:65270,65156:65272,65160:65274,65166:65276},65165:{65247:{65248:{65258:65010}}},1617:{1612:64606,1613:64607,1614:64608,1615:64609,1616:64610}},r={1612:64606,1613:64607,1614:64608,1615:64609,1616:64610},i=[1570,1571,1573,1575];t.__arabicParser__={};var o=t.__arabicParser__.isInArabicSubstitutionA=function(t){return void 0!==e[t.charCodeAt(0)]},a=t.__arabicParser__.isArabicLetter=function(t){return"string"==typeof t&&/^[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFF]+$/.test(t)},s=t.__arabicParser__.isArabicEndLetter=function(t){return a(t)&&o(t)&&e[t.charCodeAt(0)].length<=2},u=t.__arabicParser__.isArabicAlfLetter=function(t){return a(t)&&0<=i.indexOf(t.charCodeAt(0))},c=(t.__arabicParser__.arabicLetterHasIsolatedForm=function(t){return a(t)&&o(t)&&1<=e[t.charCodeAt(0)].length},t.__arabicParser__.arabicLetterHasFinalForm=function(t){return a(t)&&o(t)&&2<=e[t.charCodeAt(0)].length}),l=(t.__arabicParser__.arabicLetterHasInitialForm=function(t){return a(t)&&o(t)&&3<=e[t.charCodeAt(0)].length},t.__arabicParser__.arabicLetterHasMedialForm=function(t){return a(t)&&o(t)&&4==e[t.charCodeAt(0)].length}),f=t.__arabicParser__.resolveLigatures=function(t){var e=0,r=n,i=0,o="",a=0;for(e=0;e<t.length;e+=1)void 0!==r[t.charCodeAt(e)]?(a++,"number"==typeof(r=r[t.charCodeAt(e)])&&(i=-1!==(i=h(t.charAt(e),t.charAt(e-a),t.charAt(e+1)))?i:0,o+=String.fromCharCode(r),r=n,a=0),e===t.length-1&&(r=n,o+=t.charAt(e-(a-1)),e-=a-1,a=0)):(r=n,o+=t.charAt(e-a),e-=a,a=0);return o},h=(t.__arabicParser__.isArabicDiacritic=function(t){return void 0!==t&&void 0!==r[t.charCodeAt(0)]},t.__arabicParser__.getCorrectForm=function(t,e,n){return a(t)?!1===o(t)?-1:!c(t)||!a(e)&&!a(n)||!a(n)&&s(e)||s(t)&&!a(e)||s(t)&&u(e)||s(t)&&s(e)?0:l(t)&&a(e)&&!s(e)&&a(n)&&c(n)?3:s(t)||!a(n)?1:2:-1}),p=t.__arabicParser__.processArabic=t.processArabic=function(t){var n=0,r=0,i=0,o="",s="",u="",c=(t=t||"").split("\\s+"),l=[];for(n=0;n<c.length;n+=1){for(l.push(""),r=0;r<c[n].length;r+=1)o=c[n][r],s=c[n][r-1],u=c[n][r+1],a(o)?(i=h(o,s,u),l[n]+=-1!==i?String.fromCharCode(e[o.charCodeAt(0)][i]):o):l[n]+=o;l[n]=f(l[n])}return l.join(" ")};t.events.push(["preProcessText",function(t){var e=t.text,n=(t.x,t.y,t.options||{}),r=(t.mutex,n.lang,[]);if("[object Array]"===Object.prototype.toString.call(e)){var i=0;for(r=[],i=0;i<e.length;i+=1)"[object Array]"===Object.prototype.toString.call(e[i])?r.push([p(e[i][0]),e[i][1],e[i][2]]):r.push([p(e[i])]);t.text=r}else t.text=p(e)}])}(gt.API),gt.API.autoPrint=function(t){var e;switch((t=t||{}).variant=t.variant||"non-conform",t.variant){case"javascript":this.addJS("print({});");break;case"non-conform":default:this.internal.events.subscribe("postPutResources",(function(){e=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/S /Named"),this.internal.out("/Type /Action"),this.internal.out("/N /Print"),this.internal.out(">>"),this.internal.out("endobj")})),this.internal.events.subscribe("putCatalog",(function(){this.internal.out("/OpenAction "+e+" 0 R")}))}return this},
/**
   * @license
   * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */
u=gt.API,(c=function(){var t=void 0;Object.defineProperty(this,"pdf",{get:function(){return t},set:function(e){t=e}});var e=150;Object.defineProperty(this,"width",{get:function(){return e},set:function(t){e=isNaN(t)||!1===Number.isInteger(t)||t<0?150:t,this.getContext("2d").pageWrapXEnabled&&(this.getContext("2d").pageWrapX=e+1)}});var n=300;Object.defineProperty(this,"height",{get:function(){return n},set:function(t){n=isNaN(t)||!1===Number.isInteger(t)||t<0?300:t,this.getContext("2d").pageWrapYEnabled&&(this.getContext("2d").pageWrapY=n+1)}});var r=[];Object.defineProperty(this,"childNodes",{get:function(){return r},set:function(t){r=t}});var i={};Object.defineProperty(this,"style",{get:function(){return i},set:function(t){i=t}}),Object.defineProperty(this,"parentNode",{get:function(){return!1}})}).prototype.getContext=function(t,e){var n;if("2d"!==(t=t||"2d"))return null;for(n in e)this.pdf.context2d.hasOwnProperty(n)&&(this.pdf.context2d[n]=e[n]);return(this.pdf.context2d._canvas=this).pdf.context2d},c.prototype.toDataURL=function(){throw new Error("toDataURL is not implemented.")},u.events.push(["initialized",function(){this.canvas=new c,this.canvas.pdf=this}]),
/** 
   * @license
   * ====================================================================
   * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com
   *               2013 Eduardo Menezes de Morais, eduardo.morais@usp.br
   *               2013 Lee Driscoll, https://github.com/lsdriscoll
   *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
   *               2014 James Hall, james@parall.ax
   *               2014 Diego Casorran, https://github.com/diegocr
   *
   * 
   * ====================================================================
   */
l=gt.API,h={x:void 0,y:void 0,w:void 0,h:void 0,ln:void 0},p=1,d=function(t,e,n,r,i){h={x:t,y:e,w:n,h:r,ln:i}},g=function(){return h},m={left:0,top:0,bottom:0},l.setHeaderFunction=function(t){f=t},l.getTextDimensions=function(t,e){var n=this.table_font_size||this.internal.getFontSize(),r=(this.internal.getFont().fontStyle,(e=e||{}).scaleFactor||this.internal.scaleFactor),i=0,o=0,a=0;if("string"==typeof t)0!=(i=this.getStringUnitWidth(t)*n)&&(o=1);else{if("[object Array]"!==Object.prototype.toString.call(t))throw new Error("getTextDimensions expects text-parameter to be of type String or an Array of Strings.");for(var s=0;s<t.length;s++)i<(a=this.getStringUnitWidth(t[s])*n)&&(i=a);0!==i&&(o=t.length)}return{w:i/=r,h:Math.max((o*n*this.getLineHeightFactor()-n*(this.getLineHeightFactor()-1))/r,0)}},l.cellAddPage=function(){var t=this.margins||m;this.addPage(),d(t.left,t.top,void 0,void 0),p+=1},l.cellInitialize=function(){h={x:void 0,y:void 0,w:void 0,h:void 0,ln:void 0},p=1},l.cell=function(t,e,n,r,i,o,a){var s=g(),u=!1;if(void 0!==s.ln)if(s.ln===o)t=s.x+s.w,e=s.y;else{var c=this.margins||m;s.y+s.h+r+13>=this.internal.pageSize.getHeight()-c.bottom&&(this.cellAddPage(),u=!0,this.printHeaders&&this.tableHeaderRow&&this.printHeaderRow(o,!0)),e=g().y+g().h,u&&(e=23)}if(void 0!==i[0])if(this.printingHeaderRow?this.rect(t,e,n,r,"FD"):this.rect(t,e,n,r),"right"===a){i instanceof Array||(i=[i]);for(var l=0;l<i.length;l++){var f=i[l],h=this.getStringUnitWidth(f)*this.internal.getFontSize()/this.internal.scaleFactor;this.text(f,t+n-h-3,e+this.internal.getLineHeight()*(l+1))}}else this.text(i,t+3,e+this.internal.getLineHeight());return d(t,e,n,r,o),this},l.arrayMax=function(t,e){var n,r,i,o=t[0];for(n=0,r=t.length;n<r;n+=1)i=t[n],e?-1===e(o,i)&&(o=i):o<i&&(o=i);return o},l.table=function(t,e,n,r,i){if(!n)throw"No data for PDF table";var o,a,s,u,c,f,d,g,v,y,b=[],w=[],x={},N={},L=[],A=[],S=!1,_=!0,C=12,k=m;if(k.width=this.internal.pageSize.getWidth(),i&&(!0===i.autoSize&&(S=!0),!1===i.printHeaders&&(_=!1),i.fontSize&&(C=i.fontSize),i.css&&void 0!==i.css["font-size"]&&(C=16*i.css["font-size"]),i.margins&&(k=i.margins)),this.lnMod=0,h={x:void 0,y:void 0,w:void 0,h:void 0,ln:void 0},p=1,this.printHeaders=_,this.margins=k,this.setFontSize(C),this.table_font_size=C,null==r)b=Object.keys(n[0]);else if(r[0]&&"string"!=typeof r[0])for(a=0,s=r.length;a<s;a+=1)o=r[a],b.push(o.name),w.push(o.prompt),N[o.name]=o.width*(19.049976/25.4);else b=r;if(S)for(y=function(t){return t[o]},a=0,s=b.length;a<s;a+=1){for(x[o=b[a]]=n.map(y),L.push(this.getTextDimensions(w[a]||o,{scaleFactor:1}).w),d=0,u=(f=x[o]).length;d<u;d+=1)c=f[d],L.push(this.getTextDimensions(c,{scaleFactor:1}).w);N[o]=l.arrayMax(L),L=[]}if(_){var P=this.calculateLineHeight(b,N,w.length?w:b);for(a=0,s=b.length;a<s;a+=1)o=b[a],A.push([t,e,N[o],P,String(w.length?w[a]:o)]);this.setTableHeaderRow(A),this.printHeaderRow(1,!1)}for(a=0,s=n.length;a<s;a+=1)for(g=n[a],P=this.calculateLineHeight(b,N,g),d=0,v=b.length;d<v;d+=1)o=b[d],this.cell(t,e,N[o],P,g[o],a+2,o.align);return this.lastCellPos=h,this.table_x=t,this.table_y=e,this},l.calculateLineHeight=function(t,e,n){for(var r,i=0,o=0;o<t.length;o++){n[r=t[o]]=this.splitTextToSize(String(n[r]),e[r]-3);var a=this.internal.getLineHeight()*n[r].length+3;i<a&&(i=a)}return i},l.setTableHeaderRow=function(t){this.tableHeaderRow=t},l.printHeaderRow=function(t,e){if(!this.tableHeaderRow)throw"Property tableHeaderRow does not exist.";var n,r,i,o;if(this.printingHeaderRow=!0,void 0!==f){var a=f(this,p);d(a[0],a[1],a[2],a[3],-1)}this.setFontStyle("bold");var s=[];for(i=0,o=this.tableHeaderRow.length;i<o;i+=1)this.setFillColor(200,200,200),n=this.tableHeaderRow[i],e&&(this.margins.top=13,n[1]=this.margins&&this.margins.top||0,s.push(n)),r=[].concat(n),this.cell.apply(this,r.concat(t));0<s.length&&this.setTableHeaderRow(s),this.setFontStyle("normal"),this.printingHeaderRow=!1},function(t,e){var n,r,i,a,s,u=function(t){return t=t||{},this.isStrokeTransparent=t.isStrokeTransparent||!1,this.strokeOpacity=t.strokeOpacity||1,this.strokeStyle=t.strokeStyle||"#000000",this.fillStyle=t.fillStyle||"#000000",this.isFillTransparent=t.isFillTransparent||!1,this.fillOpacity=t.fillOpacity||1,this.font=t.font||"10px sans-serif",this.textBaseline=t.textBaseline||"alphabetic",this.textAlign=t.textAlign||"left",this.lineWidth=t.lineWidth||1,this.lineJoin=t.lineJoin||"miter",this.lineCap=t.lineCap||"butt",this.path=t.path||[],this.transform=void 0!==t.transform?t.transform.clone():new B,this.globalCompositeOperation=t.globalCompositeOperation||"normal",this.globalAlpha=t.globalAlpha||1,this.clip_path=t.clip_path||[],this.currentPoint=t.currentPoint||new j,this.miterLimit=t.miterLimit||10,this.lastPoint=t.lastPoint||new j,this.ignoreClearRect="boolean"!=typeof t.ignoreClearRect||t.ignoreClearRect,this};t.events.push(["initialized",function(){this.context2d=new c(this),n=this.internal.f2,this.internal.f3,r=this.internal.getCoordinateString,i=this.internal.getVerticalCoordinateString,a=this.internal.getHorizontalCoordinate,s=this.internal.getVerticalCoordinate}]);var c=function(t){Object.defineProperty(this,"canvas",{get:function(){return{parentNode:!1,style:!1}}}),Object.defineProperty(this,"pdf",{get:function(){return t}});var e=!1;Object.defineProperty(this,"pageWrapXEnabled",{get:function(){return e},set:function(t){e=Boolean(t)}});var n=!1;Object.defineProperty(this,"pageWrapYEnabled",{get:function(){return n},set:function(t){n=Boolean(t)}});var r=0;Object.defineProperty(this,"posX",{get:function(){return r},set:function(t){isNaN(t)||(r=t)}});var i=0;Object.defineProperty(this,"posY",{get:function(){return i},set:function(t){isNaN(t)||(i=t)}});var o=!1;Object.defineProperty(this,"autoPaging",{get:function(){return o},set:function(t){o=Boolean(t)}});var a=0;Object.defineProperty(this,"lastBreak",{get:function(){return a},set:function(t){a=t}});var s=[];Object.defineProperty(this,"pageBreaks",{get:function(){return s},set:function(t){s=t}});var c=new u;Object.defineProperty(this,"ctx",{get:function(){return c},set:function(t){t instanceof u&&(c=t)}}),Object.defineProperty(this,"path",{get:function(){return c.path},set:function(t){c.path=t}});var f=[];Object.defineProperty(this,"ctxStack",{get:function(){return f},set:function(t){f=t}}),Object.defineProperty(this,"fillStyle",{get:function(){return this.ctx.fillStyle},set:function(t){var e;e=l(t),this.ctx.fillStyle=e.style,this.ctx.isFillTransparent=0===e.a,this.ctx.fillOpacity=e.a,this.pdf.setFillColor(e.r,e.g,e.b,{a:e.a}),this.pdf.setTextColor(e.r,e.g,e.b,{a:e.a})}}),Object.defineProperty(this,"strokeStyle",{get:function(){return this.ctx.strokeStyle},set:function(t){var e=l(t);this.ctx.strokeStyle=e.style,this.ctx.isStrokeTransparent=0===e.a,this.ctx.strokeOpacity=e.a,0===e.a?this.pdf.setDrawColor(255,255,255):(e.a,this.pdf.setDrawColor(e.r,e.g,e.b))}}),Object.defineProperty(this,"lineCap",{get:function(){return this.ctx.lineCap},set:function(t){-1!==["butt","round","square"].indexOf(t)&&(this.ctx.lineCap=t,this.pdf.setLineCap(t))}}),Object.defineProperty(this,"lineWidth",{get:function(){return this.ctx.lineWidth},set:function(t){isNaN(t)||(this.ctx.lineWidth=t,this.pdf.setLineWidth(t))}}),Object.defineProperty(this,"lineJoin",{get:function(){return this.ctx.lineJoin},set:function(t){-1!==["bevel","round","miter"].indexOf(t)&&(this.ctx.lineJoin=t,this.pdf.setLineJoin(t))}}),Object.defineProperty(this,"miterLimit",{get:function(){return this.ctx.miterLimit},set:function(t){isNaN(t)||(this.ctx.miterLimit=t,this.pdf.setMiterLimit(t))}}),Object.defineProperty(this,"textBaseline",{get:function(){return this.ctx.textBaseline},set:function(t){this.ctx.textBaseline=t}}),Object.defineProperty(this,"textAlign",{get:function(){return this.ctx.textAlign},set:function(t){-1!==["right","end","center","left","start"].indexOf(t)&&(this.ctx.textAlign=t)}}),Object.defineProperty(this,"font",{get:function(){return this.ctx.font},set:function(t){var e;if(this.ctx.font=t,null!==(e=/^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-_,\"\'\sa-z]+?)\s*$/i.exec(t))){var n=e[1],r=(e[2],e[3]),i=e[4],o=e[5],a=e[6];i="px"===o?Math.floor(parseFloat(i)):"em"===o?Math.floor(parseFloat(i)*this.pdf.getFontSize()):Math.floor(parseFloat(i)),this.pdf.setFontSize(i);var s="";("bold"===r||700<=parseInt(r,10)||"bold"===n)&&(s="bold"),"italic"===n&&(s+="italic"),0===s.length&&(s="normal");for(var u="",c=a.toLowerCase().replace(/"|'/g,"").split(/\s*,\s*/),l={arial:"Helvetica",verdana:"Helvetica",helvetica:"Helvetica","sans-serif":"Helvetica",fixed:"Courier",monospace:"Courier",terminal:"Courier",courier:"Courier",times:"Times",cursive:"Times",fantasy:"Times",serif:"Times"},f=0;f<c.length;f++){if(void 0!==this.pdf.internal.getFont(c[f],s,{noFallback:!0,disableWarning:!0})){u=c[f];break}if("bolditalic"===s&&void 0!==this.pdf.internal.getFont(c[f],"bold",{noFallback:!0,disableWarning:!0}))u=c[f],s="bold";else if(void 0!==this.pdf.internal.getFont(c[f],"normal",{noFallback:!0,disableWarning:!0})){u=c[f],s="normal";break}}if(""===u)for(f=0;f<c.length;f++)if(l[c[f]]){u=l[c[f]];break}u=""===u?"Times":u,this.pdf.setFont(u,s)}}}),Object.defineProperty(this,"globalCompositeOperation",{get:function(){return this.ctx.globalCompositeOperation},set:function(t){this.ctx.globalCompositeOperation=t}}),Object.defineProperty(this,"globalAlpha",{get:function(){return this.ctx.globalAlpha},set:function(t){this.ctx.globalAlpha=t}}),Object.defineProperty(this,"ignoreClearRect",{get:function(){return this.ctx.ignoreClearRect},set:function(t){this.ctx.ignoreClearRect=Boolean(t)}})};c.prototype.fill=function(){m.call(this,"fill",!1)},c.prototype.stroke=function(){m.call(this,"stroke",!1)},c.prototype.beginPath=function(){this.path=[{type:"begin"}]},c.prototype.moveTo=function(t,e){if(isNaN(t)||isNaN(e))throw console.error("jsPDF.context2d.moveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.moveTo");var n=this.ctx.transform.applyToPoint(new j(t,e));this.path.push({type:"mt",x:n.x,y:n.y}),this.ctx.lastPoint=new j(t,e)},c.prototype.closePath=function(){var t=new j(0,0),e=0;for(e=this.path.length-1;-1!==e;e--)if("begin"===this.path[e].type&&"object"===o(this.path[e+1])&&"number"==typeof this.path[e+1].x){t=new j(this.path[e+1].x,this.path[e+1].y),this.path.push({type:"lt",x:t.x,y:t.y});break}"object"===o(this.path[e+2])&&"number"==typeof this.path[e+2].x&&this.path.push(JSON.parse(JSON.stringify(this.path[e+2]))),this.path.push({type:"close"}),this.ctx.lastPoint=new j(t.x,t.y)},c.prototype.lineTo=function(t,e){if(isNaN(t)||isNaN(e))throw console.error("jsPDF.context2d.lineTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.lineTo");var n=this.ctx.transform.applyToPoint(new j(t,e));this.path.push({type:"lt",x:n.x,y:n.y}),this.ctx.lastPoint=new j(n.x,n.y)},c.prototype.clip=function(){this.ctx.clip_path=JSON.parse(JSON.stringify(this.path)),m.call(this,null,!0)},c.prototype.quadraticCurveTo=function(t,e,n,r){if(isNaN(n)||isNaN(r)||isNaN(t)||isNaN(e))throw console.error("jsPDF.context2d.quadraticCurveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.quadraticCurveTo");var i=this.ctx.transform.applyToPoint(new j(n,r)),o=this.ctx.transform.applyToPoint(new j(t,e));this.path.push({type:"qct",x1:o.x,y1:o.y,x:i.x,y:i.y}),this.ctx.lastPoint=new j(i.x,i.y)},c.prototype.bezierCurveTo=function(t,e,n,r,i,o){if(isNaN(i)||isNaN(o)||isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw console.error("jsPDF.context2d.bezierCurveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.bezierCurveTo");var a=this.ctx.transform.applyToPoint(new j(i,o)),s=this.ctx.transform.applyToPoint(new j(t,e)),u=this.ctx.transform.applyToPoint(new j(n,r));this.path.push({type:"bct",x1:s.x,y1:s.y,x2:u.x,y2:u.y,x:a.x,y:a.y}),this.ctx.lastPoint=new j(a.x,a.y)},c.prototype.arc=function(t,e,n,r,i,o){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i))throw console.error("jsPDF.context2d.arc: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.arc");if(o=Boolean(o),!this.ctx.transform.isIdentity){var a=this.ctx.transform.applyToPoint(new j(t,e));t=a.x,e=a.y;var s=this.ctx.transform.applyToPoint(new j(0,n)),u=this.ctx.transform.applyToPoint(new j(0,0));n=Math.sqrt(Math.pow(s.x-u.x,2)+Math.pow(s.y-u.y,2))}Math.abs(i-r)>=2*Math.PI&&(r=0,i=2*Math.PI),this.path.push({type:"arc",x:t,y:e,radius:n,startAngle:r,endAngle:i,counterclockwise:o})},c.prototype.arcTo=function(t,e,n,r,i){throw new Error("arcTo not implemented.")},c.prototype.rect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw console.error("jsPDF.context2d.rect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.rect");this.moveTo(t,e),this.lineTo(t+n,e),this.lineTo(t+n,e+r),this.lineTo(t,e+r),this.lineTo(t,e),this.lineTo(t+n,e),this.lineTo(t,e)},c.prototype.fillRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw console.error("jsPDF.context2d.fillRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.fillRect");if(!f.call(this)){var i={};"butt"!==this.lineCap&&(i.lineCap=this.lineCap,this.lineCap="butt"),"miter"!==this.lineJoin&&(i.lineJoin=this.lineJoin,this.lineJoin="miter"),this.beginPath(),this.rect(t,e,n,r),this.fill(),i.hasOwnProperty("lineCap")&&(this.lineCap=i.lineCap),i.hasOwnProperty("lineJoin")&&(this.lineJoin=i.lineJoin)}},c.prototype.strokeRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw console.error("jsPDF.context2d.strokeRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.strokeRect");h.call(this)||(this.beginPath(),this.rect(t,e,n,r),this.stroke())},c.prototype.clearRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw console.error("jsPDF.context2d.clearRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.clearRect");this.ignoreClearRect||(this.fillStyle="#ffffff",this.fillRect(t,e,n,r))},c.prototype.save=function(t){t="boolean"!=typeof t||t;for(var e=this.pdf.internal.getCurrentPageInfo().pageNumber,n=0;n<this.pdf.internal.getNumberOfPages();n++)this.pdf.setPage(n+1),this.pdf.internal.out("q");if(this.pdf.setPage(e),t){this.ctx.fontSize=this.pdf.internal.getFontSize();var r=new u(this.ctx);this.ctxStack.push(this.ctx),this.ctx=r}},c.prototype.restore=function(t){t="boolean"!=typeof t||t;for(var e=this.pdf.internal.getCurrentPageInfo().pageNumber,n=0;n<this.pdf.internal.getNumberOfPages();n++)this.pdf.setPage(n+1),this.pdf.internal.out("Q");this.pdf.setPage(e),t&&0!==this.ctxStack.length&&(this.ctx=this.ctxStack.pop(),this.fillStyle=this.ctx.fillStyle,this.strokeStyle=this.ctx.strokeStyle,this.font=this.ctx.font,this.lineCap=this.ctx.lineCap,this.lineWidth=this.ctx.lineWidth,this.lineJoin=this.ctx.lineJoin)},c.prototype.toDataURL=function(){throw new Error("toDataUrl not implemented.")};var l=function(t){var e,n,r,i;if(!0===t.isCanvasGradient&&(t=t.getColor()),!t)return{r:0,g:0,b:0,a:0,style:t};if(/transparent|rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*0+\s*\)/.test(t))i=r=n=e=0;else{var o=/rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/.exec(t);if(null!==o)e=parseInt(o[1]),n=parseInt(o[2]),r=parseInt(o[3]),i=1;else if(null!==(o=/rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([\d\.]+)\s*\)/.exec(t)))e=parseInt(o[1]),n=parseInt(o[2]),r=parseInt(o[3]),i=parseFloat(o[4]);else{if(i=1,"string"==typeof t&&"#"!==t.charAt(0)){var a=new RGBColor(t);t=a.ok?a.toHex():"#000000"}4===t.length?(e=t.substring(1,2),e+=e,n=t.substring(2,3),n+=n,r=t.substring(3,4),r+=r):(e=t.substring(1,3),n=t.substring(3,5),r=t.substring(5,7)),e=parseInt(e,16),n=parseInt(n,16),r=parseInt(r,16)}}return{r:e,g:n,b:r,a:i,style:t}},f=function(){return this.ctx.isFillTransparent||0==this.globalAlpha},h=function(){return Boolean(this.ctx.isStrokeTransparent||0==this.globalAlpha)};c.prototype.fillText=function(t,e,n,r){if(isNaN(e)||isNaN(n)||"string"!=typeof t)throw console.error("jsPDF.context2d.fillText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.fillText");if(r=isNaN(r)?void 0:r,!f.call(this)){n=y.call(this,n);var i=P(this.ctx.transform.rotation),o=this.ctx.transform.scaleX;L.call(this,{text:t,x:e,y:n,scale:o,angle:i,align:this.textAlign,maxWidth:r})}},c.prototype.strokeText=function(t,e,n,r){if(isNaN(e)||isNaN(n)||"string"!=typeof t)throw console.error("jsPDF.context2d.strokeText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.strokeText");if(!h.call(this)){r=isNaN(r)?void 0:r,n=y.call(this,n);var i=P(this.ctx.transform.rotation),o=this.ctx.transform.scaleX;L.call(this,{text:t,x:e,y:n,scale:o,renderingMode:"stroke",angle:i,align:this.textAlign,maxWidth:r})}},c.prototype.measureText=function(t){if("string"!=typeof t)throw console.error("jsPDF.context2d.measureText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.measureText");var e=this.pdf,n=this.pdf.internal.scaleFactor,r=e.internal.getFontSize(),i=e.getStringUnitWidth(t)*r/e.internal.scaleFactor;return new function(t){var e=(t=t||{}).width||0;return Object.defineProperty(this,"width",{get:function(){return e}}),this}({width:i*=Math.round(96*n/72*1e4)/1e4})},c.prototype.scale=function(t,e){if(isNaN(t)||isNaN(e))throw console.error("jsPDF.context2d.scale: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.scale");var n=new B(t,0,0,e,0,0);this.ctx.transform=this.ctx.transform.multiply(n)},c.prototype.rotate=function(t){if(isNaN(t))throw console.error("jsPDF.context2d.rotate: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.rotate");var e=new B(Math.cos(t),Math.sin(t),-Math.sin(t),Math.cos(t),0,0);this.ctx.transform=this.ctx.transform.multiply(e)},c.prototype.translate=function(t,e){if(isNaN(t)||isNaN(e))throw console.error("jsPDF.context2d.translate: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.translate");var n=new B(1,0,0,1,t,e);this.ctx.transform=this.ctx.transform.multiply(n)},c.prototype.transform=function(t,e,n,r,i,o){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(o))throw console.error("jsPDF.context2d.transform: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.transform");var a=new B(t,e,n,r,i,o);this.ctx.transform=this.ctx.transform.multiply(a)},c.prototype.setTransform=function(t,e,n,r,i,o){t=isNaN(t)?1:t,e=isNaN(e)?0:e,n=isNaN(n)?0:n,r=isNaN(r)?1:r,i=isNaN(i)?0:i,o=isNaN(o)?0:o,this.ctx.transform=new B(t,e,n,r,i,o)},c.prototype.drawImage=function(t,e,n,r,i,o,a,s,u){var c=this.pdf.getImageProperties(t),l=1,f=1,h=1,d=1;void 0!==r&&void 0!==s&&(h=s/r,d=u/i,l=c.width/r*s/r,f=c.height/i*u/i),void 0===o&&(o=e,a=n,n=e=0),void 0!==r&&void 0===s&&(s=r,u=i),void 0===r&&void 0===s&&(s=c.width,u=c.height);var m=this.ctx.transform.decompose(),y=P(m.rotate.shx);m.scale.sx,m.scale.sy;for(var b,w=new B,x=((w=(w=(w=w.multiply(m.translate)).multiply(m.skew)).multiply(m.scale)).applyToPoint(new j(s,u)),w.applyToRectangle(new I(o-e*h,a-n*d,r*l,i*f))),N=p.call(this,x),L=[],A=0;A<N.length;A+=1)-1===L.indexOf(N[A])&&L.push(N[A]);if(L.sort(),this.autoPaging)for(var S=L[0],_=L[L.length-1],C=S;C<_+1;C++){if(this.pdf.setPage(C),0!==this.ctx.clip_path.length){var k=this.path;b=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=g(b,this.posX,-1*this.pdf.internal.pageSize.height*(C-1)+this.posY),v.call(this,"fill",!0),this.path=k}var F=JSON.parse(JSON.stringify(x));F=g([F],this.posX,-1*this.pdf.internal.pageSize.height*(C-1)+this.posY)[0],this.pdf.addImage(t,"jpg",F.x,F.y,F.w,F.h,null,null,y)}else this.pdf.addImage(t,"jpg",x.x,x.y,x.w,x.h,null,null,y)};var p=function(t,e,n){var r=[];switch(e=e||this.pdf.internal.pageSize.width,n=n||this.pdf.internal.pageSize.height,t.type){default:case"mt":case"lt":r.push(Math.floor((t.y+this.posY)/n)+1);break;case"arc":r.push(Math.floor((t.y+this.posY-t.radius)/n)+1),r.push(Math.floor((t.y+this.posY+t.radius)/n)+1);break;case"qct":var i=T(this.ctx.lastPoint.x,this.ctx.lastPoint.y,t.x1,t.y1,t.x,t.y);r.push(Math.floor(i.y/n)+1),r.push(Math.floor((i.y+i.h)/n)+1);break;case"bct":var o=E(this.ctx.lastPoint.x,this.ctx.lastPoint.y,t.x1,t.y1,t.x2,t.y2,t.x,t.y);r.push(Math.floor(o.y/n)+1),r.push(Math.floor((o.y+o.h)/n)+1);break;case"rect":r.push(Math.floor((t.y+this.posY)/n)+1),r.push(Math.floor((t.y+t.h+this.posY)/n)+1)}for(var a=0;a<r.length;a+=1)for(;this.pdf.internal.getNumberOfPages()<r[a];)d.call(this);return r},d=function(){var t=this.fillStyle,e=this.strokeStyle,n=this.font,r=this.lineCap,i=this.lineWidth,o=this.lineJoin;this.pdf.addPage(),this.fillStyle=t,this.strokeStyle=e,this.font=n,this.lineCap=r,this.lineWidth=i,this.lineJoin=o},g=function(t,e,n){for(var r=0;r<t.length;r++)switch(t[r].type){case"bct":t[r].x2+=e,t[r].y2+=n;case"qct":t[r].x1+=e,t[r].y1+=n;case"mt":case"lt":case"arc":default:t[r].x+=e,t[r].y+=n}return t},m=function(t,e){for(var n,r,i=this.fillStyle,o=this.strokeStyle,a=(this.font,this.lineCap),s=this.lineWidth,u=this.lineJoin,c=JSON.parse(JSON.stringify(this.path)),l=JSON.parse(JSON.stringify(this.path)),f=[],h=0;h<l.length;h++)if(void 0!==l[h].x)for(var m=p.call(this,l[h]),y=0;y<m.length;y+=1)-1===f.indexOf(m[y])&&f.push(m[y]);for(h=0;h<f.length;h++)for(;this.pdf.internal.getNumberOfPages()<f[h];)d.call(this);if(f.sort(),this.autoPaging){var b=f[0],w=f[f.length-1];for(h=b;h<w+1;h++){if(this.pdf.setPage(h),this.fillStyle=i,this.strokeStyle=o,this.lineCap=a,this.lineWidth=s,this.lineJoin=u,0!==this.ctx.clip_path.length){var x=this.path;n=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=g(n,this.posX,-1*this.pdf.internal.pageSize.height*(h-1)+this.posY),v.call(this,t,!0),this.path=x}r=JSON.parse(JSON.stringify(c)),this.path=g(r,this.posX,-1*this.pdf.internal.pageSize.height*(h-1)+this.posY),!1!==e&&0!==h||v.call(this,t,e)}}else v.call(this,t,e);this.path=c},v=function(t,e){if(("stroke"!==t||e||!h.call(this))&&("stroke"===t||e||!f.call(this))){var n=[];this.ctx.globalAlpha,this.ctx.fillOpacity<1&&this.ctx.fillOpacity;for(var r,i=this.path,o=0;o<i.length;o++){var a=i[o];switch(a.type){case"begin":n.push({begin:!0});break;case"close":n.push({close:!0});break;case"mt":n.push({start:a,deltas:[],abs:[]});break;case"lt":var s=n.length;if(!isNaN(i[o-1].x)){var u=[a.x-i[o-1].x,a.y-i[o-1].y];if(0<s)for(;0<=s;s--)if(!0!==n[s-1].close&&!0!==n[s-1].begin){n[s-1].deltas.push(u),n[s-1].abs.push(a);break}}break;case"bct":u=[a.x1-i[o-1].x,a.y1-i[o-1].y,a.x2-i[o-1].x,a.y2-i[o-1].y,a.x-i[o-1].x,a.y-i[o-1].y],n[n.length-1].deltas.push(u);break;case"qct":var c=i[o-1].x+2/3*(a.x1-i[o-1].x),l=i[o-1].y+2/3*(a.y1-i[o-1].y),p=a.x+2/3*(a.x1-a.x),d=a.y+2/3*(a.y1-a.y),g=a.x,m=a.y;u=[c-i[o-1].x,l-i[o-1].y,p-i[o-1].x,d-i[o-1].y,g-i[o-1].x,m-i[o-1].y],n[n.length-1].deltas.push(u);break;case"arc":n.push({deltas:[],abs:[],arc:!0}),Array.isArray(n[n.length-1].abs)&&n[n.length-1].abs.push(a)}}for(r=e?null:"stroke"===t?"stroke":"fill",o=0;o<n.length;o++){if(n[o].arc)for(var v=n[o].abs,y=0;y<v.length;y++){var N=v[y];if(void 0!==N.startAngle){var L=P(N.startAngle),_=P(N.endAngle),C=N.x,k=N.y;b.call(this,C,k,N.radius,L,_,N.counterclockwise,r,e)}else A.call(this,N.x,N.y)}n[o].arc||!0===n[o].close||!0===n[o].begin||(C=n[o].start.x,k=n[o].start.y,S.call(this,n[o].deltas,C,k,null,null))}r&&w.call(this,r),e&&x.call(this)}},y=function(t){var e=this.pdf.internal.getFontSize()/this.pdf.internal.scaleFactor,n=e*(this.pdf.internal.getLineHeightFactor()-1);switch(this.ctx.textBaseline){case"bottom":return t-n;case"top":return t+e-n;case"hanging":return t+e-2*n;case"middle":return t+e/2-n;case"ideographic":return t;case"alphabetic":default:return t}};c.prototype.createLinearGradient=function(){var t=function(){};return t.colorStops=[],t.addColorStop=function(t,e){this.colorStops.push([t,e])},t.getColor=function(){return 0===this.colorStops.length?"#000000":this.colorStops[0][1]},t.isCanvasGradient=!0,t},c.prototype.createPattern=function(){return this.createLinearGradient()},c.prototype.createRadialGradient=function(){return this.createLinearGradient()};var b=function(t,e,n,r,i,o,a,s){this.pdf.internal.scaleFactor;for(var u=F(r),c=F(i),l=C.call(this,n,u,c,o),f=0;f<l.length;f++){var h=l[f];0===f&&N.call(this,h.x1+t,h.y1+e),_.call(this,t,e,h.x2,h.y2,h.x3,h.y3,h.x4,h.y4)}s?x.call(this):w.call(this,a)},w=function(t){switch(t){case"stroke":this.pdf.internal.out("S");break;case"fill":this.pdf.internal.out("f")}},x=function(){this.pdf.clip()},N=function(t,e){this.pdf.internal.out(r(t)+" "+i(e)+" m")},L=function(t){var e;switch(t.align){case"right":case"end":e="right";break;case"center":e="center";break;case"left":case"start":default:e="left"}var n=this.ctx.transform.applyToPoint(new j(t.x,t.y)),r=this.ctx.transform.decompose(),i=new B;i=(i=(i=i.multiply(r.translate)).multiply(r.skew)).multiply(r.scale);for(var o,a=this.pdf.getTextDimensions(t.text),s=this.ctx.transform.applyToRectangle(new I(t.x,t.y,a.w,a.h)),u=i.applyToRectangle(new I(t.x,t.y-a.h,a.w,a.h)),c=p.call(this,u),l=[],f=0;f<c.length;f+=1)-1===l.indexOf(c[f])&&l.push(c[f]);if(l.sort(),!0===this.autoPaging)for(var h=l[0],d=l[l.length-1],m=h;m<d+1;m++){if(this.pdf.setPage(m),0!==this.ctx.clip_path.length){var y=this.path;o=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=g(o,this.posX,-1*this.pdf.internal.pageSize.height*(m-1)+this.posY),v.call(this,"fill",!0),this.path=y}var b=JSON.parse(JSON.stringify(s));if(b=g([b],this.posX,-1*this.pdf.internal.pageSize.height*(m-1)+this.posY)[0],.01<=t.scale){var w=this.pdf.internal.getFontSize();this.pdf.setFontSize(w*t.scale)}this.pdf.text(t.text,b.x,b.y,{angle:t.angle,align:e,renderingMode:t.renderingMode,maxWidth:t.maxWidth}),.01<=t.scale&&this.pdf.setFontSize(w)}else.01<=t.scale&&(w=this.pdf.internal.getFontSize(),this.pdf.setFontSize(w*t.scale)),this.pdf.text(t.text,n.x+this.posX,n.y+this.posY,{angle:t.angle,align:e,renderingMode:t.renderingMode,maxWidth:t.maxWidth}),.01<=t.scale&&this.pdf.setFontSize(w)},A=function(t,e,n,o){n=n||0,o=o||0,this.pdf.internal.out(r(t+n)+" "+i(e+o)+" l")},S=function(t,e,n){return this.pdf.lines(t,e,n,null,null)},_=function(t,e,r,i,o,u,c,l){this.pdf.internal.out([n(a(r+t)),n(s(i+e)),n(a(o+t)),n(s(u+e)),n(a(c+t)),n(s(l+e)),"c"].join(" "))},C=function(t,e,n,r){var i=2*Math.PI,o=e;(o<i||i<o)&&(o%=i);var a=n;(a<i||i<a)&&(a%=i);for(var s=[],u=Math.PI/2,c=r?-1:1,l=e,f=Math.min(i,Math.abs(a-o));1e-5<f;){var h=l+c*Math.min(f,u);s.push(k.call(this,t,l,h)),f-=Math.abs(h-l),l=h}return s},k=function(t,e,n){var r=(n-e)/2,i=t*Math.cos(r),o=t*Math.sin(r),a=i,s=-o,u=a*a+s*s,c=u+a*i+s*o,l=4/3*(Math.sqrt(2*u*c)-c)/(a*o-s*i),f=a-l*s,h=s+l*a,p=f,d=-h,g=r+e,m=Math.cos(g),v=Math.sin(g);return{x1:t*Math.cos(e),y1:t*Math.sin(e),x2:f*m-h*v,y2:f*v+h*m,x3:p*m-d*v,y3:p*v+d*m,x4:t*Math.cos(n),y4:t*Math.sin(n)}},P=function(t){return 180*t/Math.PI},F=function(t){return t*Math.PI/180},T=function(t,e,n,r,i,o){var a=t+.5*(n-t),s=e+.5*(r-e),u=i+.5*(n-i),c=o+.5*(r-o),l=Math.min(t,i,a,u),f=Math.max(t,i,a,u),h=Math.min(e,o,s,c),p=Math.max(e,o,s,c);return new I(l,h,f-l,p-h)},E=function(t,e,n,r,i,o,a,s){for(var u,c,l,f,h,p,d,g,m,v,y,b,w,x=n-t,N=r-e,L=i-n,A=o-r,S=a-i,_=s-o,C=0;C<41;C++)g=(p=(c=t+(u=C/40)*x)+u*((f=n+u*L)-c))+u*(f+u*(i+u*S-f)-p),m=(d=(l=e+u*N)+u*((h=r+u*A)-l))+u*(h+u*(o+u*_-h)-d),w=0==C?(b=v=g,y=m):(v=Math.min(v,g),y=Math.min(y,m),b=Math.max(b,g),Math.max(w,m));return new I(Math.round(v),Math.round(y),Math.round(b-v),Math.round(w-y))},j=function(t,e){var n=t||0;Object.defineProperty(this,"x",{enumerable:!0,get:function(){return n},set:function(t){isNaN(t)||(n=parseFloat(t))}});var r=e||0;Object.defineProperty(this,"y",{enumerable:!0,get:function(){return r},set:function(t){isNaN(t)||(r=parseFloat(t))}});var i="pt";return Object.defineProperty(this,"type",{enumerable:!0,get:function(){return i},set:function(t){i=t.toString()}}),this},I=function(t,e,n,r){j.call(this,t,e),this.type="rect";var i=n||0;Object.defineProperty(this,"w",{enumerable:!0,get:function(){return i},set:function(t){isNaN(t)||(i=parseFloat(t))}});var o=r||0;return Object.defineProperty(this,"h",{enumerable:!0,get:function(){return o},set:function(t){isNaN(t)||(o=parseFloat(t))}}),this},B=function(t,e,n,r,i,o){var a=[];return Object.defineProperty(this,"sx",{get:function(){return a[0]},set:function(t){a[0]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"shy",{get:function(){return a[1]},set:function(t){a[1]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"shx",{get:function(){return a[2]},set:function(t){a[2]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"sy",{get:function(){return a[3]},set:function(t){a[3]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"tx",{get:function(){return a[4]},set:function(t){a[4]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"ty",{get:function(){return a[5]},set:function(t){a[5]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"rotation",{get:function(){return Math.atan2(this.shx,this.sx)}}),Object.defineProperty(this,"scaleX",{get:function(){return this.decompose().scale.sx}}),Object.defineProperty(this,"scaleY",{get:function(){return this.decompose().scale.sy}}),Object.defineProperty(this,"isIdentity",{get:function(){return 1===this.sx&&0===this.shy&&0===this.shx&&1===this.sy&&0===this.tx&&0===this.ty}}),this.sx=isNaN(t)?1:t,this.shy=isNaN(e)?0:e,this.shx=isNaN(n)?0:n,this.sy=isNaN(r)?1:r,this.tx=isNaN(i)?0:i,this.ty=isNaN(o)?0:o,this};B.prototype.multiply=function(t){var e=t.sx*this.sx+t.shy*this.shx,n=t.sx*this.shy+t.shy*this.sy,r=t.shx*this.sx+t.sy*this.shx,i=t.shx*this.shy+t.sy*this.sy,o=t.tx*this.sx+t.ty*this.shx+this.tx,a=t.tx*this.shy+t.ty*this.sy+this.ty;return new B(e,n,r,i,o,a)},B.prototype.decompose=function(){var t=this.sx,e=this.shy,n=this.shx,r=this.sy,i=this.tx,o=this.ty,a=Math.sqrt(t*t+e*e),s=(t/=a)*n+(e/=a)*r;n-=t*s,r-=e*s;var u=Math.sqrt(n*n+r*r);return s/=u,t*(r/=u)<e*(n/=u)&&(t=-t,e=-e,s=-s,a=-a),{scale:new B(a,0,0,u,0,0),translate:new B(1,0,0,1,i,o),rotate:new B(t,e,-e,t,0,0),skew:new B(1,0,s,1,0,0)}},B.prototype.applyToPoint=function(t){var e=t.x*this.sx+t.y*this.shx+this.tx,n=t.x*this.shy+t.y*this.sy+this.ty;return new j(e,n)},B.prototype.applyToRectangle=function(t){var e=this.applyToPoint(t),n=this.applyToPoint(new j(t.x+t.w,t.y+t.h));return new I(e.x,e.y,n.x-e.x,n.y-e.y)},B.prototype.clone=function(){var t=this.sx,e=this.shy,n=this.shx,r=this.sy,i=this.tx,o=this.ty;return new B(t,e,n,r,i,o)}}(gt.API,"undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")()),v=gt.API,y=function(t){var e,n,r,i,o,a,s,u,c,l;for(/[^\x00-\xFF]/.test(t),n=[],r=0,i=(t+=e="\0\0\0\0".slice(t.length%4||4)).length;r<i;r+=4)0!==(o=(t.charCodeAt(r)<<24)+(t.charCodeAt(r+1)<<16)+(t.charCodeAt(r+2)<<8)+t.charCodeAt(r+3))?(a=(o=((o=((o=((o=(o-(l=o%85))/85)-(c=o%85))/85)-(u=o%85))/85)-(s=o%85))/85)%85,n.push(a+33,s+33,u+33,c+33,l+33)):n.push(122);return function(t,n){for(var r=e.length;0<r;r--)t.pop()}(n),String.fromCharCode.apply(String,n)+"~>"},b=function(t){var e,n,r,i,o,a=String,s="length",u="charCodeAt",c="slice",l="replace";for(t[c](-2),t=t[c](0,-2)[l](/\s/g,"")[l]("z","!!!!!"),r=[],i=0,o=(t+=e="uuuuu"[c](t[s]%5||5))[s];i<o;i+=5)n=52200625*(t[u](i)-33)+614125*(t[u](i+1)-33)+7225*(t[u](i+2)-33)+85*(t[u](i+3)-33)+(t[u](i+4)-33),r.push(255&n>>24,255&n>>16,255&n>>8,255&n);return function(t,n){for(var r=e[s];0<r;r--)t.pop()}(r),a.fromCharCode.apply(a,r)},w=function(t){for(var e="",n=0;n<t.length;n+=1)e+=("0"+t.charCodeAt(n).toString(16)).slice(-2);return e+">"},x=function(t){var e=new RegExp(/^([0-9A-Fa-f]{2})+$/);if(-1!==(t=t.replace(/\s/g,"")).indexOf(">")&&(t=t.substr(0,t.indexOf(">"))),t.length%2&&(t+="0"),!1===e.test(t))return"";for(var n="",r=0;r<t.length;r+=2)n+=String.fromCharCode("0x"+(t[r]+t[r+1]));return n},N=function(t,e){e=Object.assign({predictor:1,colors:1,bitsPerComponent:8,columns:1},e);for(var n,r,i=[],o=t.length;o--;)i[o]=t.charCodeAt(o);return n=v.adler32cs.from(t),(r=new Deflater(6)).append(new Uint8Array(i)),t=r.flush(),(i=new Uint8Array(t.length+6)).set(new Uint8Array([120,156])),i.set(t,2),i.set(new Uint8Array([255&n,n>>8&255,n>>16&255,n>>24&255]),t.length+2),String.fromCharCode.apply(null,i)},v.processDataByFilters=function(t,e){var n=0,r=t||"",i=[];for("string"==typeof(e=e||[])&&(e=[e]),n=0;n<e.length;n+=1)switch(e[n]){case"ASCII85Decode":case"/ASCII85Decode":r=b(r),i.push("/ASCII85Encode");break;case"ASCII85Encode":case"/ASCII85Encode":r=y(r),i.push("/ASCII85Decode");break;case"ASCIIHexDecode":case"/ASCIIHexDecode":r=x(r),i.push("/ASCIIHexEncode");break;case"ASCIIHexEncode":case"/ASCIIHexEncode":r=w(r),i.push("/ASCIIHexDecode");break;case"FlateEncode":case"/FlateEncode":r=N(r),i.push("/FlateDecode");break;default:throw'The filter: "'+e[n]+'" is not implemented'}return{data:r,reverseChain:i.reverse().join(" ")}},(L=gt.API).loadFile=function(t,e,n){var r;e=e||!0,n=n||function(){};try{r=function(t,e,n){var r=new XMLHttpRequest,i=[],o=0,a=function(t){var e=t.length,n=String.fromCharCode;for(o=0;o<e;o+=1)i.push(n(255&t.charCodeAt(o)));return i.join("")};if(r.open("GET",t,!e),r.overrideMimeType("text/plain; charset=x-user-defined"),!1===e&&(r.onload=function(){return a(this.responseText)}),r.send(null),200===r.status)return e?a(r.responseText):void 0;console.warn('Unable to load file "'+t+'"')}(t,e)}catch(t){r=void 0}return r},L.loadImageFile=L.loadFile,A=gt.API,S="undefined"!=typeof window&&window||void 0!==r&&r,_=function(t){var e=o(t);return"undefined"===e?"undefined":"string"===e||t instanceof String?"string":"number"===e||t instanceof Number?"number":"function"===e||t instanceof Function?"function":t&&t.constructor===Array?"array":t&&1===t.nodeType?"element":"object"===e?"object":"unknown"},C=function(t,e){var n=document.createElement(t);if(e.className&&(n.className=e.className),e.innerHTML){n.innerHTML=e.innerHTML;for(var r=n.getElementsByTagName("script"),i=r.length;0<i--;null)r[i].parentNode.removeChild(r[i])}for(var o in e.style)n.style[o]=e.style[o];return n},(((k=function t(e){var n=Object.assign(t.convert(i.resolve()),JSON.parse(JSON.stringify(t.template))),r=t.convert(i.resolve(),n);return(r=r.setProgress(1,t,1,[t])).set(e)}).prototype=Object.create(i.prototype)).constructor=k).convert=function(t,e){return t.__proto__=e||k.prototype,t},k.template={prop:{src:null,container:null,overlay:null,canvas:null,img:null,pdf:null,pageSize:null,callback:function(){}},progress:{val:0,state:null,n:0,stack:[]},opt:{filename:"file.pdf",margin:[0,0,0,0],enableLinks:!0,x:0,y:0,html2canvas:{},jsPDF:{}}},k.prototype.from=function(t,e){return this.then((function(){switch(e=e||function(t){switch(_(t)){case"string":return"string";case"element":return"canvas"===t.nodeName.toLowerCase?"canvas":"element";default:return"unknown"}}(t)){case"string":return this.set({src:C("div",{innerHTML:t})});case"element":return this.set({src:t});case"canvas":return this.set({canvas:t});case"img":return this.set({img:t});default:return this.error("Unknown source type.")}}))},k.prototype.to=function(t){switch(t){case"container":return this.toContainer();case"canvas":return this.toCanvas();case"img":return this.toImg();case"pdf":return this.toPdf();default:return this.error("Invalid target.")}},k.prototype.toContainer=function(){return this.thenList([function(){return this.prop.src||this.error("Cannot duplicate - no source HTML.")},function(){return this.prop.pageSize||this.setPageSize()}]).then((function(){var t={position:"relative",display:"inline-block",width:Math.max(this.prop.src.clientWidth,this.prop.src.scrollWidth,this.prop.src.offsetWidth)+"px",left:0,right:0,top:0,margin:"auto",backgroundColor:"white"},e=function t(e,n){for(var r=3===e.nodeType?document.createTextNode(e.nodeValue):e.cloneNode(!1),i=e.firstChild;i;i=i.nextSibling)!0!==n&&1===i.nodeType&&"SCRIPT"===i.nodeName||r.appendChild(t(i,n));return 1===e.nodeType&&("CANVAS"===e.nodeName?(r.width=e.width,r.height=e.height,r.getContext("2d").drawImage(e,0,0)):"TEXTAREA"!==e.nodeName&&"SELECT"!==e.nodeName||(r.value=e.value),r.addEventListener("load",(function(){r.scrollTop=e.scrollTop,r.scrollLeft=e.scrollLeft}),!0)),r}(this.prop.src,this.opt.html2canvas.javascriptEnabled);"BODY"===e.tagName&&(t.height=Math.max(document.body.scrollHeight,document.body.offsetHeight,document.documentElement.clientHeight,document.documentElement.scrollHeight,document.documentElement.offsetHeight)+"px"),this.prop.overlay=C("div",{className:"html2pdf__overlay",style:{position:"fixed",overflow:"hidden",zIndex:1e3,left:"-100000px",right:0,bottom:0,top:0}}),this.prop.container=C("div",{className:"html2pdf__container",style:t}),this.prop.container.appendChild(e),this.prop.container.firstChild.appendChild(C("div",{style:{clear:"both",border:"0 none transparent",margin:0,padding:0,height:0}})),this.prop.container.style.float="none",this.prop.overlay.appendChild(this.prop.container),document.body.appendChild(this.prop.overlay),this.prop.container.firstChild.style.position="relative",this.prop.container.height=Math.max(this.prop.container.firstChild.clientHeight,this.prop.container.firstChild.scrollHeight,this.prop.container.firstChild.offsetHeight)+"px"}))},k.prototype.toCanvas=function(){var t=[function(){return document.body.contains(this.prop.container)||this.toContainer()}];return this.thenList(t).then((function(){var t=Object.assign({},this.opt.html2canvas);if(delete t.onrendered,this.isHtml2CanvasLoaded())return html2canvas(this.prop.container,t)})).then((function(t){(this.opt.html2canvas.onrendered||function(){})(t),this.prop.canvas=t,document.body.removeChild(this.prop.overlay)}))},k.prototype.toContext2d=function(){var t=[function(){return document.body.contains(this.prop.container)||this.toContainer()}];return this.thenList(t).then((function(){var t=this.opt.jsPDF,e=Object.assign({async:!0,allowTaint:!0,backgroundColor:"#ffffff",imageTimeout:15e3,logging:!0,proxy:null,removeContainer:!0,foreignObjectRendering:!1,useCORS:!1},this.opt.html2canvas);if(delete e.onrendered,t.context2d.autoPaging=!0,t.context2d.posX=this.opt.x,t.context2d.posY=this.opt.y,e.windowHeight=e.windowHeight||0,e.windowHeight=0==e.windowHeight?Math.max(this.prop.container.clientHeight,this.prop.container.scrollHeight,this.prop.container.offsetHeight):e.windowHeight,this.isHtml2CanvasLoaded())return html2canvas(this.prop.container,e)})).then((function(t){(this.opt.html2canvas.onrendered||function(){})(t),this.prop.canvas=t,document.body.removeChild(this.prop.overlay)}))},k.prototype.toImg=function(){return this.thenList([function(){return this.prop.canvas||this.toCanvas()}]).then((function(){var t=this.prop.canvas.toDataURL("image/"+this.opt.image.type,this.opt.image.quality);this.prop.img=document.createElement("img"),this.prop.img.src=t}))},k.prototype.toPdf=function(){return this.thenList([function(){return this.toContext2d()}]).then((function(){this.prop.pdf=this.prop.pdf||this.opt.jsPDF}))},k.prototype.output=function(t,e,n){return"img"===(n=n||"pdf").toLowerCase()||"image"===n.toLowerCase()?this.outputImg(t,e):this.outputPdf(t,e)},k.prototype.outputPdf=function(t,e){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).then((function(){return this.prop.pdf.output(t,e)}))},k.prototype.outputImg=function(t,e){return this.thenList([function(){return this.prop.img||this.toImg()}]).then((function(){switch(t){case void 0:case"img":return this.prop.img;case"datauristring":case"dataurlstring":return this.prop.img.src;case"datauri":case"dataurl":return document.location.href=this.prop.img.src;default:throw'Image output type "'+t+'" is not supported.'}}))},k.prototype.isHtml2CanvasLoaded=function(){var t=void 0!==S.html2canvas;return t||console.error("html2canvas not loaded."),t},k.prototype.save=function(t){if(this.isHtml2CanvasLoaded())return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).set(t?{filename:t}:null).then((function(){this.prop.pdf.save(this.opt.filename)}))},k.prototype.doCallback=function(t){if(this.isHtml2CanvasLoaded())return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).then((function(){this.prop.callback(this.prop.pdf)}))},k.prototype.set=function(t){if("object"!==_(t))return this;var e=Object.keys(t||{}).map((function(e){if(e in k.template.prop)return function(){this.prop[e]=t[e]};switch(e){case"margin":return this.setMargin.bind(this,t.margin);case"jsPDF":return function(){return this.opt.jsPDF=t.jsPDF,this.setPageSize()};case"pageSize":return this.setPageSize.bind(this,t.pageSize);default:return function(){this.opt[e]=t[e]}}}),this);return this.then((function(){return this.thenList(e)}))},k.prototype.get=function(t,e){return this.then((function(){var n=t in k.template.prop?this.prop[t]:this.opt[t];return e?e(n):n}))},k.prototype.setMargin=function(t){return this.then((function(){switch(_(t)){case"number":t=[t,t,t,t];case"array":if(2===t.length&&(t=[t[0],t[1],t[0],t[1]]),4===t.length)break;default:return this.error("Invalid margin array.")}this.opt.margin=t})).then(this.setPageSize)},k.prototype.setPageSize=function(t){function e(t,e){return Math.floor(t*e/72*96)}return this.then((function(){(t=t||gt.getPageSize(this.opt.jsPDF)).hasOwnProperty("inner")||(t.inner={width:t.width-this.opt.margin[1]-this.opt.margin[3],height:t.height-this.opt.margin[0]-this.opt.margin[2]},t.inner.px={width:e(t.inner.width,t.k),height:e(t.inner.height,t.k)},t.inner.ratio=t.inner.height/t.inner.width),this.prop.pageSize=t}))},k.prototype.setProgress=function(t,e,n,r){return null!=t&&(this.progress.val=t),null!=e&&(this.progress.state=e),null!=n&&(this.progress.n=n),null!=r&&(this.progress.stack=r),this.progress.ratio=this.progress.val/this.progress.state,this},k.prototype.updateProgress=function(t,e,n,r){return this.setProgress(t?this.progress.val+t:null,e||null,n?this.progress.n+n:null,r?this.progress.stack.concat(r):null)},k.prototype.then=function(t,e){var n=this;return this.thenCore(t,e,(function(t,e){return n.updateProgress(null,null,1,[t]),i.prototype.then.call(this,(function(e){return n.updateProgress(null,t),e})).then(t,e).then((function(t){return n.updateProgress(1),t}))}))},k.prototype.thenCore=function(t,e,n){n=n||i.prototype.then;var r=this;t&&(t=t.bind(r)),e&&(e=e.bind(r));var o=-1!==i.toString().indexOf("[native code]")&&"Promise"===i.name?r:k.convert(Object.assign({},r),i.prototype),a=n.call(o,t,e);return k.convert(a,r.__proto__)},k.prototype.thenExternal=function(t,e){return i.prototype.then.call(this,t,e)},k.prototype.thenList=function(t){var e=this;return t.forEach((function(t){e=e.thenCore(t)})),e},k.prototype.catch=function(t){t&&(t=t.bind(this));var e=i.prototype.catch.call(this,t);return k.convert(e,this)},k.prototype.catchExternal=function(t){return i.prototype.catch.call(this,t)},k.prototype.error=function(t){return this.then((function(){throw new Error(t)}))},k.prototype.using=k.prototype.set,k.prototype.saveAs=k.prototype.save,k.prototype.export=k.prototype.output,k.prototype.run=k.prototype.then,gt.getPageSize=function(t,e,n){if("object"===o(t)){var r=t;t=r.orientation,e=r.unit||e,n=r.format||n}e=e||"mm",n=n||"a4",t=(""+(t||"P")).toLowerCase();var i=(""+n).toLowerCase(),a={a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],"government-letter":[576,756],legal:[612,1008],"junior-legal":[576,360],ledger:[1224,792],tabloid:[792,1224],"credit-card":[153,243]};switch(e){case"pt":var s=1;break;case"mm":s=72/25.4;break;case"cm":s=72/2.54;break;case"in":s=72;break;case"px":s=.75;break;case"pc":case"em":s=12;break;case"ex":s=6;break;default:throw"Invalid unit: "+e}if(a.hasOwnProperty(i))var u=a[i][1]/s,c=a[i][0]/s;else try{u=n[1],c=n[0]}catch(t){throw new Error("Invalid format: "+n)}if("p"===t||"portrait"===t){if(t="p",u<c){var l=c;c=u,u=l}}else{if("l"!==t&&"landscape"!==t)throw"Invalid orientation: "+t;t="l",c<u&&(l=c,c=u,u=l)}return{width:c,height:u,unit:e,k:s}},A.html=function(t,e){(e=e||{}).callback=e.callback||function(){},e.html2canvas=e.html2canvas||{},e.html2canvas.canvas=e.html2canvas.canvas||this.canvas,e.jsPDF=e.jsPDF||this,e.jsPDF;var n=new k(e);return e.worker?n:n.from(t).doCallback()},gt.API.addJS=function(t){return T=t,this.internal.events.subscribe("postPutResources",(function(t){P=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/Names [(EmbeddedJS) "+(P+1)+" 0 R]"),this.internal.out(">>"),this.internal.out("endobj"),F=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/S /JavaScript"),this.internal.out("/JS ("+T+")"),this.internal.out(">>"),this.internal.out("endobj")})),this.internal.events.subscribe("putCatalog",(function(){void 0!==P&&void 0!==F&&this.internal.out("/Names <</JavaScript "+P+" 0 R>>")})),this},
/**
   * @license
   * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */(E=gt.API).events.push(["postPutResources",function(){var t=this,e=/^(\d+) 0 obj$/;if(0<this.outline.root.children.length)for(var n=t.outline.render().split(/\r\n/),r=0;r<n.length;r++){var i=n[r],o=e.exec(i);if(null!=o){var a=o[1];t.internal.newObjectDeferredBegin(a,!1)}t.internal.write(i)}if(this.outline.createNamedDestinations){var s=this.internal.pages.length,u=[];for(r=0;r<s;r++){var c=t.internal.newObject();u.push(c);var l=t.internal.getPageInfo(r+1);t.internal.write("<< /D["+l.objId+" 0 R /XYZ null null null]>> endobj")}var f=t.internal.newObject();for(t.internal.write("<< /Names [ "),r=0;r<u.length;r++)t.internal.write("(page_"+(r+1)+")"+u[r]+" 0 R");t.internal.write(" ] >>","endobj"),t.internal.newObject(),t.internal.write("<< /Dests "+f+" 0 R"),t.internal.write(">>","endobj")}}]),E.events.push(["putCatalog",function(){0<this.outline.root.children.length&&(this.internal.write("/Outlines",this.outline.makeRef(this.outline.root)),this.outline.createNamedDestinations&&this.internal.write("/Names "+namesOid+" 0 R"))}]),E.events.push(["initialized",function(){var t=this;t.outline={createNamedDestinations:!1,root:{children:[]}},t.outline.add=function(t,e,n){var r={title:e,options:n,children:[]};return null==t&&(t=this.root),t.children.push(r),r},t.outline.render=function(){return this.ctx={},this.ctx.val="",this.ctx.pdf=t,this.genIds_r(this.root),this.renderRoot(this.root),this.renderItems(this.root),this.ctx.val},t.outline.genIds_r=function(e){e.id=t.internal.newObjectDeferred();for(var n=0;n<e.children.length;n++)this.genIds_r(e.children[n])},t.outline.renderRoot=function(t){this.objStart(t),this.line("/Type /Outlines"),0<t.children.length&&(this.line("/First "+this.makeRef(t.children[0])),this.line("/Last "+this.makeRef(t.children[t.children.length-1]))),this.line("/Count "+this.count_r({count:0},t)),this.objEnd()},t.outline.renderItems=function(e){this.ctx.pdf.internal.getCoordinateString;for(var n=this.ctx.pdf.internal.getVerticalCoordinateString,r=0;r<e.children.length;r++){var i=e.children[r];this.objStart(i),this.line("/Title "+this.makeString(i.title)),this.line("/Parent "+this.makeRef(e)),0<r&&this.line("/Prev "+this.makeRef(e.children[r-1])),r<e.children.length-1&&this.line("/Next "+this.makeRef(e.children[r+1])),0<i.children.length&&(this.line("/First "+this.makeRef(i.children[0])),this.line("/Last "+this.makeRef(i.children[i.children.length-1])));var o=this.count=this.count_r({count:0},i);if(0<o&&this.line("/Count "+o),i.options&&i.options.pageNumber){var a=t.internal.getPageInfo(i.options.pageNumber);this.line("/Dest ["+a.objId+" 0 R /XYZ 0 "+n(0)+" 0]")}this.objEnd()}for(r=0;r<e.children.length;r++)i=e.children[r],this.renderItems(i)},t.outline.line=function(t){this.ctx.val+=t+"\r\n"},t.outline.makeRef=function(t){return t.id+" 0 R"},t.outline.makeString=function(e){return"("+t.internal.pdfEscape(e)+")"},t.outline.objStart=function(t){this.ctx.val+="\r\n"+t.id+" 0 obj\r\n<<\r\n"},t.outline.objEnd=function(t){this.ctx.val+=">> \r\nendobj\r\n"},t.outline.count_r=function(t,e){for(var n=0;n<e.children.length;n++)t.count++,this.count_r(t,e.children[n]);return t.count}}]),
/**
   * @license
   * 
   * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb
   *
   * 
   * ====================================================================
   */
j=gt.API,I=function(){var t="function"==typeof Deflater;if(!t)throw new Error("requires deflate.js for compression");return t},B=function(t,e,n,r){var i=5,o=U;switch(r){case j.image_compression.FAST:i=3,o=R;break;case j.image_compression.MEDIUM:i=6,o=z;break;case j.image_compression.SLOW:i=9,o=H}t=q(t,e,n,o);var a=new Uint8Array(O(i)),s=M(t),u=new Deflater(i),c=u.append(t),l=u.flush(),f=a.length+c.length+l.length,h=new Uint8Array(f+4);return h.set(a),h.set(c,a.length),h.set(l,a.length+c.length),h[f++]=s>>>24&255,h[f++]=s>>>16&255,h[f++]=s>>>8&255,h[f++]=255&s,j.arrayBufferToBinaryString(h)},O=function(t,e){var n=Math.LOG2E*Math.log(32768)-8<<4|8,r=n<<8;return r|=Math.min(3,(e-1&255)>>1)<<6,r|=0,[n,255&(r+=31-r%31)]},M=function(t,e){for(var n,r=1,i=0,o=t.length,a=0;0<o;){for(o-=n=e<o?e:o;i+=r+=t[a++],--n;);r%=65521,i%=65521}return(i<<16|r)>>>0},q=function(t,e,n,r){for(var i,o,a,s=t.length/e,u=new Uint8Array(t.length+s),c=V(),l=0;l<s;l++){if(a=l*e,i=t.subarray(a,a+e),r)u.set(r(i,n,o),a+l);else{for(var f=0,h=c.length,p=[];f<h;f++)p[f]=c[f](i,n,o);var d=G(p.concat());u.set(p[d],a+l)}o=i}return u},D=function(t,e,n){var r=Array.apply([],t);return r.unshift(0),r},R=function(t,e,n){var r,i=[],o=0,a=t.length;for(i[0]=1;o<a;o++)r=t[o-e]||0,i[o+1]=t[o]-r+256&255;return i},U=function(t,e,n){var r,i=[],o=0,a=t.length;for(i[0]=2;o<a;o++)r=n&&n[o]||0,i[o+1]=t[o]-r+256&255;return i},z=function(t,e,n){var r,i,o=[],a=0,s=t.length;for(o[0]=3;a<s;a++)r=t[a-e]||0,i=n&&n[a]||0,o[a+1]=t[a]+256-(r+i>>>1)&255;return o},H=function(t,e,n){var r,i,o,a,s=[],u=0,c=t.length;for(s[0]=4;u<c;u++)r=t[u-e]||0,i=n&&n[u]||0,o=n&&n[u-e]||0,a=W(r,i,o),s[u+1]=t[u]-a+256&255;return s},W=function(t,e,n){var r=t+e-n,i=Math.abs(r-t),o=Math.abs(r-e),a=Math.abs(r-n);return i<=o&&i<=a?t:o<=a?e:n},V=function(){return[D,R,U,z,H]},G=function(t){for(var e,n,r,i=0,o=t.length;i<o;)((e=Y(t[i].slice(1)))<n||!n)&&(n=e,r=i),i++;return r},Y=function(t){for(var e=0,n=t.length,r=0;e<n;)r+=Math.abs(t[e++]);return r},j.processPNG=function(t,e,n,r,i){var o,a,s,u,c,l,f=this.color_spaces.DEVICE_RGB,h=this.decode.FLATE_DECODE,p=8;if(this.isArrayBuffer(t)&&(t=new Uint8Array(t)),this.isArrayBufferView(t)){if("function"!=typeof PNG||"function"!=typeof Mt)throw new Error("PNG support requires png.js and zlib.js");if(t=(o=new PNG(t)).imgData,p=o.bits,f=o.colorSpace,u=o.colors,-1!==[4,6].indexOf(o.colorType)){if(8===o.bits)for(var d,g=(_=32==o.pixelBitlength?new Uint32Array(o.decodePixels().buffer):16==o.pixelBitlength?new Uint16Array(o.decodePixels().buffer):new Uint8Array(o.decodePixels().buffer)).length,m=new Uint8Array(g*o.colors),v=new Uint8Array(g),y=o.pixelBitlength-o.bits,b=0,w=0;b<g;b++){for(x=_[b],d=0;d<y;)m[w++]=x>>>d&255,d+=o.bits;v[b]=x>>>d&255}if(16===o.bits){g=(_=new Uint32Array(o.decodePixels().buffer)).length,m=new Uint8Array(g*(32/o.pixelBitlength)*o.colors),v=new Uint8Array(g*(32/o.pixelBitlength));for(var x,N=1<o.colors,L=w=b=0;b<g;)x=_[b++],m[w++]=x>>>0&255,N&&(m[w++]=x>>>16&255,x=_[b++],m[w++]=x>>>0&255),v[L++]=x>>>16&255;p=8}r!==j.image_compression.NONE&&I()?(t=B(m,o.width*o.colors,o.colors,r),l=B(v,o.width,1,r)):(t=m,l=v,h=null)}if(3===o.colorType&&(f=this.color_spaces.INDEXED,c=o.palette,o.transparency.indexed)){var A=o.transparency.indexed,S=0;for(b=0,g=A.length;b<g;++b)S+=A[b];if((S/=255)==g-1&&-1!==A.indexOf(0))s=[A.indexOf(0)];else if(S!==g){var _=o.decodePixels();for(v=new Uint8Array(_.length),b=0,g=_.length;b<g;b++)v[b]=A[_[b]];l=B(v,o.width,1)}}var C=function(t){var e;switch(t){case j.image_compression.FAST:e=11;break;case j.image_compression.MEDIUM:e=13;break;case j.image_compression.SLOW:e=14;break;default:e=12}return e}(r);return a=h===this.decode.FLATE_DECODE?"/Predictor "+C+" /Colors "+u+" /BitsPerComponent "+p+" /Columns "+o.width:"/Colors "+u+" /BitsPerComponent "+p+" /Columns "+o.width,(this.isArrayBuffer(t)||this.isArrayBufferView(t))&&(t=this.arrayBufferToBinaryString(t)),(l&&this.isArrayBuffer(l)||this.isArrayBufferView(l))&&(l=this.arrayBufferToBinaryString(l)),this.createImageInfo(t,o.width,o.height,f,p,h,e,n,a,s,c,l,C)}throw new Error("Unsupported PNG image data, try using JPEG instead.")},
/**
   * @license
   * Copyright (c) 2017 Aras Abbasi 
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */(X=gt.API).processGIF89A=function(t,e,n,r,i){var o=new Et(t),a=o.width,s=o.height,u=[];o.decodeAndBlitFrameRGBA(0,u);var c={data:u,width:a,height:s},l=new It(100).encode(c,100);return X.processJPEG.call(this,l,e,n,r)},X.processGIF87A=X.processGIF89A,(J=gt.API).processBMP=function(t,e,n,r,i){var o=new Bt(t,!1),a=o.width,s=o.height,u={data:o.getData(),width:a,height:s},c=new It(100).encode(u,100);return J.processJPEG.call(this,c,e,n,r)},gt.API.setLanguage=function(t){return void 0===this.internal.languageSettings&&(this.internal.languageSettings={},this.internal.languageSettings.isSubscribed=!1),void 0!=={af:"Afrikaans",sq:"Albanian",ar:"Arabic (Standard)","ar-DZ":"Arabic (Algeria)","ar-BH":"Arabic (Bahrain)","ar-EG":"Arabic (Egypt)","ar-IQ":"Arabic (Iraq)","ar-JO":"Arabic (Jordan)","ar-KW":"Arabic (Kuwait)","ar-LB":"Arabic (Lebanon)","ar-LY":"Arabic (Libya)","ar-MA":"Arabic (Morocco)","ar-OM":"Arabic (Oman)","ar-QA":"Arabic (Qatar)","ar-SA":"Arabic (Saudi Arabia)","ar-SY":"Arabic (Syria)","ar-TN":"Arabic (Tunisia)","ar-AE":"Arabic (U.A.E.)","ar-YE":"Arabic (Yemen)",an:"Aragonese",hy:"Armenian",as:"Assamese",ast:"Asturian",az:"Azerbaijani",eu:"Basque",be:"Belarusian",bn:"Bengali",bs:"Bosnian",br:"Breton",bg:"Bulgarian",my:"Burmese",ca:"Catalan",ch:"Chamorro",ce:"Chechen",zh:"Chinese","zh-HK":"Chinese (Hong Kong)","zh-CN":"Chinese (PRC)","zh-SG":"Chinese (Singapore)","zh-TW":"Chinese (Taiwan)",cv:"Chuvash",co:"Corsican",cr:"Cree",hr:"Croatian",cs:"Czech",da:"Danish",nl:"Dutch (Standard)","nl-BE":"Dutch (Belgian)",en:"English","en-AU":"English (Australia)","en-BZ":"English (Belize)","en-CA":"English (Canada)","en-IE":"English (Ireland)","en-JM":"English (Jamaica)","en-NZ":"English (New Zealand)","en-PH":"English (Philippines)","en-ZA":"English (South Africa)","en-TT":"English (Trinidad & Tobago)","en-GB":"English (United Kingdom)","en-US":"English (United States)","en-ZW":"English (Zimbabwe)",eo:"Esperanto",et:"Estonian",fo:"Faeroese",fj:"Fijian",fi:"Finnish",fr:"French (Standard)","fr-BE":"French (Belgium)","fr-CA":"French (Canada)","fr-FR":"French (France)","fr-LU":"French (Luxembourg)","fr-MC":"French (Monaco)","fr-CH":"French (Switzerland)",fy:"Frisian",fur:"Friulian",gd:"Gaelic (Scots)","gd-IE":"Gaelic (Irish)",gl:"Galacian",ka:"Georgian",de:"German (Standard)","de-AT":"German (Austria)","de-DE":"German (Germany)","de-LI":"German (Liechtenstein)","de-LU":"German (Luxembourg)","de-CH":"German (Switzerland)",el:"Greek",gu:"Gujurati",ht:"Haitian",he:"Hebrew",hi:"Hindi",hu:"Hungarian",is:"Icelandic",id:"Indonesian",iu:"Inuktitut",ga:"Irish",it:"Italian (Standard)","it-CH":"Italian (Switzerland)",ja:"Japanese",kn:"Kannada",ks:"Kashmiri",kk:"Kazakh",km:"Khmer",ky:"Kirghiz",tlh:"Klingon",ko:"Korean","ko-KP":"Korean (North Korea)","ko-KR":"Korean (South Korea)",la:"Latin",lv:"Latvian",lt:"Lithuanian",lb:"Luxembourgish",mk:"FYRO Macedonian",ms:"Malay",ml:"Malayalam",mt:"Maltese",mi:"Maori",mr:"Marathi",mo:"Moldavian",nv:"Navajo",ng:"Ndonga",ne:"Nepali",no:"Norwegian",nb:"Norwegian (Bokmal)",nn:"Norwegian (Nynorsk)",oc:"Occitan",or:"Oriya",om:"Oromo",fa:"Persian","fa-IR":"Persian/Iran",pl:"Polish",pt:"Portuguese","pt-BR":"Portuguese (Brazil)",pa:"Punjabi","pa-IN":"Punjabi (India)","pa-PK":"Punjabi (Pakistan)",qu:"Quechua",rm:"Rhaeto-Romanic",ro:"Romanian","ro-MO":"Romanian (Moldavia)",ru:"Russian","ru-MO":"Russian (Moldavia)",sz:"Sami (Lappish)",sg:"Sango",sa:"Sanskrit",sc:"Sardinian",sd:"Sindhi",si:"Singhalese",sr:"Serbian",sk:"Slovak",sl:"Slovenian",so:"Somani",sb:"Sorbian",es:"Spanish","es-AR":"Spanish (Argentina)","es-BO":"Spanish (Bolivia)","es-CL":"Spanish (Chile)","es-CO":"Spanish (Colombia)","es-CR":"Spanish (Costa Rica)","es-DO":"Spanish (Dominican Republic)","es-EC":"Spanish (Ecuador)","es-SV":"Spanish (El Salvador)","es-GT":"Spanish (Guatemala)","es-HN":"Spanish (Honduras)","es-MX":"Spanish (Mexico)","es-NI":"Spanish (Nicaragua)","es-PA":"Spanish (Panama)","es-PY":"Spanish (Paraguay)","es-PE":"Spanish (Peru)","es-PR":"Spanish (Puerto Rico)","es-ES":"Spanish (Spain)","es-UY":"Spanish (Uruguay)","es-VE":"Spanish (Venezuela)",sx:"Sutu",sw:"Swahili",sv:"Swedish","sv-FI":"Swedish (Finland)","sv-SV":"Swedish (Sweden)",ta:"Tamil",tt:"Tatar",te:"Teluga",th:"Thai",tig:"Tigre",ts:"Tsonga",tn:"Tswana",tr:"Turkish",tk:"Turkmen",uk:"Ukrainian",hsb:"Upper Sorbian",ur:"Urdu",ve:"Venda",vi:"Vietnamese",vo:"Volapuk",wa:"Walloon",cy:"Welsh",xh:"Xhosa",ji:"Yiddish",zu:"Zulu"}[t]&&(this.internal.languageSettings.languageCode=t,!1===this.internal.languageSettings.isSubscribed&&(this.internal.events.subscribe("putCatalog",(function(){this.internal.write("/Lang ("+this.internal.languageSettings.languageCode+")")})),this.internal.languageSettings.isSubscribed=!0)),this
/** @license
   * MIT license.
   * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
   *               2014 Diego Casorran, https://github.com/diegocr
   *
   * 
   * ====================================================================
   */},$=gt.API,K=$.getCharWidthsArray=function(t,e){var n,r,i,o=(e=e||{}).font||this.internal.getFont(),a=e.fontSize||this.internal.getFontSize(),s=e.charSpace||this.internal.getCharSpace(),u=e.widths?e.widths:o.metadata.Unicode.widths,c=u.fof?u.fof:1,l=e.kerning?e.kerning:o.metadata.Unicode.kerning,f=l.fof?l.fof:1,h=0,p=u[0]||c,d=[];for(n=0,r=t.length;n<r;n++)i=t.charCodeAt(n),"function"==typeof o.metadata.widthOfString?d.push((o.metadata.widthOfGlyph(o.metadata.characterToGlyph(i))+s*(1e3/a)||0)/1e3):d.push((u[i]||p)/c+(l[i]&&l[i][h]||0)/f),h=i;return d},Q=$.getArraySum=function(t){for(var e=t.length,n=0;e;)n+=t[--e];return n},Z=$.getStringUnitWidth=function(t,e){var n=(e=e||{}).fontSize||this.internal.getFontSize(),r=e.font||this.internal.getFont(),i=e.charSpace||this.internal.getCharSpace();return"function"==typeof r.metadata.widthOfString?r.metadata.widthOfString(t,n,i)/n:Q(K.apply(this,arguments))},tt=function(t,e,n,r){for(var i=[],o=0,a=t.length,s=0;o!==a&&s+e[o]<n;)s+=e[o],o++;i.push(t.slice(0,o));var u=o;for(s=0;o!==a;)s+e[o]>r&&(i.push(t.slice(u,o)),s=0,u=o),s+=e[o],o++;return u!==o&&i.push(t.slice(u,o)),i},et=function(t,e,n){n||(n={});var r,i,o,a,s,u,c=[],l=[c],f=n.textIndent||0,h=0,p=0,d=t.split(" "),g=K.apply(this,[" ",n])[0];if(u=-1===n.lineIndent?d[0].length+2:n.lineIndent||0){var m=Array(u).join(" "),v=[];d.map((function(t){1<(t=t.split(/\s*\n/)).length?v=v.concat(t.map((function(t,e){return(e&&t.length?"\n":"")+t}))):v.push(t[0])})),d=v,u=Z.apply(this,[m,n])}for(o=0,a=d.length;o<a;o++){var y=0;if(r=d[o],u&&"\n"==r[0]&&(r=r.substr(1),y=1),i=K.apply(this,[r,n]),e<f+h+(p=Q(i))||y){if(e<p){for(s=tt.apply(this,[r,i,e-(f+h),e]),c.push(s.shift()),c=[s.pop()];s.length;)l.push([s.shift()]);p=Q(i.slice(r.length-(c[0]?c[0].length:0)))}else c=[r];l.push(c),f=p+u,h=g}else c.push(r),f+=h+p,h=g}if(u)var b=function(t,e){return(e?m:"")+t.join(" ")};else b=function(t){return t.join(" ")};return l.map(b)},$.splitTextToSize=function(t,e,n){var r,i=(n=n||{}).fontSize||this.internal.getFontSize(),o=function(t){if(t.widths&&t.kerning)return{widths:t.widths,kerning:t.kerning};var e=this.internal.getFont(t.fontName,t.fontStyle),n="Unicode";return e.metadata[n]?{widths:e.metadata[n].widths||{0:1},kerning:e.metadata[n].kerning||{}}:{font:e.metadata,fontSize:this.internal.getFontSize(),charSpace:this.internal.getCharSpace()}}.call(this,n);r=Array.isArray(t)?t:t.split(/\r?\n/);var a=1*this.internal.scaleFactor*e/i;o.textIndent=n.textIndent?1*n.textIndent*this.internal.scaleFactor/i:0,o.lineIndent=n.lineIndent;var s,u,c=[];for(s=0,u=r.length;s<u;s++)c=c.concat(et.apply(this,[r[s],a,o]));return c},
/** @license
   jsPDF standard_fonts_metrics plugin
   * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
   * MIT license.
   * 
   * ====================================================================
   */
nt=gt.API,it={codePages:["WinAnsiEncoding"],WinAnsiEncoding:(rt=function(t){for(var e="klmnopqrstuvwxyz",n={},r=0;r<e.length;r++)n[e[r]]="0123456789abcdef"[r];var i,o,a,s,u,c={},l=1,f=c,h=[],p="",d="",g=t.length-1;for(r=1;r!=g;)u=t[r],r+=1,"'"==u?o=o?(s=o.join(""),i):[]:o?o.push(u):"{"==u?(h.push([f,s]),f={},s=i):"}"==u?((a=h.pop())[0][a[1]]=f,s=i,f=a[0]):"-"==u?l=-1:s===i?n.hasOwnProperty(u)?(p+=n[u],s=parseInt(p,16)*l,l=1,p=""):p+=u:n.hasOwnProperty(u)?(d+=n[u],f[s]=parseInt(d,16)*l,l=1,s=i,d=""):d+=u;return c})("{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}")},ot={Unicode:{Courier:it,"Courier-Bold":it,"Courier-BoldOblique":it,"Courier-Oblique":it,Helvetica:it,"Helvetica-Bold":it,"Helvetica-BoldOblique":it,"Helvetica-Oblique":it,"Times-Roman":it,"Times-Bold":it,"Times-BoldItalic":it,"Times-Italic":it}},at={Unicode:{"Courier-Oblique":rt("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-BoldItalic":rt("{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}"),"Helvetica-Bold":rt("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),Courier:rt("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Courier-BoldOblique":rt("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-Bold":rt("{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}"),Symbol:rt("{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}"),Helvetica:rt("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}"),"Helvetica-BoldOblique":rt("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),ZapfDingbats:rt("{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}"),"Courier-Bold":rt("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-Italic":rt("{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}"),"Times-Roman":rt("{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}"),"Helvetica-Oblique":rt("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}")}},nt.events.push(["addFont",function(t){var e,n,r,i=t.font,o="Unicode";(e=at[o][i.postScriptName])&&((n=i.metadata[o]?i.metadata[o]:i.metadata[o]={}).widths=e.widths,n.kerning=e.kerning),(r=ot[o][i.postScriptName])&&((n=i.metadata[o]?i.metadata[o]:i.metadata[o]={}).encoding=r).codePages&&r.codePages.length&&(i.encoding=r.codePages[0])}]),
/**
   * @license
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */
st=gt,"undefined"!=typeof self&&self||void 0!==r&&r||"undefined"!=typeof window&&window||Function("return this")(),st.API.events.push(["addFont",function(t){var e=t.font,n=t.instance;if(void 0!==n&&n.existsFileInVFS(e.postScriptName)){var r=n.getFileFromVFS(e.postScriptName);if("string"!=typeof r)throw new Error("Font is not stored as string-data in vFS, import fonts or remove declaration doc.addFont('"+e.postScriptName+"').");e.metadata=st.API.TTFFont.open(e.postScriptName,e.fontName,r,e.encoding),e.metadata.Unicode=e.metadata.Unicode||{encoding:{},kerning:{},widths:[]},e.metadata.glyIdsUsed=[0]}else if(!1===e.isStandardFont)throw new Error("Font does not exist in vFS, import fonts or remove declaration doc.addFont('"+e.postScriptName+"').")}]),
/** @license
   * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
   * 
   * 
   * ====================================================================
   */(ut=gt.API).addSvg=function(t,e,n,r,i){if(void 0===e||void 0===n)throw new Error("addSVG needs values for 'x' and 'y'");function o(t){for(var e=parseFloat(t[1]),n=parseFloat(t[2]),r=[],i=3,o=t.length;i<o;)"c"===t[i]?(r.push([parseFloat(t[i+1]),parseFloat(t[i+2]),parseFloat(t[i+3]),parseFloat(t[i+4]),parseFloat(t[i+5]),parseFloat(t[i+6])]),i+=7):"l"===t[i]?(r.push([parseFloat(t[i+1]),parseFloat(t[i+2])]),i+=3):i+=1;return[e,n,r]}var a,s,u,c,l,f,h,p,d=(a=t,(u=((p=(c=document).createElement("iframe"),l=".jsPDF_sillysvg_iframe {display:none;position:absolute;}",(h=(f=c).createElement("style")).type="text/css",h.styleSheet?h.styleSheet.cssText=l:h.appendChild(f.createTextNode(l)),f.getElementsByTagName("head")[0].appendChild(h),p.name="childframe",p.setAttribute("width",0),p.setAttribute("height",0),p.setAttribute("frameborder","0"),p.setAttribute("scrolling","no"),p.setAttribute("seamless","seamless"),p.setAttribute("class","jsPDF_sillysvg_iframe"),c.body.appendChild(p),s=p).contentWindow||s.contentDocument).document).write(a),u.close(),u.getElementsByTagName("svg")[0]),g=[1,1],m=parseFloat(d.getAttribute("width")),v=parseFloat(d.getAttribute("height"));m&&v&&(r&&i?g=[r/m,i/v]:r?g=[r/m,r/m]:i&&(g=[i/v,i/v]));var y,b,w,x,N=d.childNodes;for(y=0,b=N.length;y<b;y++)(w=N[y]).tagName&&"PATH"===w.tagName.toUpperCase()&&((x=o(w.getAttribute("d").split(" ")))[0]=x[0]*g[0]+e,x[1]=x[1]*g[1]+n,this.lines.call(this,x[2],x[0],x[1],g));return this},ut.addSVG=ut.addSvg,ut.addSvgAsImage=function(t,e,n,r,i,o,a,s){if(isNaN(e)||isNaN(n))throw console.error("jsPDF.addSvgAsImage: Invalid coordinates",arguments),new Error("Invalid coordinates passed to jsPDF.addSvgAsImage");if(isNaN(r)||isNaN(i))throw console.error("jsPDF.addSvgAsImage: Invalid measurements",arguments),new Error("Invalid measurements (width and/or height) passed to jsPDF.addSvgAsImage");var u=document.createElement("canvas");u.width=r,u.height=i;var c=u.getContext("2d");return c.fillStyle="#fff",c.fillRect(0,0,u.width,u.height),canvg(u,t,{ignoreMouse:!0,ignoreAnimation:!0,ignoreDimensions:!0,ignoreClear:!0}),this.addImage(u.toDataURL("image/jpeg",1),e,n,r,i,a,s),this},gt.API.putTotalPages=function(t){var e,n;n=parseInt(this.internal.getFont().id.substr(1),10)<15?(e=new RegExp(t,"g"),this.internal.getNumberOfPages()):(e=new RegExp(this.pdfEscape16(t,this.internal.getFont()),"g"),this.pdfEscape16(this.internal.getNumberOfPages()+"",this.internal.getFont()));for(var r=1;r<=this.internal.getNumberOfPages();r++)for(var i=0;i<this.internal.pages[r].length;i++)this.internal.pages[r][i]=this.internal.pages[r][i].replace(e,n);return this},gt.API.viewerPreferences=function(t,e){var n;t=t||{},e=e||!1;var r,i,a={HideToolbar:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},HideMenubar:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},HideWindowUI:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},FitWindow:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},CenterWindow:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},DisplayDocTitle:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.4},NonFullScreenPageMode:{defaultValue:"UseNone",value:"UseNone",type:"name",explicitSet:!1,valueSet:["UseNone","UseOutlines","UseThumbs","UseOC"],pdfVersion:1.3},Direction:{defaultValue:"L2R",value:"L2R",type:"name",explicitSet:!1,valueSet:["L2R","R2L"],pdfVersion:1.3},ViewArea:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},ViewClip:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintArea:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintClip:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintScaling:{defaultValue:"AppDefault",value:"AppDefault",type:"name",explicitSet:!1,valueSet:["AppDefault","None"],pdfVersion:1.6},Duplex:{defaultValue:"",value:"none",type:"name",explicitSet:!1,valueSet:["Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","none"],pdfVersion:1.7},PickTrayByPDFSize:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.7},PrintPageRange:{defaultValue:"",value:"",type:"array",explicitSet:!1,valueSet:null,pdfVersion:1.7},NumCopies:{defaultValue:1,value:1,type:"integer",explicitSet:!1,valueSet:null,pdfVersion:1.7}},s=Object.keys(a),u=[],c=0,l=0,f=0,h=!0;function p(t,e){var n,r=!1;for(n=0;n<t.length;n+=1)t[n]===e&&(r=!0);return r}if(void 0===this.internal.viewerpreferences&&(this.internal.viewerpreferences={},this.internal.viewerpreferences.configuration=JSON.parse(JSON.stringify(a)),this.internal.viewerpreferences.isSubscribed=!1),n=this.internal.viewerpreferences.configuration,"reset"===t||!0===e){var d=s.length;for(f=0;f<d;f+=1)n[s[f]].value=n[s[f]].defaultValue,n[s[f]].explicitSet=!1}if("object"===o(t))for(r in t)if(i=t[r],p(s,r)&&void 0!==i){if("boolean"===n[r].type&&"boolean"==typeof i)n[r].value=i;else if("name"===n[r].type&&p(n[r].valueSet,i))n[r].value=i;else if("integer"===n[r].type&&Number.isInteger(i))n[r].value=i;else if("array"===n[r].type){for(c=0;c<i.length;c+=1)if(h=!0,1===i[c].length&&"number"==typeof i[c][0])u.push(String(i[c]-1));else if(1<i[c].length){for(l=0;l<i[c].length;l+=1)"number"!=typeof i[c][l]&&(h=!1);!0===h&&u.push([i[c][0]-1,i[c][1]-1].join(" "))}n[r].value="["+u.join(" ")+"]"}else n[r].value=n[r].defaultValue;n[r].explicitSet=!0}return!1===this.internal.viewerpreferences.isSubscribed&&(this.internal.events.subscribe("putCatalog",(function(){var t,e=[];for(t in n)!0===n[t].explicitSet&&("name"===n[t].type?e.push("/"+t+" /"+n[t].value):e.push("/"+t+" "+n[t].value));0!==e.length&&this.internal.write("/ViewerPreferences\n<<\n"+e.join("\n")+"\n>>")})),this.internal.viewerpreferences.isSubscribed=!0),this.internal.viewerpreferences.configuration=n,this},ct=gt.API,ht=ft=lt="",ct.addMetadata=function(t,e){return ft=e||"http://jspdf.default.namespaceuri/",lt=t,this.internal.events.subscribe("postPutResources",(function(){if(lt){var t='<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description rdf:about="" xmlns:jspdf="'+ft+'"><jspdf:metadata>',e=unescape(encodeURIComponent('<x:xmpmeta xmlns:x="adobe:ns:meta/">')),n=unescape(encodeURIComponent(t)),r=unescape(encodeURIComponent(lt)),i=unescape(encodeURIComponent("</jspdf:metadata></rdf:Description></rdf:RDF>")),o=unescape(encodeURIComponent("</x:xmpmeta>")),a=n.length+r.length+i.length+e.length+o.length;ht=this.internal.newObject(),this.internal.write("<< /Type /Metadata /Subtype /XML /Length "+a+" >>"),this.internal.write("stream"),this.internal.write(e+n+r+i+o),this.internal.write("endstream"),this.internal.write("endobj")}else ht=""})),this.internal.events.subscribe("putCatalog",(function(){ht&&this.internal.write("/Metadata "+ht+" 0 R")})),this},function(t,e){var n=t.API,r=n.pdfEscape16=function(t,e){for(var n,r=e.metadata.Unicode.widths,i=["","0","00","000","0000"],o=[""],a=0,s=t.length;a<s;++a){if(n=e.metadata.characterToGlyph(t.charCodeAt(a)),e.metadata.glyIdsUsed.push(n),e.metadata.toUnicode[n]=t.charCodeAt(a),-1==r.indexOf(n)&&(r.push(n),r.push([parseInt(e.metadata.widthOfGlyph(n),10)])),"0"==n)return o.join("");n=n.toString(16),o.push(i[4-n.length],n)}return o.join("")},i=function(t){var e,n,r,i,o,a,s;for(o="/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange",r=[],a=0,s=(n=Object.keys(t).sort((function(t,e){return t-e}))).length;a<s;a++)e=n[a],100<=r.length&&(o+="\n"+r.length+" beginbfchar\n"+r.join("\n")+"\nendbfchar",r=[]),i=("0000"+t[e].toString(16)).slice(-4),e=("0000"+(+e).toString(16)).slice(-4),r.push("<"+e+"><"+i+">");return r.length&&(o+="\n"+r.length+" beginbfchar\n"+r.join("\n")+"\nendbfchar\n"),o+"endcmap\nCMapName currentdict /CMap defineresource pop\nend\nend"};n.events.push(["putFont",function(e){!function(e,n,r,o){if(e.metadata instanceof t.API.TTFFont&&"Identity-H"===e.encoding){for(var a=e.metadata.Unicode.widths,s=e.metadata.subset.encode(e.metadata.glyIdsUsed,1),u="",c=0;c<s.length;c++)u+=String.fromCharCode(s[c]);var l=r();o({data:u,addLength1:!0}),n("endobj");var f=r();o({data:i(e.metadata.toUnicode),addLength1:!0}),n("endobj");var h=r();n("<<"),n("/Type /FontDescriptor"),n("/FontName /"+e.fontName),n("/FontFile2 "+l+" 0 R"),n("/FontBBox "+t.API.PDFObject.convert(e.metadata.bbox)),n("/Flags "+e.metadata.flags),n("/StemV "+e.metadata.stemV),n("/ItalicAngle "+e.metadata.italicAngle),n("/Ascent "+e.metadata.ascender),n("/Descent "+e.metadata.decender),n("/CapHeight "+e.metadata.capHeight),n(">>"),n("endobj");var p=r();n("<<"),n("/Type /Font"),n("/BaseFont /"+e.fontName),n("/FontDescriptor "+h+" 0 R"),n("/W "+t.API.PDFObject.convert(a)),n("/CIDToGIDMap /Identity"),n("/DW 1000"),n("/Subtype /CIDFontType2"),n("/CIDSystemInfo"),n("<<"),n("/Supplement 0"),n("/Registry (Adobe)"),n("/Ordering ("+e.encoding+")"),n(">>"),n(">>"),n("endobj"),e.objectNumber=r(),n("<<"),n("/Type /Font"),n("/Subtype /Type0"),n("/ToUnicode "+f+" 0 R"),n("/BaseFont /"+e.fontName),n("/Encoding /"+e.encoding),n("/DescendantFonts ["+p+" 0 R]"),n(">>"),n("endobj"),e.isAlreadyPutted=!0}}(e.font,e.out,e.newObject,e.putStream)}]),n.events.push(["putFont",function(e){!function(e,n,r,o){if(e.metadata instanceof t.API.TTFFont&&"WinAnsiEncoding"===e.encoding){e.metadata.Unicode.widths;for(var a=e.metadata.rawData,s="",u=0;u<a.length;u++)s+=String.fromCharCode(a[u]);var c=r();o({data:s,addLength1:!0}),n("endobj");var l=r();o({data:i(e.metadata.toUnicode),addLength1:!0}),n("endobj");var f=r();for(n("<<"),n("/Descent "+e.metadata.decender),n("/CapHeight "+e.metadata.capHeight),n("/StemV "+e.metadata.stemV),n("/Type /FontDescriptor"),n("/FontFile2 "+c+" 0 R"),n("/Flags 96"),n("/FontBBox "+t.API.PDFObject.convert(e.metadata.bbox)),n("/FontName /"+e.fontName),n("/ItalicAngle "+e.metadata.italicAngle),n("/Ascent "+e.metadata.ascender),n(">>"),n("endobj"),e.objectNumber=r(),u=0;u<e.metadata.hmtx.widths.length;u++)e.metadata.hmtx.widths[u]=parseInt(e.metadata.hmtx.widths[u]*(1e3/e.metadata.head.unitsPerEm));n("<</Subtype/TrueType/Type/Font/ToUnicode "+l+" 0 R/BaseFont/"+e.fontName+"/FontDescriptor "+f+" 0 R/Encoding/"+e.encoding+" /FirstChar 29 /LastChar 255 /Widths "+t.API.PDFObject.convert(e.metadata.hmtx.widths)+">>"),n("endobj"),e.isAlreadyPutted=!0}}(e.font,e.out,e.newObject,e.putStream)}]);var o=function(t){var e,n,i=t.text||"",o=t.x,a=t.y,s=t.options||{},u=t.mutex||{},c=u.pdfEscape,l=u.activeFontKey,f=u.fonts,h=(u.activeFontSize,""),p=0,d="",g=f[n=l].encoding;if("Identity-H"!==f[n].encoding)return{text:i,x:o,y:a,options:s,mutex:u};for(d=i,n=l,"[object Array]"===Object.prototype.toString.call(i)&&(d=i[0]),p=0;p<d.length;p+=1)f[n].metadata.hasOwnProperty("cmap")&&(e=f[n].metadata.cmap.unicode.codeMap[d[p].charCodeAt(0)]),e||d[p].charCodeAt(0)<256&&f[n].metadata.hasOwnProperty("Unicode")?h+=d[p]:h+="";var m="";return parseInt(n.slice(1))<14||"WinAnsiEncoding"===g?m=function(t){for(var e="",n=0;n<t.length;n++)e+=""+t.charCodeAt(n).toString(16);return e}(c(h,n)):"Identity-H"===g&&(m=r(h,f[n])),u.isHex=!0,{text:m,x:o,y:a,options:s,mutex:u}};n.events.push(["postProcessText",function(t){var e=t.text||"",n=t.x,r=t.y,i=t.options,a=t.mutex,s=(i.lang,[]),u={text:e,x:n,y:r,options:i,mutex:a};if("[object Array]"===Object.prototype.toString.call(e)){var c=0;for(c=0;c<e.length;c+=1)"[object Array]"===Object.prototype.toString.call(e[c])&&3===e[c].length?s.push([o(Object.assign({},u,{text:e[c][0]})).text,e[c][1],e[c][2]]):s.push(o(Object.assign({},u,{text:e[c]})).text);t.text=s}else t.text=o(Object.assign({},u,{text:e})).text}])}(gt,"undefined"!=typeof self&&self||void 0!==r&&r||"undefined"!=typeof window&&window||Function("return this")()),pt=gt.API,dt=function(t){return void 0!==t&&(void 0===t.vFS&&(t.vFS={}),!0)},pt.existsFileInVFS=function(t){return!!dt(this.internal)&&void 0!==this.internal.vFS[t]},pt.addFileToVFS=function(t,e){return dt(this.internal),this.internal.vFS[t]=e,this},pt.getFileFromVFS=function(t){return dt(this.internal),void 0!==this.internal.vFS[t]?this.internal.vFS[t]:null},gt.API.addHTML=function(t,e,n,r,i){if("undefined"==typeof html2canvas&&"undefined"==typeof rasterizeHTML)throw new Error("You need either https://github.com/niklasvh/html2canvas or https://github.com/cburgmer/rasterizeHTML.js");"number"!=typeof e&&(r=e,i=n),"function"==typeof r&&(i=r,r=null),"function"!=typeof i&&(i=function(){});var o=this.internal,a=o.scaleFactor,s=o.pageSize.getWidth(),u=o.pageSize.getHeight();if((r=r||{}).onrendered=function(t){e=parseInt(e)||0,n=parseInt(n)||0;var o=r.dim||{},c=Object.assign({top:0,right:0,bottom:0,left:0,useFor:"content"},r.margin),l=o.h||Math.min(u,t.height/a),f=o.w||Math.min(s,t.width/a)-e,h=r.format||"JPEG",p=r.imageCompression||"SLOW";if(t.height>u-c.top-c.bottom&&r.pagesplit){var d=function(t,e,n,i,o){var a=document.createElement("canvas");a.height=o,a.width=i;var s=a.getContext("2d");return s.mozImageSmoothingEnabled=!1,s.webkitImageSmoothingEnabled=!1,s.msImageSmoothingEnabled=!1,s.imageSmoothingEnabled=!1,s.fillStyle=r.backgroundColor||"#ffffff",s.fillRect(0,0,i,o),s.drawImage(t,e,n,i,o,0,0,i,o),a},g=function(){for(var r,o,l=0,g=0,m={},v=!1;;){var y;if(g=0,m.top=0!==l?c.top:n,m.left=0!==l?c.left:e,v=(s-c.left-c.right)*a<t.width,"content"===c.useFor?0===l?(r=Math.min((s-c.left)*a,t.width),o=Math.min((u-c.top)*a,t.height-l)):(r=Math.min(s*a,t.width),o=Math.min(u*a,t.height-l),m.top=0):(r=Math.min((s-c.left-c.right)*a,t.width),o=Math.min((u-c.bottom-c.top)*a,t.height-l)),v)for(;;){"content"===c.useFor&&(0===g?r=Math.min((s-c.left)*a,t.width):(r=Math.min(s*a,t.width-g),m.left=0));var b=[y=d(t,g,l,r,o),m.left,m.top,y.width/a,y.height/a,h,null,p];if(this.addImage.apply(this,b),(g+=r)>=t.width)break;this.addPage()}else b=[y=d(t,0,l,r,o),m.left,m.top,y.width/a,y.height/a,h,null,p],this.addImage.apply(this,b);if((l+=o)>=t.height)break;this.addPage()}i(f,l,null,b)}.bind(this);if("CANVAS"===t.nodeName){var m=new Image;m.onload=g,m.src=t.toDataURL("image/png"),t=m}else g()}else{var v=Math.random().toString(35),y=[t,e,n,f,l,h,v,p];this.addImage.apply(this,y),i(f,l,v,y)}}.bind(this),"undefined"!=typeof html2canvas&&!r.rstz)return html2canvas(t,r);if("undefined"==typeof rasterizeHTML)return null;var c="drawDocument";return"string"==typeof t&&(c=/^http/.test(t)?"drawURL":"drawHTML"),r.width=r.width||s*a,rasterizeHTML[c](t,void 0,r).then((function(t){r.onrendered(t.image)}),(function(t){i(null,t)}))
/**
   * jsPDF fromHTML plugin. BETA stage. API subject to change. Needs browser
   * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
   *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
   *               2014 Diego Casorran, https://github.com/diegocr
   *               2014 Daniel Husar, https://github.com/danielhusar
   *               2014 Wolfgang Gassler, https://github.com/woolfg
   *               2014 Steven Spungin, https://github.com/flamenco
   *
   * @license
   * 
   * ====================================================================
   */},function(t){var e,n,r,i,a,s,u,c,l,f,h,p,d,g,m,v,y,b,w,x;e=function(){return function(e){return t.prototype=e,new t};function t(){}}(),f=function(t){var e,n,r,i,o,a,s;for(n=0,r=t.length,e=void 0,a=i=!1;!i&&n!==r;)(e=t[n]=t[n].trimLeft())&&(i=!0),n++;for(n=r-1;r&&!a&&-1!==n;)(e=t[n]=t[n].trimRight())&&(a=!0),n--;for(o=/\s+$/g,s=!0,n=0;n!==r;)"\u2028"!=t[n]&&(e=t[n].replace(/\s+/g," "),s&&(e=e.trimLeft()),e&&(s=o.test(e)),t[n]=e),n++;return t},p=function(t){var e,n,i;for(e=void 0,n=(i=t.split(",")).shift();!e&&n;)e=r[n.trim().toLowerCase()],n=i.shift();return e},d=function(t){var e;return-1<(t="auto"===t?"0px":t).indexOf("em")&&!isNaN(Number(t.replace("em","")))&&(t=18.719*Number(t.replace("em",""))+"px"),-1<t.indexOf("pt")&&!isNaN(Number(t.replace("pt","")))&&(t=1.333*Number(t.replace("pt",""))+"px"),(e=g[t])?e:void 0!==(e={"xx-small":9,"x-small":11,small:13,medium:16,large:19,"x-large":23,"xx-large":28,auto:0}[t])||(e=parseFloat(t))?g[t]=e/16:(e=t.match(/([\d\.]+)(px)/),Array.isArray(e)&&3===e.length?g[t]=parseFloat(e[1])/16:g[t]=1)},l=function(t){var e,n,r,o,l;return l=t,o=document.defaultView&&document.defaultView.getComputedStyle?document.defaultView.getComputedStyle(l,null):l.currentStyle?l.currentStyle:l.style,n=void 0,(e={})["font-family"]=p((r=function(t){return t=t.replace(/-\D/g,(function(t){return t.charAt(1).toUpperCase()})),o[t]})("font-family"))||"times",e["font-style"]=i[r("font-style")]||"normal",e["text-align"]=a[r("text-align")]||"left","bold"===(n=s[r("font-weight")]||"normal")&&("normal"===e["font-style"]?e["font-style"]=n:e["font-style"]=n+e["font-style"]),e["font-size"]=d(r("font-size"))||1,e["line-height"]=d(r("line-height"))||1,e.display="inline"===r("display")?"inline":"block",n="block"===e.display,e["margin-top"]=n&&d(r("margin-top"))||0,e["margin-bottom"]=n&&d(r("margin-bottom"))||0,e["padding-top"]=n&&d(r("padding-top"))||0,e["padding-bottom"]=n&&d(r("padding-bottom"))||0,e["margin-left"]=n&&d(r("margin-left"))||0,e["margin-right"]=n&&d(r("margin-right"))||0,e["padding-left"]=n&&d(r("padding-left"))||0,e["padding-right"]=n&&d(r("padding-right"))||0,e["page-break-before"]=r("page-break-before")||"auto",e.float=u[r("cssFloat")]||"none",e.clear=c[r("clear")]||"none",e.color=r("color"),e},m=function(t,e,n){var r,i,o,a,s;if(o=!1,a=i=void 0,r=n["#"+t.id])if("function"==typeof r)o=r(t,e);else for(i=0,a=r.length;!o&&i!==a;)o=r[i](t,e),i++;if(r=n[t.nodeName],!o&&r)if("function"==typeof r)o=r(t,e);else for(i=0,a=r.length;!o&&i!==a;)o=r[i](t,e),i++;for(s="string"==typeof t.className?t.className.split(" "):[],i=0;i<s.length;i++)if(r=n["."+s[i]],!o&&r)if("function"==typeof r)o=r(t,e);else for(i=0,a=r.length;!o&&i!==a;)o=r[i](t,e),i++;return o},x=function(t,e){var n,r,i,o,a,s,u,c,l;for(n=[],r=[],i=0,l=t.rows[0].cells.length,u=t.clientWidth;i<l;)c=t.rows[0].cells[i],r[i]={name:c.textContent.toLowerCase().replace(/\s+/g,""),prompt:c.textContent.replace(/\r?\n/g,""),width:c.clientWidth/u*e.pdf.internal.pageSize.getWidth()},i++;for(i=1;i<t.rows.length;){for(s=t.rows[i],a={},o=0;o<s.cells.length;)a[r[o].name]=s.cells[o].textContent.replace(/\r?\n/g,""),o++;n.push(a),i++}return{rows:n,headers:r}};var N={SCRIPT:1,STYLE:1,NOSCRIPT:1,OBJECT:1,EMBED:1,SELECT:1},L=1;n=function(t,r,i){var a,s,u,c,f,h,p,d;for(s=t.childNodes,a=void 0,(f="block"===(u=l(t)).display)&&(r.setBlockBoundary(),r.setBlockStyle(u)),c=0,h=s.length;c<h;){if("object"===o(a=s[c])){if(r.executeWatchFunctions(a),1===a.nodeType&&"HEADER"===a.nodeName){var g=a,y=r.pdf.margins_doc.top;r.pdf.internal.events.subscribe("addPage",(function(t){r.y=y,n(g,r,i),r.pdf.margins_doc.top=r.y+10,r.y+=10}),!1)}if(8===a.nodeType&&"#comment"===a.nodeName)~a.textContent.indexOf("ADD_PAGE")&&(r.pdf.addPage(),r.y=r.pdf.margins_doc.top);else if(1!==a.nodeType||N[a.nodeName])if(3===a.nodeType){var b=a.nodeValue;if(a.nodeValue&&"LI"===a.parentNode.nodeName)if("OL"===a.parentNode.parentNode.nodeName)b=L+++". "+b;else{var w=u["font-size"],A=(3-.75*w)*r.pdf.internal.scaleFactor,S=.75*w*r.pdf.internal.scaleFactor,_=1.74*w/r.pdf.internal.scaleFactor;d=function(t,e){this.pdf.circle(t+A,e+S,_,"FD")}}16&a.ownerDocument.body.compareDocumentPosition(a)&&r.addText(b,u)}else"string"==typeof a&&r.addText(a,u);else{var C;if("IMG"===a.nodeName){var k=a.getAttribute("src");C=v[r.pdf.sHashCode(k)||k]}if(C){r.pdf.internal.pageSize.getHeight()-r.pdf.margins_doc.bottom<r.y+a.height&&r.y>r.pdf.margins_doc.top&&(r.pdf.addPage(),r.y=r.pdf.margins_doc.top,r.executeWatchFunctions(a));var P=l(a),F=r.x,T=12/r.pdf.internal.scaleFactor,E=(P["margin-left"]+P["padding-left"])*T,j=(P["margin-right"]+P["padding-right"])*T,I=(P["margin-top"]+P["padding-top"])*T,B=(P["margin-bottom"]+P["padding-bottom"])*T;void 0!==P.float&&"right"===P.float?F+=r.settings.width-a.width-j:F+=E,r.pdf.addImage(C,F,r.y+I,a.width,a.height),C=void 0,"right"===P.float||"left"===P.float?(r.watchFunctions.push(function(t,e,n,i){return r.y>=e?(r.x+=t,r.settings.width+=n,!0):!!(i&&1===i.nodeType&&!N[i.nodeName]&&r.x+i.width>r.pdf.margins_doc.left+r.pdf.margins_doc.width)&&(r.x+=t,r.y=e,r.settings.width+=n,!0)}.bind(this,"left"===P.float?-a.width-E-j:0,r.y+a.height+I+B,a.width)),r.watchFunctions.push(function(t,e,n){return!(r.y<t&&e===r.pdf.internal.getNumberOfPages())||1===n.nodeType&&"both"===l(n).clear&&(r.y=t,!0)}.bind(this,r.y+a.height,r.pdf.internal.getNumberOfPages())),r.settings.width-=a.width+E+j,"left"===P.float&&(r.x+=a.width+E+j)):r.y+=a.height+I+B}else if("TABLE"===a.nodeName)p=x(a,r),r.y+=10,r.pdf.table(r.x,r.y,p.rows,p.headers,{autoSize:!1,printHeaders:i.printHeaders,margins:r.pdf.margins_doc,css:l(a)}),r.y=r.pdf.lastCellPos.y+r.pdf.lastCellPos.h+20;else if("OL"===a.nodeName||"UL"===a.nodeName)L=1,m(a,r,i)||n(a,r,i),r.y+=10;else if("LI"===a.nodeName){var O=r.x;r.x+=20/r.pdf.internal.scaleFactor,r.y+=3,m(a,r,i)||n(a,r,i),r.x=O}else"BR"===a.nodeName?(r.y+=u["font-size"]*r.pdf.internal.scaleFactor,r.addText("\u2028",e(u))):m(a,r,i)||n(a,r,i)}}c++}if(i.outY=r.y,f)return r.setBlockBoundary(d)},v={},y=function(t,e,n,r){var i,o=t.getElementsByTagName("img"),a=o.length,s=0;function u(){e.pdf.internal.events.publish("imagesLoaded"),r(i)}function c(t,n,r){if(t){var o=new Image;i=++s,o.crossOrigin="",o.onerror=o.onload=function(){if(o.complete&&(0===o.src.indexOf("data:image/")&&(o.width=n||o.width||0,o.height=r||o.height||0),o.width+o.height)){var i=e.pdf.sHashCode(t)||t;v[i]=v[i]||o}--s||u()},o.src=t}}for(;a--;)c(o[a].getAttribute("src"),o[a].width,o[a].height);return s||u()},b=function(t,e,r){var i=t.getElementsByTagName("footer");if(0<i.length){i=i[0];var o=e.pdf.internal.write,a=e.y;e.pdf.internal.write=function(){},n(i,e,r);var s=Math.ceil(e.y-a)+5;e.y=a,e.pdf.internal.write=o,e.pdf.margins_doc.bottom+=s;for(var u=function(t){var o=void 0!==t?t.pageNumber:1,a=e.y;e.y=e.pdf.internal.pageSize.getHeight()-e.pdf.margins_doc.bottom,e.pdf.margins_doc.bottom-=s;for(var u=i.getElementsByTagName("span"),c=0;c<u.length;++c)-1<(" "+u[c].className+" ").replace(/[\n\t]/g," ").indexOf(" pageCounter ")&&(u[c].innerHTML=o),-1<(" "+u[c].className+" ").replace(/[\n\t]/g," ").indexOf(" totalPages ")&&(u[c].innerHTML="###jsPDFVarTotalPages###");n(i,e,r),e.pdf.margins_doc.bottom+=s,e.y=a},c=i.getElementsByTagName("span"),l=0;l<c.length;++l)-1<(" "+c[l].className+" ").replace(/[\n\t]/g," ").indexOf(" totalPages ")&&e.pdf.internal.events.subscribe("htmlRenderingFinished",e.pdf.putTotalPages.bind(e.pdf,"###jsPDFVarTotalPages###"),!0);e.pdf.internal.events.subscribe("addPage",u,!1),u(),N.FOOTER=1}},w=function(t,e,r,i,o,a){if(!e)return!1;var s,u,c,l;"string"==typeof e||e.parentNode||(e=""+e.innerHTML),"string"==typeof e&&(s=e.replace(/<\/?script[^>]*?>/gi,""),l="jsPDFhtmlText"+Date.now().toString()+(1e3*Math.random()).toFixed(0),(c=document.createElement("div")).style.cssText="position: absolute !important;clip: rect(1px 1px 1px 1px); /* IE6, IE7 */clip: rect(1px, 1px, 1px, 1px);padding:0 !important;border:0 !important;height: 1px !important;width: 1px !important; top:auto;left:-100px;overflow: hidden;",c.innerHTML='<iframe style="height:1px;width:1px" name="'+l+'" />',document.body.appendChild(c),(u=window.frames[l]).document.open(),u.document.writeln(s),u.document.close(),e=u.document.body);var f,p=new h(t,r,i,o);return y.call(this,e,p,o.elementHandlers,(function(t){b(e,p,o.elementHandlers),n(e,p,o.elementHandlers),p.pdf.internal.events.publish("htmlRenderingFinished"),f=p.dispose(),"function"==typeof a?a(f):t&&console.error("jsPDF Warning: rendering issues? provide a callback to fromHTML!")})),f||{x:p.x,y:p.y}},(h=function(t,e,n,r){return this.pdf=t,this.x=e,this.y=n,this.settings=r,this.watchFunctions=[],this.init(),this}).prototype.init=function(){return this.paragraph={text:[],style:[]},this.pdf.internal.write("q")},h.prototype.dispose=function(){return this.pdf.internal.write("Q"),{x:this.x,y:this.y,ready:!0}},h.prototype.executeWatchFunctions=function(t){var e=!1,n=[];if(0<this.watchFunctions.length){for(var r=0;r<this.watchFunctions.length;++r)!0===this.watchFunctions[r](t)?e=!0:n.push(this.watchFunctions[r]);this.watchFunctions=n}return e},h.prototype.splitFragmentsIntoLines=function(t,n){var r,i,o,a,s,u,c,l,f,h,p,d,g,m;for(h=this.pdf.internal.scaleFactor,a={},u=c=l=m=s=o=f=i=void 0,d=[p=[]],r=0,g=this.settings.width;t.length;)if(s=t.shift(),m=n.shift(),s)if((o=a[(i=m["font-family"])+(f=m["font-style"])])||(o=this.pdf.internal.getFont(i,f).metadata.Unicode,a[i+f]=o),l={widths:o.widths,kerning:o.kerning,fontSize:12*m["font-size"],textIndent:r},c=this.pdf.getStringUnitWidth(s,l)*l.fontSize/h,"\u2028"==s)p=[],d.push(p);else if(g<r+c){for(u=this.pdf.splitTextToSize(s,g,l),p.push([u.shift(),m]);u.length;)p=[[u.shift(),m]],d.push(p);r=this.pdf.getStringUnitWidth(p[0][0],l)*l.fontSize/h}else p.push([s,m]),r+=c;if(void 0!==m["text-align"]&&("center"===m["text-align"]||"right"===m["text-align"]||"justify"===m["text-align"]))for(var v=0;v<d.length;++v){var y=this.pdf.getStringUnitWidth(d[v][0][0],l)*l.fontSize/h;0<v&&(d[v][0][1]=e(d[v][0][1]));var b=g-y;if("right"===m["text-align"])d[v][0][1]["margin-left"]=b;else if("center"===m["text-align"])d[v][0][1]["margin-left"]=b/2;else if("justify"===m["text-align"]){var w=d[v][0][0].split(" ").length-1;d[v][0][1]["word-spacing"]=b/w,v===d.length-1&&(d[v][0][1]["word-spacing"]=0)}}return d},h.prototype.RenderTextFragment=function(t,e){var n,r;r=0,this.pdf.internal.pageSize.getHeight()-this.pdf.margins_doc.bottom<this.y+this.pdf.internal.getFontSize()&&(this.pdf.internal.write("ET","Q"),this.pdf.addPage(),this.y=this.pdf.margins_doc.top,this.pdf.internal.write("q","BT",this.getPdfColor(e.color),this.pdf.internal.getCoordinateString(this.x),this.pdf.internal.getVerticalCoordinateString(this.y),"Td"),r=Math.max(r,e["line-height"],e["font-size"]),this.pdf.internal.write(0,(-12*r).toFixed(2),"Td")),n=this.pdf.internal.getFont(e["font-family"],e["font-style"]);var i=this.getPdfColor(e.color);i!==this.lastTextColor&&(this.pdf.internal.write(i),this.lastTextColor=i),void 0!==e["word-spacing"]&&0<e["word-spacing"]&&this.pdf.internal.write(e["word-spacing"].toFixed(2),"Tw"),this.pdf.internal.write("/"+n.id,(12*e["font-size"]).toFixed(2),"Tf","("+this.pdf.internal.pdfEscape(t)+") Tj"),void 0!==e["word-spacing"]&&this.pdf.internal.write(0,"Tw")},h.prototype.getPdfColor=function(t){var e,n,r,i=/rgb\s*\(\s*(\d+),\s*(\d+),\s*(\d+\s*)\)/.exec(t);if(null!=i)e=parseInt(i[1]),n=parseInt(i[2]),r=parseInt(i[3]);else{if("string"==typeof t&&"#"!=t.charAt(0)){var o=new RGBColor(t);t=o.ok?o.toHex():"#000000"}e=t.substring(1,3),e=parseInt(e,16),n=t.substring(3,5),n=parseInt(n,16),r=t.substring(5,7),r=parseInt(r,16)}if("string"==typeof e&&/^#[0-9A-Fa-f]{6}$/.test(e)){var a=parseInt(e.substr(1),16);e=a>>16&255,n=a>>8&255,r=255&a}var s=this.f3;return 0===e&&0===n&&0===r||void 0===n?s(e/255)+" g":[s(e/255),s(n/255),s(r/255),"rg"].join(" ")},h.prototype.f3=function(t){return t.toFixed(3)},h.prototype.renderParagraph=function(t){var e,n,r,i,o,a,s,u,c,l,h,p,d;if(r=f(this.paragraph.text),p=this.paragraph.style,e=this.paragraph.blockstyle,this.paragraph.priorblockstyle,this.paragraph={text:[],style:[],blockstyle:{},priorblockstyle:e},r.join("").trim()){s=this.splitFragmentsIntoLines(r,p),u=a=void 0,n=12/this.pdf.internal.scaleFactor,this.priorMarginBottom=this.priorMarginBottom||0,h=(Math.max((e["margin-top"]||0)-this.priorMarginBottom,0)+(e["padding-top"]||0))*n,l=((e["margin-bottom"]||0)+(e["padding-bottom"]||0))*n,this.priorMarginBottom=e["margin-bottom"]||0,"always"===e["page-break-before"]&&(this.pdf.addPage(),this.y=0,h=((e["margin-top"]||0)+(e["padding-top"]||0))*n),c=this.pdf.internal.write,o=i=void 0,this.y+=h,c("q","BT 0 g",this.pdf.internal.getCoordinateString(this.x),this.pdf.internal.getVerticalCoordinateString(this.y),"Td");for(var g=0;s.length;){for(i=u=0,o=(a=s.shift()).length;i!==o;)a[i][0].trim()&&(u=Math.max(u,a[i][1]["line-height"],a[i][1]["font-size"]),d=7*a[i][1]["font-size"]),i++;var m=0,v=0;for(void 0!==a[0][1]["margin-left"]&&0<a[0][1]["margin-left"]&&(m=(v=this.pdf.internal.getCoordinateString(a[0][1]["margin-left"]))-g,g=v),c(m+Math.max(e["margin-left"]||0,0)*n,(-12*u).toFixed(2),"Td"),i=0,o=a.length;i!==o;)a[i][0]&&this.RenderTextFragment(a[i][0],a[i][1]),i++;if(this.y+=u*n,this.executeWatchFunctions(a[0][1])&&0<s.length){var y=[],b=[];s.forEach((function(t){for(var e=0,n=t.length;e!==n;)t[e][0]&&(y.push(t[e][0]+" "),b.push(t[e][1])),++e})),s=this.splitFragmentsIntoLines(f(y),b),c("ET","Q"),c("q","BT 0 g",this.pdf.internal.getCoordinateString(this.x),this.pdf.internal.getVerticalCoordinateString(this.y),"Td")}}return t&&"function"==typeof t&&t.call(this,this.x-9,this.y-d/2),c("ET","Q"),this.y+=l}},h.prototype.setBlockBoundary=function(t){return this.renderParagraph(t)},h.prototype.setBlockStyle=function(t){return this.paragraph.blockstyle=t},h.prototype.addText=function(t,e){return this.paragraph.text.push(t),this.paragraph.style.push(e)},r={helvetica:"helvetica","sans-serif":"helvetica","times new roman":"times",serif:"times",times:"times",monospace:"courier",courier:"courier"},s={100:"normal",200:"normal",300:"normal",400:"normal",500:"bold",600:"bold",700:"bold",800:"bold",900:"bold",normal:"normal",bold:"bold",bolder:"bold",lighter:"normal"},i={normal:"normal",italic:"italic",oblique:"italic"},a={left:"left",right:"right",center:"center",justify:"justify"},u={none:"none",right:"right",left:"left"},c={none:"none",both:"both"},g={normal:1},t.fromHTML=function(t,e,n,r,i,o){return this.margins_doc=o||{top:0,bottom:0},r||(r={}),r.elementHandlers||(r.elementHandlers={}),w(this,t,isNaN(e)?4:e,isNaN(n)?4:n,r,i)}}(gt.API),gt.API,("undefined"!=typeof window&&window||void 0!==r&&r).html2pdf=function(t,e,n){var r=e.canvas;if(r){var i,o;if((r.pdf=e).annotations={_nameMap:[],createAnnotation:function(t,n){var r,i=e.context2d._wrapX(n.left),o=e.context2d._wrapY(n.top),a=(e.context2d._page(n.top),t.indexOf("#"));r=0<=a?{name:t.substring(a+1)}:{url:t},e.link(i,o,n.right-n.left,n.bottom-n.top,r)},setName:function(t,n){var r=e.context2d._wrapX(n.left),i=e.context2d._wrapY(n.top),o=e.context2d._page(n.top);this._nameMap[t]={page:o,x:r,y:i}}},r.annotations=e.annotations,e.context2d._pageBreakAt=function(t){this.pageBreaks.push(t)},e.context2d._gotoPage=function(t){for(;e.internal.getNumberOfPages()<t;)e.addPage();e.setPage(t)},"string"==typeof t){t=t.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"");var a,s,u=document.createElement("iframe");document.body.appendChild(u),null!=(a=u.contentDocument)&&null!=a||(a=u.contentWindow.document),a.open(),a.write(t),a.close(),i=a.body,s=a.body||{},t=a.documentElement||{},o=Math.max(s.scrollHeight,s.offsetHeight,t.clientHeight,t.scrollHeight,t.offsetHeight)}else s=(i=t).body||{},o=Math.max(s.scrollHeight,s.offsetHeight,t.clientHeight,t.scrollHeight,t.offsetHeight);var c={async:!0,allowTaint:!0,backgroundColor:"#ffffff",canvas:r,imageTimeout:15e3,logging:!0,proxy:null,removeContainer:!0,foreignObjectRendering:!1,useCORS:!1,windowHeight:o=e.internal.pageSize.getHeight(),scrollY:o};e.context2d.pageWrapYEnabled=!0,e.context2d.pageWrapY=e.internal.pageSize.getHeight(),html2canvas(i,c).then((function(t){n&&(u&&u.parentElement.removeChild(u),n(e))}))}else alert("jsPDF canvas plugin not installed")},window.tmp=html2pdf,function(t){var e=t.BlobBuilder||t.WebKitBlobBuilder||t.MSBlobBuilder||t.MozBlobBuilder;t.URL=t.URL||t.webkitURL||function(t,e){return(e=document.createElement("a")).href=t,e};var n=t.Blob,r=URL.createObjectURL,i=URL.revokeObjectURL,o=t.Symbol&&t.Symbol.toStringTag,a=!1,s=!1,u=!!t.ArrayBuffer,c=e&&e.prototype.append&&e.prototype.getBlob;try{a=2===new Blob(["Ã¤"]).size,s=2===new Blob([new Uint8Array([1,2])]).size}catch(a){}function l(t){return t.map((function(t){if(t.buffer instanceof ArrayBuffer){var e=t.buffer;if(t.byteLength!==e.byteLength){var n=new Uint8Array(t.byteLength);n.set(new Uint8Array(e,t.byteOffset,t.byteLength)),e=n.buffer}return e}return t}))}function f(t,n){n=n||{};var r=new e;return l(t).forEach((function(t){r.append(t)})),n.type?r.getBlob(n.type):r.getBlob()}function h(t,e){return new n(l(t),e||{})}if(t.Blob&&(f.prototype=Blob.prototype,h.prototype=Blob.prototype),o)try{File.prototype[o]="File",Blob.prototype[o]="Blob",FileReader.prototype[o]="FileReader"}catch(a){}function p(){var e=!!t.ActiveXObject||"-ms-scroll-limit"in document.documentElement.style&&"-ms-ime-align"in document.documentElement.style,n=t.XMLHttpRequest&&t.XMLHttpRequest.prototype.send;e&&n&&(XMLHttpRequest.prototype.send=function(t){t instanceof Blob&&this.setRequestHeader("Content-Type",t.type),n.call(this,t)});try{new File([],"")}catch(e){try{var r=new Function('class File extends Blob {constructor(chunks, name, opts) {opts = opts || {};super(chunks, opts || {});this.name = name;this.lastModifiedDate = opts.lastModified ? new Date(opts.lastModified) : new Date;this.lastModified = +this.lastModifiedDate;}};return new File([], ""), File')();t.File=r}catch(e){r=function(t,e,n){var r=new Blob(t,n),i=n&&void 0!==n.lastModified?new Date(n.lastModified):new Date;return r.name=e,r.lastModifiedDate=i,r.lastModified=+i,r.toString=function(){return"[object File]"},o&&(r[o]="File"),r},t.File=r}}}a?(p(),t.Blob=s?t.Blob:h):c?(p(),t.Blob=f):function(){function e(t){for(var e=[],n=0;n<t.length;n++){var r=t.charCodeAt(n);r<128?e.push(r):r<2048?e.push(192|r>>6,128|63&r):r<55296||57344<=r?e.push(224|r>>12,128|r>>6&63,128|63&r):(n++,r=65536+((1023&r)<<10|1023&t.charCodeAt(n)),e.push(240|r>>18,128|r>>12&63,128|r>>6&63,128|63&r))}return e}function n(t){var e,n,r,i,o,a;for(e="",r=t.length,n=0;n<r;)switch((i=t[n++])>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:e+=String.fromCharCode(i);break;case 12:case 13:o=t[n++],e+=String.fromCharCode((31&i)<<6|63&o);break;case 14:o=t[n++],a=t[n++],e+=String.fromCharCode((15&i)<<12|(63&o)<<6|(63&a)<<0)}return e}function o(t){for(var e=new Array(t.byteLength),n=new Uint8Array(t),r=e.length;r--;)e[r]=n[r];return e}function a(t){for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n=[],r=0;r<t.length;r+=3){var i=t[r],o=r+1<t.length,a=o?t[r+1]:0,s=r+2<t.length,u=s?t[r+2]:0,c=i>>2,l=(3&i)<<4|a>>4,f=(15&a)<<2|u>>6,h=63&u;s||(h=64,o||(f=64)),n.push(e[c],e[l],e[f],e[h])}return n.join("")}var s=Object.create||function(t){function e(){}return e.prototype=t,new e};if(u)var c=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],l=ArrayBuffer.isView||function(t){return t&&-1<c.indexOf(Object.prototype.toString.call(t))};function f(t,n){for(var r=0,i=(t=t||[]).length;r<i;r++){var a=t[r];a instanceof f?t[r]=a._buffer:"string"==typeof a?t[r]=e(a):u&&(ArrayBuffer.prototype.isPrototypeOf(a)||l(a))?t[r]=o(a):u&&(s=a)&&DataView.prototype.isPrototypeOf(s)?t[r]=o(a.buffer):t[r]=e(String(a))}var s;this._buffer=[].concat.apply([],t),this.size=this._buffer.length,this.type=n&&n.type||""}function h(t,e,n){var r=f.call(this,t,n=n||{})||this;return r.name=e,r.lastModifiedDate=n.lastModified?new Date(n.lastModified):new Date,r.lastModified=+r.lastModifiedDate,r}if(f.prototype.slice=function(t,e,n){return new f([this._buffer.slice(t||0,e||this._buffer.length)],{type:n})},f.prototype.toString=function(){return"[object Blob]"},(h.prototype=s(f.prototype)).constructor=h,Object.setPrototypeOf)Object.setPrototypeOf(h,f);else try{h.__proto__=f}catch(s){}function p(){if(!(this instanceof p))throw new TypeError("Failed to construct 'FileReader': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");var t=document.createDocumentFragment();this.addEventListener=t.addEventListener,this.dispatchEvent=function(e){var n=this["on"+e.type];"function"==typeof n&&n(e),t.dispatchEvent(e)},this.removeEventListener=t.removeEventListener}function d(t,e,n){if(!(e instanceof f))throw new TypeError("Failed to execute '"+n+"' on 'FileReader': parameter 1 is not of type 'Blob'.");t.result="",setTimeout((function(){this.readyState=p.LOADING,t.dispatchEvent(new Event("load")),t.dispatchEvent(new Event("loadend"))}))}h.prototype.toString=function(){return"[object File]"},p.EMPTY=0,p.LOADING=1,p.DONE=2,p.prototype.error=null,p.prototype.onabort=null,p.prototype.onerror=null,p.prototype.onload=null,p.prototype.onloadend=null,p.prototype.onloadstart=null,p.prototype.onprogress=null,p.prototype.readAsDataURL=function(t){d(this,t,"readAsDataURL"),this.result="data:"+t.type+";base64,"+a(t._buffer)},p.prototype.readAsText=function(t){d(this,t,"readAsText"),this.result=n(t._buffer)},p.prototype.readAsArrayBuffer=function(t){d(this,t,"readAsText"),this.result=t._buffer.slice()},p.prototype.abort=function(){},URL.createObjectURL=function(t){return t instanceof f?"data:"+t.type+";base64,"+a(t._buffer):r.call(URL,t)},URL.revokeObjectURL=function(t){i&&i.call(URL,t)};var g=t.XMLHttpRequest&&t.XMLHttpRequest.prototype.send;g&&(XMLHttpRequest.prototype.send=function(t){t instanceof f?(this.setRequestHeader("Content-Type",t.type),g.call(this,n(t._buffer))):g.call(this,t)}),t.FileReader=p,t.File=h,t.Blob=f}()}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")());var mt,vt,yt,bt,wt,xt,Nt,Lt,At,St,_t,Ct,kt,Pt,Ft,Tt=Tt||function(t){if(!(void 0===t||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var e=t.document,n=function(){return t.URL||t.webkitURL||t},r=e.createElementNS("http://www.w3.org/1999/xhtml","a"),i="download"in r,o=/constructor/i.test(t.HTMLElement)||t.safari,a=/CriOS\/[\d]+/.test(navigator.userAgent),s=t.setImmediate||t.setTimeout,u=function(t){s((function(){throw t}),0)},c=function(t){setTimeout((function(){"string"==typeof t?n().revokeObjectURL(t):t.remove()}),4e4)},l=function(t){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob([String.fromCharCode(65279),t],{type:t.type}):t},f=function(e,f,h){h||(e=l(e));var p,d=this,g="application/octet-stream"===e.type,m=function(){!function(t,e,n){for(var r=(e=[].concat(e)).length;r--;){var i=t["on"+e[r]];if("function"==typeof i)try{i.call(t,t)}catch(t){u(t)}}}(d,"writestart progress write writeend".split(" "))};if(d.readyState=d.INIT,i)return p=n().createObjectURL(e),void s((function(){var t,e;r.href=p,r.download=f,t=r,e=new MouseEvent("click"),t.dispatchEvent(e),m(),c(p),d.readyState=d.DONE}),0);!function(){if((a||g&&o)&&t.FileReader){var r=new FileReader;return r.onloadend=function(){var e=a?r.result:r.result.replace(/^data:[^;]*;/,"data:attachment/file;");t.open(e,"_blank")||(t.location.href=e),e=void 0,d.readyState=d.DONE,m()},r.readAsDataURL(e),d.readyState=d.INIT}p||(p=n().createObjectURL(e)),g?t.location.href=p:t.open(p,"_blank")||(t.location.href=p),d.readyState=d.DONE,m(),c(p)}()},h=f.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(t,e,n){return e=e||t.name||"download",n||(t=l(t)),navigator.msSaveOrOpenBlob(t,e)}:(h.abort=function(){},h.readyState=h.INIT=0,h.WRITING=1,h.DONE=2,h.error=h.onwritestart=h.onprogress=h.onwrite=h.onabort=h.onerror=h.onwriteend=null,function(t,e,n){return new f(t,e||t.name||"download",n)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0);function Et(t){var e=0;if(71!==t[e++]||73!==t[e++]||70!==t[e++]||56!==t[e++]||56!=(t[e++]+1&253)||97!==t[e++])throw"Invalid GIF 87a/89a header.";var n=t[e++]|t[e++]<<8,r=t[e++]|t[e++]<<8,i=t[e++],o=i>>7,a=1<<1+(7&i);t[e++],t[e++];var s=null;o&&(s=e,e+=3*a);var u=!0,c=[],l=0,f=null,h=0,p=null;for(this.width=n,this.height=r;u&&e<t.length;)switch(t[e++]){case 33:switch(t[e++]){case 255:if(11!==t[e]||78==t[e+1]&&69==t[e+2]&&84==t[e+3]&&83==t[e+4]&&67==t[e+5]&&65==t[e+6]&&80==t[e+7]&&69==t[e+8]&&50==t[e+9]&&46==t[e+10]&&48==t[e+11]&&3==t[e+12]&&1==t[e+13]&&0==t[e+16])e+=14,p=t[e++]|t[e++]<<8,e++;else for(e+=12;0!==(A=t[e++]);)e+=A;break;case 249:if(4!==t[e++]||0!==t[e+4])throw"Invalid graphics extension block.";var d=t[e++];l=t[e++]|t[e++]<<8,f=t[e++],0==(1&d)&&(f=null),h=d>>2&7,e++;break;case 254:for(;0!==(A=t[e++]);)e+=A;break;default:throw"Unknown graphic control label: 0x"+t[e-1].toString(16)}break;case 44:var g=t[e++]|t[e++]<<8,m=t[e++]|t[e++]<<8,v=t[e++]|t[e++]<<8,y=t[e++]|t[e++]<<8,b=t[e++],w=b>>6&1,x=s,N=!1;b>>7&&(N=!0,x=e,e+=3*(1<<1+(7&b)));var L=e;for(e++;;){var A;if(0===(A=t[e++]))break;e+=A}c.push({x:g,y:m,width:v,height:y,has_local_palette:N,palette_offset:x,data_offset:L,data_length:e-L,transparent_index:f,interlaced:!!w,delay:l,disposal:h});break;case 59:u=!1;break;default:throw"Unknown gif block: 0x"+t[e-1].toString(16)}this.numFrames=function(){return c.length},this.loopCount=function(){return p},this.frameInfo=function(t){if(t<0||t>=c.length)throw"Frame index out of range.";return c[t]},this.decodeAndBlitFrameBGRA=function(e,r){var i=this.frameInfo(e),o=i.width*i.height,a=new Uint8Array(o);jt(t,i.data_offset,a,o);var s=i.palette_offset,u=i.transparent_index;null===u&&(u=256);var c=i.width,l=n-c,f=c,h=4*(i.y*n+i.x),p=4*((i.y+i.height)*n+i.x),d=h,g=4*l;!0===i.interlaced&&(g+=4*(c+l)*7);for(var m=8,v=0,y=a.length;v<y;++v){var b=a[v];if(0===f&&(f=c,p<=(d+=g)&&(g=l+4*(c+l)*(m-1),d=h+(c+l)*(m<<1),m>>=1)),b===u)d+=4;else{var w=t[s+3*b],x=t[s+3*b+1],N=t[s+3*b+2];r[d++]=N,r[d++]=x,r[d++]=w,r[d++]=255}--f}},this.decodeAndBlitFrameRGBA=function(e,r){var i=this.frameInfo(e),o=i.width*i.height,a=new Uint8Array(o);jt(t,i.data_offset,a,o);var s=i.palette_offset,u=i.transparent_index;null===u&&(u=256);var c=i.width,l=n-c,f=c,h=4*(i.y*n+i.x),p=4*((i.y+i.height)*n+i.x),d=h,g=4*l;!0===i.interlaced&&(g+=4*(c+l)*7);for(var m=8,v=0,y=a.length;v<y;++v){var b=a[v];if(0===f&&(f=c,p<=(d+=g)&&(g=l+4*(c+l)*(m-1),d=h+(c+l)*(m<<1),m>>=1)),b===u)d+=4;else{var w=t[s+3*b],x=t[s+3*b+1],N=t[s+3*b+2];r[d++]=w,r[d++]=x,r[d++]=N,r[d++]=255}--f}}}function jt(t,e,n,r){for(var i=t[e++],o=1<<i,a=o+1,s=a+1,u=i+1,c=(1<<u)-1,l=0,f=0,h=0,p=t[e++],d=new Int32Array(4096),g=null;;){for(;l<16&&0!==p;)f|=t[e++]<<l,l+=8,1===p?p=t[e++]:--p;if(l<u)break;var m=f&c;if(f>>=u,l-=u,m!==o){if(m===a)break;for(var v=m<s?m:g,y=0,b=v;o<b;)b=d[b]>>8,++y;var w=b;if(r<h+y+(v!==m?1:0))return void console.log("Warning, gif stream longer than expected.");n[h++]=w;var x=h+=y;for(v!==m&&(n[h++]=w),b=v;y--;)b=d[b],n[--x]=255&b,b>>=8;null!==g&&s<4096&&(d[s++]=g<<8|w,c+1<=s&&u<12&&(++u,c=c<<1|1)),g=m}else s=a+1,c=(1<<(u=i+1))-1,g=null}return h!==r&&console.log("Warning, gif stream shorter than expected."),n}try{e.GifWriter=function(t,e,n,r){var i=0,o=void 0===(r=void 0===r?{}:r).loop?null:r.loop,a=void 0===r.palette?null:r.palette;if(e<=0||n<=0||65535<e||65535<n)throw"Width/Height invalid.";function s(t){var e=t.length;if(e<2||256<e||e&e-1)throw"Invalid code/color length, must be power of 2 and 2 .. 256.";return e}t[i++]=71,t[i++]=73,t[i++]=70,t[i++]=56,t[i++]=57,t[i++]=97;var u=0,c=0;if(null!==a){for(var l=s(a);l>>=1;)++u;if(l=1<<u,--u,void 0!==r.background){if(l<=(c=r.background))throw"Background index out of range.";if(0===c)throw"Background index explicitly passed as 0."}}if(t[i++]=255&e,t[i++]=e>>8&255,t[i++]=255&n,t[i++]=n>>8&255,t[i++]=(null!==a?128:0)|u,t[i++]=c,t[i++]=0,null!==a)for(var f=0,h=a.length;f<h;++f){var p=a[f];t[i++]=p>>16&255,t[i++]=p>>8&255,t[i++]=255&p}if(null!==o){if(o<0||65535<o)throw"Loop count invalid.";t[i++]=33,t[i++]=255,t[i++]=11,t[i++]=78,t[i++]=69,t[i++]=84,t[i++]=83,t[i++]=67,t[i++]=65,t[i++]=80,t[i++]=69,t[i++]=50,t[i++]=46,t[i++]=48,t[i++]=3,t[i++]=1,t[i++]=255&o,t[i++]=o>>8&255,t[i++]=0}var d=!1;this.addFrame=function(e,n,r,o,u,c){if(!0===d&&(--i,d=!1),c=void 0===c?{}:c,e<0||n<0||65535<e||65535<n)throw"x/y invalid.";if(r<=0||o<=0||65535<r||65535<o)throw"Width/Height invalid.";if(u.length<r*o)throw"Not enough pixels for the frame size.";var l=!0,f=c.palette;if(null==f&&(l=!1,f=a),null==f)throw"Must supply either a local or global palette.";for(var h=s(f),p=0;h>>=1;)++p;h=1<<p;var g=void 0===c.delay?0:c.delay,m=void 0===c.disposal?0:c.disposal;if(m<0||3<m)throw"Disposal out of range.";var v=!1,y=0;if(void 0!==c.transparent&&null!==c.transparent&&(v=!0,(y=c.transparent)<0||h<=y))throw"Transparent color index.";if((0!==m||v||0!==g)&&(t[i++]=33,t[i++]=249,t[i++]=4,t[i++]=m<<2|(!0===v?1:0),t[i++]=255&g,t[i++]=g>>8&255,t[i++]=y,t[i++]=0),t[i++]=44,t[i++]=255&e,t[i++]=e>>8&255,t[i++]=255&n,t[i++]=n>>8&255,t[i++]=255&r,t[i++]=r>>8&255,t[i++]=255&o,t[i++]=o>>8&255,t[i++]=!0===l?128|p-1:0,!0===l)for(var b=0,w=f.length;b<w;++b){var x=f[b];t[i++]=x>>16&255,t[i++]=x>>8&255,t[i++]=255&x}i=function(t,e,n,r){t[e++]=n;var i=e++,o=1<<n,a=o-1,s=o+1,u=s+1,c=n+1,l=0,f=0;function h(n){for(;n<=l;)t[e++]=255&f,f>>=8,l-=8,e===i+256&&(t[i]=255,i=e++)}function p(t){f|=t<<l,l+=c,h(8)}var d=r[0]&a,g={};p(o);for(var m=1,v=r.length;m<v;++m){var y=r[m]&a,b=d<<8|y,w=g[b];if(void 0===w){for(f|=d<<l,l+=c;8<=l;)t[e++]=255&f,f>>=8,l-=8,e===i+256&&(t[i]=255,i=e++);4096===u?(p(o),u=s+1,c=n+1,g={}):(1<<c<=u&&++c,g[b]=u++),d=y}else d=w}return p(d),p(s),h(1),i+1===e?t[i]=0:(t[i]=e-i-1,t[e++]=0),e}(t,i,p<2?2:p,u)},this.end=function(){return!1===d&&(t[i++]=59,d=!0),i}},e.GifReader=Et}catch(s){}function It(t){var e,n,r,i,o,a=Math.floor,s=new Array(64),u=new Array(64),c=new Array(64),l=new Array(64),f=new Array(65535),h=new Array(65535),p=new Array(64),d=new Array(64),g=[],m=0,v=7,y=new Array(64),b=new Array(64),w=new Array(64),x=new Array(256),N=new Array(2048),L=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63],A=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0],S=[0,1,2,3,4,5,6,7,8,9,10,11],_=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125],C=[1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250],k=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0],P=[0,1,2,3,4,5,6,7,8,9,10,11],F=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119],T=[0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250];function E(t,e){for(var n=0,r=0,i=new Array,o=1;o<=16;o++){for(var a=1;a<=t[o];a++)i[e[r]]=[],i[e[r]][0]=n,i[e[r]][1]=o,r++,n++;n*=2}return i}function j(t){for(var e=t[0],n=t[1]-1;0<=n;)e&1<<n&&(m|=1<<v),n--,--v<0&&(255==m?(I(255),I(0)):I(m),v=7,m=0)}function I(t){g.push(t)}function B(t){I(t>>8&255),I(255&t)}function O(t,e,n,r,i){for(var o,a=i[0],s=i[240],u=function(t,e){var n,r,i,o,a,s,u,c,l,f,h=0;for(l=0;l<8;++l){n=t[h],r=t[h+1],i=t[h+2],o=t[h+3],a=t[h+4],s=t[h+5],u=t[h+6];var d=n+(c=t[h+7]),g=n-c,m=r+u,v=r-u,y=i+s,b=i-s,w=o+a,x=o-a,N=d+w,L=d-w,A=m+y,S=m-y;t[h]=N+A,t[h+4]=N-A;var _=.707106781*(S+L);t[h+2]=L+_,t[h+6]=L-_;var C=.382683433*((N=x+b)-(S=v+g)),k=.5411961*N+C,P=1.306562965*S+C,F=.707106781*(A=b+v),T=g+F,E=g-F;t[h+5]=E+k,t[h+3]=E-k,t[h+1]=T+P,t[h+7]=T-P,h+=8}for(l=h=0;l<8;++l){n=t[h],r=t[h+8],i=t[h+16],o=t[h+24],a=t[h+32],s=t[h+40],u=t[h+48];var j=n+(c=t[h+56]),I=n-c,B=r+u,O=r-u,M=i+s,q=i-s,D=o+a,R=o-a,U=j+D,z=j-D,H=B+M,W=B-M;t[h]=U+H,t[h+32]=U-H;var V=.707106781*(W+z);t[h+16]=z+V,t[h+48]=z-V;var G=.382683433*((U=R+q)-(W=O+I)),Y=.5411961*U+G,X=1.306562965*W+G,J=.707106781*(H=q+O),$=I+J,K=I-J;t[h+40]=K+Y,t[h+24]=K-Y,t[h+8]=$+X,t[h+56]=$-X,h++}for(l=0;l<64;++l)f=t[l]*e[l],p[l]=0<f?f+.5|0:f-.5|0;return p}(t,e),c=0;c<64;++c)d[L[c]]=u[c];var l=d[0]-n;n=d[0],0==l?j(r[0]):(j(r[h[o=32767+l]]),j(f[o]));for(var g=63;0<g&&0==d[g];g--);if(0==g)return j(a),n;for(var m,v=1;v<=g;){for(var y=v;0==d[v]&&v<=g;++v);var b=v-y;if(16<=b){m=b>>4;for(var w=1;w<=m;++w)j(s);b&=15}o=32767+d[v],j(i[(b<<4)+h[o]]),j(f[o]),v++}return 63!=g&&j(a),n}function M(t){t<=0&&(t=1),100<t&&(t=100),o!=t&&(function(t){for(var e=[16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99],n=0;n<64;n++){var r=a((e[n]*t+50)/100);r<1?r=1:255<r&&(r=255),s[L[n]]=r}for(var i=[17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],o=0;o<64;o++){var f=a((i[o]*t+50)/100);f<1?f=1:255<f&&(f=255),u[L[o]]=f}for(var h=[1,1.387039845,1.306562965,1.175875602,1,.785694958,.5411961,.275899379],p=0,d=0;d<8;d++)for(var g=0;g<8;g++)c[p]=1/(s[L[p]]*h[d]*h[g]*8),l[p]=1/(u[L[p]]*h[d]*h[g]*8),p++}(t<50?Math.floor(5e3/t):Math.floor(200-2*t)),o=t)}this.encode=function(t,o){var a,f;(new Date).getTime(),o&&M(o),g=new Array,m=0,v=7,B(65496),B(65504),B(16),I(74),I(70),I(73),I(70),I(0),I(1),I(1),I(0),B(1),B(1),I(0),I(0),function(){B(65499),B(132),I(0);for(var t=0;t<64;t++)I(s[t]);I(1);for(var e=0;e<64;e++)I(u[e])}(),a=t.width,f=t.height,B(65472),B(17),I(8),B(f),B(a),I(3),I(1),I(17),I(0),I(2),I(17),I(1),I(3),I(17),I(1),function(){B(65476),B(418),I(0);for(var t=0;t<16;t++)I(A[t+1]);for(var e=0;e<=11;e++)I(S[e]);I(16);for(var n=0;n<16;n++)I(_[n+1]);for(var r=0;r<=161;r++)I(C[r]);I(1);for(var i=0;i<16;i++)I(k[i+1]);for(var o=0;o<=11;o++)I(P[o]);I(17);for(var a=0;a<16;a++)I(F[a+1]);for(var s=0;s<=161;s++)I(T[s])}(),B(65498),B(12),I(3),I(1),I(0),I(2),I(17),I(3),I(17),I(0),I(63),I(0);var h=0,p=0,d=0;m=0,v=7,this.encode.displayName="_encode_";for(var x,L,E,q,D,R,U,z,H,W=t.data,V=t.width,G=t.height,Y=4*V,X=0;X<G;){for(x=0;x<Y;){for(R=D=Y*X+x,U=-1,H=z=0;H<64;H++)R=D+(z=H>>3)*Y+(U=4*(7&H)),G<=X+z&&(R-=Y*(X+1+z-G)),Y<=x+U&&(R-=x+U-Y+4),L=W[R++],E=W[R++],q=W[R++],y[H]=(N[L]+N[E+256>>0]+N[q+512>>0]>>16)-128,b[H]=(N[L+768>>0]+N[E+1024>>0]+N[q+1280>>0]>>16)-128,w[H]=(N[L+1280>>0]+N[E+1536>>0]+N[q+1792>>0]>>16)-128;h=O(y,c,h,e,r),p=O(b,l,p,n,i),d=O(w,l,d,n,i),x+=32}X+=8}if(0<=v){var J=[];J[1]=v+1,J[0]=(1<<v+1)-1,j(J)}return B(65497),new Uint8Array(g)},(new Date).getTime(),t||(t=50),function(){for(var t=String.fromCharCode,e=0;e<256;e++)x[e]=t(e)}(),e=E(A,S),n=E(k,P),r=E(_,C),i=E(F,T),function(){for(var t=1,e=2,n=1;n<=15;n++){for(var r=t;r<e;r++)h[32767+r]=n,f[32767+r]=[],f[32767+r][1]=n,f[32767+r][0]=r;for(var i=-(e-1);i<=-t;i++)h[32767+i]=n,f[32767+i]=[],f[32767+i][1]=n,f[32767+i][0]=e-1+i;t<<=1,e<<=1}}(),function(){for(var t=0;t<256;t++)N[t]=19595*t,N[t+256>>0]=38470*t,N[t+512>>0]=7471*t+32768,N[t+768>>0]=-11059*t,N[t+1024>>0]=-21709*t,N[t+1280>>0]=32768*t+8421375,N[t+1536>>0]=-27439*t,N[t+1792>>0]=-5329*t}(),M(t),(new Date).getTime()}function Bt(t,e){if(this.pos=0,this.buffer=t,this.datav=new DataView(t.buffer),this.is_with_alpha=!!e,this.bottom_up=!0,this.flag=String.fromCharCode(this.buffer[0])+String.fromCharCode(this.buffer[1]),this.pos+=2,-1===["BM","BA","CI","CP","IC","PT"].indexOf(this.flag))throw new Error("Invalid BMP File");this.parseHeader(),this.parseBGR()}window.tmp=Et,gt.API.adler32cs=(xt="function"==typeof ArrayBuffer&&"function"==typeof Uint8Array,Nt=null,Lt=function(){if(!xt)return function(){return!1};try{var t={};"function"==typeof t.Buffer&&(Nt=t.Buffer)}catch(t){}return function(t){return t instanceof ArrayBuffer||null!==Nt&&t instanceof Nt}}(),At=null!==Nt?function(t){return new Nt(t,"utf8").toString("binary")}:function(t){return unescape(encodeURIComponent(t))},St=function(t,e){for(var n=65535&t,r=t>>>16,i=0,o=e.length;i<o;i++)r=(r+(n=(n+(255&e.charCodeAt(i)))%65521))%65521;return(r<<16|n)>>>0},_t=function(t,e){for(var n=65535&t,r=t>>>16,i=0,o=e.length;i<o;i++)r=(r+(n=(n+e[i])%65521))%65521;return(r<<16|n)>>>0},kt=(Ct={}).Adler32=(((wt=(bt=function(t){if(!(this instanceof bt))throw new TypeError("Constructor cannot called be as a function.");if(!isFinite(t=null==t?1:+t))throw new Error("First arguments needs to be a finite number.");this.checksum=t>>>0}).prototype={}).constructor=bt).from=((mt=function(t){if(!(this instanceof bt))throw new TypeError("Constructor cannot called be as a function.");if(null==t)throw new Error("First argument needs to be a string.");this.checksum=St(1,t.toString())}).prototype=wt,mt),bt.fromUtf8=((vt=function(t){if(!(this instanceof bt))throw new TypeError("Constructor cannot called be as a function.");if(null==t)throw new Error("First argument needs to be a string.");var e=At(t.toString());this.checksum=St(1,e)}).prototype=wt,vt),xt&&(bt.fromBuffer=((yt=function(t){if(!(this instanceof bt))throw new TypeError("Constructor cannot called be as a function.");if(!Lt(t))throw new Error("First argument needs to be ArrayBuffer.");var e=new Uint8Array(t);return this.checksum=_t(1,e)}).prototype=wt,yt)),wt.update=function(t){if(null==t)throw new Error("First argument needs to be a string.");return t=t.toString(),this.checksum=St(this.checksum,t)},wt.updateUtf8=function(t){if(null==t)throw new Error("First argument needs to be a string.");var e=At(t.toString());return this.checksum=St(this.checksum,e)},xt&&(wt.updateBuffer=function(t){if(!Lt(t))throw new Error("First argument needs to be ArrayBuffer.");var e=new Uint8Array(t);return this.checksum=_t(this.checksum,e)}),wt.clone=function(){return new kt(this.checksum)},bt),Ct.from=function(t){if(null==t)throw new Error("First argument needs to be a string.");return St(1,t.toString())},Ct.fromUtf8=function(t){if(null==t)throw new Error("First argument needs to be a string.");var e=At(t.toString());return St(1,e)},xt&&(Ct.fromBuffer=function(t){if(!Lt(t))throw new Error("First argument need to be ArrayBuffer.");var e=new Uint8Array(t);return _t(1,e)}),Ct),function(t){t.__bidiEngine__=t.prototype.__bidiEngine__=function(t){var n,r,i,o,a,s,u,c=e,l=[[0,3,0,1,0,0,0],[0,3,0,1,2,2,0],[0,3,0,17,2,0,1],[0,3,5,5,4,1,0],[0,3,21,21,4,0,1],[0,3,5,5,4,2,0]],f=[[2,0,1,1,0,1,0],[2,0,1,1,0,2,0],[2,0,2,1,3,2,0],[2,0,2,33,3,1,1]],h={L:0,R:1,EN:2,AN:3,N:4,B:5,S:6},p={0:0,5:1,6:2,7:3,32:4,251:5,254:6,255:7},d=["(",")","(","<",">","<","[","]","[","{","}","{","Â«","Â»","Â«","â¹","âº","â¹","â","â","â","â½","â¾","â½","â","â","â","â¤","â¥","â¤","â©","âª","â©","ï¹","ï¹","ï¹","ï¹","ï¹","ï¹","ï¹","ï¹","ï¹","ï¹¤","ï¹¥","ï¹¤"],g=new RegExp(/^([1-4|9]|1[0-9]|2[0-9]|3[0168]|4[04589]|5[012]|7[78]|159|16[0-9]|17[0-2]|21[569]|22[03489]|250)$/),m=!1,v=0;this.__bidiEngine__={};var y=function(t){var e=t.charCodeAt(),n=e>>8,r=p[n];return void 0!==r?c[256*r+(255&e)]:252===n||253===n?"AL":g.test(n)?"L":8===n?"R":"N"},b=function(t){for(var e,n=0;n<t.length;n++){if("L"===(e=y(t.charAt(n))))return!1;if("R"===e)return!0}return!1},w=function(t,e,a,s){var u,c,l,f,h=e[s];switch(h){case"L":case"R":m=!1;break;case"N":case"AN":break;case"EN":m&&(h="AN");break;case"AL":m=!0,h="R";break;case"WS":h="N";break;case"CS":s<1||s+1>=e.length||"EN"!==(u=a[s-1])&&"AN"!==u||"EN"!==(c=e[s+1])&&"AN"!==c?h="N":m&&(c="AN"),h=c===u?c:"N";break;case"ES":h="EN"===(u=0<s?a[s-1]:"B")&&s+1<e.length&&"EN"===e[s+1]?"EN":"N";break;case"ET":if(0<s&&"EN"===a[s-1]){h="EN";break}if(m){h="N";break}for(l=s+1,f=e.length;l<f&&"ET"===e[l];)l++;h=l<f&&"EN"===e[l]?"EN":"N";break;case"NSM":if(i&&!o){for(f=e.length,l=s+1;l<f&&"NSM"===e[l];)l++;if(l<f){var p=t[s],d=1425<=p&&p<=2303||64286===p;if(u=e[l],d&&("R"===u||"AL"===u)){h="R";break}}}h=s<1||"B"===(u=e[s-1])?"N":a[s-1];break;case"B":n=!(m=!1),h=v;break;case"S":r=!0,h="N";break;case"LRE":case"RLE":case"LRO":case"RLO":case"PDF":m=!1;break;case"BN":h="N"}return h},x=function(t,e,n){var r=t.split("");return n&&N(r,n,{hiLevel:v}),r.reverse(),e&&e.reverse(),r.join("")},N=function(t,e,i){var o,a,s,u,c,p=-1,d=t.length,g=0,b=[],x=v?f:l,N=[];for(r=n=m=!1,a=0;a<d;a++)N[a]=y(t[a]);for(s=0;s<d;s++){if(c=g,b[s]=w(t,N,b,s),o=240&(g=x[c][h[b[s]]]),g&=15,e[s]=u=x[g][5],0<o)if(16===o){for(a=p;a<s;a++)e[a]=1;p=-1}else p=-1;if(x[g][6])-1===p&&(p=s);else if(-1<p){for(a=p;a<s;a++)e[a]=u;p=-1}"B"===N[s]&&(e[s]=0),i.hiLevel|=u}r&&function(t,e,n){for(var r=0;r<n;r++)if("S"===t[r]){e[r]=v;for(var i=r-1;0<=i&&"WS"===t[i];i--)e[i]=v}}(N,e,d)},L=function(t,e,r,i,o){if(!(o.hiLevel<t)){if(1===t&&1===v&&!n)return e.reverse(),void(r&&r.reverse());for(var a,s,u,c,l=e.length,f=0;f<l;){if(i[f]>=t){for(u=f+1;u<l&&i[u]>=t;)u++;for(c=f,s=u-1;c<s;c++,s--)a=e[c],e[c]=e[s],e[s]=a,r&&(a=r[c],r[c]=r[s],r[s]=a);f=u}f++}}},A=function(t,e,n){var r=t.split(""),i={hiLevel:v};return n||(n=[]),N(r,n,i),function(t,e,n){if(0!==n.hiLevel&&u)for(var r,i=0;i<t.length;i++)1===e[i]&&0<=(r=d.indexOf(t[i]))&&(t[i]=d[r+1])}(r,n,i),L(2,r,e,n,i),L(1,r,e,n,i),r.join("")};return this.__bidiEngine__.doBidiReorder=function(t,e,n){if(function(t,e){if(e)for(var n=0;n<t.length;n++)e[n]=n;void 0===o&&(o=b(t)),void 0===s&&(s=b(t))}(t,e),i||!a||s)if(i&&a&&o^s)v=o?1:0,t=x(t,e,n);else if(!i&&a&&s)v=o?1:0,t=A(t,e,n),t=x(t,e);else if(!i||o||a||s){if(i&&!a&&o^s)t=x(t,e),t=o?(v=0,A(t,e,n)):(v=1,t=A(t,e,n),x(t,e));else if(i&&o&&!a&&s)v=1,t=A(t,e,n),t=x(t,e);else if(!i&&!a&&o^s){var r=u;o?(v=1,t=A(t,e,n),v=0,u=!1,t=A(t,e,n),u=r):(v=0,t=A(t,e,n),t=x(t,e),u=!(v=1),t=A(t,e,n),u=r,t=x(t,e))}}else v=0,t=A(t,e,n);else v=o?1:0,t=A(t,e,n);return t},this.__bidiEngine__.setOptions=function(t){t&&(i=t.isInputVisual,a=t.isOutputVisual,o=t.isInputRtl,s=t.isOutputRtl,u=t.isSymmetricSwapping)},this.__bidiEngine__.setOptions(t),this.__bidiEngine__};var e=["BN","BN","BN","BN","BN","BN","BN","BN","BN","S","B","S","WS","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","B","B","B","S","WS","N","N","ET","ET","ET","N","N","N","N","N","ES","CS","ES","CS","CS","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","CS","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","BN","BN","BN","BN","BN","BN","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","CS","N","ET","ET","ET","ET","N","N","N","N","L","N","N","BN","N","N","ET","ET","EN","EN","N","L","N","N","N","EN","L","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","N","N","N","N","N","ET","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","R","NSM","R","NSM","NSM","R","NSM","NSM","R","NSM","N","N","N","N","N","N","N","N","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","N","N","N","N","N","R","R","R","R","R","N","N","N","N","N","N","N","N","N","N","N","AN","AN","AN","AN","AN","AN","N","N","AL","ET","ET","AL","CS","AL","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","AN","AN","AN","AN","AN","AN","AN","AN","AN","ET","AN","AN","AL","AL","AL","NSM","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","N","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","NSM","NSM","N","NSM","NSM","NSM","NSM","AL","AL","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","AL","AL","NSM","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AL","N","N","N","N","N","N","N","N","N","N","N","N","N","N","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","R","R","N","N","N","N","R","N","N","N","N","N","WS","WS","WS","WS","WS","WS","WS","WS","WS","WS","WS","BN","BN","BN","L","R","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","WS","B","LRE","RLE","PDF","LRO","RLO","CS","ET","ET","ET","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","CS","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","WS","BN","BN","BN","BN","BN","N","LRI","RLI","FSI","PDI","BN","BN","BN","BN","BN","BN","EN","L","N","N","EN","EN","EN","EN","EN","EN","ES","ES","N","N","N","L","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","ES","ES","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","L","L","N","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","N","N","N","N","N","R","NSM","R","R","R","R","R","R","R","R","R","R","ES","R","R","R","R","R","R","R","R","R","R","R","R","R","N","R","R","R","R","R","N","R","N","R","R","N","R","R","N","R","R","R","R","R","R","R","R","R","R","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","CS","N","CS","N","N","CS","N","N","N","N","N","N","N","N","N","ET","N","N","ES","ES","N","N","N","N","N","ET","ET","N","N","N","N","N","AL","AL","AL","AL","AL","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","N","BN","N","N","N","ET","ET","ET","N","N","N","N","N","ES","CS","ES","CS","CS","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","CS","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","L","L","L","L","L","L","N","N","L","L","L","L","L","L","N","N","L","L","L","L","L","L","N","N","L","L","L","N","N","N","ET","ET","N","N","N","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N"],n=new t.__bidiEngine__({isInputVisual:!0});t.API.events.push(["postProcessText",function(t){var e=t.text,r=(t.x,t.y,t.options||{}),i=(t.mutex,r.lang,[]);if("[object Array]"===Object.prototype.toString.call(e)){var o=0;for(i=[],o=0;o<e.length;o+=1)"[object Array]"===Object.prototype.toString.call(e[o])?i.push([n.doBidiReorder(e[o][0]),e[o][1],e[o][2]]):i.push([n.doBidiReorder(e[o])]);t.text=i}else t.text=n.doBidiReorder(e)}])}(gt),window.tmp=It,Bt.prototype.parseHeader=function(){if(this.fileSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.reserved=this.datav.getUint32(this.pos,!0),this.pos+=4,this.offset=this.datav.getUint32(this.pos,!0),this.pos+=4,this.headerSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.width=this.datav.getUint32(this.pos,!0),this.pos+=4,this.height=this.datav.getInt32(this.pos,!0),this.pos+=4,this.planes=this.datav.getUint16(this.pos,!0),this.pos+=2,this.bitPP=this.datav.getUint16(this.pos,!0),this.pos+=2,this.compress=this.datav.getUint32(this.pos,!0),this.pos+=4,this.rawSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.hr=this.datav.getUint32(this.pos,!0),this.pos+=4,this.vr=this.datav.getUint32(this.pos,!0),this.pos+=4,this.colors=this.datav.getUint32(this.pos,!0),this.pos+=4,this.importantColors=this.datav.getUint32(this.pos,!0),this.pos+=4,16===this.bitPP&&this.is_with_alpha&&(this.bitPP=15),this.bitPP<15){var t=0===this.colors?1<<this.bitPP:this.colors;this.palette=new Array(t);for(var e=0;e<t;e++){var n=this.datav.getUint8(this.pos++,!0),r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0);this.palette[e]={red:i,green:r,blue:n,quad:o}}}this.height<0&&(this.height*=-1,this.bottom_up=!1)},Bt.prototype.parseBGR=function(){this.pos=this.offset;try{var t="bit"+this.bitPP,e=this.width*this.height*4;this.data=new Uint8Array(e),this[t]()}catch(t){console.log("bit decode error:"+t)}},Bt.prototype.bit1=function(){var t=Math.ceil(this.width/8),e=t%4,n=0<=this.height?this.height-1:-this.height;for(n=this.height-1;0<=n;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<t;i++)for(var o=this.datav.getUint8(this.pos++,!0),a=r*this.width*4+8*i*4,s=0;s<8&&8*i+s<this.width;s++){var u=this.palette[o>>7-s&1];this.data[a+4*s]=u.blue,this.data[a+4*s+1]=u.green,this.data[a+4*s+2]=u.red,this.data[a+4*s+3]=255}0!=e&&(this.pos+=4-e)}},Bt.prototype.bit4=function(){for(var t=Math.ceil(this.width/2),e=t%4,n=this.height-1;0<=n;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<t;i++){var o=this.datav.getUint8(this.pos++,!0),a=r*this.width*4+2*i*4,s=o>>4,u=15&o,c=this.palette[s];if(this.data[a]=c.blue,this.data[a+1]=c.green,this.data[a+2]=c.red,this.data[a+3]=255,2*i+1>=this.width)break;c=this.palette[u],this.data[a+4]=c.blue,this.data[a+4+1]=c.green,this.data[a+4+2]=c.red,this.data[a+4+3]=255}0!=e&&(this.pos+=4-e)}},Bt.prototype.bit8=function(){for(var t=this.width%4,e=this.height-1;0<=e;e--){for(var n=this.bottom_up?e:this.height-1-e,r=0;r<this.width;r++){var i=this.datav.getUint8(this.pos++,!0),o=n*this.width*4+4*r;if(i<this.palette.length){var a=this.palette[i];this.data[o]=a.red,this.data[o+1]=a.green,this.data[o+2]=a.blue,this.data[o+3]=255}else this.data[o]=255,this.data[o+1]=255,this.data[o+2]=255,this.data[o+3]=255}0!=t&&(this.pos+=4-t)}},Bt.prototype.bit15=function(){for(var t=this.width%3,e=parseInt("11111",2),n=this.height-1;0<=n;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<this.width;i++){var o=this.datav.getUint16(this.pos,!0);this.pos+=2;var a=(o&e)/e*255|0,s=(o>>5&e)/e*255|0,u=(o>>10&e)/e*255|0,c=o>>15?255:0,l=r*this.width*4+4*i;this.data[l]=u,this.data[l+1]=s,this.data[l+2]=a,this.data[l+3]=c}this.pos+=t}},Bt.prototype.bit16=function(){for(var t=this.width%3,e=parseInt("11111",2),n=parseInt("111111",2),r=this.height-1;0<=r;r--){for(var i=this.bottom_up?r:this.height-1-r,o=0;o<this.width;o++){var a=this.datav.getUint16(this.pos,!0);this.pos+=2;var s=(a&e)/e*255|0,u=(a>>5&n)/n*255|0,c=(a>>11)/e*255|0,l=i*this.width*4+4*o;this.data[l]=c,this.data[l+1]=u,this.data[l+2]=s,this.data[l+3]=255}this.pos+=t}},Bt.prototype.bit24=function(){for(var t=this.height-1;0<=t;t--){for(var e=this.bottom_up?t:this.height-1-t,n=0;n<this.width;n++){var r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0),a=e*this.width*4+4*n;this.data[a]=o,this.data[a+1]=i,this.data[a+2]=r,this.data[a+3]=255}this.pos+=this.width%4}},Bt.prototype.bit32=function(){for(var t=this.height-1;0<=t;t--)for(var e=this.bottom_up?t:this.height-1-t,n=0;n<this.width;n++){var r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0),a=this.datav.getUint8(this.pos++,!0),s=e*this.width*4+4*n;this.data[s]=o,this.data[s+1]=i,this.data[s+2]=r,this.data[s+3]=a}},Bt.prototype.getData=function(){return this.data},window.tmp=Bt,function(t){var e=[0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,16,17,18,18,19,19,20,20,20,20,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29];function n(){var t=this;function e(t,e){for(var n=0;n|=1&t,t>>>=1,n<<=1,0<--e;);return n>>>1}t.build_tree=function(n){var r,i,o,a=t.dyn_tree,s=t.stat_desc.static_tree,u=t.stat_desc.elems,c=-1;for(n.heap_len=0,n.heap_max=573,r=0;r<u;r++)0!==a[2*r]?(n.heap[++n.heap_len]=c=r,n.depth[r]=0):a[2*r+1]=0;for(;n.heap_len<2;)a[2*(o=n.heap[++n.heap_len]=c<2?++c:0)]=1,n.depth[o]=0,n.opt_len--,s&&(n.static_len-=s[2*o+1]);for(t.max_code=c,r=Math.floor(n.heap_len/2);1<=r;r--)n.pqdownheap(a,r);for(o=u;r=n.heap[1],n.heap[1]=n.heap[n.heap_len--],n.pqdownheap(a,1),i=n.heap[1],n.heap[--n.heap_max]=r,n.heap[--n.heap_max]=i,a[2*o]=a[2*r]+a[2*i],n.depth[o]=Math.max(n.depth[r],n.depth[i])+1,a[2*r+1]=a[2*i+1]=o,n.heap[1]=o++,n.pqdownheap(a,1),2<=n.heap_len;);n.heap[--n.heap_max]=n.heap[1],function(e){var n,r,i,o,a,s,u=t.dyn_tree,c=t.stat_desc.static_tree,l=t.stat_desc.extra_bits,f=t.stat_desc.extra_base,h=t.stat_desc.max_length,p=0;for(o=0;o<=15;o++)e.bl_count[o]=0;for(u[2*e.heap[e.heap_max]+1]=0,n=e.heap_max+1;n<573;n++)h<(o=u[2*u[2*(r=e.heap[n])+1]+1]+1)&&(o=h,p++),u[2*r+1]=o,r>t.max_code||(e.bl_count[o]++,a=0,f<=r&&(a=l[r-f]),s=u[2*r],e.opt_len+=s*(o+a),c&&(e.static_len+=s*(c[2*r+1]+a)));if(0!==p){do{for(o=h-1;0===e.bl_count[o];)o--;e.bl_count[o]--,e.bl_count[o+1]+=2,e.bl_count[h]--,p-=2}while(0<p);for(o=h;0!==o;o--)for(r=e.bl_count[o];0!==r;)(i=e.heap[--n])>t.max_code||(u[2*i+1]!=o&&(e.opt_len+=(o-u[2*i+1])*u[2*i],u[2*i+1]=o),r--)}}(n),function(t,n,r){var i,o,a,s=[],u=0;for(i=1;i<=15;i++)s[i]=u=u+r[i-1]<<1;for(o=0;o<=n;o++)0!==(a=t[2*o+1])&&(t[2*o]=e(s[a]++,a))}(a,t.max_code,n.bl_count)}}function r(t,e,n,r,i){this.static_tree=t,this.extra_bits=e,this.extra_base=n,this.elems=r,this.max_length=i}function i(t,e,n,r,i){this.good_length=t,this.max_lazy=e,this.nice_length=n,this.max_chain=r,this.func=i}n._length_code=[0,1,2,3,4,5,6,7,8,8,9,9,10,10,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28],n.base_length=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],n.base_dist=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],n.d_code=function(t){return t<256?e[t]:e[256+(t>>>7)]},n.extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],n.extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],n.extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],n.bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],r.static_ltree=[12,8,140,8,76,8,204,8,44,8,172,8,108,8,236,8,28,8,156,8,92,8,220,8,60,8,188,8,124,8,252,8,2,8,130,8,66,8,194,8,34,8,162,8,98,8,226,8,18,8,146,8,82,8,210,8,50,8,178,8,114,8,242,8,10,8,138,8,74,8,202,8,42,8,170,8,106,8,234,8,26,8,154,8,90,8,218,8,58,8,186,8,122,8,250,8,6,8,134,8,70,8,198,8,38,8,166,8,102,8,230,8,22,8,150,8,86,8,214,8,54,8,182,8,118,8,246,8,14,8,142,8,78,8,206,8,46,8,174,8,110,8,238,8,30,8,158,8,94,8,222,8,62,8,190,8,126,8,254,8,1,8,129,8,65,8,193,8,33,8,161,8,97,8,225,8,17,8,145,8,81,8,209,8,49,8,177,8,113,8,241,8,9,8,137,8,73,8,201,8,41,8,169,8,105,8,233,8,25,8,153,8,89,8,217,8,57,8,185,8,121,8,249,8,5,8,133,8,69,8,197,8,37,8,165,8,101,8,229,8,21,8,149,8,85,8,213,8,53,8,181,8,117,8,245,8,13,8,141,8,77,8,205,8,45,8,173,8,109,8,237,8,29,8,157,8,93,8,221,8,61,8,189,8,125,8,253,8,19,9,275,9,147,9,403,9,83,9,339,9,211,9,467,9,51,9,307,9,179,9,435,9,115,9,371,9,243,9,499,9,11,9,267,9,139,9,395,9,75,9,331,9,203,9,459,9,43,9,299,9,171,9,427,9,107,9,363,9,235,9,491,9,27,9,283,9,155,9,411,9,91,9,347,9,219,9,475,9,59,9,315,9,187,9,443,9,123,9,379,9,251,9,507,9,7,9,263,9,135,9,391,9,71,9,327,9,199,9,455,9,39,9,295,9,167,9,423,9,103,9,359,9,231,9,487,9,23,9,279,9,151,9,407,9,87,9,343,9,215,9,471,9,55,9,311,9,183,9,439,9,119,9,375,9,247,9,503,9,15,9,271,9,143,9,399,9,79,9,335,9,207,9,463,9,47,9,303,9,175,9,431,9,111,9,367,9,239,9,495,9,31,9,287,9,159,9,415,9,95,9,351,9,223,9,479,9,63,9,319,9,191,9,447,9,127,9,383,9,255,9,511,9,0,7,64,7,32,7,96,7,16,7,80,7,48,7,112,7,8,7,72,7,40,7,104,7,24,7,88,7,56,7,120,7,4,7,68,7,36,7,100,7,20,7,84,7,52,7,116,7,3,8,131,8,67,8,195,8,35,8,163,8,99,8,227,8],r.static_dtree=[0,5,16,5,8,5,24,5,4,5,20,5,12,5,28,5,2,5,18,5,10,5,26,5,6,5,22,5,14,5,30,5,1,5,17,5,9,5,25,5,5,5,21,5,13,5,29,5,3,5,19,5,11,5,27,5,7,5,23,5],r.static_l_desc=new r(r.static_ltree,n.extra_lbits,257,286,15),r.static_d_desc=new r(r.static_dtree,n.extra_dbits,0,30,15),r.static_bl_desc=new r(null,n.extra_blbits,0,19,7);var o=[new i(0,0,0,0,0),new i(4,4,8,4,1),new i(4,5,16,8,1),new i(4,6,32,32,1),new i(4,4,16,16,2),new i(8,16,32,32,2),new i(8,16,128,128,2),new i(8,32,128,256,2),new i(32,128,258,1024,2),new i(32,258,258,4096,2)],a=["need dictionary","stream end","","","stream error","data error","","buffer error","",""];function s(t,e,n,r){var i=t[2*e],o=t[2*n];return i<o||i==o&&r[e]<=r[n]}function u(){var t,e,i,u,c,l,f,h,p,d,g,m,v,y,b,w,x,N,L,A,S,_,C,k,P,F,T,E,j,I,B,O,M,q,D,R,U,z,H,W,V,G=this,Y=new n,X=new n,J=new n;function $(){var t;for(t=0;t<286;t++)B[2*t]=0;for(t=0;t<30;t++)O[2*t]=0;for(t=0;t<19;t++)M[2*t]=0;B[512]=1,G.opt_len=G.static_len=0,R=z=0}function K(t,e){var n,r,i=-1,o=t[1],a=0,s=7,u=4;for(0===o&&(s=138,u=3),t[2*(e+1)+1]=65535,n=0;n<=e;n++)r=o,o=t[2*(n+1)+1],++a<s&&r==o||(a<u?M[2*r]+=a:0!==r?(r!=i&&M[2*r]++,M[32]++):a<=10?M[34]++:M[36]++,i=r,u=(a=0)===o?(s=138,3):r==o?(s=6,3):(s=7,4))}function Q(t){G.pending_buf[G.pending++]=t}function Z(t){Q(255&t),Q(t>>>8&255)}function tt(t,e){var n,r=e;16-r<V?(Z(W|=(n=t)<<V&65535),W=n>>>16-V,V+=r-16):(W|=t<<V&65535,V+=r)}function et(t,e){var n=2*t;tt(65535&e[n],65535&e[n+1])}function nt(t,e){var n,r,i=-1,o=t[1],a=0,s=7,u=4;for(0===o&&(s=138,u=3),n=0;n<=e;n++)if(r=o,o=t[2*(n+1)+1],!(++a<s&&r==o)){if(a<u)for(;et(r,M),0!=--a;);else 0!==r?(r!=i&&(et(r,M),a--),et(16,M),tt(a-3,2)):a<=10?(et(17,M),tt(a-3,3)):(et(18,M),tt(a-11,7));i=r,u=(a=0)===o?(s=138,3):r==o?(s=6,3):(s=7,4)}}function rt(){16==V?(Z(W),V=W=0):8<=V&&(Q(255&W),W>>>=8,V-=8)}function it(t,e){var r,i,o;if(G.pending_buf[U+2*R]=t>>>8&255,G.pending_buf[U+2*R+1]=255&t,G.pending_buf[q+R]=255&e,R++,0===t?B[2*e]++:(z++,t--,B[2*(n._length_code[e]+256+1)]++,O[2*n.d_code(t)]++),0==(8191&R)&&2<T){for(r=8*R,i=S-x,o=0;o<30;o++)r+=O[2*o]*(5+n.extra_dbits[o]);if(r>>>=3,z<Math.floor(R/2)&&r<Math.floor(i/2))return!0}return R==D-1}function ot(t,e){var r,i,o,a,s=0;if(0!==R)for(;r=G.pending_buf[U+2*s]<<8&65280|255&G.pending_buf[U+2*s+1],i=255&G.pending_buf[q+s],s++,0===r?et(i,t):(et((o=n._length_code[i])+256+1,t),0!==(a=n.extra_lbits[o])&&tt(i-=n.base_length[o],a),et(o=n.d_code(--r),e),0!==(a=n.extra_dbits[o])&&tt(r-=n.base_dist[o],a)),s<R;);et(256,t),H=t[513]}function at(){8<V?Z(W):0<V&&Q(255&W),V=W=0}function st(t,e,n){var r,i;tt(0+(n?1:0),3),r=t,i=e,at(),H=8,Z(i),Z(~i),G.pending_buf.set(h.subarray(r,r+i),G.pending),G.pending+=i}function ut(e){(function(t,e,i){var o,a,s=0;0<T?(Y.build_tree(G),X.build_tree(G),s=function(){var t;for(K(B,Y.max_code),K(O,X.max_code),J.build_tree(G),t=18;3<=t&&0===M[2*n.bl_order[t]+1];t--);return G.opt_len+=3*(t+1)+5+5+4,t}(),o=G.opt_len+3+7>>>3,(a=G.static_len+3+7>>>3)<=o&&(o=a)):o=a=e+5,e+4<=o&&-1!=t?st(t,e,i):a==o?(tt(2+(i?1:0),3),ot(r.static_ltree,r.static_dtree)):(tt(4+(i?1:0),3),function(t,e,r){var i;for(tt(t-257,5),tt(e-1,5),tt(r-4,4),i=0;i<r;i++)tt(M[2*n.bl_order[i]+1],3);nt(B,t-1),nt(O,e-1)}(Y.max_code+1,X.max_code+1,s+1),ot(B,O)),$(),i&&at()})(0<=x?x:-1,S-x,e),x=S,t.flush_pending()}function ct(){var e,n,r,i;do{if(0==(i=p-C-S)&&0===S&&0===C)i=c;else if(-1==i)i--;else if(c+c-262<=S){for(h.set(h.subarray(c,c+c),0),_-=c,S-=c,x-=c,r=e=v;n=65535&g[--r],g[r]=c<=n?n-c:0,0!=--e;);for(r=e=c;n=65535&d[--r],d[r]=c<=n?n-c:0,0!=--e;);i+=c}if(0===t.avail_in)return;e=t.read_buf(h,S+C,i),3<=(C+=e)&&(m=((m=255&h[S])<<w^255&h[S+1])&b)}while(C<262&&0!==t.avail_in)}function lt(t){var e,n,r=P,i=S,o=k,a=c-262<S?S-(c-262):0,s=I,u=f,l=S+258,p=h[i+o-1],g=h[i+o];j<=k&&(r>>=2),C<s&&(s=C);do{if(h[(e=t)+o]==g&&h[e+o-1]==p&&h[e]==h[i]&&h[++e]==h[i+1]){i+=2,e++;do{}while(h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&i<l);if(n=258-(l-i),i=l-258,o<n){if(_=t,s<=(o=n))break;p=h[i+o-1],g=h[i+o]}}}while((t=65535&d[t&u])>a&&0!=--r);return o<=C?o:C}function ft(t){return t.total_in=t.total_out=0,t.msg=null,G.pending=0,G.pending_out=0,e=113,u=0,Y.dyn_tree=B,Y.stat_desc=r.static_l_desc,X.dyn_tree=O,X.stat_desc=r.static_d_desc,J.dyn_tree=M,J.stat_desc=r.static_bl_desc,V=W=0,H=8,$(),function(){var t;for(p=2*c,t=g[v-1]=0;t<v-1;t++)g[t]=0;F=o[T].max_lazy,j=o[T].good_length,I=o[T].nice_length,P=o[T].max_chain,N=k=2,m=A=C=x=S=0}(),0}G.depth=[],G.bl_count=[],G.heap=[],B=[],O=[],M=[],G.pqdownheap=function(t,e){for(var n=G.heap,r=n[e],i=e<<1;i<=G.heap_len&&(i<G.heap_len&&s(t,n[i+1],n[i],G.depth)&&i++,!s(t,r,n[i],G.depth));)n[e]=n[i],e=i,i<<=1;n[e]=r},G.deflateInit=function(t,e,n,r,o,a){return r||(r=8),o||(o=8),a||(a=0),t.msg=null,-1==e&&(e=6),o<1||9<o||8!=r||n<9||15<n||e<0||9<e||a<0||2<a?-2:(t.dstate=G,f=(c=1<<(l=n))-1,b=(v=1<<(y=o+7))-1,w=Math.floor((y+3-1)/3),h=new Uint8Array(2*c),d=[],g=[],D=1<<o+6,G.pending_buf=new Uint8Array(4*D),i=4*D,U=Math.floor(D/2),q=3*D,T=e,E=a,ft(t))},G.deflateEnd=function(){return 42!=e&&113!=e&&666!=e?-2:(G.pending_buf=null,h=d=g=null,G.dstate=null,113==e?-3:0)},G.deflateParams=function(t,e,n){var r=0;return-1==e&&(e=6),e<0||9<e||n<0||2<n?-2:(o[T].func!=o[e].func&&0!==t.total_in&&(r=t.deflate(1)),T!=e&&(F=o[T=e].max_lazy,j=o[T].good_length,I=o[T].nice_length,P=o[T].max_chain),E=n,r)},G.deflateSetDictionary=function(t,n,r){var i,o=r,a=0;if(!n||42!=e)return-2;if(o<3)return 0;for(c-262<o&&(a=r-(o=c-262)),h.set(n.subarray(a,a+o),0),x=S=o,m=((m=255&h[0])<<w^255&h[1])&b,i=0;i<=o-3;i++)m=(m<<w^255&h[i+2])&b,d[i&f]=g[m],g[m]=i;return 0},G.deflate=function(n,s){var p,y,P,j,I,B;if(4<s||s<0)return-2;if(!n.next_out||!n.next_in&&0!==n.avail_in||666==e&&4!=s)return n.msg=a[4],-2;if(0===n.avail_out)return n.msg=a[7],-5;if(t=n,j=u,u=s,42==e&&(y=8+(l-8<<4)<<8,3<(P=(T-1&255)>>1)&&(P=3),y|=P<<6,0!==S&&(y|=32),e=113,Q((B=y+=31-y%31)>>8&255),Q(255&B)),0!==G.pending){if(t.flush_pending(),0===t.avail_out)return u=-1,0}else if(0===t.avail_in&&s<=j&&4!=s)return t.msg=a[7],-5;if(666==e&&0!==t.avail_in)return n.msg=a[7],-5;if(0!==t.avail_in||0!==C||0!=s&&666!=e){switch(I=-1,o[T].func){case 0:I=function(e){var n,r=65535;for(i-5<r&&(r=i-5);;){if(C<=1){if(ct(),0===C&&0==e)return 0;if(0===C)break}if(S+=C,n=x+r,((C=0)===S||n<=S)&&(C=S-n,S=n,ut(!1),0===t.avail_out))return 0;if(c-262<=S-x&&(ut(!1),0===t.avail_out))return 0}return ut(4==e),0===t.avail_out?4==e?2:0:4==e?3:1}(s);break;case 1:I=function(e){for(var n,r=0;;){if(C<262){if(ct(),C<262&&0==e)return 0;if(0===C)break}if(3<=C&&(m=(m<<w^255&h[S+2])&b,r=65535&g[m],d[S&f]=g[m],g[m]=S),0!==r&&(S-r&65535)<=c-262&&2!=E&&(N=lt(r)),3<=N)if(n=it(S-_,N-3),C-=N,N<=F&&3<=C){for(N--;m=(m<<w^255&h[2+ ++S])&b,r=65535&g[m],d[S&f]=g[m],g[m]=S,0!=--N;);S++}else S+=N,N=0,m=((m=255&h[S])<<w^255&h[S+1])&b;else n=it(0,255&h[S]),C--,S++;if(n&&(ut(!1),0===t.avail_out))return 0}return ut(4==e),0===t.avail_out?4==e?2:0:4==e?3:1}(s);break;case 2:I=function(e){for(var n,r,i=0;;){if(C<262){if(ct(),C<262&&0==e)return 0;if(0===C)break}if(3<=C&&(m=(m<<w^255&h[S+2])&b,i=65535&g[m],d[S&f]=g[m],g[m]=S),k=N,L=_,N=2,0!==i&&k<F&&(S-i&65535)<=c-262&&(2!=E&&(N=lt(i)),N<=5&&(1==E||3==N&&4096<S-_)&&(N=2)),3<=k&&N<=k){for(r=S+C-3,n=it(S-1-L,k-3),C-=k-1,k-=2;++S<=r&&(m=(m<<w^255&h[S+2])&b,i=65535&g[m],d[S&f]=g[m],g[m]=S),0!=--k;);if(A=0,N=2,S++,n&&(ut(!1),0===t.avail_out))return 0}else if(0!==A){if((n=it(0,255&h[S-1]))&&ut(!1),S++,C--,0===t.avail_out)return 0}else A=1,S++,C--}return 0!==A&&(n=it(0,255&h[S-1]),A=0),ut(4==e),0===t.avail_out?4==e?2:0:4==e?3:1}(s)}if(2!=I&&3!=I||(e=666),0==I||2==I)return 0===t.avail_out&&(u=-1),0;if(1==I){if(1==s)tt(2,3),et(256,r.static_ltree),rt(),1+H+10-V<9&&(tt(2,3),et(256,r.static_ltree),rt()),H=7;else if(st(0,0,!1),3==s)for(p=0;p<v;p++)g[p]=0;if(t.flush_pending(),0===t.avail_out)return u=-1,0}}return 4!=s?0:1}}function c(){this.next_in_index=0,this.next_out_index=0,this.avail_in=0,this.total_in=0,this.avail_out=0,this.total_out=0}c.prototype={deflateInit:function(t,e){return this.dstate=new u,e||(e=15),this.dstate.deflateInit(this,t,e)},deflate:function(t){return this.dstate?this.dstate.deflate(this,t):-2},deflateEnd:function(){if(!this.dstate)return-2;var t=this.dstate.deflateEnd();return this.dstate=null,t},deflateParams:function(t,e){return this.dstate?this.dstate.deflateParams(this,t,e):-2},deflateSetDictionary:function(t,e){return this.dstate?this.dstate.deflateSetDictionary(this,t,e):-2},read_buf:function(t,e,n){var r=this.avail_in;return n<r&&(r=n),0===r?0:(this.avail_in-=r,t.set(this.next_in.subarray(this.next_in_index,this.next_in_index+r),e),this.next_in_index+=r,this.total_in+=r,r)},flush_pending:function(){var t=this,e=t.dstate.pending;e>t.avail_out&&(e=t.avail_out),0!==e&&(t.next_out.set(t.dstate.pending_buf.subarray(t.dstate.pending_out,t.dstate.pending_out+e),t.next_out_index),t.next_out_index+=e,t.dstate.pending_out+=e,t.total_out+=e,t.avail_out-=e,t.dstate.pending-=e,0===t.dstate.pending&&(t.dstate.pending_out=0))}};var l=t.zip||t;l.Deflater=l._jzlib_Deflater=function(t){var e=new c,n=new Uint8Array(512),r=t?t.level:-1;void 0===r&&(r=-1),e.deflateInit(r),e.next_out=n,this.append=function(t,r){var i,o=[],a=0,s=0,u=0;if(t.length){e.next_in_index=0,e.next_in=t,e.avail_in=t.length;do{if(e.next_out_index=0,e.avail_out=512,0!=e.deflate(0))throw new Error("deflating: "+e.msg);e.next_out_index&&(512==e.next_out_index?o.push(new Uint8Array(n)):o.push(new Uint8Array(n.subarray(0,e.next_out_index)))),u+=e.next_out_index,r&&0<e.next_in_index&&e.next_in_index!=a&&(r(e.next_in_index),a=e.next_in_index)}while(0<e.avail_in||0===e.avail_out);return i=new Uint8Array(u),o.forEach((function(t){i.set(t,s),s+=t.length})),i}},this.flush=function(){var t,r,i=[],o=0,a=0;do{if(e.next_out_index=0,e.avail_out=512,1!=(t=e.deflate(4))&&0!=t)throw new Error("deflating: "+e.msg);0<512-e.avail_out&&i.push(new Uint8Array(n.subarray(0,e.next_out_index))),a+=e.next_out_index}while(0<e.avail_in||0===e.avail_out);return e.deflateEnd(),r=new Uint8Array(a),i.forEach((function(t){r.set(t,o),o+=t.length})),r}}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")()),("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")()).RGBColor=function(t){var e;t=t||"",this.ok=!1,"#"==t.charAt(0)&&(t=t.substr(1,6)),t=(t=t.replace(/ /g,"")).toLowerCase();var n={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dodgerblue:"1e90ff",feldspar:"d19275",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgrey:"d3d3d3",lightgreen:"90ee90",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslateblue:"8470ff",lightslategray:"778899",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"00ff00",limegreen:"32cd32",linen:"faf0e6",magenta:"ff00ff",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370d8",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"d87093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",red:"ff0000",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",violetred:"d02090",wheat:"f5deb3",white:"ffffff",whitesmoke:"f5f5f5",yellow:"ffff00",yellowgreen:"9acd32"};for(var r in n)t==r&&(t=n[r]);for(var i=[{re:/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,example:["rgb(123, 234, 45)","rgb(255,234,245)"],process:function(t){return[parseInt(t[1]),parseInt(t[2]),parseInt(t[3])]}},{re:/^(\w{2})(\w{2})(\w{2})$/,example:["#00ff00","336699"],process:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/^(\w{1})(\w{1})(\w{1})$/,example:["#fb0","f0f"],process:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}}],o=0;o<i.length;o++){var a=i[o].re,s=i[o].process,u=a.exec(t);u&&(e=s(u),this.r=e[0],this.g=e[1],this.b=e[2],this.ok=!0)}this.r=this.r<0||isNaN(this.r)?0:255<this.r?255:this.r,this.g=this.g<0||isNaN(this.g)?0:255<this.g?255:this.g,this.b=this.b<0||isNaN(this.b)?0:255<this.b?255:this.b,this.toRGB=function(){return"rgb("+this.r+", "+this.g+", "+this.b+")"},this.toHex=function(){var t=this.r.toString(16),e=this.g.toString(16),n=this.b.toString(16);return 1==t.length&&(t="0"+t),1==e.length&&(e="0"+e),1==n.length&&(n="0"+n),"#"+t+e+n}},function(t){var e="+".charCodeAt(0),n="/".charCodeAt(0),r="0".charCodeAt(0),i="a".charCodeAt(0),o="A".charCodeAt(0),a="-".charCodeAt(0),s="_".charCodeAt(0),u=function(t){var u=t.charCodeAt(0);return u===e||u===a?62:u===n||u===s?63:u<r?-1:u<r+10?u-r+26+26:u<o+26?u-o:u<i+26?u-i+26:void 0};t.API.TTFFont=function(){function t(t,e,n){var r;if(this.rawData=t,r=this.contents=new l(t),this.contents.pos=4,"ttcf"===r.readString(4)){if(!e)throw new Error("Must specify a font name for TTC files.");throw new Error("Font "+e+" not found in TTC file.")}r.pos=0,this.parse(),this.subset=new P(this),this.registerTTF()}return t.open=function(e,n,r,i){if("string"!=typeof r)throw new Error("Invalid argument supplied in TTFFont.open");return new t(function(t){var e,n,r,i,o,a;if(0<t.length%4)throw new Error("Invalid string. Length must be a multiple of 4");var s=t.length;o="="===t.charAt(s-2)?2:"="===t.charAt(s-1)?1:0,a=new Uint8Array(3*t.length/4-o),r=0<o?t.length-4:t.length;var c=0;function l(t){a[c++]=t}for(n=e=0;e<r;e+=4,n+=3)l((16711680&(i=u(t.charAt(e))<<18|u(t.charAt(e+1))<<12|u(t.charAt(e+2))<<6|u(t.charAt(e+3))))>>16),l((65280&i)>>8),l(255&i);return 2===o?l(255&(i=u(t.charAt(e))<<2|u(t.charAt(e+1))>>4)):1===o&&(l((i=u(t.charAt(e))<<10|u(t.charAt(e+1))<<4|u(t.charAt(e+2))>>2)>>8&255),l(255&i)),a}(r),n,i)},t.prototype.parse=function(){return this.directory=new f(this.contents),this.head=new d(this),this.name=new x(this),this.cmap=new m(this),this.toUnicode=new Map,this.hhea=new v(this),this.maxp=new N(this),this.hmtx=new L(this),this.post=new b(this),this.os2=new y(this),this.loca=new k(this),this.glyf=new S(this),this.ascender=this.os2.exists&&this.os2.ascender||this.hhea.ascender,this.decender=this.os2.exists&&this.os2.decender||this.hhea.decender,this.lineGap=this.os2.exists&&this.os2.lineGap||this.hhea.lineGap,this.bbox=[this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax]},t.prototype.registerTTF=function(){var t,e,n,r,i;if(this.scaleFactor=1e3/this.head.unitsPerEm,this.bbox=function(){var e,n,r,i;for(i=[],e=0,n=(r=this.bbox).length;e<n;e++)t=r[e],i.push(Math.round(t*this.scaleFactor));return i}.call(this),this.stemV=0,this.post.exists?(n=255&(r=this.post.italic_angle),!0&(e=r>>16)&&(e=-(1+(65535^e))),this.italicAngle=+(e+"."+n)):this.italicAngle=0,this.ascender=Math.round(this.ascender*this.scaleFactor),this.decender=Math.round(this.decender*this.scaleFactor),this.lineGap=Math.round(this.lineGap*this.scaleFactor),this.capHeight=this.os2.exists&&this.os2.capHeight||this.ascender,this.xHeight=this.os2.exists&&this.os2.xHeight||0,this.familyClass=(this.os2.exists&&this.os2.familyClass||0)>>8,this.isSerif=1===(i=this.familyClass)||2===i||3===i||4===i||5===i||7===i,this.isScript=10===this.familyClass,this.flags=0,this.post.isFixedPitch&&(this.flags|=1),this.isSerif&&(this.flags|=2),this.isScript&&(this.flags|=8),0!==this.italicAngle&&(this.flags|=64),this.flags|=32,!this.cmap.unicode)throw new Error("No unicode cmap for font")},t.prototype.characterToGlyph=function(t){var e;return(null!=(e=this.cmap.unicode)?e.codeMap[t]:void 0)||0},t.prototype.widthOfGlyph=function(t){var e;return e=1e3/this.head.unitsPerEm,this.hmtx.forGlyph(t).advance*e},t.prototype.widthOfString=function(t,e,n){var r,i,o,a,s;for(i=a=o=0,s=(t=""+t).length;0<=s?a<s:s<a;i=0<=s?++a:--a)r=t.charCodeAt(i),o+=this.widthOfGlyph(this.characterToGlyph(r))+n*(1e3/e)||0;return o*(e/1e3)},t.prototype.lineHeight=function(t,e){var n;return null==e&&(e=!1),n=e?this.lineGap:0,(this.ascender+n-this.decender)/1e3*t},t}();var c,l=function(){function t(t){this.data=null!=t?t:[],this.pos=0,this.length=this.data.length}return t.prototype.readByte=function(){return this.data[this.pos++]},t.prototype.writeByte=function(t){return this.data[this.pos++]=t},t.prototype.readUInt32=function(){return 16777216*this.readByte()+(this.readByte()<<16)+(this.readByte()<<8)+this.readByte()},t.prototype.writeUInt32=function(t){return this.writeByte(t>>>24&255),this.writeByte(t>>16&255),this.writeByte(t>>8&255),this.writeByte(255&t)},t.prototype.readInt32=function(){var t;return 2147483648<=(t=this.readUInt32())?t-4294967296:t},t.prototype.writeInt32=function(t){return t<0&&(t+=4294967296),this.writeUInt32(t)},t.prototype.readUInt16=function(){return this.readByte()<<8|this.readByte()},t.prototype.writeUInt16=function(t){return this.writeByte(t>>8&255),this.writeByte(255&t)},t.prototype.readInt16=function(){var t;return 32768<=(t=this.readUInt16())?t-65536:t},t.prototype.writeInt16=function(t){return t<0&&(t+=65536),this.writeUInt16(t)},t.prototype.readString=function(t){var e,n,r;for(n=[],e=r=0;0<=t?r<t:t<r;e=0<=t?++r:--r)n[e]=String.fromCharCode(this.readByte());return n.join("")},t.prototype.writeString=function(t){var e,n,r,i;for(i=[],e=n=0,r=t.length;0<=r?n<r:r<n;e=0<=r?++n:--n)i.push(this.writeByte(t.charCodeAt(e)));return i},t.prototype.readShort=function(){return this.readInt16()},t.prototype.writeShort=function(t){return this.writeInt16(t)},t.prototype.readLongLong=function(){var t,e,n,r,i,o,a,s;return t=this.readByte(),e=this.readByte(),n=this.readByte(),r=this.readByte(),i=this.readByte(),o=this.readByte(),a=this.readByte(),s=this.readByte(),128&t?-1*(72057594037927940*(255^t)+281474976710656*(255^e)+1099511627776*(255^n)+4294967296*(255^r)+16777216*(255^i)+65536*(255^o)+256*(255^a)+(255^s)+1):72057594037927940*t+281474976710656*e+1099511627776*n+4294967296*r+16777216*i+65536*o+256*a+s},t.prototype.writeLongLong=function(t){var e,n;return e=Math.floor(t/4294967296),n=4294967295&t,this.writeByte(e>>24&255),this.writeByte(e>>16&255),this.writeByte(e>>8&255),this.writeByte(255&e),this.writeByte(n>>24&255),this.writeByte(n>>16&255),this.writeByte(n>>8&255),this.writeByte(255&n)},t.prototype.readInt=function(){return this.readInt32()},t.prototype.writeInt=function(t){return this.writeInt32(t)},t.prototype.read=function(t){var e,n;for(e=[],n=0;0<=t?n<t:t<n;0<=t?++n:--n)e.push(this.readByte());return e},t.prototype.write=function(t){var e,n,r,i;for(i=[],n=0,r=t.length;n<r;n++)e=t[n],i.push(this.writeByte(e));return i},t}(),f=function(){var t;function e(t){var e,n,r;for(this.scalarType=t.readInt(),this.tableCount=t.readShort(),this.searchRange=t.readShort(),this.entrySelector=t.readShort(),this.rangeShift=t.readShort(),this.tables={},n=0,r=this.tableCount;0<=r?n<r:r<n;0<=r?++n:--n)e={tag:t.readString(4),checksum:t.readInt(),offset:t.readInt(),length:t.readInt()},this.tables[e.tag]=e}return e.prototype.encode=function(e){var n,r,i,o,a,s,u,c,f,h,p,d,g;for(g in p=Object.keys(e).length,s=Math.log(2),f=16*Math.floor(Math.log(p)/s),o=Math.floor(f/s),c=16*p-f,(r=new l).writeInt(this.scalarType),r.writeShort(p),r.writeShort(f),r.writeShort(o),r.writeShort(c),i=16*p,u=r.pos+i,a=null,d=[],e)for(h=e[g],r.writeString(g),r.writeInt(t(h)),r.writeInt(u),r.writeInt(h.length),d=d.concat(h),"head"===g&&(a=u),u+=h.length;u%4;)d.push(0),u++;return r.write(d),n=2981146554-t(r.data),r.pos=a+8,r.writeUInt32(n),r.data},t=function(t){var e,n,r,i;for(t=A.call(t);t.length%4;)t.push(0);for(n=new l(t),r=e=0,i=t.length;r<i;r+=4)e+=n.readUInt32();return 4294967295&e},e}(),h={}.hasOwnProperty,p=function(t,e){for(var n in e)h.call(e,n)&&(t[n]=e[n]);function r(){this.constructor=t}return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t};c=function(){function t(t){var e;this.file=t,e=this.file.directory.tables[this.tag],this.exists=!!e,e&&(this.offset=e.offset,this.length=e.length,this.parse(this.file.contents))}return t.prototype.parse=function(){},t.prototype.encode=function(){},t.prototype.raw=function(){return this.exists?(this.file.contents.pos=this.offset,this.file.contents.read(this.length)):null},t}();var d=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="head",e.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.revision=t.readInt(),this.checkSumAdjustment=t.readInt(),this.magicNumber=t.readInt(),this.flags=t.readShort(),this.unitsPerEm=t.readShort(),this.created=t.readLongLong(),this.modified=t.readLongLong(),this.xMin=t.readShort(),this.yMin=t.readShort(),this.xMax=t.readShort(),this.yMax=t.readShort(),this.macStyle=t.readShort(),this.lowestRecPPEM=t.readShort(),this.fontDirectionHint=t.readShort(),this.indexToLocFormat=t.readShort(),this.glyphDataFormat=t.readShort()},e.prototype.encode=function(t){var e;return(e=new l).writeInt(this.version),e.writeInt(this.revision),e.writeInt(this.checkSumAdjustment),e.writeInt(this.magicNumber),e.writeShort(this.flags),e.writeShort(this.unitsPerEm),e.writeLongLong(this.created),e.writeLongLong(this.modified),e.writeShort(this.xMin),e.writeShort(this.yMin),e.writeShort(this.xMax),e.writeShort(this.yMax),e.writeShort(this.macStyle),e.writeShort(this.lowestRecPPEM),e.writeShort(this.fontDirectionHint),e.writeShort(t),e.writeShort(this.glyphDataFormat),e.data},e}(),g=function(){function t(t,e){var n,r,i,o,a,s,u,c,l,f,h,p,d,g,m,v,y,b;switch(this.platformID=t.readUInt16(),this.encodingID=t.readShort(),this.offset=e+t.readInt(),l=t.pos,t.pos=this.offset,this.format=t.readUInt16(),this.length=t.readUInt16(),this.language=t.readUInt16(),this.isUnicode=3===this.platformID&&1===this.encodingID&&4===this.format||0===this.platformID&&4===this.format,this.codeMap={},this.format){case 0:for(s=m=0;m<256;s=++m)this.codeMap[s]=t.readByte();break;case 4:for(h=t.readUInt16(),f=h/2,t.pos+=6,i=function(){var e,n;for(n=[],s=e=0;0<=f?e<f:f<e;s=0<=f?++e:--e)n.push(t.readUInt16());return n}(),t.pos+=2,d=function(){var e,n;for(n=[],s=e=0;0<=f?e<f:f<e;s=0<=f?++e:--e)n.push(t.readUInt16());return n}(),u=function(){var e,n;for(n=[],s=e=0;0<=f?e<f:f<e;s=0<=f?++e:--e)n.push(t.readUInt16());return n}(),c=function(){var e,n;for(n=[],s=e=0;0<=f?e<f:f<e;s=0<=f?++e:--e)n.push(t.readUInt16());return n}(),r=(this.length-t.pos+this.offset)/2,a=function(){var e,n;for(n=[],s=e=0;0<=r?e<r:r<e;s=0<=r?++e:--e)n.push(t.readUInt16());return n}(),s=v=0,b=i.length;v<b;s=++v)for(g=i[s],n=y=p=d[s];p<=g?y<=g:g<=y;n=p<=g?++y:--y)0===c[s]?o=n+u[s]:0!==(o=a[c[s]/2+(n-p)-(f-s)]||0)&&(o+=u[s]),this.codeMap[n]=65535&o}t.pos=l}return t.encode=function(t,e){var n,r,i,o,a,s,u,c,f,h,p,d,g,m,v,y,b,w,x,N,L,A,S,_,C,k,P,F,T,E,j,I,B,O,M,q,D,R,U,z,H,W,V,G,Y,X;switch(F=new l,o=Object.keys(t).sort((function(t,e){return t-e})),e){case"macroman":for(g=0,m=function(){var t,e;for(e=[],d=t=0;t<256;d=++t)e.push(0);return e}(),y={0:0},i={},T=0,B=o.length;T<B;T++)null==y[V=t[r=o[T]]]&&(y[V]=++g),i[r]={old:t[r],new:y[t[r]]},m[r]=y[t[r]];return F.writeUInt16(1),F.writeUInt16(0),F.writeUInt32(12),F.writeUInt16(0),F.writeUInt16(262),F.writeUInt16(0),F.write(m),{charMap:i,subtable:F.data,maxGlyphID:g+1};case"unicode":for(k=[],f=[],y={},n={},v=u=null,E=b=0,O=o.length;E<O;E++)null==y[x=t[r=o[E]]]&&(y[x]=++b),n[r]={old:x,new:y[x]},a=y[x]-r,null!=v&&a===u||(v&&f.push(v),k.push(r),u=a),v=r;for(v&&f.push(v),f.push(65535),k.push(65535),_=2*(S=k.length),A=2*Math.pow(Math.log(S)/Math.LN2,2),h=Math.log(A/2)/Math.LN2,L=2*S-A,s=[],N=[],p=[],d=j=0,M=k.length;j<M;d=++j){if(C=k[d],c=f[d],65535===C){s.push(0),N.push(0);break}if(32768<=C-(P=n[C].new))for(s.push(0),N.push(2*(p.length+S-d)),r=I=C;C<=c?I<=c:c<=I;r=C<=c?++I:--I)p.push(n[r].new);else s.push(P-C),N.push(0)}for(F.writeUInt16(3),F.writeUInt16(1),F.writeUInt32(12),F.writeUInt16(4),F.writeUInt16(16+8*S+2*p.length),F.writeUInt16(0),F.writeUInt16(_),F.writeUInt16(A),F.writeUInt16(h),F.writeUInt16(L),H=0,q=f.length;H<q;H++)r=f[H],F.writeUInt16(r);for(F.writeUInt16(0),W=0,D=k.length;W<D;W++)r=k[W],F.writeUInt16(r);for(G=0,R=s.length;G<R;G++)a=s[G],F.writeUInt16(a);for(Y=0,U=N.length;Y<U;Y++)w=N[Y],F.writeUInt16(w);for(X=0,z=p.length;X<z;X++)g=p[X],F.writeUInt16(g);return{charMap:n,subtable:F.data,maxGlyphID:b+1}}},t}(),m=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="cmap",e.prototype.parse=function(t){var e,n,r;for(t.pos=this.offset,this.version=t.readUInt16(),n=t.readUInt16(),this.tables=[],this.unicode=null,r=0;0<=n?r<n:n<r;0<=n?++r:--r)e=new g(t,this.offset),this.tables.push(e),e.isUnicode&&null==this.unicode&&(this.unicode=e);return!0},e.encode=function(t,e){var n,r;return null==e&&(e="macroman"),n=g.encode(t,e),(r=new l).writeUInt16(0),r.writeUInt16(1),n.table=r.data.concat(n.subtable),n},e}(),v=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="hhea",e.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.ascender=t.readShort(),this.decender=t.readShort(),this.lineGap=t.readShort(),this.advanceWidthMax=t.readShort(),this.minLeftSideBearing=t.readShort(),this.minRightSideBearing=t.readShort(),this.xMaxExtent=t.readShort(),this.caretSlopeRise=t.readShort(),this.caretSlopeRun=t.readShort(),this.caretOffset=t.readShort(),t.pos+=8,this.metricDataFormat=t.readShort(),this.numberOfMetrics=t.readUInt16()},e}(),y=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="OS/2",e.prototype.parse=function(t){if(t.pos=this.offset,this.version=t.readUInt16(),this.averageCharWidth=t.readShort(),this.weightClass=t.readUInt16(),this.widthClass=t.readUInt16(),this.type=t.readShort(),this.ySubscriptXSize=t.readShort(),this.ySubscriptYSize=t.readShort(),this.ySubscriptXOffset=t.readShort(),this.ySubscriptYOffset=t.readShort(),this.ySuperscriptXSize=t.readShort(),this.ySuperscriptYSize=t.readShort(),this.ySuperscriptXOffset=t.readShort(),this.ySuperscriptYOffset=t.readShort(),this.yStrikeoutSize=t.readShort(),this.yStrikeoutPosition=t.readShort(),this.familyClass=t.readShort(),this.panose=function(){var e,n;for(n=[],e=0;e<10;++e)n.push(t.readByte());return n}(),this.charRange=function(){var e,n;for(n=[],e=0;e<4;++e)n.push(t.readInt());return n}(),this.vendorID=t.readString(4),this.selection=t.readShort(),this.firstCharIndex=t.readShort(),this.lastCharIndex=t.readShort(),0<this.version&&(this.ascent=t.readShort(),this.descent=t.readShort(),this.lineGap=t.readShort(),this.winAscent=t.readShort(),this.winDescent=t.readShort(),this.codePageRange=function(){var e,n;for(n=[],e=0;e<2;++e)n.push(t.readInt());return n}(),1<this.version))return this.xHeight=t.readShort(),this.capHeight=t.readShort(),this.defaultChar=t.readShort(),this.breakChar=t.readShort(),this.maxContext=t.readShort()},e}(),b=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="post",e.prototype.parse=function(t){var e,n,r,i;switch(t.pos=this.offset,this.format=t.readInt(),this.italicAngle=t.readInt(),this.underlinePosition=t.readShort(),this.underlineThickness=t.readShort(),this.isFixedPitch=t.readInt(),this.minMemType42=t.readInt(),this.maxMemType42=t.readInt(),this.minMemType1=t.readInt(),this.maxMemType1=t.readInt(),this.format){case 65536:break;case 131072:for(n=t.readUInt16(),this.glyphNameIndex=[],r=0;0<=n?r<n:n<r;0<=n?++r:--r)this.glyphNameIndex.push(t.readUInt16());for(this.names=[],i=[];t.pos<this.offset+this.length;)e=t.readByte(),i.push(this.names.push(t.readString(e)));return i;case 151552:return n=t.readUInt16(),this.offsets=t.read(n);case 196608:break;case 262144:return this.map=function(){var e,n,r;for(r=[],e=0,n=this.file.maxp.numGlyphs;0<=n?e<n:n<e;0<=n?++e:--e)r.push(t.readUInt32());return r}.call(this)}},e}(),w=function(t,e){this.raw=t,this.length=t.length,this.platformID=e.platformID,this.encodingID=e.encodingID,this.languageID=e.languageID},x=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="name",e.prototype.parse=function(t){var e,n,r,i,o,a,s,u,c,l,f,h;for(t.pos=this.offset,t.readShort(),e=t.readShort(),a=t.readShort(),n=[],i=c=0;0<=e?c<e:e<c;i=0<=e?++c:--c)n.push({platformID:t.readShort(),encodingID:t.readShort(),languageID:t.readShort(),nameID:t.readShort(),length:t.readShort(),offset:this.offset+a+t.readShort()});for(s={},i=l=0,f=n.length;l<f;i=++l)r=n[i],t.pos=r.offset,u=t.readString(r.length),o=new w(u,r),null==s[h=r.nameID]&&(s[h]=[]),s[r.nameID].push(o);this.strings=s,this.copyright=s[0],this.fontFamily=s[1],this.fontSubfamily=s[2],this.uniqueSubfamily=s[3],this.fontName=s[4],this.version=s[5];try{this.postscriptName=s[6][0].raw.replace(/[\x00-\x19\x80-\xff]/g,"")}catch(t){this.postscriptName=s[4][0].raw.replace(/[\x00-\x19\x80-\xff]/g,"")}return this.trademark=s[7],this.manufacturer=s[8],this.designer=s[9],this.description=s[10],this.vendorUrl=s[11],this.designerUrl=s[12],this.license=s[13],this.licenseUrl=s[14],this.preferredFamily=s[15],this.preferredSubfamily=s[17],this.compatibleFull=s[18],this.sampleText=s[19]},e}(),N=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="maxp",e.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.numGlyphs=t.readUInt16(),this.maxPoints=t.readUInt16(),this.maxContours=t.readUInt16(),this.maxCompositePoints=t.readUInt16(),this.maxComponentContours=t.readUInt16(),this.maxZones=t.readUInt16(),this.maxTwilightPoints=t.readUInt16(),this.maxStorage=t.readUInt16(),this.maxFunctionDefs=t.readUInt16(),this.maxInstructionDefs=t.readUInt16(),this.maxStackElements=t.readUInt16(),this.maxSizeOfInstructions=t.readUInt16(),this.maxComponentElements=t.readUInt16(),this.maxComponentDepth=t.readUInt16()},e}(),L=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="hmtx",e.prototype.parse=function(t){var e,n,r,i,o,a,s;for(t.pos=this.offset,this.metrics=[],i=0,a=this.file.hhea.numberOfMetrics;0<=a?i<a:a<i;0<=a?++i:--i)this.metrics.push({advance:t.readUInt16(),lsb:t.readInt16()});for(n=this.file.maxp.numGlyphs-this.file.hhea.numberOfMetrics,this.leftSideBearings=function(){var e,r;for(r=[],e=0;0<=n?e<n:n<e;0<=n?++e:--e)r.push(t.readInt16());return r}(),this.widths=function(){var t,e,n,i;for(i=[],t=0,e=(n=this.metrics).length;t<e;t++)r=n[t],i.push(r.advance);return i}.call(this),e=this.widths[this.widths.length-1],s=[],o=0;0<=n?o<n:n<o;0<=n?++o:--o)s.push(this.widths.push(e));return s},e.prototype.forGlyph=function(t){return t in this.metrics?this.metrics[t]:{advance:this.metrics[this.metrics.length-1].advance,lsb:this.leftSideBearings[t-this.metrics.length]}},e}(),A=[].slice,S=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="glyf",e.prototype.parse=function(t){return this.cache={}},e.prototype.glyphFor=function(t){var e,n,r,i,o,a,s,u,c,f;return(t=t)in this.cache?this.cache[t]:(i=this.file.loca,e=this.file.contents,n=i.indexOf(t),0===(r=i.lengthOf(t))?this.cache[t]=null:(e.pos=this.offset+n,o=(a=new l(e.read(r))).readShort(),u=a.readShort(),f=a.readShort(),s=a.readShort(),c=a.readShort(),this.cache[t]=-1===o?new C(a,u,f,s,c):new _(a,o,u,f,s,c),this.cache[t]))},e.prototype.encode=function(t,e,n){var r,i,o,a,s;for(o=[],i=[],a=0,s=e.length;a<s;a++)r=t[e[a]],i.push(o.length),r&&(o=o.concat(r.encode(n)));return i.push(o.length),{table:o,offsets:i}},e}(),_=function(){function t(t,e,n,r,i,o){this.raw=t,this.numberOfContours=e,this.xMin=n,this.yMin=r,this.xMax=i,this.yMax=o,this.compound=!1}return t.prototype.encode=function(){return this.raw.data},t}(),C=function(){function t(t,e,n,r,i){var o,a;for(this.raw=t,this.xMin=e,this.yMin=n,this.xMax=r,this.yMax=i,this.compound=!0,this.glyphIDs=[],this.glyphOffsets=[],o=this.raw;a=o.readShort(),this.glyphOffsets.push(o.pos),this.glyphIDs.push(o.readShort()),32&a;)o.pos+=1&a?4:2,128&a?o.pos+=8:64&a?o.pos+=4:8&a&&(o.pos+=2)}return t.prototype.encode=function(t){var e,n,r,i,o;for(n=new l(A.call(this.raw.data)),e=r=0,i=(o=this.glyphIDs).length;r<i;e=++r)o[e],n.pos=this.glyphOffsets[e];return n.data},t}(),k=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="loca",e.prototype.parse=function(t){var e;return t.pos=this.offset,e=this.file.head.indexToLocFormat,this.offsets=0===e?function(){var e,n,r;for(r=[],e=0,n=this.length;e<n;e+=2)r.push(2*t.readUInt16());return r}.call(this):function(){var e,n,r;for(r=[],e=0,n=this.length;e<n;e+=4)r.push(t.readUInt32());return r}.call(this)},e.prototype.indexOf=function(t){return this.offsets[t]},e.prototype.lengthOf=function(t){return this.offsets[t+1]-this.offsets[t]},e.prototype.encode=function(t,e){for(var n=new Uint32Array(this.offsets.length),r=0,i=0,o=0;o<n.length;++o)if(n[o]=r,i<e.length&&e[i]==o){++i,n[o]=r;var a=this.offsets[o],s=this.offsets[o+1]-a;0<s&&(r+=s)}for(var u=new Array(4*n.length),c=0;c<n.length;++c)u[4*c+3]=255&n[c],u[4*c+2]=(65280&n[c])>>8,u[4*c+1]=(16711680&n[c])>>16,u[4*c]=(4278190080&n[c])>>24;return u},e}(),P=function(){function t(t){this.font=t,this.subset={},this.unicodes={},this.next=33}return t.prototype.generateCmap=function(){var t,e,n,r,i;for(e in r=this.font.cmap.tables[0].codeMap,t={},i=this.subset)n=i[e],t[e]=r[n];return t},t.prototype.glyphsFor=function(t){var e,n,r,i,o,a,s;for(r={},o=0,a=t.length;o<a;o++)r[i=t[o]]=this.font.glyf.glyphFor(i);for(i in e=[],r)(null!=(n=r[i])?n.compound:void 0)&&e.push.apply(e,n.glyphIDs);if(0<e.length)for(i in s=this.glyphsFor(e))n=s[i],r[i]=n;return r},t.prototype.encode=function(t,e){var n,r,i,o,a,s,u,c,l,f,h,p,d,g,v;for(r in n=m.encode(this.generateCmap(),"unicode"),o=this.glyphsFor(t),h={0:0},v=n.charMap)h[(s=v[r]).old]=s.new;for(p in f=n.maxGlyphID,o)p in h||(h[p]=f++);return c=function(t){var e,n;for(e in n={},t)n[t[e]]=e;return n}(h),l=Object.keys(c).sort((function(t,e){return t-e})),d=function(){var t,e,n;for(n=[],t=0,e=l.length;t<e;t++)a=l[t],n.push(c[a]);return n}(),i=this.font.glyf.encode(o,d,h),u=this.font.loca.encode(i.offsets,d),g={cmap:this.font.cmap.raw(),glyf:i.table,loca:u,hmtx:this.font.hmtx.raw(),hhea:this.font.hhea.raw(),maxp:this.font.maxp.raw(),post:this.font.post.raw(),name:this.font.name.raw(),head:this.font.head.encode(e)},this.font.os2.exists&&(g["OS/2"]=this.font.os2.raw()),this.font.directory.encode(g)},t}();t.API.PDFObject=function(){var t;function e(){}return t=function(t,e){return(Array(e+1).join("0")+t).slice(-e)},e.convert=function(n){var r,i,o,a;if(Array.isArray(n))return"["+function(){var t,i,o;for(o=[],t=0,i=n.length;t<i;t++)r=n[t],o.push(e.convert(r));return o}().join(" ")+"]";if("string"==typeof n)return"/"+n;if(null!=n?n.isString:void 0)return"("+n+")";if(n instanceof Date)return"(D:"+t(n.getUTCFullYear(),4)+t(n.getUTCMonth(),2)+t(n.getUTCDate(),2)+t(n.getUTCHours(),2)+t(n.getUTCMinutes(),2)+t(n.getUTCSeconds(),2)+"Z)";if("[object Object]"!=={}.toString.call(n))return""+n;for(i in o=["<<"],n)a=n[i],o.push("/"+i+" "+e.convert(a));return o.push(">>"),o.join("\n")},e}()}(gt),Pt="undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")(),Ft=function(){var t,e,n;function r(t){var e,n,r,i,o,a,s,u,c,l,f,h,p,d;for(this.data=t,this.pos=8,this.palette=[],this.imgData=[],this.transparency={},this.animation=null,this.text={},a=null;;){switch(e=this.readUInt32(),c=function(){var t,e;for(e=[],t=0;t<4;++t)e.push(String.fromCharCode(this.data[this.pos++]));return e}.call(this).join("")){case"IHDR":this.width=this.readUInt32(),this.height=this.readUInt32(),this.bits=this.data[this.pos++],this.colorType=this.data[this.pos++],this.compressionMethod=this.data[this.pos++],this.filterMethod=this.data[this.pos++],this.interlaceMethod=this.data[this.pos++];break;case"acTL":this.animation={numFrames:this.readUInt32(),numPlays:this.readUInt32()||1/0,frames:[]};break;case"PLTE":this.palette=this.read(e);break;case"fcTL":a&&this.animation.frames.push(a),this.pos+=4,a={width:this.readUInt32(),height:this.readUInt32(),xOffset:this.readUInt32(),yOffset:this.readUInt32()},o=this.readUInt16(),i=this.readUInt16()||100,a.delay=1e3*o/i,a.disposeOp=this.data[this.pos++],a.blendOp=this.data[this.pos++],a.data=[];break;case"IDAT":case"fdAT":for("fdAT"===c&&(this.pos+=4,e-=4),t=(null!=a?a.data:void 0)||this.imgData,h=0;0<=e?h<e:e<h;0<=e?++h:--h)t.push(this.data[this.pos++]);break;case"tRNS":switch(this.transparency={},this.colorType){case 3:if(r=this.palette.length/3,this.transparency.indexed=this.read(e),this.transparency.indexed.length>r)throw new Error("More transparent colors than palette size");if(0<(l=r-this.transparency.indexed.length))for(p=0;0<=l?p<l:l<p;0<=l?++p:--p)this.transparency.indexed.push(255);break;case 0:this.transparency.grayscale=this.read(e)[0];break;case 2:this.transparency.rgb=this.read(e)}break;case"tEXt":s=(f=this.read(e)).indexOf(0),u=String.fromCharCode.apply(String,f.slice(0,s)),this.text[u]=String.fromCharCode.apply(String,f.slice(s+1));break;case"IEND":return a&&this.animation.frames.push(a),this.colors=function(){switch(this.colorType){case 0:case 3:case 4:return 1;case 2:case 6:return 3}}.call(this),this.hasAlphaChannel=4===(d=this.colorType)||6===d,n=this.colors+(this.hasAlphaChannel?1:0),this.pixelBitlength=this.bits*n,this.colorSpace=function(){switch(this.colors){case 1:return"DeviceGray";case 3:return"DeviceRGB"}}.call(this),void(this.imgData=new Uint8Array(this.imgData));default:this.pos+=e}if(this.pos+=4,this.pos>this.data.length)throw new Error("Incomplete or corrupt PNG file")}}r.load=function(t,e,n){var i;return"function"==typeof e&&(n=e),(i=new XMLHttpRequest).open("GET",t,!0),i.responseType="arraybuffer",i.onload=function(){var t;return t=new r(new Uint8Array(i.response||i.mozResponseArrayBuffer)),"function"==typeof(null!=e?e.getContext:void 0)&&t.render(e),"function"==typeof n?n(t):void 0},i.send(null)},r.prototype.read=function(t){var e,n;for(n=[],e=0;0<=t?e<t:t<e;0<=t?++e:--e)n.push(this.data[this.pos++]);return n},r.prototype.readUInt32=function(){return this.data[this.pos++]<<24|this.data[this.pos++]<<16|this.data[this.pos++]<<8|this.data[this.pos++]},r.prototype.readUInt16=function(){return this.data[this.pos++]<<8|this.data[this.pos++]},r.prototype.decodePixels=function(t){var e=this.pixelBitlength/8,n=new Uint8Array(this.width*this.height*e),r=0,i=this;if(null==t&&(t=this.imgData),0===t.length)return new Uint8Array(0);function o(o,a,s,u){var c,l,f,h,p,d,g,m,v,y,b,w,x,N,L,A,S,_,C,k,P,F=Math.ceil((i.width-o)/s),T=Math.ceil((i.height-a)/u),E=i.width==F&&i.height==T;for(N=e*F,w=E?n:new Uint8Array(N*T),d=t.length,l=x=0;x<T&&r<d;){switch(t[r++]){case 0:for(h=S=0;S<N;h=S+=1)w[l++]=t[r++];break;case 1:for(h=_=0;_<N;h=_+=1)c=t[r++],p=h<e?0:w[l-e],w[l++]=(c+p)%256;break;case 2:for(h=C=0;C<N;h=C+=1)c=t[r++],f=(h-h%e)/e,L=x&&w[(x-1)*N+f*e+h%e],w[l++]=(L+c)%256;break;case 3:for(h=k=0;k<N;h=k+=1)c=t[r++],f=(h-h%e)/e,p=h<e?0:w[l-e],L=x&&w[(x-1)*N+f*e+h%e],w[l++]=(c+Math.floor((p+L)/2))%256;break;case 4:for(h=P=0;P<N;h=P+=1)c=t[r++],f=(h-h%e)/e,p=h<e?0:w[l-e],0===x?L=A=0:(L=w[(x-1)*N+f*e+h%e],A=f&&w[(x-1)*N+(f-1)*e+h%e]),g=p+L-A,m=Math.abs(g-p),y=Math.abs(g-L),b=Math.abs(g-A),v=m<=y&&m<=b?p:y<=b?L:A,w[l++]=(c+v)%256;break;default:throw new Error("Invalid filter algorithm: "+t[r-1])}if(!E){var j=((a+x*u)*i.width+o)*e,I=x*N;for(h=0;h<F;h+=1){for(var B=0;B<e;B+=1)n[j++]=w[I++];j+=(s-1)*e}}x++}}return t=(t=new Mt(t)).getBytes(),1==i.interlaceMethod?(o(0,0,8,8),o(4,0,8,8),o(0,4,4,8),o(2,0,4,4),o(0,2,2,4),o(1,0,2,2),o(0,1,1,2)):o(0,0,1,1),n},r.prototype.decodePalette=function(){var t,e,n,r,i,o,a,s,u;for(n=this.palette,o=this.transparency.indexed||[],i=new Uint8Array((o.length||0)+n.length),r=0,n.length,e=a=t=0,s=n.length;a<s;e=a+=3)i[r++]=n[e],i[r++]=n[e+1],i[r++]=n[e+2],i[r++]=null!=(u=o[t++])?u:255;return i},r.prototype.copyToImageData=function(t,e){var n,r,i,o,a,s,u,c,l,f,h;if(r=this.colors,l=null,n=this.hasAlphaChannel,this.palette.length&&(l=null!=(h=this._decodedPalette)?h:this._decodedPalette=this.decodePalette(),r=4,n=!0),c=(i=t.data||t).length,a=l||e,o=s=0,1===r)for(;o<c;)u=l?4*e[o/4]:s,f=a[u++],i[o++]=f,i[o++]=f,i[o++]=f,i[o++]=n?a[u++]:255,s=u;else for(;o<c;)u=l?4*e[o/4]:s,i[o++]=a[u++],i[o++]=a[u++],i[o++]=a[u++],i[o++]=n?a[u++]:255,s=u},r.prototype.decode=function(){var t;return t=new Uint8Array(this.width*this.height*4),this.copyToImageData(t,this.decodePixels()),t};try{e=Pt.document.createElement("canvas"),n=e.getContext("2d")}catch(t){return-1}return t=function(t){var r;return n.width=t.width,n.height=t.height,n.clearRect(0,0,t.width,t.height),n.putImageData(t,0,0),(r=new Image).src=e.toDataURL(),r},r.prototype.decodeFrames=function(e){var n,r,i,o,a,s,u,c;if(this.animation){for(c=[],r=a=0,s=(u=this.animation.frames).length;a<s;r=++a)n=u[r],i=e.createImageData(n.width,n.height),o=this.decodePixels(new Uint8Array(n.data)),this.copyToImageData(i,o),n.imageData=i,c.push(n.image=t(i));return c}},r.prototype.renderFrame=function(t,e){var n,r,i;return n=(r=this.animation.frames)[e],i=r[e-1],0===e&&t.clearRect(0,0,this.width,this.height),1===(null!=i?i.disposeOp:void 0)?t.clearRect(i.xOffset,i.yOffset,i.width,i.height):2===(null!=i?i.disposeOp:void 0)&&t.putImageData(i.imageData,i.xOffset,i.yOffset),0===n.blendOp&&t.clearRect(n.xOffset,n.yOffset,n.width,n.height),t.drawImage(n.image,n.xOffset,n.yOffset)},r.prototype.animate=function(t){var e,n,r,i,o,a,s=this;return n=0,a=this.animation,i=a.numFrames,r=a.frames,o=a.numPlays,(e=function(){var a,u;if(a=n++%i,u=r[a],s.renderFrame(t,a),1<i&&n/i<o)return s.animation._timeout=setTimeout(e,u.delay)})()},r.prototype.stopAnimation=function(){var t;return clearTimeout(null!=(t=this.animation)?t._timeout:void 0)},r.prototype.render=function(t){var e,n;return t._png&&t._png.stopAnimation(),t._png=this,t.width=this.width,t.height=this.height,e=t.getContext("2d"),this.animation?(this.decodeFrames(e),this.animate(e)):(n=e.createImageData(this.width,this.height),this.copyToImageData(n,this.decodePixels()),e.putImageData(n,0,0))},r}(),Pt.PNG=Ft;var Ot=function(){function t(){this.pos=0,this.bufferLength=0,this.eof=!1,this.buffer=null}return t.prototype={ensureBuffer:function(t){var e=this.buffer,n=e?e.byteLength:0;if(t<n)return e;for(var r=512;r<t;)r<<=1;for(var i=new Uint8Array(r),o=0;o<n;++o)i[o]=e[o];return this.buffer=i},getByte:function(){for(var t=this.pos;this.bufferLength<=t;){if(this.eof)return null;this.readBlock()}return this.buffer[this.pos++]},getBytes:function(t){var e=this.pos;if(t){this.ensureBuffer(e+t);for(var n=e+t;!this.eof&&this.bufferLength<n;)this.readBlock();var r=this.bufferLength;r<n&&(n=r)}else{for(;!this.eof;)this.readBlock();n=this.bufferLength}return this.pos=n,this.buffer.subarray(e,n)},lookChar:function(){for(var t=this.pos;this.bufferLength<=t;){if(this.eof)return null;this.readBlock()}return String.fromCharCode(this.buffer[this.pos])},getChar:function(){for(var t=this.pos;this.bufferLength<=t;){if(this.eof)return null;this.readBlock()}return String.fromCharCode(this.buffer[this.pos++])},makeSubStream:function(t,e,n){for(var r=t+e;this.bufferLength<=r&&!this.eof;)this.readBlock();return new Stream(this.buffer,t,e,n)},skip:function(t){t||(t=1),this.pos+=t},reset:function(){this.pos=0}},t}(),Mt=function(){if("undefined"!=typeof Uint32Array){var t=new Uint32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),e=new Uint32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),n=new Uint32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),r=[new Uint32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9],i=[new Uint32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];return(a.prototype=Object.create(Ot.prototype)).getBits=function(t){for(var e,n=this.codeSize,r=this.codeBuf,i=this.bytes,a=this.bytesPos;n<t;)void 0===(e=i[a++])&&o("Bad encoding in flate stream"),r|=e<<n,n+=8;return e=r&(1<<t)-1,this.codeBuf=r>>t,this.codeSize=n-=t,this.bytesPos=a,e},a.prototype.getCode=function(t){for(var e=t[0],n=t[1],r=this.codeSize,i=this.codeBuf,a=this.bytes,s=this.bytesPos;r<n;){var u;void 0===(u=a[s++])&&o("Bad encoding in flate stream"),i|=u<<r,r+=8}var c=e[i&(1<<n)-1],l=c>>16,f=65535&c;return(0==r||r<l||0==l)&&o("Bad encoding in flate stream"),this.codeBuf=i>>l,this.codeSize=r-l,this.bytesPos=s,f},a.prototype.generateHuffmanTable=function(t){for(var e=t.length,n=0,r=0;r<e;++r)t[r]>n&&(n=t[r]);for(var i=1<<n,o=new Uint32Array(i),a=1,s=0,u=2;a<=n;++a,s<<=1,u<<=1)for(var c=0;c<e;++c)if(t[c]==a){var l=0,f=s;for(r=0;r<a;++r)l=l<<1|1&f,f>>=1;for(r=l;r<i;r+=u)o[r]=a<<16|c;++s}return[o,n]},a.prototype.readBlock=function(){function a(t,e,n,r,i){for(var o=t.getBits(n)+r;0<o--;)e[d++]=i}var s=this.getBits(3);if(1&s&&(this.eof=!0),0!=(s>>=1)){var u,c;if(1==s)u=r,c=i;else if(2==s){for(var l=this.getBits(5)+257,f=this.getBits(5)+1,h=this.getBits(4)+4,p=Array(t.length),d=0;d<h;)p[t[d++]]=this.getBits(3);for(var g=this.generateHuffmanTable(p),m=0,v=(d=0,l+f),y=new Array(v);d<v;){var b=this.getCode(g);16==b?a(this,y,2,3,m):17==b?a(this,y,3,3,m=0):18==b?a(this,y,7,11,m=0):y[d++]=m=b}u=this.generateHuffmanTable(y.slice(0,l)),c=this.generateHuffmanTable(y.slice(l,v))}else o("Unknown block type in flate stream");for(var w=(E=this.buffer)?E.length:0,x=this.bufferLength;;){var N=this.getCode(u);if(N<256)w<=x+1&&(w=(E=this.ensureBuffer(x+1)).length),E[x++]=N;else{if(256==N)return void(this.bufferLength=x);var L=(N=e[N-=257])>>16;0<L&&(L=this.getBits(L)),m=(65535&N)+L,N=this.getCode(c),0<(L=(N=n[N])>>16)&&(L=this.getBits(L));var A=(65535&N)+L;w<=x+m&&(w=(E=this.ensureBuffer(x+m)).length);for(var S=0;S<m;++S,++x)E[x]=E[x-A]}}}else{var _,C=this.bytes,k=this.bytesPos;void 0===(_=C[k++])&&o("Bad block header in flate stream");var P=_;void 0===(_=C[k++])&&o("Bad block header in flate stream"),P|=_<<8,void 0===(_=C[k++])&&o("Bad block header in flate stream");var F=_;void 0===(_=C[k++])&&o("Bad block header in flate stream"),(F|=_<<8)!=(65535&~P)&&o("Bad uncompressed block length in flate stream"),this.codeBuf=0,this.codeSize=0;var T=this.bufferLength,E=this.ensureBuffer(T+P),j=T+P;this.bufferLength=j;for(var I=T;I<j;++I){if(void 0===(_=C[k++])){this.eof=!0;break}E[I]=_}this.bytesPos=k}},a}function o(t){throw new Error(t)}function a(t){var e=0,n=t[e++],r=t[e++];-1!=n&&-1!=r||o("Invalid header in flate stream"),8!=(15&n)&&o("Unknown compression method in flate stream"),((n<<8)+r)%31!=0&&o("Bad FCHECK in flate stream"),32&r&&o("FDICT bit set in flate stream"),this.bytes=t,this.bytesPos=2,this.codeSize=0,this.codeBuf=0,Ot.call(this)}}();window.tmp=Mt},void 0===(a="function"==typeof o?o.call(e,n,e,t):o)||(t.exports=a);try{t.exports=jsPDF}catch(t){}}).call(this,n(1),n(7))},function(t,e,n){(function(e,n){
/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.8+1e68dce6
 */var r;r=function(){"use strict";function t(t){return"function"==typeof t}var r=Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},i=0,o=void 0,a=void 0,s=function(t,e){d[i]=t,d[i+1]=e,2===(i+=2)&&(a?a(g):w())},u="undefined"!=typeof window?window:void 0,c=u||{},l=c.MutationObserver||c.WebKitMutationObserver,f="undefined"==typeof self&&void 0!==e&&"[object process]"==={}.toString.call(e),h="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function p(){var t=setTimeout;return function(){return t(g,1)}}var d=new Array(1e3);function g(){for(var t=0;t<i;t+=2)(0,d[t])(d[t+1]),d[t]=void 0,d[t+1]=void 0;i=0}var m,v,y,b,w=void 0;function x(t,e){var n=this,r=new this.constructor(A);void 0===r[L]&&I(r);var i=n._state;if(i){var o=arguments[i-1];s((function(){return E(i,r,o,n._result)}))}else F(n,r,t,e);return r}function N(t){if(t&&"object"==typeof t&&t.constructor===this)return t;var e=new this(A);return _(e,t),e}f?w=function(){return e.nextTick(g)}:l?(v=0,y=new l(g),b=document.createTextNode(""),y.observe(b,{characterData:!0}),w=function(){b.data=v=++v%2}):h?((m=new MessageChannel).port1.onmessage=g,w=function(){return m.port2.postMessage(0)}):w=void 0===u?function(){try{var t=Function("return this")().require("vertx");return void 0!==(o=t.runOnLoop||t.runOnContext)?function(){o(g)}:p()}catch(t){return p()}}():p();var L=Math.random().toString(36).substring(2);function A(){}function S(e,n,r){n.constructor===e.constructor&&r===x&&n.constructor.resolve===N?function(t,e){1===e._state?k(t,e._result):2===e._state?P(t,e._result):F(e,void 0,(function(e){return _(t,e)}),(function(e){return P(t,e)}))}(e,n):void 0===r?k(e,n):t(r)?function(t,e,n){s((function(t){var r=!1,i=function(t,e,n,r){try{t.call(e,n,r)}catch(t){return t}}(n,e,(function(n){r||(r=!0,e!==n?_(t,n):k(t,n))}),(function(e){r||(r=!0,P(t,e))}),t._label);!r&&i&&(r=!0,P(t,i))}),t)}(e,n,r):k(e,n)}function _(t,e){if(t===e)P(t,new TypeError("You cannot resolve a promise with itself"));else if(i=typeof(r=e),null===r||"object"!==i&&"function"!==i)k(t,e);else{var n=void 0;try{n=e.then}catch(e){return void P(t,e)}S(t,e,n)}var r,i}function C(t){t._onerror&&t._onerror(t._result),T(t)}function k(t,e){void 0===t._state&&(t._result=e,t._state=1,0!==t._subscribers.length&&s(T,t))}function P(t,e){void 0===t._state&&(t._state=2,t._result=e,s(C,t))}function F(t,e,n,r){var i=t._subscribers,o=i.length;t._onerror=null,i[o]=e,i[o+1]=n,i[o+2]=r,0===o&&t._state&&s(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r=void 0,i=void 0,o=t._result,a=0;a<e.length;a+=3)r=e[a],i=e[a+n],r?E(n,r,i,o):i(o);t._subscribers.length=0}}function E(e,n,r,i){var o=t(r),a=void 0,s=void 0,u=!0;if(o){try{a=r(i)}catch(t){u=!1,s=t}if(n===a)return void P(n,new TypeError("A promises callback cannot return that same promise."))}else a=i;void 0!==n._state||(o&&u?_(n,a):!1===u?P(n,s):1===e?k(n,a):2===e&&P(n,a))}var j=0;function I(t){t[L]=j++,t._state=void 0,t._result=void 0,t._subscribers=[]}var B=function(){function t(t,e){this._instanceConstructor=t,this.promise=new t(A),this.promise[L]||I(this.promise),r(e)?(this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?k(this.promise,this._result):(this.length=this.length||0,this._enumerate(e),0===this._remaining&&k(this.promise,this._result))):P(this.promise,new Error("Array Methods must be provided an Array"))}return t.prototype._enumerate=function(t){for(var e=0;void 0===this._state&&e<t.length;e++)this._eachEntry(t[e],e)},t.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===N){var i=void 0,o=void 0,a=!1;try{i=t.then}catch(t){a=!0,o=t}if(i===x&&void 0!==t._state)this._settledAt(t._state,e,t._result);else if("function"!=typeof i)this._remaining--,this._result[e]=t;else if(n===O){var s=new n(A);a?P(s,o):S(s,t,i),this._willSettleAt(s,e)}else this._willSettleAt(new n((function(e){return e(t)})),e)}else this._willSettleAt(r(t),e)},t.prototype._settledAt=function(t,e,n){var r=this.promise;void 0===r._state&&(this._remaining--,2===t?P(r,n):this._result[e]=n),0===this._remaining&&k(r,this._result)},t.prototype._willSettleAt=function(t,e){var n=this;F(t,void 0,(function(t){return n._settledAt(1,e,t)}),(function(t){return n._settledAt(2,e,t)}))},t}(),O=function(){function e(t){this[L]=j++,this._result=this._state=void 0,this._subscribers=[],A!==t&&("function"!=typeof t&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof e?function(t,e){try{e((function(e){_(t,e)}),(function(e){P(t,e)}))}catch(e){P(t,e)}}(this,t):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return e.prototype.catch=function(t){return this.then(null,t)},e.prototype.finally=function(e){var n=this.constructor;return t(e)?this.then((function(t){return n.resolve(e()).then((function(){return t}))}),(function(t){return n.resolve(e()).then((function(){throw t}))})):this.then(e,e)},e}();return O.prototype.then=x,O.all=function(t){return new B(this,t).promise},O.race=function(t){var e=this;return r(t)?new e((function(n,r){for(var i=t.length,o=0;o<i;o++)e.resolve(t[o]).then(n,r)})):new e((function(t,e){return e(new TypeError("You must pass an array to race."))}))},O.resolve=N,O.reject=function(t){var e=new this(A);return P(e,t),e},O._setScheduler=function(t){a=t},O._setAsap=function(t){s=t},O._asap=s,O.polyfill=function(){var t=void 0;if(void 0!==n)t=n;else if("undefined"!=typeof self)t=self;else try{t=Function("return this")()}catch(t){throw new Error("polyfill failed because global object is unavailable in this environment")}var e=t.Promise;if(e){var r=null;try{r=Object.prototype.toString.call(e.resolve())}catch(t){}if("[object Promise]"===r&&!e.cast)return}t.Promise=O},O.Promise=O,O},t.exports=r()}).call(this,n(8),n(1))},function(t,e){var n,r,i=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(t){n=o}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(t){r=a}}();var u,c=[],l=!1,f=-1;function h(){l&&u&&(l=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!l){var t=s(h);l=!0;for(var e=c.length;e;){for(u=c,c=[];++f<e;)u&&u[f].run();f=-1,e=c.length}u=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function g(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new d(t,e)),1!==c.length||l||s(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=g,i.addListener=g,i.once=g,i.off=g,i.removeListener=g,i.removeAllListeners=g,i.emit=g,i.prependListener=g,i.prependOnceListener=g,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,e,n){(function(n){var r,i,o;i=[],void 0===(o="function"==typeof(r=function(){"use strict";function e(t,e,n){var r=new XMLHttpRequest;r.open("GET",t),r.responseType="blob",r.onload=function(){a(r.response,e,n)},r.onerror=function(){console.error("could not download file")},r.send()}function r(t){var e=new XMLHttpRequest;e.open("HEAD",t,!1);try{e.send()}catch(t){}return 200<=e.status&&299>=e.status}function i(t){try{t.dispatchEvent(new MouseEvent("click"))}catch(n){var e=document.createEvent("MouseEvents");e.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),t.dispatchEvent(e)}}var o="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof n&&n.global===n?n:void 0,a=o.saveAs||("object"!=typeof window||window!==o?function(){}:"download"in HTMLAnchorElement.prototype?function(t,n,a){var s=o.URL||o.webkitURL,u=document.createElement("a");n=n||t.name||"download",u.download=n,u.rel="noopener","string"==typeof t?(u.href=t,u.origin===location.origin?i(u):r(u.href)?e(t,n,a):i(u,u.target="_blank")):(u.href=s.createObjectURL(t),setTimeout((function(){s.revokeObjectURL(u.href)}),4e4),setTimeout((function(){i(u)}),0))}:"msSaveOrOpenBlob"in navigator?function(t,n,o){if(n=n||t.name||"download","string"!=typeof t)navigator.msSaveOrOpenBlob(function(t,e){return void 0===e?e={autoBom:!1}:"object"!=typeof e&&(console.warn("Deprecated: Expected third argument to be a object"),e={autoBom:!e}),e.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob(["\ufeff",t],{type:t.type}):t}(t,o),n);else if(r(t))e(t,n,o);else{var a=document.createElement("a");a.href=t,a.target="_blank",setTimeout((function(){i(a)}))}}:function(t,n,r,i){if((i=i||open("","_blank"))&&(i.document.title=i.document.body.innerText="downloading..."),"string"==typeof t)return e(t,n,r);var a="application/octet-stream"===t.type,s=/constructor/i.test(o.HTMLElement)||o.safari,u=/CriOS\/[\d]+/.test(navigator.userAgent);if((u||a&&s)&&"object"==typeof FileReader){var c=new FileReader;c.onloadend=function(){var t=c.result;t=u?t:t.replace(/^data:[^;]*;/,"data:attachment/file;"),i?i.location.href=t:location=t,i=null},c.readAsDataURL(t)}else{var l=o.URL||o.webkitURL,f=l.createObjectURL(t);i?i.location=f:location.href=f,i=null,setTimeout((function(){l.revokeObjectURL(f)}),4e4)}});o.saveAs=a.saveAs=a,t.exports=a})?r.apply(e,i):r)||(t.exports=o)}).call(this,n(1))},function(t,e,n){var r=n(11),i=n(12);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[t.i,i,""]]);var o={insert:"head",singleton:!1};r(i,o);t.exports=i.locals||{}},function(t,e,n){"use strict";var r,i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),a=[];function s(t){for(var e=-1,n=0;n<a.length;n++)if(a[n].identifier===t){e=n;break}return e}function u(t,e){for(var n={},r=[],i=0;i<t.length;i++){var o=t[i],u=e.base?o[0]+e.base:o[0],c=n[u]||0,l="".concat(u," ").concat(c);n[u]=c+1;var f=s(l),h={css:o[1],media:o[2],sourceMap:o[3]};-1!==f?(a[f].references++,a[f].updater(h)):a.push({identifier:l,updater:m(h,e),references:1}),r.push(l)}return r}function c(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var a=o(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var l,f=(l=[],function(t,e){return l[t]=e,l.filter(Boolean).join("\n")});function h(t,e,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=f(e,i);else{var o=document.createTextNode(i),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(o,a[e]):t.appendChild(o)}}function p(t,e,n){var r=n.css,i=n.media,o=n.sourceMap;if(i?t.setAttribute("media",i):t.removeAttribute("media"),o&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var d=null,g=0;function m(t,e){var n,r,i;if(e.singleton){var o=g++;n=d||(d=c(e)),r=h.bind(null,n,o,!1),i=h.bind(null,n,o,!0)}else n=c(e),r=p.bind(null,n,e),i=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else i()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=i());var n=u(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var i=s(n[r]);a[i].references--}for(var o=u(t,e),c=0;c<n.length;c++){var l=s(n[c]);0===a[l].references&&(a[l].updater(),a.splice(l,1))}n=o}}}},function(t,e,n){(e=n(13)(!1)).push([t.i,'.mapboxgl-export-list\n{\n    display: none;\n}\n\n.mapboxgl-ctrl-group .mapboxgl-export-list button\n{\n    background: none;\n    border: none;\n    cursor: pointer;\n    display: block;\n    font-size: 14px;\n    padding: 8px 8px 6px;\n    text-align: right;\n    width: 100%;\n    height: auto;\n}\n\n.mapboxgl-export-list button.active\n{\n    font-weight: bold;\n}\n\n.mapboxgl-export-list button:hover\n{\n    background-color: rgba(0, 0, 0, 0.05);\n}\n\n.mapboxgl-export-list button + button\n{\n    border-top: 1px solid #ddd;\n}\n\n.mapboxgl-export-control\n{ \n    background: url(\'data:image/svg+xml;charset=UTF-8,<svg id="Capa_1" enable-background="new 0 0 512 512" height="512" viewBox="0 0 512 512" width="512" xmlns="http://www.w3.org/2000/svg"><g><path d="m422.5 99v-24c0-41.355-33.645-75-75-75h-184c-41.355 0-75 33.645-75 75v24z"/><path d="m118.5 319v122 26 15c0 16.568 13.431 30 30 30h214c16.569 0 30-13.432 30-30v-15-26-122zm177 128h-80c-8.284 0-15-6.716-15-15s6.716-15 15-15h80c8.284 0 15 6.716 15 15s-6.716 15-15 15zm0-64h-80c-8.284 0-15-6.716-15-15s6.716-15 15-15h80c8.284 0 15 6.716 15 15s-6.716 15-15 15z"/><path d="m436.5 129h-361c-41.355 0-75 33.645-75 75v120c0 41.355 33.645 75 75 75h13v-80h-9c-8.284 0-15-6.716-15-15s6.716-15 15-15h24 304 24c8.284 0 15 6.716 15 15s-6.716 15-15 15h-9v80h14c41.355 0 75-33.645 75-75v-120c0-41.355-33.645-75-75-75zm-309 94h-48c-8.284 0-15-6.716-15-15s6.716-15 15-15h48c8.284 0 15 6.716 15 15s-6.716 15-15 15z"/></g></svg>\');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 70%;\n}\n\n/*\n * Hide high-res map rendering\n*/\n.hidden-map {\n    overflow: hidden;\n    height: 0;\n    width: 0;\n    position: fixed;\n}\n',""]),t.exports=e},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var i=(a=r,s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(u," */")),o=r.sources.map((function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")}));return[n].concat(o).concat([i]).join("\n")}var a,s,u;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var s=0;s<t.length;s++){var u=[].concat(t[s]);r&&i[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),e.push(u))}},e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibWFwYm94Z2xcIiIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9qcXVlcnkvZGlzdC9qcXVlcnkuanMiLCJ3ZWJwYWNrOi8vLy4vZGlzdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9leGFtcGxlL2luZGV4LmpzIiwid2VicGFjazovLy8uL2Rpc3QvbWFwLWdlbmVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanNwZGYvZGlzdC9qc3BkZi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VzNi1wcm9taXNlL2Rpc3QvZXM2LXByb21pc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmlsZS1zYXZlci9kaXN0L0ZpbGVTYXZlci5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vY3NzL3N0eWxlcy5jc3M/ZTgxYSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vY3NzL3N0eWxlcy5jc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIm1hcGJveGdsIiwiZyIsInRoaXMiLCJGdW5jdGlvbiIsImUiLCJ3aW5kb3ciLCJnbG9iYWwiLCJmYWN0b3J5IiwiZG9jdW1lbnQiLCJ3IiwiRXJyb3IiLCJub0dsb2JhbCIsImFyciIsImdldFByb3RvIiwiZ2V0UHJvdG90eXBlT2YiLCJzbGljZSIsImZsYXQiLCJhcnJheSIsImNvbmNhdCIsImFwcGx5IiwicHVzaCIsImluZGV4T2YiLCJjbGFzczJ0eXBlIiwidG9TdHJpbmciLCJoYXNPd24iLCJmblRvU3RyaW5nIiwiT2JqZWN0RnVuY3Rpb25TdHJpbmciLCJzdXBwb3J0IiwiaXNGdW5jdGlvbiIsIm9iaiIsIm5vZGVUeXBlIiwiaXNXaW5kb3ciLCJwcmVzZXJ2ZWRTY3JpcHRBdHRyaWJ1dGVzIiwidHlwZSIsInNyYyIsIm5vbmNlIiwibm9Nb2R1bGUiLCJET01FdmFsIiwiY29kZSIsIm5vZGUiLCJkb2MiLCJ2YWwiLCJzY3JpcHQiLCJjcmVhdGVFbGVtZW50IiwidGV4dCIsImdldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsImhlYWQiLCJhcHBlbmRDaGlsZCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInRvVHlwZSIsImpRdWVyeSIsInNlbGVjdG9yIiwiY29udGV4dCIsImZuIiwiaW5pdCIsImlzQXJyYXlMaWtlIiwibGVuZ3RoIiwianF1ZXJ5IiwiY29uc3RydWN0b3IiLCJ0b0FycmF5IiwibnVtIiwicHVzaFN0YWNrIiwiZWxlbXMiLCJyZXQiLCJtZXJnZSIsInByZXZPYmplY3QiLCJlYWNoIiwiY2FsbGJhY2siLCJtYXAiLCJlbGVtIiwiYXJndW1lbnRzIiwiZmlyc3QiLCJlcSIsImxhc3QiLCJldmVuIiwiZ3JlcCIsIl9lbGVtIiwib2RkIiwibGVuIiwiaiIsImVuZCIsInNvcnQiLCJzcGxpY2UiLCJleHRlbmQiLCJvcHRpb25zIiwiY29weSIsImNvcHlJc0FycmF5IiwiY2xvbmUiLCJ0YXJnZXQiLCJkZWVwIiwiaXNQbGFpbk9iamVjdCIsIkFycmF5IiwiaXNBcnJheSIsInVuZGVmaW5lZCIsImV4cGFuZG8iLCJNYXRoIiwicmFuZG9tIiwicmVwbGFjZSIsImlzUmVhZHkiLCJlcnJvciIsIm1zZyIsIm5vb3AiLCJwcm90byIsIkN0b3IiLCJpc0VtcHR5T2JqZWN0IiwiZ2xvYmFsRXZhbCIsIm1ha2VBcnJheSIsInJlc3VsdHMiLCJpbkFycmF5Iiwic2Vjb25kIiwiaW52ZXJ0IiwibWF0Y2hlcyIsImNhbGxiYWNrRXhwZWN0IiwiYXJnIiwiZ3VpZCIsIml0ZXJhdG9yIiwic3BsaXQiLCJfaSIsInRvTG93ZXJDYXNlIiwiU2l6emxlIiwiRXhwciIsImdldFRleHQiLCJpc1hNTCIsInRva2VuaXplIiwiY29tcGlsZSIsInNlbGVjdCIsIm91dGVybW9zdENvbnRleHQiLCJzb3J0SW5wdXQiLCJoYXNEdXBsaWNhdGUiLCJzZXREb2N1bWVudCIsImRvY0VsZW0iLCJkb2N1bWVudElzSFRNTCIsInJidWdneVFTQSIsInJidWdneU1hdGNoZXMiLCJjb250YWlucyIsIkRhdGUiLCJwcmVmZXJyZWREb2MiLCJkaXJydW5zIiwiZG9uZSIsImNsYXNzQ2FjaGUiLCJjcmVhdGVDYWNoZSIsInRva2VuQ2FjaGUiLCJjb21waWxlckNhY2hlIiwibm9ubmF0aXZlU2VsZWN0b3JDYWNoZSIsInNvcnRPcmRlciIsImEiLCJiIiwicG9wIiwicHVzaE5hdGl2ZSIsImxpc3QiLCJib29sZWFucyIsIndoaXRlc3BhY2UiLCJpZGVudGlmaWVyIiwiYXR0cmlidXRlcyIsInBzZXVkb3MiLCJyd2hpdGVzcGFjZSIsIlJlZ0V4cCIsInJ0cmltIiwicmNvbW1hIiwicmNvbWJpbmF0b3JzIiwicmRlc2NlbmQiLCJycHNldWRvIiwicmlkZW50aWZpZXIiLCJtYXRjaEV4cHIiLCJyaHRtbCIsInJpbnB1dHMiLCJyaGVhZGVyIiwicm5hdGl2ZSIsInJxdWlja0V4cHIiLCJyc2libGluZyIsInJ1bmVzY2FwZSIsImZ1bmVzY2FwZSIsImVzY2FwZSIsIm5vbkhleCIsImhpZ2giLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJyY3NzZXNjYXBlIiwiZmNzc2VzY2FwZSIsImNoIiwiYXNDb2RlUG9pbnQiLCJjaGFyQ29kZUF0IiwidW5sb2FkSGFuZGxlciIsImluRGlzYWJsZWRGaWVsZHNldCIsImFkZENvbWJpbmF0b3IiLCJkaXNhYmxlZCIsIm5vZGVOYW1lIiwiZGlyIiwibmV4dCIsImNoaWxkTm9kZXMiLCJlbHMiLCJzZWVkIiwibmlkIiwibWF0Y2giLCJncm91cHMiLCJuZXdTZWxlY3RvciIsIm5ld0NvbnRleHQiLCJvd25lckRvY3VtZW50IiwiZXhlYyIsImdldEVsZW1lbnRCeUlkIiwiaWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJxc2EiLCJ0ZXN0IiwidGVzdENvbnRleHQiLCJzY29wZSIsInRvU2VsZWN0b3IiLCJqb2luIiwicXVlcnlTZWxlY3RvckFsbCIsInFzYUVycm9yIiwicmVtb3ZlQXR0cmlidXRlIiwia2V5cyIsImNhY2hlIiwiY2FjaGVMZW5ndGgiLCJzaGlmdCIsIm1hcmtGdW5jdGlvbiIsImFzc2VydCIsImVsIiwiYWRkSGFuZGxlIiwiYXR0cnMiLCJoYW5kbGVyIiwiYXR0ckhhbmRsZSIsInNpYmxpbmdDaGVjayIsImN1ciIsImRpZmYiLCJzb3VyY2VJbmRleCIsIm5leHRTaWJsaW5nIiwiY3JlYXRlSW5wdXRQc2V1ZG8iLCJjcmVhdGVCdXR0b25Qc2V1ZG8iLCJjcmVhdGVEaXNhYmxlZFBzZXVkbyIsImlzRGlzYWJsZWQiLCJjcmVhdGVQb3NpdGlvbmFsUHNldWRvIiwiYXJndW1lbnQiLCJtYXRjaEluZGV4ZXMiLCJuYW1lc3BhY2UiLCJuYW1lc3BhY2VVUkkiLCJkb2N1bWVudEVsZW1lbnQiLCJoYXNDb21wYXJlIiwic3ViV2luZG93IiwiZGVmYXVsdFZpZXciLCJ0b3AiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJjbGFzc05hbWUiLCJjcmVhdGVDb21tZW50IiwiZ2V0QnlJZCIsImdldEVsZW1lbnRzQnlOYW1lIiwiZmlsdGVyIiwiYXR0cklkIiwiZmluZCIsImdldEF0dHJpYnV0ZU5vZGUiLCJ0YWciLCJ0bXAiLCJpbnB1dCIsImlubmVySFRNTCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJhZG93biIsImJ1cCIsImNvbXBhcmUiLCJzb3J0RGV0YWNoZWQiLCJhdXAiLCJhcCIsImJwIiwidW5zaGlmdCIsImV4cHIiLCJlbGVtZW50cyIsImF0dHIiLCJzcGVjaWZpZWQiLCJzZWwiLCJ1bmlxdWVTb3J0IiwiZHVwbGljYXRlcyIsImRldGVjdER1cGxpY2F0ZXMiLCJzb3J0U3RhYmxlIiwidGV4dENvbnRlbnQiLCJmaXJzdENoaWxkIiwibm9kZVZhbHVlIiwic2VsZWN0b3JzIiwiY3JlYXRlUHNldWRvIiwicmVsYXRpdmUiLCJwcmVGaWx0ZXIiLCJleGNlc3MiLCJ1bnF1b3RlZCIsIm5vZGVOYW1lU2VsZWN0b3IiLCJwYXR0ZXJuIiwib3BlcmF0b3IiLCJjaGVjayIsInJlc3VsdCIsIndoYXQiLCJfYXJndW1lbnQiLCJzaW1wbGUiLCJmb3J3YXJkIiwib2ZUeXBlIiwiX2NvbnRleHQiLCJ4bWwiLCJ1bmlxdWVDYWNoZSIsIm91dGVyQ2FjaGUiLCJub2RlSW5kZXgiLCJzdGFydCIsInBhcmVudCIsInVzZUNhY2hlIiwibGFzdENoaWxkIiwidW5pcXVlSUQiLCJwc2V1ZG8iLCJhcmdzIiwic2V0RmlsdGVycyIsImlkeCIsIm1hdGNoZWQiLCJtYXRjaGVyIiwidW5tYXRjaGVkIiwibGFuZyIsImVsZW1MYW5nIiwiaGFzaCIsImxvY2F0aW9uIiwiYWN0aXZlRWxlbWVudCIsImhhc0ZvY3VzIiwiaHJlZiIsInRhYkluZGV4IiwiY2hlY2tlZCIsInNlbGVjdGVkIiwic2VsZWN0ZWRJbmRleCIsIl9tYXRjaEluZGV4ZXMiLCJyYWRpbyIsImNoZWNrYm94IiwiZmlsZSIsInBhc3N3b3JkIiwiaW1hZ2UiLCJzdWJtaXQiLCJyZXNldCIsInRva2VucyIsImNvbWJpbmF0b3IiLCJiYXNlIiwic2tpcCIsImNoZWNrTm9uRWxlbWVudHMiLCJkb25lTmFtZSIsIm9sZENhY2hlIiwibmV3Q2FjaGUiLCJlbGVtZW50TWF0Y2hlciIsIm1hdGNoZXJzIiwiY29uZGVuc2UiLCJuZXdVbm1hdGNoZWQiLCJtYXBwZWQiLCJzZXRNYXRjaGVyIiwicG9zdEZpbHRlciIsInBvc3RGaW5kZXIiLCJwb3N0U2VsZWN0b3IiLCJ0ZW1wIiwicHJlTWFwIiwicG9zdE1hcCIsInByZWV4aXN0aW5nIiwiY29udGV4dHMiLCJtdWx0aXBsZUNvbnRleHRzIiwibWF0Y2hlckluIiwibWF0Y2hlck91dCIsIm1hdGNoZXJGcm9tVG9rZW5zIiwiY2hlY2tDb250ZXh0IiwibGVhZGluZ1JlbGF0aXZlIiwiaW1wbGljaXRSZWxhdGl2ZSIsIm1hdGNoQ29udGV4dCIsIm1hdGNoQW55Q29udGV4dCIsImZpbHRlcnMiLCJwYXJzZU9ubHkiLCJzb0ZhciIsInByZUZpbHRlcnMiLCJjYWNoZWQiLCJzZXRNYXRjaGVycyIsImVsZW1lbnRNYXRjaGVycyIsImJ5U2V0IiwiYnlFbGVtZW50Iiwic3VwZXJNYXRjaGVyIiwib3V0ZXJtb3N0IiwibWF0Y2hlZENvdW50Iiwic2V0TWF0Y2hlZCIsImNvbnRleHRCYWNrdXAiLCJkaXJydW5zVW5pcXVlIiwibWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzIiwidG9rZW4iLCJjb21waWxlZCIsIl9uYW1lIiwiZGVmYXVsdFZhbHVlIiwidW5pcXVlIiwiaXNYTUxEb2MiLCJlc2NhcGVTZWxlY3RvciIsInVudGlsIiwidHJ1bmNhdGUiLCJpcyIsInNpYmxpbmdzIiwicm5lZWRzQ29udGV4dCIsIm5lZWRzQ29udGV4dCIsInJzaW5nbGVUYWciLCJ3aW5ub3ciLCJxdWFsaWZpZXIiLCJub3QiLCJzZWxmIiwicm9vdGpRdWVyeSIsInJvb3QiLCJwYXJzZUhUTUwiLCJyZWFkeSIsInJwYXJlbnRzcHJldiIsImd1YXJhbnRlZWRVbmlxdWUiLCJjaGlsZHJlbiIsImNvbnRlbnRzIiwicHJldiIsInNpYmxpbmciLCJoYXMiLCJ0YXJnZXRzIiwiY2xvc2VzdCIsImluZGV4IiwicHJldkFsbCIsImFkZCIsImFkZEJhY2siLCJwYXJlbnRzIiwicGFyZW50c1VudGlsIiwibmV4dEFsbCIsIm5leHRVbnRpbCIsInByZXZVbnRpbCIsImNvbnRlbnREb2N1bWVudCIsImNvbnRlbnQiLCJyZXZlcnNlIiwicm5vdGh0bWx3aGl0ZSIsIklkZW50aXR5IiwidiIsIlRocm93ZXIiLCJleCIsImFkb3B0VmFsdWUiLCJyZXNvbHZlIiwicmVqZWN0Iiwibm9WYWx1ZSIsIm1ldGhvZCIsInByb21pc2UiLCJmYWlsIiwidGhlbiIsIkNhbGxiYWNrcyIsIl8iLCJmbGFnIiwiY3JlYXRlT3B0aW9ucyIsImZpcmluZyIsIm1lbW9yeSIsImZpcmVkIiwibG9ja2VkIiwicXVldWUiLCJmaXJpbmdJbmRleCIsImZpcmUiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJyZW1vdmUiLCJlbXB0eSIsImRpc2FibGUiLCJsb2NrIiwiZmlyZVdpdGgiLCJEZWZlcnJlZCIsImZ1bmMiLCJ0dXBsZXMiLCJzdGF0ZSIsImFsd2F5cyIsImRlZmVycmVkIiwicGlwZSIsImZucyIsIm5ld0RlZmVyIiwidHVwbGUiLCJyZXR1cm5lZCIsInByb2dyZXNzIiwibm90aWZ5Iiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwib25Qcm9ncmVzcyIsIm1heERlcHRoIiwiZGVwdGgiLCJzcGVjaWFsIiwidGhhdCIsIm1pZ2h0VGhyb3ciLCJUeXBlRXJyb3IiLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJwcm9jZXNzIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJyZWplY3RXaXRoIiwiZ2V0U3RhY2tIb29rIiwic2V0VGltZW91dCIsInN0YXRlU3RyaW5nIiwid2hlbiIsInNpbmdsZVZhbHVlIiwicmVtYWluaW5nIiwicmVzb2x2ZUNvbnRleHRzIiwicmVzb2x2ZVZhbHVlcyIsIm1hc3RlciIsInVwZGF0ZUZ1bmMiLCJyZXJyb3JOYW1lcyIsInN0YWNrIiwiY29uc29sZSIsIndhcm4iLCJtZXNzYWdlIiwicmVhZHlFeGNlcHRpb24iLCJyZWFkeUxpc3QiLCJjb21wbGV0ZWQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2F0Y2giLCJyZWFkeVdhaXQiLCJ3YWl0IiwicmVhZHlTdGF0ZSIsImRvU2Nyb2xsIiwiYWNjZXNzIiwiY2hhaW5hYmxlIiwiZW1wdHlHZXQiLCJyYXciLCJidWxrIiwiX2tleSIsInJtc1ByZWZpeCIsInJkYXNoQWxwaGEiLCJmY2FtZWxDYXNlIiwiX2FsbCIsImxldHRlciIsInRvVXBwZXJDYXNlIiwiY2FtZWxDYXNlIiwic3RyaW5nIiwiYWNjZXB0RGF0YSIsIm93bmVyIiwiRGF0YSIsInVpZCIsImNvbmZpZ3VyYWJsZSIsInNldCIsImRhdGEiLCJwcm9wIiwiaGFzRGF0YSIsImRhdGFQcml2IiwiZGF0YVVzZXIiLCJyYnJhY2UiLCJybXVsdGlEYXNoIiwiZGF0YUF0dHIiLCJKU09OIiwicGFyc2UiLCJnZXREYXRhIiwicmVtb3ZlRGF0YSIsIl9kYXRhIiwiX3JlbW92ZURhdGEiLCJkZXF1ZXVlIiwic3RhcnRMZW5ndGgiLCJob29rcyIsIl9xdWV1ZUhvb2tzIiwic3RvcCIsInNldHRlciIsImNsZWFyUXVldWUiLCJjb3VudCIsImRlZmVyIiwicG51bSIsInNvdXJjZSIsInJjc3NOdW0iLCJjc3NFeHBhbmQiLCJpc0F0dGFjaGVkIiwiY29tcG9zZWQiLCJnZXRSb290Tm9kZSIsImlzSGlkZGVuV2l0aGluVHJlZSIsInN0eWxlIiwiZGlzcGxheSIsImNzcyIsImFkanVzdENTUyIsInZhbHVlUGFydHMiLCJ0d2VlbiIsImFkanVzdGVkIiwic2NhbGUiLCJtYXhJdGVyYXRpb25zIiwiY3VycmVudFZhbHVlIiwiaW5pdGlhbCIsInVuaXQiLCJjc3NOdW1iZXIiLCJpbml0aWFsSW5Vbml0IiwiZGVmYXVsdERpc3BsYXlNYXAiLCJnZXREZWZhdWx0RGlzcGxheSIsImJvZHkiLCJzaG93SGlkZSIsInNob3ciLCJ2YWx1ZXMiLCJoaWRlIiwidG9nZ2xlIiwiZGl2IiwicmNoZWNrYWJsZVR5cGUiLCJydGFnTmFtZSIsInJzY3JpcHRUeXBlIiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImNoZWNrQ2xvbmUiLCJjbG9uZU5vZGUiLCJub0Nsb25lQ2hlY2tlZCIsIm9wdGlvbiIsIndyYXBNYXAiLCJ0aGVhZCIsImNvbCIsInRyIiwidGQiLCJfZGVmYXVsdCIsImdldEFsbCIsInNldEdsb2JhbEV2YWwiLCJyZWZFbGVtZW50cyIsInRib2R5IiwidGZvb3QiLCJjb2xncm91cCIsImNhcHRpb24iLCJ0aCIsIm9wdGdyb3VwIiwiYnVpbGRGcmFnbWVudCIsInNjcmlwdHMiLCJzZWxlY3Rpb24iLCJpZ25vcmVkIiwid3JhcCIsImF0dGFjaGVkIiwiZnJhZ21lbnQiLCJub2RlcyIsImh0bWxQcmVmaWx0ZXIiLCJjcmVhdGVUZXh0Tm9kZSIsInJrZXlFdmVudCIsInJtb3VzZUV2ZW50IiwicnR5cGVuYW1lc3BhY2UiLCJyZXR1cm5UcnVlIiwicmV0dXJuRmFsc2UiLCJleHBlY3RTeW5jIiwiZXJyIiwic2FmZUFjdGl2ZUVsZW1lbnQiLCJvbiIsInR5cGVzIiwib25lIiwib3JpZ0ZuIiwiZXZlbnQiLCJvZmYiLCJsZXZlcmFnZU5hdGl2ZSIsIm5vdEFzeW5jIiwic2F2ZWQiLCJpc1RyaWdnZXIiLCJkZWxlZ2F0ZVR5cGUiLCJzdG9wUHJvcGFnYXRpb24iLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInRyaWdnZXIiLCJFdmVudCIsImhhbmRsZU9iakluIiwiZXZlbnRIYW5kbGUiLCJldmVudHMiLCJoYW5kbGVPYmoiLCJoYW5kbGVycyIsIm5hbWVzcGFjZXMiLCJvcmlnVHlwZSIsImVsZW1EYXRhIiwiaGFuZGxlIiwidHJpZ2dlcmVkIiwiZGlzcGF0Y2giLCJiaW5kVHlwZSIsImRlbGVnYXRlQ291bnQiLCJzZXR1cCIsIm1hcHBlZFR5cGVzIiwib3JpZ0NvdW50IiwidGVhcmRvd24iLCJyZW1vdmVFdmVudCIsIm5hdGl2ZUV2ZW50IiwiaGFuZGxlclF1ZXVlIiwiZml4IiwiZGVsZWdhdGVUYXJnZXQiLCJwcmVEaXNwYXRjaCIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiY3VycmVudFRhcmdldCIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwicm5hbWVzcGFjZSIsInBvc3REaXNwYXRjaCIsIm1hdGNoZWRIYW5kbGVycyIsIm1hdGNoZWRTZWxlY3RvcnMiLCJidXR0b24iLCJhZGRQcm9wIiwiaG9vayIsIm9yaWdpbmFsRXZlbnQiLCJ3cml0YWJsZSIsImxvYWQiLCJub0J1YmJsZSIsImNsaWNrIiwiYmVmb3JldW5sb2FkIiwicmV0dXJuVmFsdWUiLCJwcm9wcyIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZWxhdGVkVGFyZ2V0IiwidGltZVN0YW1wIiwibm93IiwiaXNTaW11bGF0ZWQiLCJhbHRLZXkiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsImNoYW5nZWRUb3VjaGVzIiwiY3RybEtleSIsImRldGFpbCIsImV2ZW50UGhhc2UiLCJtZXRhS2V5IiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwidmlldyIsImNoYXJDb2RlIiwia2V5Q29kZSIsImJ1dHRvbnMiLCJjbGllbnRYIiwiY2xpZW50WSIsIm9mZnNldFgiLCJvZmZzZXRZIiwicG9pbnRlcklkIiwicG9pbnRlclR5cGUiLCJzY3JlZW5YIiwic2NyZWVuWSIsInRhcmdldFRvdWNoZXMiLCJ0b0VsZW1lbnQiLCJ0b3VjaGVzIiwid2hpY2giLCJmb2N1cyIsImJsdXIiLCJtb3VzZWVudGVyIiwibW91c2VsZWF2ZSIsInBvaW50ZXJlbnRlciIsInBvaW50ZXJsZWF2ZSIsIm9yaWciLCJyZWxhdGVkIiwicm5vSW5uZXJodG1sIiwicmNoZWNrZWQiLCJyY2xlYW5TY3JpcHQiLCJtYW5pcHVsYXRpb25UYXJnZXQiLCJkaXNhYmxlU2NyaXB0IiwicmVzdG9yZVNjcmlwdCIsImNsb25lQ29weUV2ZW50IiwiZGVzdCIsInVkYXRhT2xkIiwidWRhdGFDdXIiLCJmaXhJbnB1dCIsImRvbU1hbmlwIiwiY29sbGVjdGlvbiIsImhhc1NjcmlwdHMiLCJpTm9DbG9uZSIsInZhbHVlSXNGdW5jdGlvbiIsImh0bWwiLCJfZXZhbFVybCIsImtlZXBEYXRhIiwiY2xlYW5EYXRhIiwiZGF0YUFuZEV2ZW50cyIsImRlZXBEYXRhQW5kRXZlbnRzIiwic3JjRWxlbWVudHMiLCJkZXN0RWxlbWVudHMiLCJpblBhZ2UiLCJkZXRhY2giLCJhcHBlbmQiLCJwcmVwZW5kIiwiaW5zZXJ0QmVmb3JlIiwiYmVmb3JlIiwiYWZ0ZXIiLCJyZXBsYWNlV2l0aCIsInJlcGxhY2VDaGlsZCIsImFwcGVuZFRvIiwicHJlcGVuZFRvIiwiaW5zZXJ0QWZ0ZXIiLCJyZXBsYWNlQWxsIiwib3JpZ2luYWwiLCJpbnNlcnQiLCJybnVtbm9ucHgiLCJnZXRTdHlsZXMiLCJvcGVuZXIiLCJnZXRDb21wdXRlZFN0eWxlIiwic3dhcCIsIm9sZCIsInJib3hTdHlsZSIsImN1ckNTUyIsImNvbXB1dGVkIiwid2lkdGgiLCJtaW5XaWR0aCIsIm1heFdpZHRoIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInBpeGVsQm94U3R5bGVzIiwiYWRkR2V0SG9va0lmIiwiY29uZGl0aW9uRm4iLCJob29rRm4iLCJjb21wdXRlU3R5bGVUZXN0cyIsImNvbnRhaW5lciIsImNzc1RleHQiLCJkaXZTdHlsZSIsInBpeGVsUG9zaXRpb25WYWwiLCJyZWxpYWJsZU1hcmdpbkxlZnRWYWwiLCJyb3VuZFBpeGVsTWVhc3VyZXMiLCJtYXJnaW5MZWZ0IiwicmlnaHQiLCJwaXhlbEJveFN0eWxlc1ZhbCIsImJveFNpemluZ1JlbGlhYmxlVmFsIiwicG9zaXRpb24iLCJzY3JvbGxib3hTaXplVmFsIiwib2Zmc2V0V2lkdGgiLCJtZWFzdXJlIiwicm91bmQiLCJwYXJzZUZsb2F0IiwicmVsaWFibGVUckRpbWVuc2lvbnNWYWwiLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsImJveFNpemluZ1JlbGlhYmxlIiwicGl4ZWxQb3NpdGlvbiIsInJlbGlhYmxlTWFyZ2luTGVmdCIsInNjcm9sbGJveFNpemUiLCJyZWxpYWJsZVRyRGltZW5zaW9ucyIsInRhYmxlIiwidHJDaGlsZCIsInRyU3R5bGUiLCJoZWlnaHQiLCJwYXJzZUludCIsImNzc1ByZWZpeGVzIiwiZW1wdHlTdHlsZSIsInZlbmRvclByb3BzIiwiZmluYWxQcm9wTmFtZSIsImZpbmFsIiwiY3NzUHJvcHMiLCJjYXBOYW1lIiwidmVuZG9yUHJvcE5hbWUiLCJyZGlzcGxheXN3YXAiLCJyY3VzdG9tUHJvcCIsImNzc1Nob3ciLCJ2aXNpYmlsaXR5IiwiY3NzTm9ybWFsVHJhbnNmb3JtIiwibGV0dGVyU3BhY2luZyIsImZvbnRXZWlnaHQiLCJzZXRQb3NpdGl2ZU51bWJlciIsInN1YnRyYWN0IiwibWF4IiwiYm94TW9kZWxBZGp1c3RtZW50IiwiZGltZW5zaW9uIiwiYm94IiwiaXNCb3JkZXJCb3giLCJzdHlsZXMiLCJjb21wdXRlZFZhbCIsImV4dHJhIiwiZGVsdGEiLCJjZWlsIiwiZ2V0V2lkdGhPckhlaWdodCIsInZhbHVlSXNCb3JkZXJCb3giLCJvZmZzZXRQcm9wIiwiZ2V0Q2xpZW50UmVjdHMiLCJUd2VlbiIsImVhc2luZyIsImNzc0hvb2tzIiwib3BhY2l0eSIsIm9yaWdOYW1lIiwiaXNDdXN0b21Qcm9wIiwic2V0UHJvcGVydHkiLCJpc0Zpbml0ZSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInNjcm9sbGJveFNpemVCdWdneSIsImxlZnQiLCJtYXJnaW4iLCJwYWRkaW5nIiwiYm9yZGVyIiwicHJlZml4Iiwic3VmZml4IiwiZXhwYW5kIiwiZXhwYW5kZWQiLCJwYXJ0cyIsInByb3BIb29rcyIsInJ1biIsInBlcmNlbnQiLCJlYXNlZCIsImR1cmF0aW9uIiwicG9zIiwic3RlcCIsImZ4Iiwic2Nyb2xsVG9wIiwic2Nyb2xsTGVmdCIsImxpbmVhciIsInN3aW5nIiwiY29zIiwiUEkiLCJmeE5vdyIsImluUHJvZ3Jlc3MiLCJyZnh0eXBlcyIsInJydW4iLCJzY2hlZHVsZSIsImhpZGRlbiIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImludGVydmFsIiwidGljayIsImNyZWF0ZUZ4Tm93IiwiZ2VuRngiLCJpbmNsdWRlV2lkdGgiLCJjcmVhdGVUd2VlbiIsImFuaW1hdGlvbiIsIkFuaW1hdGlvbiIsInR3ZWVuZXJzIiwicHJvcGVydGllcyIsInN0b3BwZWQiLCJwcmVmaWx0ZXJzIiwiY3VycmVudFRpbWUiLCJzdGFydFRpbWUiLCJ0d2VlbnMiLCJvcHRzIiwic3BlY2lhbEVhc2luZyIsIm9yaWdpbmFsUHJvcGVydGllcyIsIm9yaWdpbmFsT3B0aW9ucyIsImdvdG9FbmQiLCJwcm9wRmlsdGVyIiwiY29tcGxldGUiLCJ0aW1lciIsImFuaW0iLCJ0d2VlbmVyIiwib2xkZmlyZSIsInByb3BUd2VlbiIsInJlc3RvcmVEaXNwbGF5IiwiaXNCb3giLCJkYXRhU2hvdyIsInVucXVldWVkIiwib3ZlcmZsb3ciLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJwcmVmaWx0ZXIiLCJzcGVlZCIsIm9wdCIsInNwZWVkcyIsImZhZGVUbyIsInRvIiwiYW5pbWF0ZSIsIm9wdGFsbCIsImRvQW5pbWF0aW9uIiwiZmluaXNoIiwic3RvcFF1ZXVlIiwidGltZXJzIiwiY3NzRm4iLCJzbGlkZURvd24iLCJzbGlkZVVwIiwic2xpZGVUb2dnbGUiLCJmYWRlSW4iLCJmYWRlT3V0IiwiZmFkZVRvZ2dsZSIsInNsb3ciLCJmYXN0IiwiZGVsYXkiLCJ0aW1lIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJib29sSG9vayIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsImJvb2wiLCJhdHRyTmFtZXMiLCJsb3dlcmNhc2VOYW1lIiwicmZvY3VzYWJsZSIsInJjbGlja2FibGUiLCJzdHJpcEFuZENvbGxhcHNlIiwiZ2V0Q2xhc3MiLCJjbGFzc2VzVG9BcnJheSIsInJlbW92ZVByb3AiLCJwcm9wRml4IiwidGFiaW5kZXgiLCJhZGRDbGFzcyIsImNsYXNzZXMiLCJjdXJWYWx1ZSIsImNsYXp6IiwiZmluYWxWYWx1ZSIsInJlbW92ZUNsYXNzIiwidG9nZ2xlQ2xhc3MiLCJzdGF0ZVZhbCIsImlzVmFsaWRWYWx1ZSIsImNsYXNzTmFtZXMiLCJoYXNDbGFzcyIsInJyZXR1cm4iLCJ2YWxIb29rcyIsIm9wdGlvblNldCIsImZvY3VzaW4iLCJyZm9jdXNNb3JwaCIsInN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrIiwib25seUhhbmRsZXJzIiwiYnViYmxlVHlwZSIsIm9udHlwZSIsImxhc3RFbGVtZW50IiwiZXZlbnRQYXRoIiwicGFyZW50V2luZG93Iiwic2ltdWxhdGUiLCJ0cmlnZ2VySGFuZGxlciIsImF0dGFjaGVzIiwicnF1ZXJ5IiwicGFyc2VYTUwiLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJyYnJhY2tldCIsInJDUkxGIiwicnN1Ym1pdHRlclR5cGVzIiwicnN1Ym1pdHRhYmxlIiwiYnVpbGRQYXJhbXMiLCJ0cmFkaXRpb25hbCIsInBhcmFtIiwidmFsdWVPckZ1bmN0aW9uIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwic2VyaWFsaXplIiwic2VyaWFsaXplQXJyYXkiLCJyMjAiLCJyaGFzaCIsInJhbnRpQ2FjaGUiLCJyaGVhZGVycyIsInJub0NvbnRlbnQiLCJycHJvdG9jb2wiLCJ0cmFuc3BvcnRzIiwiYWxsVHlwZXMiLCJvcmlnaW5BbmNob3IiLCJhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMiLCJzdHJ1Y3R1cmUiLCJkYXRhVHlwZUV4cHJlc3Npb24iLCJkYXRhVHlwZSIsImRhdGFUeXBlcyIsImluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwianFYSFIiLCJpbnNwZWN0ZWQiLCJzZWVraW5nVHJhbnNwb3J0IiwiaW5zcGVjdCIsInByZWZpbHRlck9yRmFjdG9yeSIsImRhdGFUeXBlT3JUcmFuc3BvcnQiLCJhamF4RXh0ZW5kIiwiZmxhdE9wdGlvbnMiLCJhamF4U2V0dGluZ3MiLCJhY3RpdmUiLCJsYXN0TW9kaWZpZWQiLCJldGFnIiwidXJsIiwiaXNMb2NhbCIsInByb3RvY29sIiwicHJvY2Vzc0RhdGEiLCJhc3luYyIsImNvbnRlbnRUeXBlIiwiYWNjZXB0cyIsImpzb24iLCJyZXNwb25zZUZpZWxkcyIsImNvbnZlcnRlcnMiLCJhamF4U2V0dXAiLCJzZXR0aW5ncyIsImFqYXhQcmVmaWx0ZXIiLCJhamF4VHJhbnNwb3J0IiwiYWpheCIsInRyYW5zcG9ydCIsImNhY2hlVVJMIiwicmVzcG9uc2VIZWFkZXJzU3RyaW5nIiwicmVzcG9uc2VIZWFkZXJzIiwidGltZW91dFRpbWVyIiwidXJsQW5jaG9yIiwiZmlyZUdsb2JhbHMiLCJ1bmNhY2hlZCIsImNhbGxiYWNrQ29udGV4dCIsImdsb2JhbEV2ZW50Q29udGV4dCIsImNvbXBsZXRlRGVmZXJyZWQiLCJzdGF0dXNDb2RlIiwicmVxdWVzdEhlYWRlcnMiLCJyZXF1ZXN0SGVhZGVyc05hbWVzIiwic3RyQWJvcnQiLCJnZXRSZXNwb25zZUhlYWRlciIsImdldEFsbFJlc3BvbnNlSGVhZGVycyIsInNldFJlcXVlc3RIZWFkZXIiLCJvdmVycmlkZU1pbWVUeXBlIiwibWltZVR5cGUiLCJzdGF0dXMiLCJhYm9ydCIsInN0YXR1c1RleHQiLCJmaW5hbFRleHQiLCJjcm9zc0RvbWFpbiIsImhvc3QiLCJoYXNDb250ZW50IiwiaWZNb2RpZmllZCIsImhlYWRlcnMiLCJiZWZvcmVTZW5kIiwic3VjY2VzcyIsInNlbmQiLCJuYXRpdmVTdGF0dXNUZXh0IiwicmVzcG9uc2VzIiwiaXNTdWNjZXNzIiwicmVzcG9uc2UiLCJtb2RpZmllZCIsImN0IiwiZmluYWxEYXRhVHlwZSIsImZpcnN0RGF0YVR5cGUiLCJhamF4SGFuZGxlUmVzcG9uc2VzIiwiY29udjIiLCJjdXJyZW50IiwiY29udiIsImRhdGFGaWx0ZXIiLCJ0aHJvd3MiLCJhamF4Q29udmVydCIsImdldEpTT04iLCJnZXRTY3JpcHQiLCJ3cmFwQWxsIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3cmFwSW5uZXIiLCJodG1sSXNGdW5jdGlvbiIsInVud3JhcCIsInZpc2libGUiLCJvZmZzZXRIZWlnaHQiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsInhoclN1Y2Nlc3NTdGF0dXMiLCIwIiwiMTIyMyIsInhoclN1cHBvcnRlZCIsImNvcnMiLCJlcnJvckNhbGxiYWNrIiwib3BlbiIsInVzZXJuYW1lIiwieGhyRmllbGRzIiwib25sb2FkIiwib25lcnJvciIsIm9uYWJvcnQiLCJvbnRpbWVvdXQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJiaW5hcnkiLCJzY3JpcHRBdHRycyIsImNoYXJzZXQiLCJzY3JpcHRDaGFyc2V0IiwiZXZ0Iiwib2xkQ2FsbGJhY2tzIiwicmpzb25wIiwianNvbnAiLCJqc29ucENhbGxiYWNrIiwib3JpZ2luYWxTZXR0aW5ncyIsImNhbGxiYWNrTmFtZSIsIm92ZXJ3cml0dGVuIiwicmVzcG9uc2VDb250YWluZXIiLCJqc29uUHJvcCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImltcGxlbWVudGF0aW9uIiwia2VlcFNjcmlwdHMiLCJwYXJzZWQiLCJwYXJhbXMiLCJhbmltYXRlZCIsIm9mZnNldCIsInNldE9mZnNldCIsImN1clBvc2l0aW9uIiwiY3VyTGVmdCIsImN1ckNTU1RvcCIsImN1clRvcCIsImN1ck9mZnNldCIsImN1ckNTU0xlZnQiLCJjdXJFbGVtIiwidXNpbmciLCJyZWN0Iiwid2luIiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsIm9mZnNldFBhcmVudCIsInBhcmVudE9mZnNldCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCJkZWZhdWx0RXh0cmEiLCJmdW5jTmFtZSIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsImhvdmVyIiwiZm5PdmVyIiwiZm5PdXQiLCJwcm94eSIsImhvbGRSZWFkeSIsImhvbGQiLCJwYXJzZUpTT04iLCJpc051bWVyaWMiLCJpc05hTiIsInRyaW0iLCJfalF1ZXJ5IiwiXyQiLCIkIiwibm9Db25mbGljdCIsIm1hcF9nZW5lcmF0b3JfMSIsImRlZmF1bHQiLCJvbkRvY3VtZW50Q2xpY2siLCJjb250cm9sQ29udGFpbmVyIiwiY2xhc3NMaXN0IiwiZXhwb3J0Q29udGFpbmVyIiwiZXhwb3J0QnV0dG9uIiwibGFiZWxQYWdlU2l6ZSIsInBhZ2VTaXplIiwib3B0aW9uQTRfTGFuZHNjYXBlIiwic3RyaW5naWZ5IiwiU2l6ZSIsIkE0X2xhbmRzY2FwZSIsIm9wdGlvbkE0X1BvcnRyYWl0IiwiQTRfcG9ydHJhaXQiLCJ0cjEiLCJ0ZDFfMSIsInRkMV8yIiwibGFiZWxGb3JtYXQiLCJmb3JtYXRUeXBlIiwib3B0aW9uUGRmIiwiRm9ybWF0IiwiUERGIiwib3B0aW9uUG5nIiwiUE5HIiwidHIyIiwidGQyXzEiLCJ0ZDJfMiIsImdlbmVyYXRlQnV0dG9uIiwibG9nIiwiZ2VuZXJhdGUiLCJNYXAiLCJjZW50ZXIiLCJ6b29tIiwiYWRkQ29udHJvbCIsIk5hdmlnYXRpb25Db250cm9sIiwiVW5pdCIsImpzUERGIiwiZmlsZV9zYXZlcl8xIiwibWFwYm94X2dsXzEiLCJpbiIsIm1tIiwic2l6ZSIsImRwaSIsImZvcm1hdCIsInRoaXNfIiwiYWN0dWFsUGl4ZWxSYXRpbyIsImRldmljZVBpeGVsUmF0aW8iLCJ0b1BpeGVscyIsInJlbmRlck1hcCIsImdldENlbnRlciIsImdldFpvb20iLCJnZXRTdHlsZSIsImJlYXJpbmciLCJnZXRCZWFyaW5nIiwicGl0Y2giLCJnZXRQaXRjaCIsImludGVyYWN0aXZlIiwicHJlc2VydmVEcmF3aW5nQnVmZmVyIiwiZmFkZUR1cmF0aW9uIiwiYXR0cmlidXRpb25Db250cm9sIiwiX2EiLCJnZXRDYW52YXMiLCJ0b0Jsb2IiLCJibG9iIiwic2F2ZUFzIiwicGRmIiwib3JpZW50YXRpb24iLCJjb21wcmVzcyIsImFkZEltYWdlIiwidG9EYXRhVVJMIiwibG5nIiwibGF0Iiwic2V0UHJvcGVydGllcyIsInRpdGxlIiwic3ViamVjdCIsImNyZWF0b3IiLCJhdXRob3IiLCJzYXZlIiwiY29udmVyc2lvbkZhY3RvciIsInNlIiwiaCIsInUiLCJidG9hIiwiY2hhckF0IiwiYXRvYiIsImZvckVhY2giLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImFzc2lnbiIsInRyaW1MZWZ0IiwidHJpbVJpZ2h0IiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwiZmxvb3IiLCJGIiwiUCIsImsiLCJmIiwieSIsIngiLCJJIiwiQyIsIkIiLCJOIiwiTCIsIkEiLCJTIiwiRSIsIk0iLCJPIiwicSIsIlQiLCJSIiwiRCIsIlUiLCJ6IiwiSCIsIlciLCJWIiwiRyIsIlkiLCJKIiwiWCIsIksiLCJaIiwiUSIsInR0IiwiZXQiLCJudCIsInJ0IiwiaXQiLCJvdCIsImF0Iiwic3QiLCJsdCIsImllIiwib2UiLCJzdWJzY3JpYmUiLCJ1bnN1YnNjcmliZSIsInB1Ymxpc2giLCJnZXRUb3BpY3MiLCJhZSIsImNvbXByZXNzUGRmIiwidXNlclVuaXQiLCJhYnMiLCJwdXRPbmx5VXNlZEZvbnRzIiwiaW50ZXJuYWwiLCJfX3ByaXZhdGVfXyIsIlB1YlN1YiIsImdldFBkZlZlcnNpb24iLCJzZXRQZGZWZXJzaW9uIiwiYTAiLCJhMSIsImEyIiwiYTMiLCJhNCIsImE1IiwiYTYiLCJhNyIsImE4IiwiYTkiLCJhMTAiLCJiMCIsImIxIiwiYjIiLCJiMyIsImI0IiwiYjUiLCJiNiIsImI3IiwiYjgiLCJiOSIsImIxMCIsImMwIiwiYzEiLCJjMiIsImMzIiwiYzQiLCJjNSIsImM2IiwiYzciLCJjOCIsImM5IiwiYzEwIiwiZGwiLCJsZWdhbCIsImxlZGdlciIsInRhYmxvaWQiLCJnZXRQYWdlRm9ybWF0cyIsImdldFBhZ2VGb3JtYXQiLCJmMiIsInRvRml4ZWQiLCJmMyIsImdldEZpbGVJZCIsInNldEZpbGVJZCIsImNvbnZlcnREYXRlVG9QREZEYXRlIiwiZ2V0VGltZXpvbmVPZmZzZXQiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImdldFNlY29uZHMiLCJjb252ZXJ0UERGRGF0ZVRvRGF0ZSIsInN1YnN0ciIsInNldENyZWF0aW9uRGF0ZSIsImdldENyZWF0aW9uRGF0ZSIsInBhZGQyIiwic2V0Q3VzdG9tT3V0cHV0RGVzdGluYXRpb24iLCJyZXNldEN1c3RvbU91dHB1dERlc3RpbmF0aW9uIiwib3V0Iiwid3JpdGUiLCJnZXRBcnJheUJ1ZmZlciIsIkFycmF5QnVmZmVyIiwiVWludDhBcnJheSIsImdldFN0YW5kYXJkRm9udHMiLCJmb250U2l6ZSIsInNldEZvbnRTaXplIiwiZ2V0Rm9udFNpemUiLCJSMkwiLCJzZXRSMkwiLCJnZXRSMkwiLCJzZXRab29tTW9kZSIsImdldFpvb21Nb2RlIiwic2V0UGFnZU1vZGUiLCJnZXRQYWdlTW9kZSIsInNldExheW91dE1vZGUiLCJnZXRMYXlvdXRNb2RlIiwic2V0RGlzcGxheU1vZGUiLCJrZXl3b3JkcyIsImdldERvY3VtZW50UHJvcGVydHkiLCJnZXREb2N1bWVudFByb3BlcnRpZXMiLCJzZXREb2N1bWVudFByb3BlcnRpZXMiLCJzZXREb2N1bWVudFByb3BlcnR5IiwiaG90Zml4ZXMiLCJuZXdPYmplY3QiLCJuZXdPYmplY3REZWZlcnJlZCIsIm5ld0FkZGl0aW9uYWxPYmplY3QiLCJvYmpJZCIsImh0IiwiZGVjb2RlQ29sb3JTdHJpbmciLCJ1dCIsImVuY29kZUNvbG9yU3RyaW5nIiwiY2gxIiwiY2gyIiwiY2gzIiwiY2g0IiwicHJlY2lzaW9uIiwicGRmQ29sb3JUeXBlIiwiUkdCQ29sb3IiLCJvayIsInRvSGV4IiwiZ2V0RmlsdGVycyIsImZ0IiwicHV0U3RyZWFtIiwiYWxyZWFkeUFwcGxpZWRGaWx0ZXJzIiwiYWRkTGVuZ3RoMSIsImFkZGl0aW9uYWxLZXlWYWx1ZXMiLCJBUEkiLCJwcm9jZXNzRGF0YUJ5RmlsdGVycyIsInJldmVyc2VDaGFpbiIsInB0IiwicHV0UGFnZSIsIm1lZGlhQm94IiwibnVtYmVyIiwiY29udGVudHNPYmpJZCIsInRvcFJpZ2h0WCIsImJvdHRvbUxlZnRYIiwidG9wUmlnaHRZIiwiYm90dG9tTGVmdFkiLCJyb290RGljdGlvbmFyeU9iaklkIiwicmVzb3VyY2VEaWN0aW9uYXJ5T2JqSWQiLCJjcm9wQm94IiwiYmxlZWRCb3giLCJ0cmltQm94IiwiYXJ0Qm94IiwicGFnZUNvbnRleHQiLCJwYWdlTnVtYmVyIiwicGFnZSIsImR0IiwicHV0UGFnZXMiLCJtdCIsInl0IiwicG9zdFNjcmlwdE5hbWUiLCJmb250TmFtZSIsImZvbnRTdHlsZSIsImVuY29kaW5nIiwiaXNTdGFuZGFyZEZvbnQiLCJtZXRhZGF0YSIsImZvbnQiLCJpbnN0YW5jZSIsInZ0IiwicGRmRXNjYXBlIiwic291cmNlRW5jb2RpbmciLCJvdXRwdXRFbmNvZGluZyIsImF1dG9lbmNvZGUiLCJjb2RlUGFnZXMiLCJub0JPTSIsInd0IiwiYmVnaW5QYWdlIiwibWluIiwieHQiLCJidCIsIkR0IiwiUnQiLCJKdCIsInRlIiwibmUiLCJOdCIsImdldE51bWJlck9mUGFnZXMiLCJMdCIsImRpc2FibGVXYXJuaW5nIiwibm9GYWxsYmFjayIsInRpbWVzIiwibm9ybWFsIiwiQXQiLCJwdXRJbmZvIiwidmVyc2lvbiIsIlN0IiwicHV0Q2F0YWxvZyIsIl90IiwicHV0VHJhaWxlciIsIkZ0IiwicHV0SGVhZGVyIiwiUHQiLCJwdXRYUmVmIiwia3QiLCJidWlsZERvY3VtZW50IiwiaXNBbHJlYWR5UHV0dGVkIiwib2JqZWN0TnVtYmVyIiwiSXQiLCJnZXRCbG9iIiwiQmxvYiIsIkN0Iiwib3V0cHV0IiwiZmlsZW5hbWUiLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJzYWZhcmkiLCJmb28iLCJhbGVydCIsImJhciIsIkJ0IiwianQiLCJnZXRQYWdlSW5mbyIsIkV0IiwiZ2V0UGFnZUluZm9CeU9iaklkIiwiTXQiLCJnZXRDdXJyZW50UGFnZUluZm8iLCJhZGRQYWdlIiwic2V0UGFnZSIsImluc2VydFBhZ2UiLCJtb3ZlUGFnZSIsImRlbGV0ZVBhZ2UiLCJmbGFncyIsImFuZ2xlIiwiYWxpZ24iLCJsaW5lSGVpZ2h0RmFjdG9yIiwiVHQiLCJUYWJMZW4iLCJzY2FsZUZhY3RvciIsImJhc2VsaW5lIiwic3BsaXRUZXh0VG9TaXplIiwibXV0ZXgiLCJhY3RpdmVGb250S2V5IiwiZm9udHMiLCJhY3RpdmVGb250U2l6ZSIsInNpbiIsImNoYXJTcGFjZSIsInJlbmRlcmluZ01vZGUiLCJzdHJva2UiLCJ1c2VkUmVuZGVyaW5nTW9kZSIsImdldFdpZHRoIiwiUXQiLCJnZXRTdHJpbmdVbml0V2lkdGgiLCJXdCIsIlZ0IiwiaXNIZXgiLCJLdCIsImxzdGV4dCIsImNsaXAiLCJjbGlwX2ZpeGVkIiwiT3QiLCJpc1ZhbGlkU3R5bGUiLCJxdCIsImxpbmUiLCJsaW5lcyIsInRyaWFuZ2xlIiwicm91bmRlZFJlY3QiLCJTUVJUMiIsImVsbGlwc2UiLCJjaXJjbGUiLCJzZXRGb250Iiwic2V0Rm9udFN0eWxlIiwic2V0Rm9udFR5cGUiLCJnZXRGb250TGlzdCIsImFkZEZvbnQiLCJsaW5lV2lkdGgiLCJzZXRMaW5lV2lkdGgiLCJVdCIsInNldExpbmVEYXNoIiwiZ2V0TGluZUhlaWdodCIsInp0Iiwic2V0TGluZUhlaWdodEZhY3RvciIsIkh0IiwiZ2V0TGluZUhlaWdodEZhY3RvciIsImxpbmVIZWlnaHQiLCJnZXRIb3Jpem9udGFsQ29vcmRpbmF0ZSIsImdldFZlcnRpY2FsQ29vcmRpbmF0ZSIsIkd0IiwiZ2V0SG9yaXpvbnRhbENvb3JkaW5hdGVTdHJpbmciLCJZdCIsImdldFZlcnRpY2FsQ29vcmRpbmF0ZVN0cmluZyIsInN0cm9rZUNvbG9yIiwiWHQiLCJnZXRTdHJva2VDb2xvciIsImdldERyYXdDb2xvciIsInNldFN0cm9rZUNvbG9yIiwic2V0RHJhd0NvbG9yIiwiZmlsbENvbG9yIiwiZ2V0RmlsbENvbG9yIiwic2V0RmlsbENvbG9yIiwidGV4dENvbG9yIiwiWnQiLCJnZXRUZXh0Q29sb3IiLCJzZXRUZXh0Q29sb3IiLCIkdCIsImdldENoYXJTcGFjZSIsInNldENoYXJTcGFjZSIsIkNhcEpvaW5TdHlsZXMiLCJidXR0IiwiYnV0IiwibWl0ZXIiLCIxIiwicm91bmRlZCIsIjIiLCJwcm9qZWN0aW5nIiwicHJvamVjdCIsInNxdWFyZSIsImJldmVsIiwic2V0TGluZUNhcCIsImVlIiwicmUiLCJzZXRMaW5lSm9pbiIsInNldE1pdGVyTGltaXQiLCJyZXR1cm5Qcm9taXNlIiwiUHJvbWlzZSIsImxlIiwidW5sb2FkIiwiZ2V0Rm9udCIsImdldENvb3JkaW5hdGVTdHJpbmciLCJjb2xsZWN0aW9ucyIsIm5ld09iamVjdERlZmVycmVkQmVnaW4iLCJzZXRXaWR0aCIsImdldEhlaWdodCIsInNldEhlaWdodCIsInBhZ2VzIiwiZ2V0UERGVmVyc2lvbiIsImhhc0hvdGZpeCIsImRpY3Rpb25hcnkiLCJfX2Fjcm9mb3JtX18iLCJCQm94Iiwic2V0Qml0IiwiY2xlYXJCaXQiLCJnZXRCaXQiLCJnZXRCaXRGb3JQZGYiLCJzZXRCaXRGb3JQZGYiLCJjbGVhckJpdEZvclBkZiIsImNhbGN1bGF0ZUNvb3JkaW5hdGVzIiwibG93ZXJMZWZ0X1giLCJsb3dlckxlZnRfWSIsInVwcGVyUmlnaHRfWCIsInVwcGVyUmlnaHRfWSIsImFwcGVhcmFuY2VTdHJlYW1Db250ZW50IiwiRFYiLCJjb2xvciIsInN0cmVhbSIsIm1heEZvbnRTaXplIiwibXVsdGlsaW5lIiwidGV4dEFsaWduIiwiZmllbGRzIiwieEZvcm1zIiwiYWNyb0Zvcm1EaWN0aW9uYXJ5Um9vdCIsInByaW50ZWRPdXQiLCJpc0luaXRpYWxpemVkIiwiYWNyb2Zvcm1QbHVnaW4iLCJGaWVsZHMiLCJoYXNBbm5vdGF0aW9uIiwiYW5ub3RhdGlvbnMiLCJfZXZlbnRJRCIsIktpZHMiLCJSZWN0IiwiREEiLCJjcmVhdGVEZWZhdWx0QXBwZWFyYW5jZVN0cmVhbSIsImdldEtleVZhbHVlTGlzdEZvclN0cmVhbSIsImhhc0FwcGVhcmFuY2VTdHJlYW0iLCJGaWVsZE51bSIsImFycmF5VG9QZGZBcnJheSIsImdldE93blByb3BlcnR5TmFtZXMiLCJzdWJzdHJpbmciLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ3cml0ZWFibGUiLCJCb29sZWFuIiwiRmYiLCJGVCIsImdldE9wdGlvbnMiLCJzZXRPcHRpb25zIiwiYWRkT3B0aW9uIiwicmVtb3ZlT3B0aW9uIiwiY29tYm8iLCJlZGl0IiwiQ0EiLCJwdXNoQnV0dG9uIiwib3B0aW9uTmFtZSIsImFwcGVhcmFuY2VTdGF0ZSIsIl9BcHBlYXJhbmNlVHlwZSIsIlJhZGlvQnV0dG9uIiwiQ2lyY2xlIiwiY3JlYXRlQXBwZWFyYW5jZVN0cmVhbSIsInNldEFwcGVhcmFuY2UiLCJnZXRDQSIsImNyZWF0ZU9wdGlvbiIsIlBhcmVudCIsIkNoZWNrQm94IiwiT24iLCJZZXNOb3JtYWwiLCJZZXNQdXNoRG93biIsIk9mZiIsIk9mZlB1c2hEb3duIiwiQmV6aWVyX0MiLCJDcm9zcyIsImNhbGN1bGF0ZUNyb3NzIiwieDEiLCJ4MiIsIng0IiwieDMiLCJhZGRGaWVsZCIsImFkZEJ1dHRvbiIsImFkZFRleHRGaWVsZCIsImFkZENob2ljZUZpZWxkIiwiQ2hvaWNlRmllbGQiLCJMaXN0Qm94IiwiQ29tYm9Cb3giLCJFZGl0Qm94IiwiQnV0dG9uIiwiUHVzaEJ1dHRvbiIsIlRleHRGaWVsZCIsIlBhc3N3b3JkRmllbGQiLCJBY3JvRm9ybSIsIkFwcGVhcmFuY2UiLCJBY3JvRm9ybUNob2ljZUZpZWxkIiwiQWNyb0Zvcm1MaXN0Qm94IiwiQWNyb0Zvcm1Db21ib0JveCIsIkFjcm9Gb3JtRWRpdEJveCIsIkFjcm9Gb3JtQnV0dG9uIiwiQWNyb0Zvcm1QdXNoQnV0dG9uIiwiQWNyb0Zvcm1SYWRpb0J1dHRvbiIsIkFjcm9Gb3JtQ2hlY2tCb3giLCJBY3JvRm9ybVRleHRGaWVsZCIsIkFjcm9Gb3JtUGFzc3dvcmRGaWVsZCIsIkFjcm9Gb3JtQXBwZWFyYW5jZSIsIlRJRkYiLCJKUEVHIiwiSlBFRzIwMDAiLCJHSUY4N2EiLCJHSUY4OWEiLCJCTVAiLCJnZXRJbWFnZUZpbGVUeXBlQnlJbWFnZURhdGEiLCJpc0FycmF5QnVmZmVyVmlldyIsImFycmF5QnVmZmVyVG9CaW5hcnlTdHJpbmciLCJjcyIsImNvbG9yX3NwYWNlcyIsIklOREVYRUQiLCJwYWwiLCJERVZJQ0VfQ01ZSyIsImJwYyIsImRwIiwidHJucyIsInNtYXNrIiwiaGFzQXR0cmlidXRlIiwidW5lc2NhcGUiLCJsb2FkRmlsZSIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiZ2V0Q29udGV4dCIsImRyYXdJbWFnZSIsImFsaWFzIiwiREVWSUNFX1JHQiIsIkRFVklDRV9HUkFZIiwiQ0FMX0dSRVkiLCJDQUxfUkdCIiwiTEFCIiwiSUNDX0JBU0VEIiwiUEFUVEVSTiIsIlNFUEFSQVRJT04iLCJERVZJQ0VfTiIsImRlY29kZSIsIkRDVF9ERUNPREUiLCJGTEFURV9ERUNPREUiLCJMWldfREVDT0RFIiwiSlBYX0RFQ09ERSIsIkpCSUcyX0RFQ09ERSIsIkFTQ0lJODVfREVDT0RFIiwiQVNDSUlfSEVYX0RFQ09ERSIsIlJVTl9MRU5HVEhfREVDT0RFIiwiQ0NJVFRfRkFYX0RFQ09ERSIsImltYWdlX2NvbXByZXNzaW9uIiwiTk9ORSIsIkZBU1QiLCJNRURJVU0iLCJTTE9XIiwic0hhc2hDb2RlIiwiaXNTdHJpbmciLCJ2YWxpZGF0ZVN0cmluZ0FzQmFzZTY0IiwiZXh0cmFjdEluZm9Gcm9tQmFzZTY0RGF0YVVSSSIsImV4dHJhY3RJbWFnZUZyb21EYXRhVXJsIiwic3VwcG9ydHNBcnJheUJ1ZmZlciIsImlzQXJyYXlCdWZmZXIiLCJVaW50MzJBcnJheSIsIkludDhBcnJheSIsIlVpbnQ4Q2xhbXBlZEFycmF5IiwiSW50MTZBcnJheSIsIlVpbnQxNkFycmF5IiwiSW50MzJBcnJheSIsIkZsb2F0MzJBcnJheSIsIkZsb2F0NjRBcnJheSIsImJpbmFyeVN0cmluZ1RvVWludDhBcnJheSIsImFycmF5QnVmZmVyVG9CYXNlNjQiLCJieXRlTGVuZ3RoIiwiY3JlYXRlSW1hZ2VJbmZvIiwiaW1hZ2VEYXRhIiwiY29tcHJlc3Npb24iLCJyb3RhdGlvbiIsImNvbnZlcnRTdHJpbmdUb0ltYWdlRGF0YSIsInN1YmFycmF5IiwicHJvY2Vzc0pQRUciLCJudW1jb21wb25lbnRzIiwicHJvY2Vzc0pQRyIsImdldEltYWdlUHJvcGVydGllcyIsImZpbGVUeXBlIiwiY29sb3JTcGFjZSIsImNvbXByZXNzaW9uTW9kZSIsImJpdHNQZXJDb21wb25lbnQiLCJib3VuZHMiLCJfbmFtZU1hcCIsIm1hZ0ZhY3RvciIsImNyZWF0ZUFubm90YXRpb24iLCJsaW5rIiwidGV4dFdpdGhMaW5rIiwiZ2V0VGV4dFdpZHRoIiwiMTU2OSIsIjE1NzAiLCIxNTcxIiwiMTU3MiIsIjE1NzMiLCIxNTc0IiwiMTU3NSIsIjE1NzYiLCIxNTc3IiwiMTU3OCIsIjE1NzkiLCIxNTgwIiwiMTU4MSIsIjE1ODIiLCIxNTgzIiwiMTU4NCIsIjE1ODUiLCIxNTg2IiwiMTU4NyIsIjE1ODgiLCIxNTg5IiwiMTU5MCIsIjE1OTEiLCIxNTkyIiwiMTU5MyIsIjE1OTQiLCIxNjAxIiwiMTYwMiIsIjE2MDMiLCIxNjA0IiwiMTYwNSIsIjE2MDYiLCIxNjA3IiwiMTYwOCIsIjE2MDkiLCIxNjEwIiwiMTY0OSIsIjE2NTUiLCIxNjU3IiwiMTY1OCIsIjE2NTkiLCIxNjYyIiwiMTY2MyIsIjE2NjQiLCIxNjY3IiwiMTY2OCIsIjE2NzAiLCIxNjcxIiwiMTY3MiIsIjE2NzYiLCIxNjc3IiwiMTY3OCIsIjE2ODEiLCIxNjg4IiwiMTcwMCIsIjE3MDIiLCIxNzA1IiwiMTcwOSIsIjE3MTEiLCIxNzEzIiwiMTcxNSIsIjE3MjIiLCIxNzIzIiwiMTcyNiIsIjE3MjgiLCIxNzI5IiwiMTczMyIsIjE3MzQiLCIxNzM1IiwiMTczNiIsIjE3MzciLCIxNzM5IiwiMTc0MCIsIjE3NDQiLCIxNzQ2IiwiMTc0NyIsIjY1MjQ3IiwiNjUxNTQiLCI2NTE1NiIsIjY1MTYwIiwiNjUxNjYiLCI2NTI0OCIsIjY1MTY1IiwiNjUyNTgiLCIxNjE3IiwiMTYxMiIsIjE2MTMiLCIxNjE0IiwiMTYxNSIsIjE2MTYiLCJfX2FyYWJpY1BhcnNlcl9fIiwiaXNJbkFyYWJpY1N1YnN0aXR1dGlvbkEiLCJpc0FyYWJpY0xldHRlciIsImlzQXJhYmljRW5kTGV0dGVyIiwiaXNBcmFiaWNBbGZMZXR0ZXIiLCJhcmFiaWNMZXR0ZXJIYXNJc29sYXRlZEZvcm0iLCJhcmFiaWNMZXR0ZXJIYXNGaW5hbEZvcm0iLCJhcmFiaWNMZXR0ZXJIYXNJbml0aWFsRm9ybSIsImFyYWJpY0xldHRlckhhc01lZGlhbEZvcm0iLCJyZXNvbHZlTGlnYXR1cmVzIiwiaXNBcmFiaWNEaWFjcml0aWMiLCJnZXRDb3JyZWN0Rm9ybSIsInByb2Nlc3NBcmFiaWMiLCJhdXRvUHJpbnQiLCJ2YXJpYW50IiwiYWRkSlMiLCJwYWdlV3JhcFhFbmFibGVkIiwicGFnZVdyYXBYIiwicGFnZVdyYXBZRW5hYmxlZCIsInBhZ2VXcmFwWSIsImNvbnRleHQyZCIsIl9jYW52YXMiLCJjYW52YXMiLCJsbiIsImJvdHRvbSIsInNldEhlYWRlckZ1bmN0aW9uIiwiZ2V0VGV4dERpbWVuc2lvbnMiLCJ0YWJsZV9mb250X3NpemUiLCJjZWxsQWRkUGFnZSIsIm1hcmdpbnMiLCJjZWxsSW5pdGlhbGl6ZSIsImNlbGwiLCJwcmludEhlYWRlcnMiLCJ0YWJsZUhlYWRlclJvdyIsInByaW50SGVhZGVyUm93IiwicHJpbnRpbmdIZWFkZXJSb3ciLCJhcnJheU1heCIsImF1dG9TaXplIiwibG5Nb2QiLCJwcm9tcHQiLCJjYWxjdWxhdGVMaW5lSGVpZ2h0Iiwic2V0VGFibGVIZWFkZXJSb3ciLCJsYXN0Q2VsbFBvcyIsInRhYmxlX3giLCJ0YWJsZV95IiwiaXNTdHJva2VUcmFuc3BhcmVudCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VTdHlsZSIsImZpbGxTdHlsZSIsImlzRmlsbFRyYW5zcGFyZW50IiwiZmlsbE9wYWNpdHkiLCJ0ZXh0QmFzZWxpbmUiLCJsaW5lSm9pbiIsImxpbmVDYXAiLCJwYXRoIiwidHJhbnNmb3JtIiwiZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uIiwiZ2xvYmFsQWxwaGEiLCJjbGlwX3BhdGgiLCJjdXJyZW50UG9pbnQiLCJtaXRlckxpbWl0IiwibGFzdFBvaW50IiwiaWdub3JlQ2xlYXJSZWN0IiwiY3R4IiwiYXJpYWwiLCJ2ZXJkYW5hIiwiaGVsdmV0aWNhIiwiZml4ZWQiLCJtb25vc3BhY2UiLCJ0ZXJtaW5hbCIsImNvdXJpZXIiLCJjdXJzaXZlIiwiZmFudGFzeSIsInNlcmlmIiwiZmlsbCIsImJlZ2luUGF0aCIsIm1vdmVUbyIsImFwcGx5VG9Qb2ludCIsImNsb3NlUGF0aCIsImxpbmVUbyIsInF1YWRyYXRpY0N1cnZlVG8iLCJ5MSIsImJlemllckN1cnZlVG8iLCJ5MiIsImFyYyIsImlzSWRlbnRpdHkiLCJzcXJ0IiwicG93IiwicmFkaXVzIiwic3RhcnRBbmdsZSIsImVuZEFuZ2xlIiwiY291bnRlcmNsb2Nrd2lzZSIsImFyY1RvIiwiZmlsbFJlY3QiLCJzdHJva2VSZWN0IiwiY2xlYXJSZWN0IiwiY3R4U3RhY2siLCJyZXN0b3JlIiwiaXNDYW52YXNHcmFkaWVudCIsImdldENvbG9yIiwiZmlsbFRleHQiLCJzY2FsZVgiLCJzdHJva2VUZXh0IiwibWVhc3VyZVRleHQiLCJtdWx0aXBseSIsInJvdGF0ZSIsInRyYW5zbGF0ZSIsInNldFRyYW5zZm9ybSIsImRlY29tcG9zZSIsInNoeCIsInN4Iiwic3kiLCJza2V3IiwiYXBwbHlUb1JlY3RhbmdsZSIsImF1dG9QYWdpbmciLCJwb3NYIiwicG9zWSIsImJlZ2luIiwiY2xvc2UiLCJkZWx0YXMiLCJjcmVhdGVMaW5lYXJHcmFkaWVudCIsImNvbG9yU3RvcHMiLCJhZGRDb2xvclN0b3AiLCJjcmVhdGVQYXR0ZXJuIiwiY3JlYXRlUmFkaWFsR3JhZGllbnQiLCJ5MyIsInk0IiwiYXRhbjIiLCJzaHkiLCJ0eCIsInR5IiwicHJlZGljdG9yIiwiY29sb3JzIiwiY29sdW1ucyIsImFkbGVyMzJjcyIsImZyb20iLCJEZWZsYXRlciIsImZsdXNoIiwibG9hZEltYWdlRmlsZSIsImNvbnZlcnQiLCJ0ZW1wbGF0ZSIsInNldFByb2dyZXNzIiwiX19wcm90b19fIiwib3ZlcmxheSIsImltZyIsImVuYWJsZUxpbmtzIiwiaHRtbDJjYW52YXMiLCJ0b0NvbnRhaW5lciIsInRvQ2FudmFzIiwidG9JbWciLCJ0b1BkZiIsInRoZW5MaXN0Iiwic2V0UGFnZVNpemUiLCJzY3JvbGxXaWR0aCIsImJhY2tncm91bmRDb2xvciIsImphdmFzY3JpcHRFbmFibGVkIiwidGFnTmFtZSIsInNjcm9sbEhlaWdodCIsInpJbmRleCIsImNsZWFyIiwiZmxvYXQiLCJvbnJlbmRlcmVkIiwiaXNIdG1sMkNhbnZhc0xvYWRlZCIsInRvQ29udGV4dDJkIiwiYWxsb3dUYWludCIsImltYWdlVGltZW91dCIsImxvZ2dpbmciLCJyZW1vdmVDb250YWluZXIiLCJmb3JlaWduT2JqZWN0UmVuZGVyaW5nIiwidXNlQ09SUyIsIndpbmRvd0hlaWdodCIsInF1YWxpdHkiLCJvdXRwdXRJbWciLCJvdXRwdXRQZGYiLCJkb0NhbGxiYWNrIiwic2V0TWFyZ2luIiwiZ2V0UGFnZVNpemUiLCJpbm5lciIsInB4IiwicmF0aW8iLCJ1cGRhdGVQcm9ncmVzcyIsInRoZW5Db3JlIiwidGhlbkV4dGVybmFsIiwiY2F0Y2hFeHRlcm5hbCIsImV4cG9ydCIsIndvcmtlciIsIm91dGxpbmUiLCJyZW5kZXIiLCJjcmVhdGVOYW1lZERlc3RpbmF0aW9ucyIsIm1ha2VSZWYiLCJuYW1lc09pZCIsImdlbklkc19yIiwicmVuZGVyUm9vdCIsInJlbmRlckl0ZW1zIiwib2JqU3RhcnQiLCJjb3VudF9yIiwib2JqRW5kIiwibWFrZVN0cmluZyIsIkxPRzJFIiwicHJvY2Vzc1BORyIsImltZ0RhdGEiLCJiaXRzIiwiY29sb3JUeXBlIiwicGl4ZWxCaXRsZW5ndGgiLCJkZWNvZGVQaXhlbHMiLCJidWZmZXIiLCJwYWxldHRlIiwidHJhbnNwYXJlbmN5IiwiaW5kZXhlZCIsInByb2Nlc3NHSUY4OUEiLCJkZWNvZGVBbmRCbGl0RnJhbWVSR0JBIiwiZW5jb2RlIiwicHJvY2Vzc0dJRjg3QSIsInByb2Nlc3NCTVAiLCJzZXRMYW5ndWFnZSIsImxhbmd1YWdlU2V0dGluZ3MiLCJpc1N1YnNjcmliZWQiLCJhZiIsInNxIiwiYXIiLCJhbiIsImh5IiwiYXMiLCJhc3QiLCJheiIsImV1IiwiYmUiLCJibiIsImJzIiwiYnIiLCJiZyIsIm15IiwiY2EiLCJjZSIsInpoIiwiY3YiLCJjbyIsImNyIiwiaHIiLCJkYSIsIm5sIiwiZW4iLCJlbyIsImZvIiwiZmoiLCJmaSIsImZyIiwiZnkiLCJmdXIiLCJnZCIsImdsIiwia2EiLCJkZSIsImd1IiwiaGUiLCJoaSIsImh1IiwiaXUiLCJnYSIsImphIiwia24iLCJrcyIsImtrIiwia20iLCJreSIsInRsaCIsImtvIiwibGEiLCJsdiIsImxiIiwibWsiLCJtcyIsIm1sIiwibWkiLCJtciIsIm1vIiwibnYiLCJuZyIsIm5vIiwibmIiLCJubiIsIm9jIiwib3IiLCJvbSIsImZhIiwicGwiLCJwYSIsInF1Iiwicm0iLCJybyIsInJ1Iiwic3oiLCJzZyIsInNhIiwic2MiLCJzZCIsInNpIiwic3IiLCJzayIsInNsIiwic28iLCJzYiIsImVzIiwic3ciLCJzdiIsInRhIiwidGlnIiwidHMiLCJ0biIsInRrIiwidWsiLCJoc2IiLCJ1ciIsInZlIiwidmkiLCJ2byIsIndhIiwiY3kiLCJ4aCIsImppIiwienUiLCJsYW5ndWFnZUNvZGUiLCJnZXRDaGFyV2lkdGhzQXJyYXkiLCJ3aWR0aHMiLCJVbmljb2RlIiwiZm9mIiwia2VybmluZyIsIndpZHRoT2ZTdHJpbmciLCJ3aWR0aE9mR2x5cGgiLCJjaGFyYWN0ZXJUb0dseXBoIiwiZ2V0QXJyYXlTdW0iLCJ0ZXh0SW5kZW50IiwibGluZUluZGVudCIsIldpbkFuc2lFbmNvZGluZyIsIkNvdXJpZXIiLCJIZWx2ZXRpY2EiLCJaYXBmRGluZ2JhdHMiLCJleGlzdHNGaWxlSW5WRlMiLCJnZXRGaWxlRnJvbVZGUyIsIlRURkZvbnQiLCJnbHlJZHNVc2VkIiwiYWRkU3ZnIiwic3R5bGVTaGVldCIsImNvbnRlbnRXaW5kb3ciLCJhZGRTVkciLCJhZGRTdmdBc0ltYWdlIiwiY2FudmciLCJpZ25vcmVNb3VzZSIsImlnbm9yZUFuaW1hdGlvbiIsImlnbm9yZURpbWVuc2lvbnMiLCJpZ25vcmVDbGVhciIsInB1dFRvdGFsUGFnZXMiLCJwZGZFc2NhcGUxNiIsInZpZXdlclByZWZlcmVuY2VzIiwiSGlkZVRvb2xiYXIiLCJleHBsaWNpdFNldCIsInZhbHVlU2V0IiwicGRmVmVyc2lvbiIsIkhpZGVNZW51YmFyIiwiSGlkZVdpbmRvd1VJIiwiRml0V2luZG93IiwiQ2VudGVyV2luZG93IiwiRGlzcGxheURvY1RpdGxlIiwiTm9uRnVsbFNjcmVlblBhZ2VNb2RlIiwiRGlyZWN0aW9uIiwiVmlld0FyZWEiLCJWaWV3Q2xpcCIsIlByaW50QXJlYSIsIlByaW50Q2xpcCIsIlByaW50U2NhbGluZyIsIkR1cGxleCIsIlBpY2tUcmF5QnlQREZTaXplIiwiUHJpbnRQYWdlUmFuZ2UiLCJOdW1Db3BpZXMiLCJ2aWV3ZXJwcmVmZXJlbmNlcyIsImNvbmZpZ3VyYXRpb24iLCJhZGRNZXRhZGF0YSIsInRvVW5pY29kZSIsInN1YnNldCIsIlBERk9iamVjdCIsImJib3giLCJzdGVtViIsIml0YWxpY0FuZ2xlIiwiYXNjZW5kZXIiLCJkZWNlbmRlciIsImNhcEhlaWdodCIsInJhd0RhdGEiLCJobXR4IiwidW5pdHNQZXJFbSIsImNtYXAiLCJ1bmljb2RlIiwiY29kZU1hcCIsInZGUyIsImFkZEZpbGVUb1ZGUyIsImFkZEhUTUwiLCJyYXN0ZXJpemVIVE1MIiwiZGltIiwidXNlRm9yIiwiaW1hZ2VDb21wcmVzc2lvbiIsInBhZ2VzcGxpdCIsIm1vekltYWdlU21vb3RoaW5nRW5hYmxlZCIsIndlYmtpdEltYWdlU21vb3RoaW5nRW5hYmxlZCIsIm1zSW1hZ2VTbW9vdGhpbmdFbmFibGVkIiwiaW1hZ2VTbW9vdGhpbmdFbmFibGVkIiwiSW1hZ2UiLCJyc3R6Iiwic21hbGwiLCJtZWRpdW0iLCJsYXJnZSIsImF1dG8iLCJjdXJyZW50U3R5bGUiLCJyb3dzIiwiY2VsbHMiLCJTQ1JJUFQiLCJTVFlMRSIsIk5PU0NSSVBUIiwiT0JKRUNUIiwiRU1CRUQiLCJTRUxFQ1QiLCJzZXRCbG9ja0JvdW5kYXJ5Iiwic2V0QmxvY2tTdHlsZSIsImV4ZWN1dGVXYXRjaEZ1bmN0aW9ucyIsIm1hcmdpbnNfZG9jIiwiYWRkVGV4dCIsIndhdGNoRnVuY3Rpb25zIiwib3V0WSIsImNyb3NzT3JpZ2luIiwiRk9PVEVSIiwiZnJhbWVzIiwid3JpdGVsbiIsImVsZW1lbnRIYW5kbGVycyIsImRpc3Bvc2UiLCJwYXJhZ3JhcGgiLCJzcGxpdEZyYWdtZW50c0ludG9MaW5lcyIsIlJlbmRlclRleHRGcmFnbWVudCIsImdldFBkZkNvbG9yIiwibGFzdFRleHRDb2xvciIsInJlbmRlclBhcmFncmFwaCIsImJsb2Nrc3R5bGUiLCJwcmlvcmJsb2Nrc3R5bGUiLCJwcmlvck1hcmdpbkJvdHRvbSIsIjEwMCIsIjIwMCIsIjMwMCIsIjQwMCIsIjUwMCIsIjYwMCIsIjcwMCIsIjgwMCIsIjkwMCIsImJvbGQiLCJib2xkZXIiLCJsaWdodGVyIiwiaXRhbGljIiwib2JsaXF1ZSIsImp1c3RpZnkiLCJub25lIiwiYm90aCIsImZyb21IVE1MIiwiaHRtbDJwZGYiLCJfd3JhcFgiLCJfd3JhcFkiLCJfcGFnZSIsInNldE5hbWUiLCJfcGFnZUJyZWFrQXQiLCJwYWdlQnJlYWtzIiwiX2dvdG9QYWdlIiwic2Nyb2xsWSIsInBhcmVudEVsZW1lbnQiLCJCbG9iQnVpbGRlciIsIldlYktpdEJsb2JCdWlsZGVyIiwiTVNCbG9iQnVpbGRlciIsIk1vekJsb2JCdWlsZGVyIiwid2Via2l0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiYnl0ZU9mZnNldCIsIkZpbGUiLCJGaWxlUmVhZGVyIiwiQWN0aXZlWE9iamVjdCIsImxhc3RNb2RpZmllZERhdGUiLCJpc1ZpZXciLCJfYnVmZmVyIiwiaXNQcm90b3R5cGVPZiIsIkRhdGFWaWV3Iiwic2V0UHJvdG90eXBlT2YiLCJkaXNwYXRjaEV2ZW50IiwiTE9BRElORyIsIkVNUFRZIiwiRE9ORSIsIm9ubG9hZGVuZCIsIm9ubG9hZHN0YXJ0Iiwib25wcm9ncmVzcyIsInJlYWRBc0RhdGFVUkwiLCJyZWFkQXNUZXh0IiwicmVhZEFzQXJyYXlCdWZmZXIiLCJndCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsImNyZWF0ZUVsZW1lbnROUyIsIkhUTUxFbGVtZW50Iiwic2V0SW1tZWRpYXRlIiwiSU5JVCIsImRvd25sb2FkIiwiTW91c2VFdmVudCIsIm1zU2F2ZU9yT3BlbkJsb2IiLCJXUklUSU5HIiwib253cml0ZXN0YXJ0Iiwib253cml0ZSIsIm9ud3JpdGVlbmQiLCJoYXNfbG9jYWxfcGFsZXR0ZSIsInBhbGV0dGVfb2Zmc2V0IiwiZGF0YV9vZmZzZXQiLCJkYXRhX2xlbmd0aCIsInRyYW5zcGFyZW50X2luZGV4IiwiaW50ZXJsYWNlZCIsImRpc3Bvc2FsIiwibnVtRnJhbWVzIiwibG9vcENvdW50IiwiZnJhbWVJbmZvIiwiZGVjb2RlQW5kQmxpdEZyYW1lQkdSQSIsIkdpZldyaXRlciIsImxvb3AiLCJiYWNrZ3JvdW5kIiwiYWRkRnJhbWUiLCJ0cmFuc3BhcmVudCIsIkdpZlJlYWRlciIsImdldFRpbWUiLCJkaXNwbGF5TmFtZSIsImRhdGF2IiwiaXNfd2l0aF9hbHBoYSIsImJvdHRvbV91cCIsInBhcnNlSGVhZGVyIiwicGFyc2VCR1IiLCJCdWZmZXIiLCJBZGxlcjMyIiwiY2hlY2tzdW0iLCJmcm9tVXRmOCIsImZyb21CdWZmZXIiLCJ1cGRhdGUiLCJ1cGRhdGVVdGY4IiwidXBkYXRlQnVmZmVyIiwiX19iaWRpRW5naW5lX18iLCJFTiIsIkFOIiwiNSIsIjYiLCI3IiwiMzIiLCIyNTEiLCIyNTQiLCIyNTUiLCJoaUxldmVsIiwiZG9CaWRpUmVvcmRlciIsImlzSW5wdXRWaXN1YWwiLCJpc091dHB1dFZpc3VhbCIsImlzSW5wdXRSdGwiLCJpc091dHB1dFJ0bCIsImlzU3ltbWV0cmljU3dhcHBpbmciLCJmaWxlU2l6ZSIsImdldFVpbnQzMiIsInJlc2VydmVkIiwiaGVhZGVyU2l6ZSIsImdldEludDMyIiwicGxhbmVzIiwiZ2V0VWludDE2IiwiYml0UFAiLCJyYXdTaXplIiwidnIiLCJpbXBvcnRhbnRDb2xvcnMiLCJnZXRVaW50OCIsInJlZCIsImdyZWVuIiwiYmx1ZSIsInF1YWQiLCJiaXQxIiwiYml0NCIsImJpdDgiLCJiaXQxNSIsImJpdDE2IiwiYml0MjQiLCJiaXQzMiIsImJ1aWxkX3RyZWUiLCJkeW5fdHJlZSIsInN0YXRfZGVzYyIsInN0YXRpY190cmVlIiwiaGVhcF9sZW4iLCJoZWFwX21heCIsImhlYXAiLCJvcHRfbGVuIiwic3RhdGljX2xlbiIsIm1heF9jb2RlIiwicHFkb3duaGVhcCIsImV4dHJhX2JpdHMiLCJleHRyYV9iYXNlIiwibWF4X2xlbmd0aCIsImJsX2NvdW50IiwiZ29vZF9sZW5ndGgiLCJtYXhfbGF6eSIsIm5pY2VfbGVuZ3RoIiwibWF4X2NoYWluIiwiX2xlbmd0aF9jb2RlIiwiYmFzZV9sZW5ndGgiLCJiYXNlX2Rpc3QiLCJkX2NvZGUiLCJleHRyYV9sYml0cyIsImV4dHJhX2RiaXRzIiwiZXh0cmFfYmxiaXRzIiwiYmxfb3JkZXIiLCJzdGF0aWNfbHRyZWUiLCJzdGF0aWNfZHRyZWUiLCJzdGF0aWNfbF9kZXNjIiwic3RhdGljX2RfZGVzYyIsInN0YXRpY19ibF9kZXNjIiwicGVuZGluZ19idWYiLCJwZW5kaW5nIiwiZmx1c2hfcGVuZGluZyIsImF2YWlsX2luIiwicmVhZF9idWYiLCJ0b3RhbF9pbiIsInRvdGFsX291dCIsInBlbmRpbmdfb3V0IiwiZGVmbGF0ZUluaXQiLCJkc3RhdGUiLCJkZWZsYXRlRW5kIiwiZGVmbGF0ZVBhcmFtcyIsImRlZmxhdGUiLCJkZWZsYXRlU2V0RGljdGlvbmFyeSIsIm5leHRfb3V0IiwibmV4dF9pbiIsImF2YWlsX291dCIsIm5leHRfaW5faW5kZXgiLCJuZXh0X291dF9pbmRleCIsInppcCIsIl9qemxpYl9EZWZsYXRlciIsImxldmVsIiwiYWxpY2VibHVlIiwiYW50aXF1ZXdoaXRlIiwiYXF1YSIsImFxdWFtYXJpbmUiLCJhenVyZSIsImJlaWdlIiwiYmlzcXVlIiwiYmxhY2siLCJibGFuY2hlZGFsbW9uZCIsImJsdWV2aW9sZXQiLCJicm93biIsImJ1cmx5d29vZCIsImNhZGV0Ymx1ZSIsImNoYXJ0cmV1c2UiLCJjaG9jb2xhdGUiLCJjb3JhbCIsImNvcm5mbG93ZXJibHVlIiwiY29ybnNpbGsiLCJjcmltc29uIiwiY3lhbiIsImRhcmtibHVlIiwiZGFya2N5YW4iLCJkYXJrZ29sZGVucm9kIiwiZGFya2dyYXkiLCJkYXJrZ3JlZW4iLCJkYXJra2hha2kiLCJkYXJrbWFnZW50YSIsImRhcmtvbGl2ZWdyZWVuIiwiZGFya29yYW5nZSIsImRhcmtvcmNoaWQiLCJkYXJrcmVkIiwiZGFya3NhbG1vbiIsImRhcmtzZWFncmVlbiIsImRhcmtzbGF0ZWJsdWUiLCJkYXJrc2xhdGVncmF5IiwiZGFya3R1cnF1b2lzZSIsImRhcmt2aW9sZXQiLCJkZWVwcGluayIsImRlZXBza3libHVlIiwiZGltZ3JheSIsImRvZGdlcmJsdWUiLCJmZWxkc3BhciIsImZpcmVicmljayIsImZsb3JhbHdoaXRlIiwiZm9yZXN0Z3JlZW4iLCJmdWNoc2lhIiwiZ2FpbnNib3JvIiwiZ2hvc3R3aGl0ZSIsImdvbGQiLCJnb2xkZW5yb2QiLCJncmF5IiwiZ3JlZW55ZWxsb3ciLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmV5IiwibGlnaHRncmVlbiIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVibHVlIiwibGlnaHRzbGF0ZWdyYXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyb3N5YnJvd24iLCJyb3lhbGJsdWUiLCJzYWRkbGVicm93biIsInNhbG1vbiIsInNhbmR5YnJvd24iLCJzZWFncmVlbiIsInNlYXNoZWxsIiwic2llbm5hIiwic2lsdmVyIiwic2t5Ymx1ZSIsInNsYXRlYmx1ZSIsInNsYXRlZ3JheSIsInNub3ciLCJzcHJpbmdncmVlbiIsInN0ZWVsYmx1ZSIsInRhbiIsInRlYWwiLCJ0aGlzdGxlIiwidG9tYXRvIiwidHVycXVvaXNlIiwidmlvbGV0IiwidmlvbGV0cmVkIiwid2hlYXQiLCJ3aGl0ZSIsIndoaXRlc21va2UiLCJ5ZWxsb3ciLCJ5ZWxsb3dncmVlbiIsImV4YW1wbGUiLCJ0b1JHQiIsInJlYWRTdHJpbmciLCJyZWdpc3RlclRURiIsImRpcmVjdG9yeSIsImhoZWEiLCJtYXhwIiwicG9zdCIsIm9zMiIsImxvY2EiLCJnbHlmIiwiZXhpc3RzIiwibGluZUdhcCIsInhNaW4iLCJ5TWluIiwieE1heCIsInlNYXgiLCJpdGFsaWNfYW5nbGUiLCJ4SGVpZ2h0IiwiZmFtaWx5Q2xhc3MiLCJpc1NlcmlmIiwiaXNTY3JpcHQiLCJpc0ZpeGVkUGl0Y2giLCJmb3JHbHlwaCIsImFkdmFuY2UiLCJyZWFkQnl0ZSIsIndyaXRlQnl0ZSIsInJlYWRVSW50MzIiLCJ3cml0ZVVJbnQzMiIsInJlYWRJbnQzMiIsIndyaXRlSW50MzIiLCJyZWFkVUludDE2Iiwid3JpdGVVSW50MTYiLCJyZWFkSW50MTYiLCJ3cml0ZUludDE2Iiwid3JpdGVTdHJpbmciLCJyZWFkU2hvcnQiLCJ3cml0ZVNob3J0IiwicmVhZExvbmdMb25nIiwid3JpdGVMb25nTG9uZyIsInJlYWRJbnQiLCJ3cml0ZUludCIsInJlYWQiLCJzY2FsYXJUeXBlIiwidGFibGVDb3VudCIsInNlYXJjaFJhbmdlIiwiZW50cnlTZWxlY3RvciIsInJhbmdlU2hpZnQiLCJ0YWJsZXMiLCJfX3N1cGVyX18iLCJyZXZpc2lvbiIsImNoZWNrU3VtQWRqdXN0bWVudCIsIm1hZ2ljTnVtYmVyIiwiY3JlYXRlZCIsIm1hY1N0eWxlIiwibG93ZXN0UmVjUFBFTSIsImZvbnREaXJlY3Rpb25IaW50IiwiaW5kZXhUb0xvY0Zvcm1hdCIsImdseXBoRGF0YUZvcm1hdCIsInBsYXRmb3JtSUQiLCJlbmNvZGluZ0lEIiwibGFuZ3VhZ2UiLCJpc1VuaWNvZGUiLCJuZXciLCJjaGFyTWFwIiwic3VidGFibGUiLCJtYXhHbHlwaElEIiwiTE4yIiwiYWR2YW5jZVdpZHRoTWF4IiwibWluTGVmdFNpZGVCZWFyaW5nIiwibWluUmlnaHRTaWRlQmVhcmluZyIsInhNYXhFeHRlbnQiLCJjYXJldFNsb3BlUmlzZSIsImNhcmV0U2xvcGVSdW4iLCJjYXJldE9mZnNldCIsIm1ldHJpY0RhdGFGb3JtYXQiLCJudW1iZXJPZk1ldHJpY3MiLCJhdmVyYWdlQ2hhcldpZHRoIiwid2VpZ2h0Q2xhc3MiLCJ3aWR0aENsYXNzIiwieVN1YnNjcmlwdFhTaXplIiwieVN1YnNjcmlwdFlTaXplIiwieVN1YnNjcmlwdFhPZmZzZXQiLCJ5U3Vic2NyaXB0WU9mZnNldCIsInlTdXBlcnNjcmlwdFhTaXplIiwieVN1cGVyc2NyaXB0WVNpemUiLCJ5U3VwZXJzY3JpcHRYT2Zmc2V0IiwieVN1cGVyc2NyaXB0WU9mZnNldCIsInlTdHJpa2VvdXRTaXplIiwieVN0cmlrZW91dFBvc2l0aW9uIiwicGFub3NlIiwiY2hhclJhbmdlIiwidmVuZG9ySUQiLCJmaXJzdENoYXJJbmRleCIsImxhc3RDaGFySW5kZXgiLCJhc2NlbnQiLCJkZXNjZW50Iiwid2luQXNjZW50Iiwid2luRGVzY2VudCIsImNvZGVQYWdlUmFuZ2UiLCJkZWZhdWx0Q2hhciIsImJyZWFrQ2hhciIsIm1heENvbnRleHQiLCJ1bmRlcmxpbmVQb3NpdGlvbiIsInVuZGVybGluZVRoaWNrbmVzcyIsIm1pbk1lbVR5cGU0MiIsIm1heE1lbVR5cGU0MiIsIm1pbk1lbVR5cGUxIiwibWF4TWVtVHlwZTEiLCJnbHlwaE5hbWVJbmRleCIsIm5hbWVzIiwib2Zmc2V0cyIsIm51bUdseXBocyIsImxhbmd1YWdlSUQiLCJuYW1lSUQiLCJzdHJpbmdzIiwiY29weXJpZ2h0IiwiZm9udEZhbWlseSIsImZvbnRTdWJmYW1pbHkiLCJ1bmlxdWVTdWJmYW1pbHkiLCJwb3N0c2NyaXB0TmFtZSIsInRyYWRlbWFyayIsIm1hbnVmYWN0dXJlciIsImRlc2lnbmVyIiwiZGVzY3JpcHRpb24iLCJ2ZW5kb3JVcmwiLCJkZXNpZ25lclVybCIsImxpY2Vuc2UiLCJsaWNlbnNlVXJsIiwicHJlZmVycmVkRmFtaWx5IiwicHJlZmVycmVkU3ViZmFtaWx5IiwiY29tcGF0aWJsZUZ1bGwiLCJzYW1wbGVUZXh0IiwibWF4UG9pbnRzIiwibWF4Q29udG91cnMiLCJtYXhDb21wb3NpdGVQb2ludHMiLCJtYXhDb21wb25lbnRDb250b3VycyIsIm1heFpvbmVzIiwibWF4VHdpbGlnaHRQb2ludHMiLCJtYXhTdG9yYWdlIiwibWF4RnVuY3Rpb25EZWZzIiwibWF4SW5zdHJ1Y3Rpb25EZWZzIiwibWF4U3RhY2tFbGVtZW50cyIsIm1heFNpemVPZkluc3RydWN0aW9ucyIsIm1heENvbXBvbmVudEVsZW1lbnRzIiwibWF4Q29tcG9uZW50RGVwdGgiLCJtZXRyaWNzIiwibHNiIiwibGVmdFNpZGVCZWFyaW5ncyIsImdseXBoRm9yIiwibGVuZ3RoT2YiLCJudW1iZXJPZkNvbnRvdXJzIiwiY29tcG91bmQiLCJnbHlwaElEcyIsImdseXBoT2Zmc2V0cyIsInVuaWNvZGVzIiwiZ2VuZXJhdGVDbWFwIiwiZ2x5cGhzRm9yIiwiZ2V0VVRDRnVsbFllYXIiLCJnZXRVVENNb250aCIsImdldFVUQ0RhdGUiLCJnZXRVVENIb3VycyIsImdldFVUQ01pbnV0ZXMiLCJnZXRVVENTZWNvbmRzIiwiY29tcHJlc3Npb25NZXRob2QiLCJmaWx0ZXJNZXRob2QiLCJpbnRlcmxhY2VNZXRob2QiLCJudW1QbGF5cyIsInhPZmZzZXQiLCJ5T2Zmc2V0IiwiZGlzcG9zZU9wIiwiYmxlbmRPcCIsImdyYXlzY2FsZSIsInJnYiIsImhhc0FscGhhQ2hhbm5lbCIsIm1velJlc3BvbnNlQXJyYXlCdWZmZXIiLCJnZXRCeXRlcyIsImRlY29kZVBhbGV0dGUiLCJjb3B5VG9JbWFnZURhdGEiLCJfZGVjb2RlZFBhbGV0dGUiLCJwdXRJbWFnZURhdGEiLCJkZWNvZGVGcmFtZXMiLCJjcmVhdGVJbWFnZURhdGEiLCJyZW5kZXJGcmFtZSIsIl90aW1lb3V0Iiwic3RvcEFuaW1hdGlvbiIsIl9wbmciLCJidWZmZXJMZW5ndGgiLCJlb2YiLCJlbnN1cmVCdWZmZXIiLCJnZXRCeXRlIiwicmVhZEJsb2NrIiwibG9va0NoYXIiLCJnZXRDaGFyIiwibWFrZVN1YlN0cmVhbSIsIlN0cmVhbSIsImdldEJpdHMiLCJjb2RlU2l6ZSIsImNvZGVCdWYiLCJieXRlcyIsImJ5dGVzUG9zIiwiZ2V0Q29kZSIsImdlbmVyYXRlSHVmZm1hblRhYmxlIiwidmVydHhOZXh0IiwiY3VzdG9tU2NoZWR1bGVyRm4iLCJhc2FwIiwic2NoZWR1bGVGbHVzaCIsImJyb3dzZXJXaW5kb3ciLCJicm93c2VyR2xvYmFsIiwiQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsImlzTm9kZSIsImlzV29ya2VyIiwiaW1wb3J0U2NyaXB0cyIsIk1lc3NhZ2VDaGFubmVsIiwidXNlU2V0VGltZW91dCIsImdsb2JhbFNldFRpbWVvdXQiLCJjaGFubmVsIiwiaXRlcmF0aW9ucyIsIm9ic2VydmVyIiwib25GdWxmaWxsbWVudCIsIm9uUmVqZWN0aW9uIiwiY2hpbGQiLCJQUk9NSVNFX0lEIiwibWFrZVByb21pc2UiLCJfc3RhdGUiLCJpbnZva2VDYWxsYmFjayIsIl9yZXN1bHQiLCJyZXNvbHZlJDEiLCJuZXh0VGljayIsIm9ic2VydmUiLCJjaGFyYWN0ZXJEYXRhIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3J0MiIsInBvc3RNZXNzYWdlIiwidmVydHgiLCJyZXF1aXJlIiwicnVuT25Mb29wIiwicnVuT25Db250ZXh0IiwiYXR0ZW1wdFZlcnR4IiwiaGFuZGxlTWF5YmVUaGVuYWJsZSIsIm1heWJlVGhlbmFibGUiLCJ0aGVuJCQxIiwidGhlbmFibGUiLCJmdWxmaWxsIiwicmVhc29uIiwiaGFuZGxlT3duVGhlbmFibGUiLCJzZWFsZWQiLCJmdWxmaWxsbWVudEhhbmRsZXIiLCJyZWplY3Rpb25IYW5kbGVyIiwidHJ5VGhlbiIsIl9sYWJlbCIsImhhbmRsZUZvcmVpZ25UaGVuYWJsZSIsInB1Ymxpc2hSZWplY3Rpb24iLCJfb25lcnJvciIsIl9zdWJzY3JpYmVycyIsInN1YnNjcmliZXJzIiwic2V0dGxlZCIsImhhc0NhbGxiYWNrIiwic3VjY2VlZGVkIiwiRW51bWVyYXRvciIsIkNvbnN0cnVjdG9yIiwiX2luc3RhbmNlQ29uc3RydWN0b3IiLCJfcmVtYWluaW5nIiwiX2VudW1lcmF0ZSIsIl9lYWNoRW50cnkiLCJlbnRyeSIsInJlc29sdmUkJDEiLCJfdGhlbiIsImRpZEVycm9yIiwiX3NldHRsZWRBdCIsIlByb21pc2UkMSIsIl93aWxsU2V0dGxlQXQiLCJlbnVtZXJhdG9yIiwicmVzb2x2ZXIiLCJuZWVkc1Jlc29sdmVyIiwiaW5pdGlhbGl6ZVByb21pc2UiLCJuZWVkc05ldyIsImZpbmFsbHkiLCJhbGwiLCJlbnRyaWVzIiwicmFjZSIsIl9zZXRTY2hlZHVsZXIiLCJzY2hlZHVsZUZuIiwiX3NldEFzYXAiLCJhc2FwRm4iLCJfYXNhcCIsInBvbHlmaWxsIiwibG9jYWwiLCJwcm9taXNlVG9TdHJpbmciLCJjYXN0IiwiY2FjaGVkU2V0VGltZW91dCIsImNhY2hlZENsZWFyVGltZW91dCIsImRlZmF1bHRTZXRUaW1vdXQiLCJkZWZhdWx0Q2xlYXJUaW1lb3V0IiwicnVuVGltZW91dCIsImZ1biIsImN1cnJlbnRRdWV1ZSIsImRyYWluaW5nIiwicXVldWVJbmRleCIsImNsZWFuVXBOZXh0VGljayIsImRyYWluUXVldWUiLCJtYXJrZXIiLCJydW5DbGVhclRpbWVvdXQiLCJJdGVtIiwiYnJvd3NlciIsImVudiIsImFyZ3YiLCJ2ZXJzaW9ucyIsImFkZExpc3RlbmVyIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJlbWl0IiwicHJlcGVuZExpc3RlbmVyIiwicHJlcGVuZE9uY2VMaXN0ZW5lciIsImxpc3RlbmVycyIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsInVtYXNrIiwiY3JlYXRlRXZlbnQiLCJpbml0TW91c2VFdmVudCIsIkhUTUxBbmNob3JFbGVtZW50IiwicmVsIiwib3JpZ2luIiwiYXV0b0JvbSIsImlubmVyVGV4dCIsImFwaSIsImxvY2FscyIsIm1lbW8iLCJpc09sZElFIiwiZ2V0VGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJzdHlsZXNJbkRvbSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiaXRlbSIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRTdHlsZSIsImluc2VydFN0eWxlRWxlbWVudCIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwicmVwbGFjZW1lbnQiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiY3NzTm9kZSIsImFwcGx5VG9UYWciLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVJbmRleCIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18iLCJ1c2VTb3VyY2VNYXAiLCJjc3NNYXBwaW5nIiwic291cmNlTWFwcGluZyIsImJhc2U2NCIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVB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LE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxNQUFNLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxNQUFNLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxNQUFNLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxPQUFPQyxLQUFLLENBQUMsT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxNQUFNLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxNQUFNLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxNQUFNLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxNQUFNLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxNQUFNLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxNQUFNLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE1BQU0sTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxPQUFPQyxLQUFLLENBQUMsTUFBTSxNQUFNLE1BQU0sT0FBT0MsS0FBSyxDQUFDLE1BQU0sTUFBTSxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLE9BQU9DLEtBQUssQ0FBQyxNQUFNLFFBQVF0dEQsRUFBRSxDQUFDdXRELE1BQU0sQ0FBQ0MsTUFBTSxNQUFNQyxNQUFNLE1BQU1DLE1BQU0sTUFBTUMsTUFBTSxPQUFPQyxNQUFNLENBQUNKLE1BQU0sTUFBTUMsTUFBTSxNQUFNQyxNQUFNLE1BQU1DLE1BQU0sT0FBT0UsTUFBTSxDQUFDTixNQUFNLENBQUNLLE1BQU0sQ0FBQ0UsTUFBTSxTQUFTQyxLQUFLLENBQUNDLEtBQUssTUFBTUMsS0FBSyxNQUFNQyxLQUFLLE1BQU1DLEtBQUssTUFBTUMsS0FBSyxRQUFRbjNELEVBQUUsQ0FBQysyRCxLQUFLLE1BQU1DLEtBQUssTUFBTUMsS0FBSyxNQUFNQyxLQUFLLE1BQU1DLEtBQUssT0FBTzkzRCxFQUFFLENBQUMsS0FBSyxLQUFLLEtBQUssTUFBTVAsRUFBRXM0RCxpQkFBaUIsR0FBRyxJQUFJMTRELEVBQUVJ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LEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxJQUFJOG1DLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUdDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsSUFBSUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsS0FBS0MsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxHQUFHLEdBQUcsR0FBRyxFQUFFLEdBQUcsR0FBRyxHQUFHLEVBQUUsR0FBRyxJQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxFQUFFLEdBQUcsR0FBRyxJQUFJLElBQUksR0FBRyxHQUFHLElBQUksSUFBSSxHQUFHLEdBQUcsR0FBRyxJQUFJLElBQUksRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLElBQUlDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUtDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsR0FBRyxFQUFFLEdBQUcsR0FBRyxHQUFHLEVBQUUsR0FBRyxJQUFJLEdBQUcsR0FBRyxHQUFHLElBQUksRUFBRSxHQUFHLEdBQUcsSUFBSSxJQUFJLElBQUksSUFBSSxFQUFFLEdBQUcsR0FBRyxHQUFHLElBQUksR0FBRyxHQUFHLElBQUksSUFBSSxHQUFHLEdBQUcsR0FBRyxHQUFHLElBQUksR0FBRyxJQUFJLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFH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QUFnQixJQUFJajVFLEVBQUUsQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLElBQUksS0FBSyxLQUFLLEtBQUssSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLElBQUksTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sSUFBSSxNQUFNLElBQUksTUFBTSxNQUFNLElBQUksTUFBTSxNQUFNLElBQUksTUFBTSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssSUFBSSxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLElBQUksSUFBSSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sS0FBSyxLQUFLLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxNQUFNLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLEtBQUssSUFBSSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxLQUFLLEtBQUssTUFBTSxNQUFNLElBQUksTUFBTSxNQUFNLE1BQU0sTUFBTSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssSUFBSSxLQUFLLEtBQUssTUFBTSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxJQUFJLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLE1BQU0sTUFBTSxNQUFNLE1BQU0sS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksTUFBTSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLEtBQUssSUFBSSxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLElBQUksS0FBSyxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLElBQUksSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLEtBQUssS0FBSyxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElB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LEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxTQUFTaWpDLElBQUssSUFBSXZqQyxFQUFFSSxLQUFLLFNBQVNqQyxFQUFFaUIsRUFBRWtCLEdBQUcsSUFBSSxJQUFJWCxFQUFFLEVBQUVBLEdBQUcsRUFBRVAsRUFBRUEsS0FBSyxFQUFFTyxJQUFJLEVBQUUsSUFBSVcsSUFBSSxPQUFPWCxJQUFJLEVBQUVLLEVBQUUrN0UsV0FBVyxTQUFTMzhFLEdBQUcsSUFBSWtCLEVBQUVYLEVBQUVYLEVBQUVkLEVB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RyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSTM1QyxFQUFHNDVDLFlBQVksQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEdBQUc1NUMsRUFBRzY1QyxVQUFVLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssTUFBTSxNQUFNLE9BQU83NUMsRUFBRzg1QyxPQUFPLFNBQVNqK0UsR0FBRyxPQUFPQSxFQUFFLElBQUlrQixFQUFFbEIsR0FBR2tCLEVBQUUsS0FBS2xCLElBQUksS0FBS21rQyxFQUFHKzVDLFlBQVksQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcvNUMsRUFBR2c2QyxZQUFZLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLElBQUloNkMsRUFBR2k2QyxhQUFhLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR2o2QyxFQUFHazZDLFNBQVMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJdGtDLEVBQUd1a0MsYUFBYSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFB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TyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxLQUFLLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLFNBQVMsR0FBRzdxRCxFQUFFLENBQUMsSUFBSTZxRCxZQUFZLENBQUMsT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sRUFBRSxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9B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LEdBQUssR0FBR244RixPQUFPaytGLEVBQVksU0FBU2wrRixPQUFPbThGLEVBQUssSUFGckRBLEVBQUssR0FBSytCLEdBTWQ3MUYsRUFBS25JLEtBQUtpOEYsTUFJUDl6RiIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNCk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IG1hcGJveGdsOyIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIi8qIVxuICogalF1ZXJ5IEphdmFTY3JpcHQgTGlicmFyeSB2My41LjFcbiAqIGh0dHBzOi8vanF1ZXJ5LmNvbS9cbiAqXG4gKiBJbmNsdWRlcyBTaXp6bGUuanNcbiAqIGh0dHBzOi8vc2l6emxlanMuY29tL1xuICpcbiAqIENvcHlyaWdodCBKUyBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cHM6Ly9qcXVlcnkub3JnL2xpY2Vuc2VcbiAqXG4gKiBEYXRlOiAyMDIwLTA1LTA0VDIyOjQ5WlxuICovXG4oIGZ1bmN0aW9uKCBnbG9iYWwsIGZhY3RvcnkgKSB7XG5cblx0XCJ1c2Ugc3RyaWN0XCI7XG5cblx0aWYgKCB0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vIEZvciBDb21tb25KUyBhbmQgQ29tbW9uSlMtbGlrZSBlbnZpcm9ubWVudHMgd2hlcmUgYSBwcm9wZXIgYHdpbmRvd2Bcblx0XHQvLyBpcyBwcmVzZW50LCBleGVjdXRlIHRoZSBmYWN0b3J5IGFuZCBnZXQgalF1ZXJ5LlxuXHRcdC8vIEZvciBlbnZpcm9ubWVudHMgdGhhdCBkbyBub3QgaGF2ZSBhIGB3aW5kb3dgIHdpdGggYSBgZG9jdW1lbnRgXG5cdFx0Ly8gKHN1Y2ggYXMgTm9kZS5qcyksIGV4cG9zZSBhIGZhY3RvcnkgYXMgbW9kdWxlLmV4cG9ydHMuXG5cdFx0Ly8gVGhpcyBhY2NlbnR1YXRlcyB0aGUgbmVlZCBmb3IgdGhlIGNyZWF0aW9uIG9mIGEgcmVhbCBgd2luZG93YC5cblx0XHQvLyBlLmcuIHZhciBqUXVlcnkgPSByZXF1aXJlKFwianF1ZXJ5XCIpKHdpbmRvdyk7XG5cdFx0Ly8gU2VlIHRpY2tldCAjMTQ1NDkgZm9yIG1vcmUgaW5mby5cblx0XHRtb2R1bGUuZXhwb3J0cyA9IGdsb2JhbC5kb2N1bWVudCA/XG5cdFx0XHRmYWN0b3J5KCBnbG9iYWwsIHRydWUgKSA6XG5cdFx0XHRmdW5jdGlvbiggdyApIHtcblx0XHRcdFx0aWYgKCAhdy5kb2N1bWVudCApIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoIFwialF1ZXJ5IHJlcXVpcmVzIGEgd2luZG93IHdpdGggYSBkb2N1bWVudFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGZhY3RvcnkoIHcgKTtcblx0XHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0ZmFjdG9yeSggZ2xvYmFsICk7XG5cdH1cblxuLy8gUGFzcyB0aGlzIGlmIHdpbmRvdyBpcyBub3QgZGVmaW5lZCB5ZXRcbn0gKSggdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uKCB3aW5kb3csIG5vR2xvYmFsICkge1xuXG4vLyBFZGdlIDw9IDEyIC0gMTMrLCBGaXJlZm94IDw9MTggLSA0NSssIElFIDEwIC0gMTEsIFNhZmFyaSA1LjEgLSA5KywgaU9TIDYgLSA5LjFcbi8vIHRocm93IGV4Y2VwdGlvbnMgd2hlbiBub24tc3RyaWN0IGNvZGUgKGUuZy4sIEFTUC5ORVQgNC41KSBhY2Nlc3NlcyBzdHJpY3QgbW9kZVxuLy8gYXJndW1lbnRzLmNhbGxlZS5jYWxsZXIgKHRyYWMtMTMzMzUpLiBCdXQgYXMgb2YgalF1ZXJ5IDMuMCAoMjAxNiksIHN0cmljdCBtb2RlIHNob3VsZCBiZSBjb21tb25cbi8vIGVub3VnaCB0aGF0IGFsbCBzdWNoIGF0dGVtcHRzIGFyZSBndWFyZGVkIGluIGEgdHJ5IGJsb2NrLlxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBhcnIgPSBbXTtcblxudmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuXG52YXIgc2xpY2UgPSBhcnIuc2xpY2U7XG5cbnZhciBmbGF0ID0gYXJyLmZsYXQgPyBmdW5jdGlvbiggYXJyYXkgKSB7XG5cdHJldHVybiBhcnIuZmxhdC5jYWxsKCBhcnJheSApO1xufSA6IGZ1bmN0aW9uKCBhcnJheSApIHtcblx0cmV0dXJuIGFyci5jb25jYXQuYXBwbHkoIFtdLCBhcnJheSApO1xufTtcblxuXG52YXIgcHVzaCA9IGFyci5wdXNoO1xuXG52YXIgaW5kZXhPZiA9IGFyci5pbmRleE9mO1xuXG52YXIgY2xhc3MydHlwZSA9IHt9O1xuXG52YXIgdG9TdHJpbmcgPSBjbGFzczJ0eXBlLnRvU3RyaW5nO1xuXG52YXIgaGFzT3duID0gY2xhc3MydHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIGZuVG9TdHJpbmcgPSBoYXNPd24udG9TdHJpbmc7XG5cbnZhciBPYmplY3RGdW5jdGlvblN0cmluZyA9IGZuVG9TdHJpbmcuY2FsbCggT2JqZWN0ICk7XG5cbnZhciBzdXBwb3J0ID0ge307XG5cbnZhciBpc0Z1bmN0aW9uID0gZnVuY3Rpb24gaXNGdW5jdGlvbiggb2JqICkge1xuXG4gICAgICAvLyBTdXBwb3J0OiBDaHJvbWUgPD01NywgRmlyZWZveCA8PTUyXG4gICAgICAvLyBJbiBzb21lIGJyb3dzZXJzLCB0eXBlb2YgcmV0dXJucyBcImZ1bmN0aW9uXCIgZm9yIEhUTUwgPG9iamVjdD4gZWxlbWVudHNcbiAgICAgIC8vIChpLmUuLCBgdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwib2JqZWN0XCIgKSA9PT0gXCJmdW5jdGlvblwiYCkuXG4gICAgICAvLyBXZSBkb24ndCB3YW50IHRvIGNsYXNzaWZ5ICphbnkqIERPTSBub2RlIGFzIGEgZnVuY3Rpb24uXG4gICAgICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBvYmoubm9kZVR5cGUgIT09IFwibnVtYmVyXCI7XG4gIH07XG5cblxudmFyIGlzV2luZG93ID0gZnVuY3Rpb24gaXNXaW5kb3coIG9iaiApIHtcblx0XHRyZXR1cm4gb2JqICE9IG51bGwgJiYgb2JqID09PSBvYmoud2luZG93O1xuXHR9O1xuXG5cbnZhciBkb2N1bWVudCA9IHdpbmRvdy5kb2N1bWVudDtcblxuXG5cblx0dmFyIHByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMgPSB7XG5cdFx0dHlwZTogdHJ1ZSxcblx0XHRzcmM6IHRydWUsXG5cdFx0bm9uY2U6IHRydWUsXG5cdFx0bm9Nb2R1bGU6IHRydWVcblx0fTtcblxuXHRmdW5jdGlvbiBET01FdmFsKCBjb2RlLCBub2RlLCBkb2MgKSB7XG5cdFx0ZG9jID0gZG9jIHx8IGRvY3VtZW50O1xuXG5cdFx0dmFyIGksIHZhbCxcblx0XHRcdHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KCBcInNjcmlwdFwiICk7XG5cblx0XHRzY3JpcHQudGV4dCA9IGNvZGU7XG5cdFx0aWYgKCBub2RlICkge1xuXHRcdFx0Zm9yICggaSBpbiBwcmVzZXJ2ZWRTY3JpcHRBdHRyaWJ1dGVzICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggNjQrLCBFZGdlIDE4K1xuXHRcdFx0XHQvLyBTb21lIGJyb3dzZXJzIGRvbid0IHN1cHBvcnQgdGhlIFwibm9uY2VcIiBwcm9wZXJ0eSBvbiBzY3JpcHRzLlxuXHRcdFx0XHQvLyBPbiB0aGUgb3RoZXIgaGFuZCwganVzdCB1c2luZyBgZ2V0QXR0cmlidXRlYCBpcyBub3QgZW5vdWdoIGFzXG5cdFx0XHRcdC8vIHRoZSBgbm9uY2VgIGF0dHJpYnV0ZSBpcyByZXNldCB0byBhbiBlbXB0eSBzdHJpbmcgd2hlbmV2ZXIgaXRcblx0XHRcdFx0Ly8gYmVjb21lcyBicm93c2luZy1jb250ZXh0IGNvbm5lY3RlZC5cblx0XHRcdFx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93aGF0d2cvaHRtbC9pc3N1ZXMvMjM2OVxuXHRcdFx0XHQvLyBTZWUgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jbm9uY2UtYXR0cmlidXRlc1xuXHRcdFx0XHQvLyBUaGUgYG5vZGUuZ2V0QXR0cmlidXRlYCBjaGVjayB3YXMgYWRkZWQgZm9yIHRoZSBzYWtlIG9mXG5cdFx0XHRcdC8vIGBqUXVlcnkuZ2xvYmFsRXZhbGAgc28gdGhhdCBpdCBjYW4gZmFrZSBhIG5vbmNlLWNvbnRhaW5pbmcgbm9kZVxuXHRcdFx0XHQvLyB2aWEgYW4gb2JqZWN0LlxuXHRcdFx0XHR2YWwgPSBub2RlWyBpIF0gfHwgbm9kZS5nZXRBdHRyaWJ1dGUgJiYgbm9kZS5nZXRBdHRyaWJ1dGUoIGkgKTtcblx0XHRcdFx0aWYgKCB2YWwgKSB7XG5cdFx0XHRcdFx0c2NyaXB0LnNldEF0dHJpYnV0ZSggaSwgdmFsICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZG9jLmhlYWQuYXBwZW5kQ2hpbGQoIHNjcmlwdCApLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHNjcmlwdCApO1xuXHR9XG5cblxuZnVuY3Rpb24gdG9UeXBlKCBvYmogKSB7XG5cdGlmICggb2JqID09IG51bGwgKSB7XG5cdFx0cmV0dXJuIG9iaiArIFwiXCI7XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9Mi4zIG9ubHkgKGZ1bmN0aW9uaXNoIFJlZ0V4cClcblx0cmV0dXJuIHR5cGVvZiBvYmogPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIG9iaiA9PT0gXCJmdW5jdGlvblwiID9cblx0XHRjbGFzczJ0eXBlWyB0b1N0cmluZy5jYWxsKCBvYmogKSBdIHx8IFwib2JqZWN0XCIgOlxuXHRcdHR5cGVvZiBvYmo7XG59XG4vKiBnbG9iYWwgU3ltYm9sICovXG4vLyBEZWZpbmluZyB0aGlzIGdsb2JhbCBpbiAuZXNsaW50cmMuanNvbiB3b3VsZCBjcmVhdGUgYSBkYW5nZXIgb2YgdXNpbmcgdGhlIGdsb2JhbFxuLy8gdW5ndWFyZGVkIGluIGFub3RoZXIgcGxhY2UsIGl0IHNlZW1zIHNhZmVyIHRvIGRlZmluZSBnbG9iYWwgb25seSBmb3IgdGhpcyBtb2R1bGVcblxuXG5cbnZhclxuXHR2ZXJzaW9uID0gXCIzLjUuMVwiLFxuXG5cdC8vIERlZmluZSBhIGxvY2FsIGNvcHkgb2YgalF1ZXJ5XG5cdGpRdWVyeSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblxuXHRcdC8vIFRoZSBqUXVlcnkgb2JqZWN0IGlzIGFjdHVhbGx5IGp1c3QgdGhlIGluaXQgY29uc3RydWN0b3IgJ2VuaGFuY2VkJ1xuXHRcdC8vIE5lZWQgaW5pdCBpZiBqUXVlcnkgaXMgY2FsbGVkIChqdXN0IGFsbG93IGVycm9yIHRvIGJlIHRocm93biBpZiBub3QgaW5jbHVkZWQpXG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuZm4uaW5pdCggc2VsZWN0b3IsIGNvbnRleHQgKTtcblx0fTtcblxualF1ZXJ5LmZuID0galF1ZXJ5LnByb3RvdHlwZSA9IHtcblxuXHQvLyBUaGUgY3VycmVudCB2ZXJzaW9uIG9mIGpRdWVyeSBiZWluZyB1c2VkXG5cdGpxdWVyeTogdmVyc2lvbixcblxuXHRjb25zdHJ1Y3RvcjogalF1ZXJ5LFxuXG5cdC8vIFRoZSBkZWZhdWx0IGxlbmd0aCBvZiBhIGpRdWVyeSBvYmplY3QgaXMgMFxuXHRsZW5ndGg6IDAsXG5cblx0dG9BcnJheTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNsaWNlLmNhbGwoIHRoaXMgKTtcblx0fSxcblxuXHQvLyBHZXQgdGhlIE50aCBlbGVtZW50IGluIHRoZSBtYXRjaGVkIGVsZW1lbnQgc2V0IE9SXG5cdC8vIEdldCB0aGUgd2hvbGUgbWF0Y2hlZCBlbGVtZW50IHNldCBhcyBhIGNsZWFuIGFycmF5XG5cdGdldDogZnVuY3Rpb24oIG51bSApIHtcblxuXHRcdC8vIFJldHVybiBhbGwgdGhlIGVsZW1lbnRzIGluIGEgY2xlYW4gYXJyYXlcblx0XHRpZiAoIG51bSA9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuIHNsaWNlLmNhbGwoIHRoaXMgKTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4ganVzdCB0aGUgb25lIGVsZW1lbnQgZnJvbSB0aGUgc2V0XG5cdFx0cmV0dXJuIG51bSA8IDAgPyB0aGlzWyBudW0gKyB0aGlzLmxlbmd0aCBdIDogdGhpc1sgbnVtIF07XG5cdH0sXG5cblx0Ly8gVGFrZSBhbiBhcnJheSBvZiBlbGVtZW50cyBhbmQgcHVzaCBpdCBvbnRvIHRoZSBzdGFja1xuXHQvLyAocmV0dXJuaW5nIHRoZSBuZXcgbWF0Y2hlZCBlbGVtZW50IHNldClcblx0cHVzaFN0YWNrOiBmdW5jdGlvbiggZWxlbXMgKSB7XG5cblx0XHQvLyBCdWlsZCBhIG5ldyBqUXVlcnkgbWF0Y2hlZCBlbGVtZW50IHNldFxuXHRcdHZhciByZXQgPSBqUXVlcnkubWVyZ2UoIHRoaXMuY29uc3RydWN0b3IoKSwgZWxlbXMgKTtcblxuXHRcdC8vIEFkZCB0aGUgb2xkIG9iamVjdCBvbnRvIHRoZSBzdGFjayAoYXMgYSByZWZlcmVuY2UpXG5cdFx0cmV0LnByZXZPYmplY3QgPSB0aGlzO1xuXG5cdFx0Ly8gUmV0dXJuIHRoZSBuZXdseS1mb3JtZWQgZWxlbWVudCBzZXRcblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXG5cdC8vIEV4ZWN1dGUgYSBjYWxsYmFjayBmb3IgZXZlcnkgZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBzZXQuXG5cdGVhY2g6IGZ1bmN0aW9uKCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmVhY2goIHRoaXMsIGNhbGxiYWNrICk7XG5cdH0sXG5cblx0bWFwOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkubWFwKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiBjYWxsYmFjay5jYWxsKCBlbGVtLCBpLCBlbGVtICk7XG5cdFx0fSApICk7XG5cdH0sXG5cblx0c2xpY2U6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggc2xpY2UuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApICk7XG5cdH0sXG5cblx0Zmlyc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAwICk7XG5cdH0sXG5cblx0bGFzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZXEoIC0xICk7XG5cdH0sXG5cblx0ZXZlbjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkuZ3JlcCggdGhpcywgZnVuY3Rpb24oIF9lbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuICggaSArIDEgKSAlIDI7XG5cdFx0fSApICk7XG5cdH0sXG5cblx0b2RkOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeS5ncmVwKCB0aGlzLCBmdW5jdGlvbiggX2VsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gaSAlIDI7XG5cdFx0fSApICk7XG5cdH0sXG5cblx0ZXE6IGZ1bmN0aW9uKCBpICkge1xuXHRcdHZhciBsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdGogPSAraSArICggaSA8IDAgPyBsZW4gOiAwICk7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqID49IDAgJiYgaiA8IGxlbiA/IFsgdGhpc1sgaiBdIF0gOiBbXSApO1xuXHR9LFxuXG5cdGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHJldk9iamVjdCB8fCB0aGlzLmNvbnN0cnVjdG9yKCk7XG5cdH0sXG5cblx0Ly8gRm9yIGludGVybmFsIHVzZSBvbmx5LlxuXHQvLyBCZWhhdmVzIGxpa2UgYW4gQXJyYXkncyBtZXRob2QsIG5vdCBsaWtlIGEgalF1ZXJ5IG1ldGhvZC5cblx0cHVzaDogcHVzaCxcblx0c29ydDogYXJyLnNvcnQsXG5cdHNwbGljZTogYXJyLnNwbGljZVxufTtcblxualF1ZXJ5LmV4dGVuZCA9IGpRdWVyeS5mbi5leHRlbmQgPSBmdW5jdGlvbigpIHtcblx0dmFyIG9wdGlvbnMsIG5hbWUsIHNyYywgY29weSwgY29weUlzQXJyYXksIGNsb25lLFxuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sgMCBdIHx8IHt9LFxuXHRcdGkgPSAxLFxuXHRcdGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cdFx0ZGVlcCA9IGZhbHNlO1xuXG5cdC8vIEhhbmRsZSBhIGRlZXAgY29weSBzaXR1YXRpb25cblx0aWYgKCB0eXBlb2YgdGFyZ2V0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRkZWVwID0gdGFyZ2V0O1xuXG5cdFx0Ly8gU2tpcCB0aGUgYm9vbGVhbiBhbmQgdGhlIHRhcmdldFxuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sgaSBdIHx8IHt9O1xuXHRcdGkrKztcblx0fVxuXG5cdC8vIEhhbmRsZSBjYXNlIHdoZW4gdGFyZ2V0IGlzIGEgc3RyaW5nIG9yIHNvbWV0aGluZyAocG9zc2libGUgaW4gZGVlcCBjb3B5KVxuXHRpZiAoIHR5cGVvZiB0YXJnZXQgIT09IFwib2JqZWN0XCIgJiYgIWlzRnVuY3Rpb24oIHRhcmdldCApICkge1xuXHRcdHRhcmdldCA9IHt9O1xuXHR9XG5cblx0Ly8gRXh0ZW5kIGpRdWVyeSBpdHNlbGYgaWYgb25seSBvbmUgYXJndW1lbnQgaXMgcGFzc2VkXG5cdGlmICggaSA9PT0gbGVuZ3RoICkge1xuXHRcdHRhcmdldCA9IHRoaXM7XG5cdFx0aS0tO1xuXHR9XG5cblx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cblx0XHQvLyBPbmx5IGRlYWwgd2l0aCBub24tbnVsbC91bmRlZmluZWQgdmFsdWVzXG5cdFx0aWYgKCAoIG9wdGlvbnMgPSBhcmd1bWVudHNbIGkgXSApICE9IG51bGwgKSB7XG5cblx0XHRcdC8vIEV4dGVuZCB0aGUgYmFzZSBvYmplY3Rcblx0XHRcdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcblx0XHRcdFx0Y29weSA9IG9wdGlvbnNbIG5hbWUgXTtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IE9iamVjdC5wcm90b3R5cGUgcG9sbHV0aW9uXG5cdFx0XHRcdC8vIFByZXZlbnQgbmV2ZXItZW5kaW5nIGxvb3Bcblx0XHRcdFx0aWYgKCBuYW1lID09PSBcIl9fcHJvdG9fX1wiIHx8IHRhcmdldCA9PT0gY29weSApIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJlY3Vyc2UgaWYgd2UncmUgbWVyZ2luZyBwbGFpbiBvYmplY3RzIG9yIGFycmF5c1xuXHRcdFx0XHRpZiAoIGRlZXAgJiYgY29weSAmJiAoIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb3B5ICkgfHxcblx0XHRcdFx0XHQoIGNvcHlJc0FycmF5ID0gQXJyYXkuaXNBcnJheSggY29weSApICkgKSApIHtcblx0XHRcdFx0XHRzcmMgPSB0YXJnZXRbIG5hbWUgXTtcblxuXHRcdFx0XHRcdC8vIEVuc3VyZSBwcm9wZXIgdHlwZSBmb3IgdGhlIHNvdXJjZSB2YWx1ZVxuXHRcdFx0XHRcdGlmICggY29weUlzQXJyYXkgJiYgIUFycmF5LmlzQXJyYXkoIHNyYyApICkge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBbXTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKCAhY29weUlzQXJyYXkgJiYgIWpRdWVyeS5pc1BsYWluT2JqZWN0KCBzcmMgKSApIHtcblx0XHRcdFx0XHRcdGNsb25lID0ge307XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGNsb25lID0gc3JjO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRjb3B5SXNBcnJheSA9IGZhbHNlO1xuXG5cdFx0XHRcdFx0Ly8gTmV2ZXIgbW92ZSBvcmlnaW5hbCBvYmplY3RzLCBjbG9uZSB0aGVtXG5cdFx0XHRcdFx0dGFyZ2V0WyBuYW1lIF0gPSBqUXVlcnkuZXh0ZW5kKCBkZWVwLCBjbG9uZSwgY29weSApO1xuXG5cdFx0XHRcdC8vIERvbid0IGJyaW5nIGluIHVuZGVmaW5lZCB2YWx1ZXNcblx0XHRcdFx0fSBlbHNlIGlmICggY29weSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0gY29weTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbW9kaWZpZWQgb2JqZWN0XG5cdHJldHVybiB0YXJnZXQ7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gVW5pcXVlIGZvciBlYWNoIGNvcHkgb2YgalF1ZXJ5IG9uIHRoZSBwYWdlXG5cdGV4cGFuZG86IFwialF1ZXJ5XCIgKyAoIHZlcnNpb24gKyBNYXRoLnJhbmRvbSgpICkucmVwbGFjZSggL1xcRC9nLCBcIlwiICksXG5cblx0Ly8gQXNzdW1lIGpRdWVyeSBpcyByZWFkeSB3aXRob3V0IHRoZSByZWFkeSBtb2R1bGVcblx0aXNSZWFkeTogdHJ1ZSxcblxuXHRlcnJvcjogZnVuY3Rpb24oIG1zZyApIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoIG1zZyApO1xuXHR9LFxuXG5cdG5vb3A6IGZ1bmN0aW9uKCkge30sXG5cblx0aXNQbGFpbk9iamVjdDogZnVuY3Rpb24oIG9iaiApIHtcblx0XHR2YXIgcHJvdG8sIEN0b3I7XG5cblx0XHQvLyBEZXRlY3Qgb2J2aW91cyBuZWdhdGl2ZXNcblx0XHQvLyBVc2UgdG9TdHJpbmcgaW5zdGVhZCBvZiBqUXVlcnkudHlwZSB0byBjYXRjaCBob3N0IG9iamVjdHNcblx0XHRpZiAoICFvYmogfHwgdG9TdHJpbmcuY2FsbCggb2JqICkgIT09IFwiW29iamVjdCBPYmplY3RdXCIgKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cHJvdG8gPSBnZXRQcm90byggb2JqICk7XG5cblx0XHQvLyBPYmplY3RzIHdpdGggbm8gcHJvdG90eXBlIChlLmcuLCBgT2JqZWN0LmNyZWF0ZSggbnVsbCApYCkgYXJlIHBsYWluXG5cdFx0aWYgKCAhcHJvdG8gKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHQvLyBPYmplY3RzIHdpdGggcHJvdG90eXBlIGFyZSBwbGFpbiBpZmYgdGhleSB3ZXJlIGNvbnN0cnVjdGVkIGJ5IGEgZ2xvYmFsIE9iamVjdCBmdW5jdGlvblxuXHRcdEN0b3IgPSBoYXNPd24uY2FsbCggcHJvdG8sIFwiY29uc3RydWN0b3JcIiApICYmIHByb3RvLmNvbnN0cnVjdG9yO1xuXHRcdHJldHVybiB0eXBlb2YgQ3RvciA9PT0gXCJmdW5jdGlvblwiICYmIGZuVG9TdHJpbmcuY2FsbCggQ3RvciApID09PSBPYmplY3RGdW5jdGlvblN0cmluZztcblx0fSxcblxuXHRpc0VtcHR5T2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xuXHRcdHZhciBuYW1lO1xuXG5cdFx0Zm9yICggbmFtZSBpbiBvYmogKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiB0cnVlO1xuXHR9LFxuXG5cdC8vIEV2YWx1YXRlcyBhIHNjcmlwdCBpbiBhIHByb3ZpZGVkIGNvbnRleHQ7IGZhbGxzIGJhY2sgdG8gdGhlIGdsb2JhbCBvbmVcblx0Ly8gaWYgbm90IHNwZWNpZmllZC5cblx0Z2xvYmFsRXZhbDogZnVuY3Rpb24oIGNvZGUsIG9wdGlvbnMsIGRvYyApIHtcblx0XHRET01FdmFsKCBjb2RlLCB7IG5vbmNlOiBvcHRpb25zICYmIG9wdGlvbnMubm9uY2UgfSwgZG9jICk7XG5cdH0sXG5cblx0ZWFjaDogZnVuY3Rpb24oIG9iaiwgY2FsbGJhY2sgKSB7XG5cdFx0dmFyIGxlbmd0aCwgaSA9IDA7XG5cblx0XHRpZiAoIGlzQXJyYXlMaWtlKCBvYmogKSApIHtcblx0XHRcdGxlbmd0aCA9IG9iai5sZW5ndGg7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9yICggaSBpbiBvYmogKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG9iajtcblx0fSxcblxuXHQvLyByZXN1bHRzIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1ha2VBcnJheTogZnVuY3Rpb24oIGFyciwgcmVzdWx0cyApIHtcblx0XHR2YXIgcmV0ID0gcmVzdWx0cyB8fCBbXTtcblxuXHRcdGlmICggYXJyICE9IG51bGwgKSB7XG5cdFx0XHRpZiAoIGlzQXJyYXlMaWtlKCBPYmplY3QoIGFyciApICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggcmV0LFxuXHRcdFx0XHRcdHR5cGVvZiBhcnIgPT09IFwic3RyaW5nXCIgP1xuXHRcdFx0XHRcdFsgYXJyIF0gOiBhcnJcblx0XHRcdFx0KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHB1c2guY2FsbCggcmV0LCBhcnIgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXG5cdGluQXJyYXk6IGZ1bmN0aW9uKCBlbGVtLCBhcnIsIGkgKSB7XG5cdFx0cmV0dXJuIGFyciA9PSBudWxsID8gLTEgOiBpbmRleE9mLmNhbGwoIGFyciwgZWxlbSwgaSApO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdG1lcmdlOiBmdW5jdGlvbiggZmlyc3QsIHNlY29uZCApIHtcblx0XHR2YXIgbGVuID0gK3NlY29uZC5sZW5ndGgsXG5cdFx0XHRqID0gMCxcblx0XHRcdGkgPSBmaXJzdC5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IGogPCBsZW47IGorKyApIHtcblx0XHRcdGZpcnN0WyBpKysgXSA9IHNlY29uZFsgaiBdO1xuXHRcdH1cblxuXHRcdGZpcnN0Lmxlbmd0aCA9IGk7XG5cblx0XHRyZXR1cm4gZmlyc3Q7XG5cdH0sXG5cblx0Z3JlcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgaW52ZXJ0ICkge1xuXHRcdHZhciBjYWxsYmFja0ludmVyc2UsXG5cdFx0XHRtYXRjaGVzID0gW10sXG5cdFx0XHRpID0gMCxcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aCxcblx0XHRcdGNhbGxiYWNrRXhwZWN0ID0gIWludmVydDtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCBvbmx5IHNhdmluZyB0aGUgaXRlbXNcblx0XHQvLyB0aGF0IHBhc3MgdGhlIHZhbGlkYXRvciBmdW5jdGlvblxuXHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0Y2FsbGJhY2tJbnZlcnNlID0gIWNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpICk7XG5cdFx0XHRpZiAoIGNhbGxiYWNrSW52ZXJzZSAhPT0gY2FsbGJhY2tFeHBlY3QgKSB7XG5cdFx0XHRcdG1hdGNoZXMucHVzaCggZWxlbXNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBtYXRjaGVzO1xuXHR9LFxuXG5cdC8vIGFyZyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seVxuXHRtYXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGFyZyApIHtcblx0XHR2YXIgbGVuZ3RoLCB2YWx1ZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0cmV0ID0gW107XG5cblx0XHQvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgdHJhbnNsYXRpbmcgZWFjaCBvZiB0aGUgaXRlbXMgdG8gdGhlaXIgbmV3IHZhbHVlc1xuXHRcdGlmICggaXNBcnJheUxpa2UoIGVsZW1zICkgKSB7XG5cdFx0XHRsZW5ndGggPSBlbGVtcy5sZW5ndGg7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7XG5cblx0XHRcdFx0aWYgKCB2YWx1ZSAhPSBudWxsICkge1xuXHRcdFx0XHRcdHJldC5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBHbyB0aHJvdWdoIGV2ZXJ5IGtleSBvbiB0aGUgb2JqZWN0LFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBpIGluIGVsZW1zICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXG5cdFx0cmV0dXJuIGZsYXQoIHJldCApO1xuXHR9LFxuXG5cdC8vIEEgZ2xvYmFsIEdVSUQgY291bnRlciBmb3Igb2JqZWN0c1xuXHRndWlkOiAxLFxuXG5cdC8vIGpRdWVyeS5zdXBwb3J0IGlzIG5vdCB1c2VkIGluIENvcmUgYnV0IG90aGVyIHByb2plY3RzIGF0dGFjaCB0aGVpclxuXHQvLyBwcm9wZXJ0aWVzIHRvIGl0IHNvIGl0IG5lZWRzIHRvIGV4aXN0LlxuXHRzdXBwb3J0OiBzdXBwb3J0XG59ICk7XG5cbmlmICggdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICkge1xuXHRqUXVlcnkuZm5bIFN5bWJvbC5pdGVyYXRvciBdID0gYXJyWyBTeW1ib2wuaXRlcmF0b3IgXTtcbn1cblxuLy8gUG9wdWxhdGUgdGhlIGNsYXNzMnR5cGUgbWFwXG5qUXVlcnkuZWFjaCggXCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIFN5bWJvbFwiLnNwbGl0KCBcIiBcIiApLFxuZnVuY3Rpb24oIF9pLCBuYW1lICkge1xuXHRjbGFzczJ0eXBlWyBcIltvYmplY3QgXCIgKyBuYW1lICsgXCJdXCIgXSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbn0gKTtcblxuZnVuY3Rpb24gaXNBcnJheUxpa2UoIG9iaiApIHtcblxuXHQvLyBTdXBwb3J0OiByZWFsIGlPUyA4LjIgb25seSAobm90IHJlcHJvZHVjaWJsZSBpbiBzaW11bGF0b3IpXG5cdC8vIGBpbmAgY2hlY2sgdXNlZCB0byBwcmV2ZW50IEpJVCBlcnJvciAoZ2gtMjE0NSlcblx0Ly8gaGFzT3duIGlzbid0IHVzZWQgaGVyZSBkdWUgdG8gZmFsc2UgbmVnYXRpdmVzXG5cdC8vIHJlZ2FyZGluZyBOb2RlbGlzdCBsZW5ndGggaW4gSUVcblx0dmFyIGxlbmd0aCA9ICEhb2JqICYmIFwibGVuZ3RoXCIgaW4gb2JqICYmIG9iai5sZW5ndGgsXG5cdFx0dHlwZSA9IHRvVHlwZSggb2JqICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBvYmogKSB8fCBpc1dpbmRvdyggb2JqICkgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIHR5cGUgPT09IFwiYXJyYXlcIiB8fCBsZW5ndGggPT09IDAgfHxcblx0XHR0eXBlb2YgbGVuZ3RoID09PSBcIm51bWJlclwiICYmIGxlbmd0aCA+IDAgJiYgKCBsZW5ndGggLSAxICkgaW4gb2JqO1xufVxudmFyIFNpenpsZSA9XG4vKiFcbiAqIFNpenpsZSBDU1MgU2VsZWN0b3IgRW5naW5lIHYyLjMuNVxuICogaHR0cHM6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pzLmZvdW5kYXRpb24vXG4gKlxuICogRGF0ZTogMjAyMC0wMy0xNFxuICovXG4oIGZ1bmN0aW9uKCB3aW5kb3cgKSB7XG52YXIgaSxcblx0c3VwcG9ydCxcblx0RXhwcixcblx0Z2V0VGV4dCxcblx0aXNYTUwsXG5cdHRva2VuaXplLFxuXHRjb21waWxlLFxuXHRzZWxlY3QsXG5cdG91dGVybW9zdENvbnRleHQsXG5cdHNvcnRJbnB1dCxcblx0aGFzRHVwbGljYXRlLFxuXG5cdC8vIExvY2FsIGRvY3VtZW50IHZhcnNcblx0c2V0RG9jdW1lbnQsXG5cdGRvY3VtZW50LFxuXHRkb2NFbGVtLFxuXHRkb2N1bWVudElzSFRNTCxcblx0cmJ1Z2d5UVNBLFxuXHRyYnVnZ3lNYXRjaGVzLFxuXHRtYXRjaGVzLFxuXHRjb250YWlucyxcblxuXHQvLyBJbnN0YW5jZS1zcGVjaWZpYyBkYXRhXG5cdGV4cGFuZG8gPSBcInNpenpsZVwiICsgMSAqIG5ldyBEYXRlKCksXG5cdHByZWZlcnJlZERvYyA9IHdpbmRvdy5kb2N1bWVudCxcblx0ZGlycnVucyA9IDAsXG5cdGRvbmUgPSAwLFxuXHRjbGFzc0NhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0dG9rZW5DYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdGNvbXBpbGVyQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRub25uYXRpdmVTZWxlY3RvckNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0c29ydE9yZGVyID0gZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHR9XG5cdFx0cmV0dXJuIDA7XG5cdH0sXG5cblx0Ly8gSW5zdGFuY2UgbWV0aG9kc1xuXHRoYXNPd24gPSAoIHt9ICkuaGFzT3duUHJvcGVydHksXG5cdGFyciA9IFtdLFxuXHRwb3AgPSBhcnIucG9wLFxuXHRwdXNoTmF0aXZlID0gYXJyLnB1c2gsXG5cdHB1c2ggPSBhcnIucHVzaCxcblx0c2xpY2UgPSBhcnIuc2xpY2UsXG5cblx0Ly8gVXNlIGEgc3RyaXBwZWQtZG93biBpbmRleE9mIGFzIGl0J3MgZmFzdGVyIHRoYW4gbmF0aXZlXG5cdC8vIGh0dHBzOi8vanNwZXJmLmNvbS90aG9yLWluZGV4b2YtdnMtZm9yLzVcblx0aW5kZXhPZiA9IGZ1bmN0aW9uKCBsaXN0LCBlbGVtICkge1xuXHRcdHZhciBpID0gMCxcblx0XHRcdGxlbiA9IGxpc3QubGVuZ3RoO1xuXHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0aWYgKCBsaXN0WyBpIF0gPT09IGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gLTE7XG5cdH0sXG5cblx0Ym9vbGVhbnMgPSBcImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxcIiArXG5cdFx0XCJpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkXCIsXG5cblx0Ly8gUmVndWxhciBleHByZXNzaW9uc1xuXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtc2VsZWN0b3JzLyN3aGl0ZXNwYWNlXG5cdHdoaXRlc3BhY2UgPSBcIltcXFxceDIwXFxcXHRcXFxcclxcXFxuXFxcXGZdXCIsXG5cblx0Ly8gaHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy1zeW50YXgtMy8jaWRlbnQtdG9rZW4tZGlhZ3JhbVxuXHRpZGVudGlmaWVyID0gXCIoPzpcXFxcXFxcXFtcXFxcZGEtZkEtRl17MSw2fVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XCI/fFxcXFxcXFxcW15cXFxcclxcXFxuXFxcXGZdfFtcXFxcdy1dfFteXFwwLVxcXFx4N2ZdKStcIixcblxuXHQvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnNcblx0YXR0cmlidXRlcyA9IFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooXCIgKyBpZGVudGlmaWVyICsgXCIpKD86XCIgKyB3aGl0ZXNwYWNlICtcblxuXHRcdC8vIE9wZXJhdG9yIChjYXB0dXJlIDIpXG5cdFx0XCIqKFsqXiR8IX5dPz0pXCIgKyB3aGl0ZXNwYWNlICtcblxuXHRcdC8vIFwiQXR0cmlidXRlIHZhbHVlcyBtdXN0IGJlIENTUyBpZGVudGlmaWVycyBbY2FwdHVyZSA1XVxuXHRcdC8vIG9yIHN0cmluZ3MgW2NhcHR1cmUgMyBvciBjYXB0dXJlIDRdXCJcblx0XHRcIiooPzonKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCJ8KFwiICsgaWRlbnRpZmllciArIFwiKSl8KVwiICtcblx0XHR3aGl0ZXNwYWNlICsgXCIqXFxcXF1cIixcblxuXHRwc2V1ZG9zID0gXCI6KFwiICsgaWRlbnRpZmllciArIFwiKSg/OlxcXFwoKFwiICtcblxuXHRcdC8vIFRvIHJlZHVjZSB0aGUgbnVtYmVyIG9mIHNlbGVjdG9ycyBuZWVkaW5nIHRva2VuaXplIGluIHRoZSBwcmVGaWx0ZXIsIHByZWZlciBhcmd1bWVudHM6XG5cdFx0Ly8gMS4gcXVvdGVkIChjYXB0dXJlIDM7IGNhcHR1cmUgNCBvciBjYXB0dXJlIDUpXG5cdFx0XCIoJygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwiKXxcIiArXG5cblx0XHQvLyAyLiBzaW1wbGUgKGNhcHR1cmUgNilcblx0XHRcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpW1xcXFxdXXxcIiArIGF0dHJpYnV0ZXMgKyBcIikqKXxcIiArXG5cblx0XHQvLyAzLiBhbnl0aGluZyBlbHNlIChjYXB0dXJlIDIpXG5cdFx0XCIuKlwiICtcblx0XHRcIilcXFxcKXwpXCIsXG5cblx0Ly8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlclxuXHRyd2hpdGVzcGFjZSA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyBcIitcIiwgXCJnXCIgKSxcblx0cnRyaW0gPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIit8KCg/Ol58W15cXFxcXFxcXF0pKD86XFxcXFxcXFwuKSopXCIgK1xuXHRcdHdoaXRlc3BhY2UgKyBcIiskXCIsIFwiZ1wiICksXG5cblx0cmNvbW1hID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqLFwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXG5cdHJjb21iaW5hdG9ycyA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKihbPit+XXxcIiArIHdoaXRlc3BhY2UgKyBcIilcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFwiKlwiICksXG5cdHJkZXNjZW5kID0gbmV3IFJlZ0V4cCggd2hpdGVzcGFjZSArIFwifD5cIiApLFxuXG5cdHJwc2V1ZG8gPSBuZXcgUmVnRXhwKCBwc2V1ZG9zICksXG5cdHJpZGVudGlmaWVyID0gbmV3IFJlZ0V4cCggXCJeXCIgKyBpZGVudGlmaWVyICsgXCIkXCIgKSxcblxuXHRtYXRjaEV4cHIgPSB7XG5cdFx0XCJJRFwiOiBuZXcgUmVnRXhwKCBcIl4jKFwiICsgaWRlbnRpZmllciArIFwiKVwiICksXG5cdFx0XCJDTEFTU1wiOiBuZXcgUmVnRXhwKCBcIl5cXFxcLihcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiVEFHXCI6IG5ldyBSZWdFeHAoIFwiXihcIiArIGlkZW50aWZpZXIgKyBcInxbKl0pXCIgKSxcblx0XHRcIkFUVFJcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBhdHRyaWJ1dGVzICksXG5cdFx0XCJQU0VVRE9cIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBwc2V1ZG9zICksXG5cdFx0XCJDSElMRFwiOiBuZXcgUmVnRXhwKCBcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIgK1xuXHRcdFx0d2hpdGVzcGFjZSArIFwiKihldmVufG9kZHwoKFsrLV18KShcXFxcZCopbnwpXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86KFsrLV18KVwiICtcblx0XHRcdHdoaXRlc3BhY2UgKyBcIiooXFxcXGQrKXwpKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfClcIiwgXCJpXCIgKSxcblx0XHRcImJvb2xcIjogbmV3IFJlZ0V4cCggXCJeKD86XCIgKyBib29sZWFucyArIFwiKSRcIiwgXCJpXCIgKSxcblxuXHRcdC8vIEZvciB1c2UgaW4gbGlicmFyaWVzIGltcGxlbWVudGluZyAuaXMoKVxuXHRcdC8vIFdlIHVzZSB0aGlzIGZvciBQT1MgbWF0Y2hpbmcgaW4gYHNlbGVjdGBcblx0XHRcIm5lZWRzQ29udGV4dFwiOiBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooKD86LVxcXFxkKT9cXFxcZCopXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KSg/PVteLV18JClcIiwgXCJpXCIgKVxuXHR9LFxuXG5cdHJodG1sID0gL0hUTUwkL2ksXG5cdHJpbnB1dHMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyaGVhZGVyID0gL15oXFxkJC9pLFxuXG5cdHJuYXRpdmUgPSAvXltee10rXFx7XFxzKlxcW25hdGl2ZSBcXHcvLFxuXG5cdC8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9yc1xuXHRycXVpY2tFeHByID0gL14oPzojKFtcXHctXSspfChcXHcrKXxcXC4oW1xcdy1dKykpJC8sXG5cblx0cnNpYmxpbmcgPSAvWyt+XS8sXG5cblx0Ly8gQ1NTIGVzY2FwZXNcblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVyc1xuXHRydW5lc2NhcGUgPSBuZXcgUmVnRXhwKCBcIlxcXFxcXFxcW1xcXFxkYS1mQS1GXXsxLDZ9XCIgKyB3aGl0ZXNwYWNlICsgXCI/fFxcXFxcXFxcKFteXFxcXHJcXFxcblxcXFxmXSlcIiwgXCJnXCIgKSxcblx0ZnVuZXNjYXBlID0gZnVuY3Rpb24oIGVzY2FwZSwgbm9uSGV4ICkge1xuXHRcdHZhciBoaWdoID0gXCIweFwiICsgZXNjYXBlLnNsaWNlKCAxICkgLSAweDEwMDAwO1xuXG5cdFx0cmV0dXJuIG5vbkhleCA/XG5cblx0XHRcdC8vIFN0cmlwIHRoZSBiYWNrc2xhc2ggcHJlZml4IGZyb20gYSBub24taGV4IGVzY2FwZSBzZXF1ZW5jZVxuXHRcdFx0bm9uSGV4IDpcblxuXHRcdFx0Ly8gUmVwbGFjZSBhIGhleGFkZWNpbWFsIGVzY2FwZSBzZXF1ZW5jZSB3aXRoIHRoZSBlbmNvZGVkIFVuaWNvZGUgY29kZSBwb2ludFxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD0xMStcblx0XHRcdC8vIEZvciB2YWx1ZXMgb3V0c2lkZSB0aGUgQmFzaWMgTXVsdGlsaW5ndWFsIFBsYW5lIChCTVApLCBtYW51YWxseSBjb25zdHJ1Y3QgYVxuXHRcdFx0Ly8gc3Vycm9nYXRlIHBhaXJcblx0XHRcdGhpZ2ggPCAwID9cblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCArIDB4MTAwMDAgKSA6XG5cdFx0XHRcdFN0cmluZy5mcm9tQ2hhckNvZGUoIGhpZ2ggPj4gMTAgfCAweEQ4MDAsIGhpZ2ggJiAweDNGRiB8IDB4REMwMCApO1xuXHR9LFxuXG5cdC8vIENTUyBzdHJpbmcvaWRlbnRpZmllciBzZXJpYWxpemF0aW9uXG5cdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jY29tbW9uLXNlcmlhbGl6aW5nLWlkaW9tc1xuXHRyY3NzZXNjYXBlID0gLyhbXFwwLVxceDFmXFx4N2ZdfF4tP1xcZCl8Xi0kfFteXFwwLVxceDFmXFx4N2YtXFx1RkZGRlxcdy1dL2csXG5cdGZjc3Nlc2NhcGUgPSBmdW5jdGlvbiggY2gsIGFzQ29kZVBvaW50ICkge1xuXHRcdGlmICggYXNDb2RlUG9pbnQgKSB7XG5cblx0XHRcdC8vIFUrMDAwMCBOVUxMIGJlY29tZXMgVStGRkZEIFJFUExBQ0VNRU5UIENIQVJBQ1RFUlxuXHRcdFx0aWYgKCBjaCA9PT0gXCJcXDBcIiApIHtcblx0XHRcdFx0cmV0dXJuIFwiXFx1RkZGRFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb250cm9sIGNoYXJhY3RlcnMgYW5kIChkZXBlbmRlbnQgdXBvbiBwb3NpdGlvbikgbnVtYmVycyBnZXQgZXNjYXBlZCBhcyBjb2RlIHBvaW50c1xuXHRcdFx0cmV0dXJuIGNoLnNsaWNlKCAwLCAtMSApICsgXCJcXFxcXCIgK1xuXHRcdFx0XHRjaC5jaGFyQ29kZUF0KCBjaC5sZW5ndGggLSAxICkudG9TdHJpbmcoIDE2ICkgKyBcIiBcIjtcblx0XHR9XG5cblx0XHQvLyBPdGhlciBwb3RlbnRpYWxseS1zcGVjaWFsIEFTQ0lJIGNoYXJhY3RlcnMgZ2V0IGJhY2tzbGFzaC1lc2NhcGVkXG5cdFx0cmV0dXJuIFwiXFxcXFwiICsgY2g7XG5cdH0sXG5cblx0Ly8gVXNlZCBmb3IgaWZyYW1lc1xuXHQvLyBTZWUgc2V0RG9jdW1lbnQoKVxuXHQvLyBSZW1vdmluZyB0aGUgZnVuY3Rpb24gd3JhcHBlciBjYXVzZXMgYSBcIlBlcm1pc3Npb24gRGVuaWVkXCJcblx0Ly8gZXJyb3IgaW4gSUVcblx0dW5sb2FkSGFuZGxlciA9IGZ1bmN0aW9uKCkge1xuXHRcdHNldERvY3VtZW50KCk7XG5cdH0sXG5cblx0aW5EaXNhYmxlZEZpZWxkc2V0ID0gYWRkQ29tYmluYXRvcihcblx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSB0cnVlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJmaWVsZHNldFwiO1xuXHRcdH0sXG5cdFx0eyBkaXI6IFwicGFyZW50Tm9kZVwiLCBuZXh0OiBcImxlZ2VuZFwiIH1cblx0KTtcblxuLy8gT3B0aW1pemUgZm9yIHB1c2guYXBwbHkoIF8sIE5vZGVMaXN0IClcbnRyeSB7XG5cdHB1c2guYXBwbHkoXG5cdFx0KCBhcnIgPSBzbGljZS5jYWxsKCBwcmVmZXJyZWREb2MuY2hpbGROb2RlcyApICksXG5cdFx0cHJlZmVycmVkRG9jLmNoaWxkTm9kZXNcblx0KTtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkPDQuMFxuXHQvLyBEZXRlY3Qgc2lsZW50bHkgZmFpbGluZyBwdXNoLmFwcGx5XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtZXhwcmVzc2lvbnNcblx0YXJyWyBwcmVmZXJyZWREb2MuY2hpbGROb2Rlcy5sZW5ndGggXS5ub2RlVHlwZTtcbn0gY2F0Y2ggKCBlICkge1xuXHRwdXNoID0geyBhcHBseTogYXJyLmxlbmd0aCA/XG5cblx0XHQvLyBMZXZlcmFnZSBzbGljZSBpZiBwb3NzaWJsZVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHB1c2hOYXRpdmUuYXBwbHkoIHRhcmdldCwgc2xpY2UuY2FsbCggZWxzICkgKTtcblx0XHR9IDpcblxuXHRcdC8vIFN1cHBvcnQ6IElFPDlcblx0XHQvLyBPdGhlcndpc2UgYXBwZW5kIGRpcmVjdGx5XG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0dmFyIGogPSB0YXJnZXQubGVuZ3RoLFxuXHRcdFx0XHRpID0gMDtcblxuXHRcdFx0Ly8gQ2FuJ3QgdHJ1c3QgTm9kZUxpc3QubGVuZ3RoXG5cdFx0XHR3aGlsZSAoICggdGFyZ2V0WyBqKysgXSA9IGVsc1sgaSsrIF0gKSApIHt9XG5cdFx0XHR0YXJnZXQubGVuZ3RoID0gaiAtIDE7XG5cdFx0fVxuXHR9O1xufVxuXG5mdW5jdGlvbiBTaXp6bGUoIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkge1xuXHR2YXIgbSwgaSwgZWxlbSwgbmlkLCBtYXRjaCwgZ3JvdXBzLCBuZXdTZWxlY3Rvcixcblx0XHRuZXdDb250ZXh0ID0gY29udGV4dCAmJiBjb250ZXh0Lm93bmVyRG9jdW1lbnQsXG5cblx0XHQvLyBub2RlVHlwZSBkZWZhdWx0cyB0byA5LCBzaW5jZSBjb250ZXh0IGRlZmF1bHRzIHRvIGRvY3VtZW50XG5cdFx0bm9kZVR5cGUgPSBjb250ZXh0ID8gY29udGV4dC5ub2RlVHlwZSA6IDk7XG5cblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XG5cblx0Ly8gUmV0dXJuIGVhcmx5IGZyb20gY2FsbHMgd2l0aCBpbnZhbGlkIHNlbGVjdG9yIG9yIGNvbnRleHRcblx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgfHwgIXNlbGVjdG9yIHx8XG5cdFx0bm9kZVR5cGUgIT09IDEgJiYgbm9kZVR5cGUgIT09IDkgJiYgbm9kZVR5cGUgIT09IDExICkge1xuXG5cdFx0cmV0dXJuIHJlc3VsdHM7XG5cdH1cblxuXHQvLyBUcnkgdG8gc2hvcnRjdXQgZmluZCBvcGVyYXRpb25zIChhcyBvcHBvc2VkIHRvIGZpbHRlcnMpIGluIEhUTUwgZG9jdW1lbnRzXG5cdGlmICggIXNlZWQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcblx0XHRjb250ZXh0ID0gY29udGV4dCB8fCBkb2N1bWVudDtcblxuXHRcdGlmICggZG9jdW1lbnRJc0hUTUwgKSB7XG5cblx0XHRcdC8vIElmIHRoZSBzZWxlY3RvciBpcyBzdWZmaWNpZW50bHkgc2ltcGxlLCB0cnkgdXNpbmcgYSBcImdldCpCeSpcIiBET00gbWV0aG9kXG5cdFx0XHQvLyAoZXhjZXB0aW5nIERvY3VtZW50RnJhZ21lbnQgY29udGV4dCwgd2hlcmUgdGhlIG1ldGhvZHMgZG9uJ3QgZXhpc3QpXG5cdFx0XHRpZiAoIG5vZGVUeXBlICE9PSAxMSAmJiAoIG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApICkgKSB7XG5cblx0XHRcdFx0Ly8gSUQgc2VsZWN0b3Jcblx0XHRcdFx0aWYgKCAoIG0gPSBtYXRjaFsgMSBdICkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb2N1bWVudCBjb250ZXh0XG5cdFx0XHRcdFx0aWYgKCBub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRcdGlmICggKCBlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxuXHRcdFx0XHRcdFx0XHRpZiAoIGVsZW0uaWQgPT09IG0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRWxlbWVudCBjb250ZXh0XG5cdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXG5cdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRpZiAoIG5ld0NvbnRleHQgJiYgKCBlbGVtID0gbmV3Q29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApICkgJiZcblx0XHRcdFx0XHRcdFx0Y29udGFpbnMoIGNvbnRleHQsIGVsZW0gKSAmJlxuXHRcdFx0XHRcdFx0XHRlbGVtLmlkID09PSBtICkge1xuXG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHlwZSBzZWxlY3RvclxuXHRcdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFsgMiBdICkge1xuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHNlbGVjdG9yICkgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0XHQvLyBDbGFzcyBzZWxlY3RvclxuXHRcdFx0XHR9IGVsc2UgaWYgKCAoIG0gPSBtYXRjaFsgMyBdICkgJiYgc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICYmXG5cdFx0XHRcdFx0Y29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBtICkgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBUYWtlIGFkdmFudGFnZSBvZiBxdWVyeVNlbGVjdG9yQWxsXG5cdFx0XHRpZiAoIHN1cHBvcnQucXNhICYmXG5cdFx0XHRcdCFub25uYXRpdmVTZWxlY3RvckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF0gJiZcblx0XHRcdFx0KCAhcmJ1Z2d5UVNBIHx8ICFyYnVnZ3lRU0EudGVzdCggc2VsZWN0b3IgKSApICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgOCBvbmx5XG5cdFx0XHRcdC8vIEV4Y2x1ZGUgb2JqZWN0IGVsZW1lbnRzXG5cdFx0XHRcdCggbm9kZVR5cGUgIT09IDEgfHwgY29udGV4dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSBcIm9iamVjdFwiICkgKSB7XG5cblx0XHRcdFx0bmV3U2VsZWN0b3IgPSBzZWxlY3Rvcjtcblx0XHRcdFx0bmV3Q29udGV4dCA9IGNvbnRleHQ7XG5cblx0XHRcdFx0Ly8gcVNBIGNvbnNpZGVycyBlbGVtZW50cyBvdXRzaWRlIGEgc2NvcGluZyByb290IHdoZW4gZXZhbHVhdGluZyBjaGlsZCBvclxuXHRcdFx0XHQvLyBkZXNjZW5kYW50IGNvbWJpbmF0b3JzLCB3aGljaCBpcyBub3Qgd2hhdCB3ZSB3YW50LlxuXHRcdFx0XHQvLyBJbiBzdWNoIGNhc2VzLCB3ZSB3b3JrIGFyb3VuZCB0aGUgYmVoYXZpb3IgYnkgcHJlZml4aW5nIGV2ZXJ5IHNlbGVjdG9yIGluIHRoZVxuXHRcdFx0XHQvLyBsaXN0IHdpdGggYW4gSUQgc2VsZWN0b3IgcmVmZXJlbmNpbmcgdGhlIHNjb3BlIGNvbnRleHQuXG5cdFx0XHRcdC8vIFRoZSB0ZWNobmlxdWUgaGFzIHRvIGJlIHVzZWQgYXMgd2VsbCB3aGVuIGEgbGVhZGluZyBjb21iaW5hdG9yIGlzIHVzZWRcblx0XHRcdFx0Ly8gYXMgc3VjaCBzZWxlY3RvcnMgYXJlIG5vdCByZWNvZ25pemVkIGJ5IHF1ZXJ5U2VsZWN0b3JBbGwuXG5cdFx0XHRcdC8vIFRoYW5rcyB0byBBbmRyZXcgRHVwb250IGZvciB0aGlzIHRlY2huaXF1ZS5cblx0XHRcdFx0aWYgKCBub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHRcdCggcmRlc2NlbmQudGVzdCggc2VsZWN0b3IgKSB8fCByY29tYmluYXRvcnMudGVzdCggc2VsZWN0b3IgKSApICkge1xuXG5cdFx0XHRcdFx0Ly8gRXhwYW5kIGNvbnRleHQgZm9yIHNpYmxpbmcgc2VsZWN0b3JzXG5cdFx0XHRcdFx0bmV3Q29udGV4dCA9IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8XG5cdFx0XHRcdFx0XHRjb250ZXh0O1xuXG5cdFx0XHRcdFx0Ly8gV2UgY2FuIHVzZSA6c2NvcGUgaW5zdGVhZCBvZiB0aGUgSUQgaGFjayBpZiB0aGUgYnJvd3NlclxuXHRcdFx0XHRcdC8vIHN1cHBvcnRzIGl0ICYgaWYgd2UncmUgbm90IGNoYW5naW5nIHRoZSBjb250ZXh0LlxuXHRcdFx0XHRcdGlmICggbmV3Q29udGV4dCAhPT0gY29udGV4dCB8fCAhc3VwcG9ydC5zY29wZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gQ2FwdHVyZSB0aGUgY29udGV4dCBJRCwgc2V0dGluZyBpdCBmaXJzdCBpZiBuZWNlc3Nhcnlcblx0XHRcdFx0XHRcdGlmICggKCBuaWQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZSggXCJpZFwiICkgKSApIHtcblx0XHRcdFx0XHRcdFx0bmlkID0gbmlkLnJlcGxhY2UoIHJjc3Nlc2NhcGUsIGZjc3Nlc2NhcGUgKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGNvbnRleHQuc2V0QXR0cmlidXRlKCBcImlkXCIsICggbmlkID0gZXhwYW5kbyApICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJlZml4IGV2ZXJ5IHNlbGVjdG9yIGluIHRoZSBsaXN0XG5cdFx0XHRcdFx0Z3JvdXBzID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0XHRcdFx0aSA9IGdyb3Vwcy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRncm91cHNbIGkgXSA9ICggbmlkID8gXCIjXCIgKyBuaWQgOiBcIjpzY29wZVwiICkgKyBcIiBcIiArXG5cdFx0XHRcdFx0XHRcdHRvU2VsZWN0b3IoIGdyb3Vwc1sgaSBdICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gZ3JvdXBzLmpvaW4oIFwiLFwiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsXG5cdFx0XHRcdFx0XHRuZXdDb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIG5ld1NlbGVjdG9yIClcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHR9IGNhdGNoICggcXNhRXJyb3IgKSB7XG5cdFx0XHRcdFx0bm9ubmF0aXZlU2VsZWN0b3JDYWNoZSggc2VsZWN0b3IsIHRydWUgKTtcblx0XHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0XHRpZiAoIG5pZCA9PT0gZXhwYW5kbyApIHtcblx0XHRcdFx0XHRcdGNvbnRleHQucmVtb3ZlQXR0cmlidXRlKCBcImlkXCIgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBbGwgb3RoZXJzXG5cdHJldHVybiBzZWxlY3QoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApO1xufVxuXG4vKipcbiAqIENyZWF0ZSBrZXktdmFsdWUgY2FjaGVzIG9mIGxpbWl0ZWQgc2l6ZVxuICogQHJldHVybnMge2Z1bmN0aW9uKHN0cmluZywgb2JqZWN0KX0gUmV0dXJucyB0aGUgT2JqZWN0IGRhdGEgYWZ0ZXIgc3RvcmluZyBpdCBvbiBpdHNlbGYgd2l0aFxuICpcdHByb3BlcnR5IG5hbWUgdGhlIChzcGFjZS1zdWZmaXhlZCkgc3RyaW5nIGFuZCAoaWYgdGhlIGNhY2hlIGlzIGxhcmdlciB0aGFuIEV4cHIuY2FjaGVMZW5ndGgpXG4gKlx0ZGVsZXRpbmcgdGhlIG9sZGVzdCBlbnRyeVxuICovXG5mdW5jdGlvbiBjcmVhdGVDYWNoZSgpIHtcblx0dmFyIGtleXMgPSBbXTtcblxuXHRmdW5jdGlvbiBjYWNoZSgga2V5LCB2YWx1ZSApIHtcblxuXHRcdC8vIFVzZSAoa2V5ICsgXCIgXCIpIHRvIGF2b2lkIGNvbGxpc2lvbiB3aXRoIG5hdGl2ZSBwcm90b3R5cGUgcHJvcGVydGllcyAoc2VlIElzc3VlICMxNTcpXG5cdFx0aWYgKCBrZXlzLnB1c2goIGtleSArIFwiIFwiICkgPiBFeHByLmNhY2hlTGVuZ3RoICkge1xuXG5cdFx0XHQvLyBPbmx5IGtlZXAgdGhlIG1vc3QgcmVjZW50IGVudHJpZXNcblx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5cy5zaGlmdCgpIF07XG5cdFx0fVxuXHRcdHJldHVybiAoIGNhY2hlWyBrZXkgKyBcIiBcIiBdID0gdmFsdWUgKTtcblx0fVxuXHRyZXR1cm4gY2FjaGU7XG59XG5cbi8qKlxuICogTWFyayBhIGZ1bmN0aW9uIGZvciBzcGVjaWFsIHVzZSBieSBTaXp6bGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBtYXJrXG4gKi9cbmZ1bmN0aW9uIG1hcmtGdW5jdGlvbiggZm4gKSB7XG5cdGZuWyBleHBhbmRvIF0gPSB0cnVlO1xuXHRyZXR1cm4gZm47XG59XG5cbi8qKlxuICogU3VwcG9ydCB0ZXN0aW5nIHVzaW5nIGFuIGVsZW1lbnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFBhc3NlZCB0aGUgY3JlYXRlZCBlbGVtZW50IGFuZCByZXR1cm5zIGEgYm9vbGVhbiByZXN1bHRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHtcblx0dmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJmaWVsZHNldFwiICk7XG5cblx0dHJ5IHtcblx0XHRyZXR1cm4gISFmbiggZWwgKTtcblx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9IGZpbmFsbHkge1xuXG5cdFx0Ly8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0XG5cdFx0aWYgKCBlbC5wYXJlbnROb2RlICkge1xuXHRcdFx0ZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggZWwgKTtcblx0XHR9XG5cblx0XHQvLyByZWxlYXNlIG1lbW9yeSBpbiBJRVxuXHRcdGVsID0gbnVsbDtcblx0fVxufVxuXG4vKipcbiAqIEFkZHMgdGhlIHNhbWUgaGFuZGxlciBmb3IgYWxsIG9mIHRoZSBzcGVjaWZpZWQgYXR0cnNcbiAqIEBwYXJhbSB7U3RyaW5nfSBhdHRycyBQaXBlLXNlcGFyYXRlZCBsaXN0IG9mIGF0dHJpYnV0ZXNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIgVGhlIG1ldGhvZCB0aGF0IHdpbGwgYmUgYXBwbGllZFxuICovXG5mdW5jdGlvbiBhZGRIYW5kbGUoIGF0dHJzLCBoYW5kbGVyICkge1xuXHR2YXIgYXJyID0gYXR0cnMuc3BsaXQoIFwifFwiICksXG5cdFx0aSA9IGFyci5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0RXhwci5hdHRySGFuZGxlWyBhcnJbIGkgXSBdID0gaGFuZGxlcjtcblx0fVxufVxuXG4vKipcbiAqIENoZWNrcyBkb2N1bWVudCBvcmRlciBvZiB0d28gc2libGluZ3NcbiAqIEBwYXJhbSB7RWxlbWVudH0gYVxuICogQHBhcmFtIHtFbGVtZW50fSBiXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBSZXR1cm5zIGxlc3MgdGhhbiAwIGlmIGEgcHJlY2VkZXMgYiwgZ3JlYXRlciB0aGFuIDAgaWYgYSBmb2xsb3dzIGJcbiAqL1xuZnVuY3Rpb24gc2libGluZ0NoZWNrKCBhLCBiICkge1xuXHR2YXIgY3VyID0gYiAmJiBhLFxuXHRcdGRpZmYgPSBjdXIgJiYgYS5ub2RlVHlwZSA9PT0gMSAmJiBiLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRhLnNvdXJjZUluZGV4IC0gYi5zb3VyY2VJbmRleDtcblxuXHQvLyBVc2UgSUUgc291cmNlSW5kZXggaWYgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXNcblx0aWYgKCBkaWZmICkge1xuXHRcdHJldHVybiBkaWZmO1xuXHR9XG5cblx0Ly8gQ2hlY2sgaWYgYiBmb2xsb3dzIGFcblx0aWYgKCBjdXIgKSB7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGN1ci5uZXh0U2libGluZyApICkge1xuXHRcdFx0aWYgKCBjdXIgPT09IGIgKSB7XG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gYSA/IDEgOiAtMTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGlucHV0IHR5cGVzXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVJbnB1dFBzZXVkbyggdHlwZSApIHtcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSB0eXBlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgYnV0dG9uc1xuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQnV0dG9uUHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuICggbmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCIgKSAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciA6ZW5hYmxlZC86ZGlzYWJsZWRcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gZGlzYWJsZWQgdHJ1ZSBmb3IgOmRpc2FibGVkOyBmYWxzZSBmb3IgOmVuYWJsZWRcbiAqL1xuZnVuY3Rpb24gY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIGRpc2FibGVkICkge1xuXG5cdC8vIEtub3duIDpkaXNhYmxlZCBmYWxzZSBwb3NpdGl2ZXM6IGZpZWxkc2V0W2Rpc2FibGVkXSA+IGxlZ2VuZDpudGgtb2YtdHlwZShuKzIpIDpjYW4tZGlzYWJsZVxuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBPbmx5IGNlcnRhaW4gZWxlbWVudHMgY2FuIG1hdGNoIDplbmFibGVkIG9yIDpkaXNhYmxlZFxuXHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWVuYWJsZWRcblx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zY3JpcHRpbmcuaHRtbCNzZWxlY3Rvci1kaXNhYmxlZFxuXHRcdGlmICggXCJmb3JtXCIgaW4gZWxlbSApIHtcblxuXHRcdFx0Ly8gQ2hlY2sgZm9yIGluaGVyaXRlZCBkaXNhYmxlZG5lc3Mgb24gcmVsZXZhbnQgbm9uLWRpc2FibGVkIGVsZW1lbnRzOlxuXHRcdFx0Ly8gKiBsaXN0ZWQgZm9ybS1hc3NvY2lhdGVkIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgZmllbGRzZXRcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjYXRlZ29yeS1saXN0ZWRcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LWZlLWRpc2FibGVkXG5cdFx0XHQvLyAqIG9wdGlvbiBlbGVtZW50cyBpbiBhIGRpc2FibGVkIG9wdGdyb3VwXG5cdFx0XHQvLyAgIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm1zLmh0bWwjY29uY2VwdC1vcHRpb24tZGlzYWJsZWRcblx0XHRcdC8vIEFsbCBzdWNoIGVsZW1lbnRzIGhhdmUgYSBcImZvcm1cIiBwcm9wZXJ0eS5cblx0XHRcdGlmICggZWxlbS5wYXJlbnROb2RlICYmIGVsZW0uZGlzYWJsZWQgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdC8vIE9wdGlvbiBlbGVtZW50cyBkZWZlciB0byBhIHBhcmVudCBvcHRncm91cCBpZiBwcmVzZW50XG5cdFx0XHRcdGlmICggXCJsYWJlbFwiIGluIGVsZW0gKSB7XG5cdFx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0ucGFyZW50Tm9kZS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA2IC0gMTFcblx0XHRcdFx0Ly8gVXNlIHRoZSBpc0Rpc2FibGVkIHNob3J0Y3V0IHByb3BlcnR5IHRvIGNoZWNrIGZvciBkaXNhYmxlZCBmaWVsZHNldCBhbmNlc3RvcnNcblx0XHRcdFx0cmV0dXJuIGVsZW0uaXNEaXNhYmxlZCA9PT0gZGlzYWJsZWQgfHxcblxuXHRcdFx0XHRcdC8vIFdoZXJlIHRoZXJlIGlzIG5vIGlzRGlzYWJsZWQsIGNoZWNrIG1hbnVhbGx5XG5cdFx0XHRcdFx0LyoganNoaW50IC1XMDE4ICovXG5cdFx0XHRcdFx0ZWxlbS5pc0Rpc2FibGVkICE9PSAhZGlzYWJsZWQgJiZcblx0XHRcdFx0XHRpbkRpc2FibGVkRmllbGRzZXQoIGVsZW0gKSA9PT0gZGlzYWJsZWQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblxuXHRcdC8vIFRyeSB0byB3aW5ub3cgb3V0IGVsZW1lbnRzIHRoYXQgY2FuJ3QgYmUgZGlzYWJsZWQgYmVmb3JlIHRydXN0aW5nIHRoZSBkaXNhYmxlZCBwcm9wZXJ0eS5cblx0XHQvLyBTb21lIHZpY3RpbXMgZ2V0IGNhdWdodCBpbiBvdXIgbmV0IChsYWJlbCwgbGVnZW5kLCBtZW51LCB0cmFjayksIGJ1dCBpdCBzaG91bGRuJ3Rcblx0XHQvLyBldmVuIGV4aXN0IG9uIHRoZW0sIGxldCBhbG9uZSBoYXZlIGEgYm9vbGVhbiB2YWx1ZS5cblx0XHR9IGVsc2UgaWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHR9XG5cblx0XHQvLyBSZW1haW5pbmcgZWxlbWVudHMgYXJlIG5laXRoZXIgOmVuYWJsZWQgbm9yIDpkaXNhYmxlZFxuXHRcdHJldHVybiBmYWxzZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIHBvc2l0aW9uYWxzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICovXG5mdW5jdGlvbiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmbiApIHtcblx0cmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIGFyZ3VtZW50ICkge1xuXHRcdGFyZ3VtZW50ID0gK2FyZ3VtZW50O1xuXHRcdHJldHVybiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0dmFyIGosXG5cdFx0XHRcdG1hdGNoSW5kZXhlcyA9IGZuKCBbXSwgc2VlZC5sZW5ndGgsIGFyZ3VtZW50ICksXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xuXG5cdFx0XHQvLyBNYXRjaCBlbGVtZW50cyBmb3VuZCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4ZXNcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIHNlZWRbICggaiA9IG1hdGNoSW5kZXhlc1sgaSBdICkgXSApIHtcblx0XHRcdFx0XHRzZWVkWyBqIF0gPSAhKCBtYXRjaGVzWyBqIF0gPSBzZWVkWyBqIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSApO1xufVxuXG4vKipcbiAqIENoZWNrcyBhIG5vZGUgZm9yIHZhbGlkaXR5IGFzIGEgU2l6emxlIGNvbnRleHRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3Q9fSBjb250ZXh0XG4gKiBAcmV0dXJucyB7RWxlbWVudHxPYmplY3R8Qm9vbGVhbn0gVGhlIGlucHV0IG5vZGUgaWYgYWNjZXB0YWJsZSwgb3RoZXJ3aXNlIGEgZmFsc3kgdmFsdWVcbiAqL1xuZnVuY3Rpb24gdGVzdENvbnRleHQoIGNvbnRleHQgKSB7XG5cdHJldHVybiBjb250ZXh0ICYmIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICYmIGNvbnRleHQ7XG59XG5cbi8vIEV4cG9zZSBzdXBwb3J0IHZhcnMgZm9yIGNvbnZlbmllbmNlXG5zdXBwb3J0ID0gU2l6emxlLnN1cHBvcnQgPSB7fTtcblxuLyoqXG4gKiBEZXRlY3RzIFhNTCBub2Rlc1xuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0gZWxlbSBBbiBlbGVtZW50IG9yIGEgZG9jdW1lbnRcbiAqIEByZXR1cm5zIHtCb29sZWFufSBUcnVlIGlmZiBlbGVtIGlzIGEgbm9uLUhUTUwgWE1MIG5vZGVcbiAqL1xuaXNYTUwgPSBTaXp6bGUuaXNYTUwgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0dmFyIG5hbWVzcGFjZSA9IGVsZW0ubmFtZXNwYWNlVVJJLFxuXHRcdGRvY0VsZW0gPSAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkuZG9jdW1lbnRFbGVtZW50O1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OFxuXHQvLyBBc3N1bWUgSFRNTCB3aGVuIGRvY3VtZW50RWxlbWVudCBkb2Vzbid0IHlldCBleGlzdCwgc3VjaCBhcyBpbnNpZGUgbG9hZGluZyBpZnJhbWVzXG5cdC8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC80ODMzXG5cdHJldHVybiAhcmh0bWwudGVzdCggbmFtZXNwYWNlIHx8IGRvY0VsZW0gJiYgZG9jRWxlbS5ub2RlTmFtZSB8fCBcIkhUTUxcIiApO1xufTtcblxuLyoqXG4gKiBTZXRzIGRvY3VtZW50LXJlbGF0ZWQgdmFyaWFibGVzIG9uY2UgYmFzZWQgb24gdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IFtkb2NdIEFuIGVsZW1lbnQgb3IgZG9jdW1lbnQgb2JqZWN0IHRvIHVzZSB0byBzZXQgdGhlIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKi9cbnNldERvY3VtZW50ID0gU2l6emxlLnNldERvY3VtZW50ID0gZnVuY3Rpb24oIG5vZGUgKSB7XG5cdHZhciBoYXNDb21wYXJlLCBzdWJXaW5kb3csXG5cdFx0ZG9jID0gbm9kZSA/IG5vZGUub3duZXJEb2N1bWVudCB8fCBub2RlIDogcHJlZmVycmVkRG9jO1xuXG5cdC8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMgaW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkXG5cdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdGlmICggZG9jID09IGRvY3VtZW50IHx8IGRvYy5ub2RlVHlwZSAhPT0gOSB8fCAhZG9jLmRvY3VtZW50RWxlbWVudCApIHtcblx0XHRyZXR1cm4gZG9jdW1lbnQ7XG5cdH1cblxuXHQvLyBVcGRhdGUgZ2xvYmFsIHZhcmlhYmxlc1xuXHRkb2N1bWVudCA9IGRvYztcblx0ZG9jRWxlbSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblx0ZG9jdW1lbnRJc0hUTUwgPSAhaXNYTUwoIGRvY3VtZW50ICk7XG5cblx0Ly8gU3VwcG9ydDogSUUgOSAtIDExKywgRWRnZSAxMiAtIDE4K1xuXHQvLyBBY2Nlc3NpbmcgaWZyYW1lIGRvY3VtZW50cyBhZnRlciB1bmxvYWQgdGhyb3dzIFwicGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvcnMgKGpRdWVyeSAjMTM5MzYpXG5cdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdGlmICggcHJlZmVycmVkRG9jICE9IGRvY3VtZW50ICYmXG5cdFx0KCBzdWJXaW5kb3cgPSBkb2N1bWVudC5kZWZhdWx0VmlldyApICYmIHN1YldpbmRvdy50b3AgIT09IHN1YldpbmRvdyApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDExLCBFZGdlXG5cdFx0aWYgKCBzdWJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdHN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcInVubG9hZFwiLCB1bmxvYWRIYW5kbGVyLCBmYWxzZSApO1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDEwIG9ubHlcblx0XHR9IGVsc2UgaWYgKCBzdWJXaW5kb3cuYXR0YWNoRXZlbnQgKSB7XG5cdFx0XHRzdWJXaW5kb3cuYXR0YWNoRXZlbnQoIFwib251bmxvYWRcIiwgdW5sb2FkSGFuZGxlciApO1xuXHRcdH1cblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDggLSAxMSssIEVkZ2UgMTIgLSAxOCssIENocm9tZSA8PTE2IC0gMjUgb25seSwgRmlyZWZveCA8PTMuNiAtIDMxIG9ubHksXG5cdC8vIFNhZmFyaSA0IC0gNSBvbmx5LCBPcGVyYSA8PTExLjYgLSAxMi54IG9ubHlcblx0Ly8gSUUvRWRnZSAmIG9sZGVyIGJyb3dzZXJzIGRvbid0IHN1cHBvcnQgdGhlIDpzY29wZSBwc2V1ZG8tY2xhc3MuXG5cdC8vIFN1cHBvcnQ6IFNhZmFyaSA2LjAgb25seVxuXHQvLyBTYWZhcmkgNi4wIHN1cHBvcnRzIDpzY29wZSBidXQgaXQncyBhbiBhbGlhcyBvZiA6cm9vdCB0aGVyZS5cblx0c3VwcG9ydC5zY29wZSA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApO1xuXHRcdHJldHVybiB0eXBlb2YgZWwucXVlcnlTZWxlY3RvckFsbCAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0IWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiOnNjb3BlIGZpZWxkc2V0IGRpdlwiICkubGVuZ3RoO1xuXHR9ICk7XG5cblx0LyogQXR0cmlidXRlc1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gU3VwcG9ydDogSUU8OFxuXHQvLyBWZXJpZnkgdGhhdCBnZXRBdHRyaWJ1dGUgcmVhbGx5IHJldHVybnMgYXR0cmlidXRlcyBhbmQgbm90IHByb3BlcnRpZXNcblx0Ly8gKGV4Y2VwdGluZyBJRTggYm9vbGVhbnMpXG5cdHN1cHBvcnQuYXR0cmlidXRlcyA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmNsYXNzTmFtZSA9IFwiaVwiO1xuXHRcdHJldHVybiAhZWwuZ2V0QXR0cmlidXRlKCBcImNsYXNzTmFtZVwiICk7XG5cdH0gKTtcblxuXHQvKiBnZXRFbGVtZW50KHMpQnkqXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikgcmV0dXJucyBvbmx5IGVsZW1lbnRzXG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgPSBhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0XHRlbC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlQ29tbWVudCggXCJcIiApICk7XG5cdFx0cmV0dXJuICFlbC5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCIqXCIgKS5sZW5ndGg7XG5cdH0gKTtcblxuXHQvLyBTdXBwb3J0OiBJRTw5XG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDEwXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRCeUlkIHJldHVybnMgZWxlbWVudHMgYnkgbmFtZVxuXHQvLyBUaGUgYnJva2VuIGdldEVsZW1lbnRCeUlkIG1ldGhvZHMgZG9uJ3QgcGljayB1cCBwcm9ncmFtbWF0aWNhbGx5LXNldCBuYW1lcyxcblx0Ly8gc28gdXNlIGEgcm91bmRhYm91dCBnZXRFbGVtZW50c0J5TmFtZSB0ZXN0XG5cdHN1cHBvcnQuZ2V0QnlJZCA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuaWQgPSBleHBhbmRvO1xuXHRcdHJldHVybiAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUgfHwgIWRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCBleHBhbmRvICkubGVuZ3RoO1xuXHR9ICk7XG5cblx0Ly8gSUQgZmlsdGVyIGFuZCBmaW5kXG5cdGlmICggc3VwcG9ydC5nZXRCeUlkICkge1xuXHRcdEV4cHIuZmlsdGVyWyBcIklEXCIgXSA9IGZ1bmN0aW9uKCBpZCApIHtcblx0XHRcdHZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIFwiaWRcIiApID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cdFx0RXhwci5maW5kWyBcIklEXCIgXSA9IGZ1bmN0aW9uKCBpZCwgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRcdHZhciBlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggaWQgKTtcblx0XHRcdFx0cmV0dXJuIGVsZW0gPyBbIGVsZW0gXSA6IFtdO1xuXHRcdFx0fVxuXHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0RXhwci5maWx0ZXJbIFwiSURcIiBdID0gIGZ1bmN0aW9uKCBpZCApIHtcblx0XHRcdHZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgbm9kZSA9IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZU5vZGUgIT09IFwidW5kZWZpbmVkXCIgJiZcblx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIFwiaWRcIiApO1xuXHRcdFx0XHRyZXR1cm4gbm9kZSAmJiBub2RlLnZhbHVlID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA2IC0gNyBvbmx5XG5cdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgaXMgbm90IHJlbGlhYmxlIGFzIGEgZmluZCBzaG9ydGN1dFxuXHRcdEV4cHIuZmluZFsgXCJJRFwiIF0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlkICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0XHR2YXIgbm9kZSwgaSwgZWxlbXMsXG5cdFx0XHRcdFx0ZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7XG5cblx0XHRcdFx0aWYgKCBlbGVtICkge1xuXG5cdFx0XHRcdFx0Ly8gVmVyaWZ5IHRoZSBpZCBhdHRyaWJ1dGVcblx0XHRcdFx0XHRub2RlID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBcImlkXCIgKTtcblx0XHRcdFx0XHRpZiAoIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gaWQgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gWyBlbGVtIF07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRmFsbCBiYWNrIG9uIGdldEVsZW1lbnRzQnlOYW1lXG5cdFx0XHRcdFx0ZWxlbXMgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlOYW1lKCBpZCApO1xuXHRcdFx0XHRcdGkgPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBlbGVtID0gZWxlbXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdFx0XHRub2RlID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBcImlkXCIgKTtcblx0XHRcdFx0XHRcdGlmICggbm9kZSAmJiBub2RlLnZhbHVlID09PSBpZCApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIFsgZWxlbSBdO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBbXTtcblx0XHRcdH1cblx0XHR9O1xuXHR9XG5cblx0Ly8gVGFnXG5cdEV4cHIuZmluZFsgXCJUQUdcIiBdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA/XG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgKTtcblxuXHRcdFx0Ly8gRG9jdW1lbnRGcmFnbWVudCBub2RlcyBkb24ndCBoYXZlIGdFQlROXG5cdFx0XHR9IGVsc2UgaWYgKCBzdXBwb3J0LnFzYSApIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnICk7XG5cdFx0XHR9XG5cdFx0fSA6XG5cblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xuXHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdHRtcCA9IFtdLFxuXHRcdFx0XHRpID0gMCxcblxuXHRcdFx0XHQvLyBCeSBoYXBweSBjb2luY2lkZW5jZSwgYSAoYnJva2VuKSBnRUJUTiBhcHBlYXJzIG9uIERvY3VtZW50RnJhZ21lbnQgbm9kZXMgdG9vXG5cdFx0XHRcdHJlc3VsdHMgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgKTtcblxuXHRcdFx0Ly8gRmlsdGVyIG91dCBwb3NzaWJsZSBjb21tZW50c1xuXHRcdFx0aWYgKCB0YWcgPT09IFwiKlwiICkge1xuXHRcdFx0XHR3aGlsZSAoICggZWxlbSA9IHJlc3VsdHNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0dG1wLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdG1wO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0fTtcblxuXHQvLyBDbGFzc1xuXHRFeHByLmZpbmRbIFwiQ0xBU1NcIiBdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICYmIGZ1bmN0aW9uKCBjbGFzc05hbWUsIGNvbnRleHQgKSB7XG5cdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0cmV0dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggY2xhc3NOYW1lICk7XG5cdFx0fVxuXHR9O1xuXG5cdC8qIFFTQS9tYXRjaGVzU2VsZWN0b3Jcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFFTQSBhbmQgbWF0Y2hlc1NlbGVjdG9yIHN1cHBvcnRcblxuXHQvLyBtYXRjaGVzU2VsZWN0b3IoOmFjdGl2ZSkgcmVwb3J0cyBmYWxzZSB3aGVuIHRydWUgKElFOS9PcGVyYSAxMS41KVxuXHRyYnVnZ3lNYXRjaGVzID0gW107XG5cblx0Ly8gcVNhKDpmb2N1cykgcmVwb3J0cyBmYWxzZSB3aGVuIHRydWUgKENocm9tZSAyMSlcblx0Ly8gV2UgYWxsb3cgdGhpcyBiZWNhdXNlIG9mIGEgYnVnIGluIElFOC85IHRoYXQgdGhyb3dzIGFuIGVycm9yXG5cdC8vIHdoZW5ldmVyIGBkb2N1bWVudC5hY3RpdmVFbGVtZW50YCBpcyBhY2Nlc3NlZCBvbiBhbiBpZnJhbWVcblx0Ly8gU28sIHdlIGFsbG93IDpmb2N1cyB0byBwYXNzIHRocm91Z2ggUVNBIGFsbCB0aGUgdGltZSB0byBhdm9pZCB0aGUgSUUgZXJyb3Jcblx0Ly8gU2VlIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMzM3OFxuXHRyYnVnZ3lRU0EgPSBbXTtcblxuXHRpZiAoICggc3VwcG9ydC5xc2EgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwgKSApICkge1xuXG5cdFx0Ly8gQnVpbGQgUVNBIHJlZ2V4XG5cdFx0Ly8gUmVnZXggc3RyYXRlZ3kgYWRvcHRlZCBmcm9tIERpZWdvIFBlcmluaVxuXHRcdGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXG5cdFx0XHR2YXIgaW5wdXQ7XG5cblx0XHRcdC8vIFNlbGVjdCBpcyBzZXQgdG8gZW1wdHkgc3RyaW5nIG9uIHB1cnBvc2Vcblx0XHRcdC8vIFRoaXMgaXMgdG8gdGVzdCBJRSdzIHRyZWF0bWVudCBvZiBub3QgZXhwbGljaXRseVxuXHRcdFx0Ly8gc2V0dGluZyBhIGJvb2xlYW4gY29udGVudCBhdHRyaWJ1dGUsXG5cdFx0XHQvLyBzaW5jZSBpdHMgcHJlc2VuY2Ugc2hvdWxkIGJlIGVub3VnaFxuXHRcdFx0Ly8gaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEyMzU5XG5cdFx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmlubmVySFRNTCA9IFwiPGEgaWQ9J1wiICsgZXhwYW5kbyArIFwiJz48L2E+XCIgK1xuXHRcdFx0XHRcIjxzZWxlY3QgaWQ9J1wiICsgZXhwYW5kbyArIFwiLVxcclxcXFwnIG1zYWxsb3djYXB0dXJlPScnPlwiICtcblx0XHRcdFx0XCI8b3B0aW9uIHNlbGVjdGVkPScnPjwvb3B0aW9uPjwvc2VsZWN0PlwiO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTgsIE9wZXJhIDExLTEyLjE2XG5cdFx0XHQvLyBOb3RoaW5nIHNob3VsZCBiZSBzZWxlY3RlZCB3aGVuIGVtcHR5IHN0cmluZ3MgZm9sbG93IF49IG9yICQ9IG9yICo9XG5cdFx0XHQvLyBUaGUgdGVzdCBhdHRyaWJ1dGUgbXVzdCBiZSB1bmtub3duIGluIE9wZXJhIGJ1dCBcInNhZmVcIiBmb3IgV2luUlRcblx0XHRcdC8vIGh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvaWUvaGg0NjUzODguYXNweCNhdHRyaWJ1dGVfc2VjdGlvblxuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIlttc2FsbG93Y2FwdHVyZV49JyddXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlsqXiRdPVwiICsgd2hpdGVzcGFjZSArIFwiKig/OicnfFxcXCJcXFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gQm9vbGVhbiBhdHRyaWJ1dGVzIGFuZCBcInZhbHVlXCIgYXJlIG5vdCB0cmVhdGVkIGNvcnJlY3RseVxuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJbc2VsZWN0ZWRdXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86dmFsdWV8XCIgKyBib29sZWFucyArIFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZTwyOSwgQW5kcm9pZDw0LjQsIFNhZmFyaTw3LjArLCBpT1M8Ny4wKywgUGhhbnRvbUpTPDEuOS44K1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJbaWR+PVwiICsgZXhwYW5kbyArIFwiLV1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwifj1cIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTUgLSAxOCtcblx0XHRcdC8vIElFIDExL0VkZ2UgZG9uJ3QgZmluZCBlbGVtZW50cyBvbiBhIGBbbmFtZT0nJ11gIHF1ZXJ5IGluIHNvbWUgY2FzZXMuXG5cdFx0XHQvLyBBZGRpbmcgYSB0ZW1wb3JhcnkgYXR0cmlidXRlIHRvIHRoZSBkb2N1bWVudCBiZWZvcmUgdGhlIHNlbGVjdGlvbiB3b3Jrc1xuXHRcdFx0Ly8gYXJvdW5kIHRoZSBpc3N1ZS5cblx0XHRcdC8vIEludGVyZXN0aW5nbHksIElFIDEwICYgb2xkZXIgZG9uJ3Qgc2VlbSB0byBoYXZlIHRoZSBpc3N1ZS5cblx0XHRcdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICk7XG5cdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcIlwiICk7XG5cdFx0XHRlbC5hcHBlbmRDaGlsZCggaW5wdXQgKTtcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW25hbWU9JyddXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqbmFtZVwiICsgd2hpdGVzcGFjZSArIFwiKj1cIiArXG5cdFx0XHRcdFx0d2hpdGVzcGFjZSArIFwiKig/OicnfFxcXCJcXFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFdlYmtpdC9PcGVyYSAtIDpjaGVja2VkIHNob3VsZCByZXR1cm4gc2VsZWN0ZWQgb3B0aW9uIGVsZW1lbnRzXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDExL1JFQy1jc3MzLXNlbGVjdG9ycy0yMDExMDkyOS8jY2hlY2tlZFxuXHRcdFx0Ly8gSUU4IHRocm93cyBlcnJvciBoZXJlIGFuZCB3aWxsIG5vdCBzZWUgbGF0ZXIgdGVzdHNcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiOmNoZWNrZWRcIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiOmNoZWNrZWRcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgOCssIGlPUyA4K1xuXHRcdFx0Ly8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTEzNjg1MVxuXHRcdFx0Ly8gSW4tcGFnZSBgc2VsZWN0b3IjaWQgc2libGluZy1jb21iaW5hdG9yIHNlbGVjdG9yYCBmYWlsc1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJhI1wiICsgZXhwYW5kbyArIFwiKypcIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiLiMuK1srfl1cIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9My42IC0gNSBvbmx5XG5cdFx0XHQvLyBPbGQgRmlyZWZveCBkb2Vzbid0IHRocm93IG9uIGEgYmFkbHktZXNjYXBlZCBpZGVudGlmaWVyLlxuXHRcdFx0ZWwucXVlcnlTZWxlY3RvckFsbCggXCJcXFxcXFxmXCIgKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKCBcIltcXFxcclxcXFxuXFxcXGZdXCIgKTtcblx0XHR9ICk7XG5cblx0XHRhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0XHRcdGVsLmlubmVySFRNTCA9IFwiPGEgaHJlZj0nJyBkaXNhYmxlZD0nZGlzYWJsZWQnPjwvYT5cIiArXG5cdFx0XHRcdFwiPHNlbGVjdCBkaXNhYmxlZD0nZGlzYWJsZWQnPjxvcHRpb24vPjwvc2VsZWN0PlwiO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBXaW5kb3dzIDggTmF0aXZlIEFwcHNcblx0XHRcdC8vIFRoZSB0eXBlIGFuZCBuYW1lIGF0dHJpYnV0ZXMgYXJlIHJlc3RyaWN0ZWQgZHVyaW5nIC5pbm5lckhUTUwgYXNzaWdubWVudFxuXHRcdFx0dmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICk7XG5cdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCBcImhpZGRlblwiICk7XG5cdFx0XHRlbC5hcHBlbmRDaGlsZCggaW5wdXQgKS5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcIkRcIiApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRThcblx0XHRcdC8vIEVuZm9yY2UgY2FzZS1zZW5zaXRpdml0eSBvZiBuYW1lIGF0dHJpYnV0ZVxuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIltuYW1lPWRdXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIm5hbWVcIiArIHdoaXRlc3BhY2UgKyBcIipbKl4kfCF+XT89XCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRkYgMy41IC0gOmVuYWJsZWQvOmRpc2FibGVkIGFuZCBoaWRkZW4gZWxlbWVudHMgKGhpZGRlbiBlbGVtZW50cyBhcmUgc3RpbGwgZW5hYmxlZClcblx0XHRcdC8vIElFOCB0aHJvd3MgZXJyb3IgaGVyZSBhbmQgd2lsbCBub3Qgc2VlIGxhdGVyIHRlc3RzXG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiOmVuYWJsZWRcIiApLmxlbmd0aCAhPT0gMiApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiOmVuYWJsZWRcIiwgXCI6ZGlzYWJsZWRcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTktMTErXG5cdFx0XHQvLyBJRSdzIDpkaXNhYmxlZCBzZWxlY3RvciBkb2VzIG5vdCBwaWNrIHVwIHRoZSBjaGlsZHJlbiBvZiBkaXNhYmxlZCBmaWVsZHNldHNcblx0XHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuZGlzYWJsZWQgPSB0cnVlO1xuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIjpkaXNhYmxlZFwiICkubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IE9wZXJhIDEwIC0gMTEgb25seVxuXHRcdFx0Ly8gT3BlcmEgMTAtMTEgZG9lcyBub3QgdGhyb3cgb24gcG9zdC1jb21tYSBpbnZhbGlkIHBzZXVkb3Ncblx0XHRcdGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiKiw6eFwiICk7XG5cdFx0XHRyYnVnZ3lRU0EucHVzaCggXCIsLio6XCIgKTtcblx0XHR9ICk7XG5cdH1cblxuXHRpZiAoICggc3VwcG9ydC5tYXRjaGVzU2VsZWN0b3IgPSBybmF0aXZlLnRlc3QoICggbWF0Y2hlcyA9IGRvY0VsZW0ubWF0Y2hlcyB8fFxuXHRcdGRvY0VsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm9NYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yICkgKSApICkge1xuXG5cdFx0YXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cblx0XHRcdC8vIENoZWNrIHRvIHNlZSBpZiBpdCdzIHBvc3NpYmxlIHRvIGRvIG1hdGNoZXNTZWxlY3RvclxuXHRcdFx0Ly8gb24gYSBkaXNjb25uZWN0ZWQgbm9kZSAoSUUgOSlcblx0XHRcdHN1cHBvcnQuZGlzY29ubmVjdGVkTWF0Y2ggPSBtYXRjaGVzLmNhbGwoIGVsLCBcIipcIiApO1xuXG5cdFx0XHQvLyBUaGlzIHNob3VsZCBmYWlsIHdpdGggYW4gZXhjZXB0aW9uXG5cdFx0XHQvLyBHZWNrbyBkb2VzIG5vdCBlcnJvciwgcmV0dXJucyBmYWxzZSBpbnN0ZWFkXG5cdFx0XHRtYXRjaGVzLmNhbGwoIGVsLCBcIltzIT0nJ106eFwiICk7XG5cdFx0XHRyYnVnZ3lNYXRjaGVzLnB1c2goIFwiIT1cIiwgcHNldWRvcyApO1xuXHRcdH0gKTtcblx0fVxuXG5cdHJidWdneVFTQSA9IHJidWdneVFTQS5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5UVNBLmpvaW4oIFwifFwiICkgKTtcblx0cmJ1Z2d5TWF0Y2hlcyA9IHJidWdneU1hdGNoZXMubGVuZ3RoICYmIG5ldyBSZWdFeHAoIHJidWdneU1hdGNoZXMuam9pbiggXCJ8XCIgKSApO1xuXG5cdC8qIENvbnRhaW5zXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblx0aGFzQ29tcGFyZSA9IHJuYXRpdmUudGVzdCggZG9jRWxlbS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiApO1xuXG5cdC8vIEVsZW1lbnQgY29udGFpbnMgYW5vdGhlclxuXHQvLyBQdXJwb3NlZnVsbHkgc2VsZi1leGNsdXNpdmVcblx0Ly8gQXMgaW4sIGFuIGVsZW1lbnQgZG9lcyBub3QgY29udGFpbiBpdHNlbGZcblx0Y29udGFpbnMgPSBoYXNDb21wYXJlIHx8IHJuYXRpdmUudGVzdCggZG9jRWxlbS5jb250YWlucyApID9cblx0XHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHRcdHZhciBhZG93biA9IGEubm9kZVR5cGUgPT09IDkgPyBhLmRvY3VtZW50RWxlbWVudCA6IGEsXG5cdFx0XHRcdGJ1cCA9IGIgJiYgYi5wYXJlbnROb2RlO1xuXHRcdFx0cmV0dXJuIGEgPT09IGJ1cCB8fCAhISggYnVwICYmIGJ1cC5ub2RlVHlwZSA9PT0gMSAmJiAoXG5cdFx0XHRcdGFkb3duLmNvbnRhaW5zID9cblx0XHRcdFx0XHRhZG93bi5jb250YWlucyggYnVwICkgOlxuXHRcdFx0XHRcdGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gJiYgYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYnVwICkgJiAxNlxuXHRcdFx0KSApO1xuXHRcdH0gOlxuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0aWYgKCBiICkge1xuXHRcdFx0XHR3aGlsZSAoICggYiA9IGIucGFyZW50Tm9kZSApICkge1xuXHRcdFx0XHRcdGlmICggYiA9PT0gYSApIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH07XG5cblx0LyogU29ydGluZ1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gRG9jdW1lbnQgb3JkZXIgc29ydGluZ1xuXHRzb3J0T3JkZXIgPSBoYXNDb21wYXJlID9cblx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cblx0XHQvLyBGbGFnIGZvciBkdXBsaWNhdGUgcmVtb3ZhbFxuXHRcdGlmICggYSA9PT0gYiApIHtcblx0XHRcdGhhc0R1cGxpY2F0ZSA9IHRydWU7XG5cdFx0XHRyZXR1cm4gMDtcblx0XHR9XG5cblx0XHQvLyBTb3J0IG9uIG1ldGhvZCBleGlzdGVuY2UgaWYgb25seSBvbmUgaW5wdXQgaGFzIGNvbXBhcmVEb2N1bWVudFBvc2l0aW9uXG5cdFx0dmFyIGNvbXBhcmUgPSAhYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAtICFiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uO1xuXHRcdGlmICggY29tcGFyZSApIHtcblx0XHRcdHJldHVybiBjb21wYXJlO1xuXHRcdH1cblxuXHRcdC8vIENhbGN1bGF0ZSBwb3NpdGlvbiBpZiBib3RoIGlucHV0cyBiZWxvbmcgdG8gdGhlIHNhbWUgZG9jdW1lbnRcblx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRcdGNvbXBhcmUgPSAoIGEub3duZXJEb2N1bWVudCB8fCBhICkgPT0gKCBiLm93bmVyRG9jdW1lbnQgfHwgYiApID9cblx0XHRcdGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGIgKSA6XG5cblx0XHRcdC8vIE90aGVyd2lzZSB3ZSBrbm93IHRoZXkgYXJlIGRpc2Nvbm5lY3RlZFxuXHRcdFx0MTtcblxuXHRcdC8vIERpc2Nvbm5lY3RlZCBub2Rlc1xuXHRcdGlmICggY29tcGFyZSAmIDEgfHxcblx0XHRcdCggIXN1cHBvcnQuc29ydERldGFjaGVkICYmIGIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGEgKSA9PT0gY29tcGFyZSApICkge1xuXG5cdFx0XHQvLyBDaG9vc2UgdGhlIGZpcnN0IGVsZW1lbnQgdGhhdCBpcyByZWxhdGVkIHRvIG91ciBwcmVmZXJyZWQgZG9jdW1lbnRcblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdFx0XHRpZiAoIGEgPT0gZG9jdW1lbnQgfHwgYS5vd25lckRvY3VtZW50ID09IHByZWZlcnJlZERvYyAmJlxuXHRcdFx0XHRjb250YWlucyggcHJlZmVycmVkRG9jLCBhICkgKSB7XG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRcdGlmICggYiA9PSBkb2N1bWVudCB8fCBiLm93bmVyRG9jdW1lbnQgPT0gcHJlZmVycmVkRG9jICYmXG5cdFx0XHRcdGNvbnRhaW5zKCBwcmVmZXJyZWREb2MsIGIgKSApIHtcblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1haW50YWluIG9yaWdpbmFsIG9yZGVyXG5cdFx0XHRyZXR1cm4gc29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXHRcdH1cblxuXHRcdHJldHVybiBjb21wYXJlICYgNCA/IC0xIDogMTtcblx0fSA6XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXG5cdFx0Ly8gRXhpdCBlYXJseSBpZiB0aGUgbm9kZXMgYXJlIGlkZW50aWNhbFxuXHRcdGlmICggYSA9PT0gYiApIHtcblx0XHRcdGhhc0R1cGxpY2F0ZSA9IHRydWU7XG5cdFx0XHRyZXR1cm4gMDtcblx0XHR9XG5cblx0XHR2YXIgY3VyLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRhdXAgPSBhLnBhcmVudE5vZGUsXG5cdFx0XHRidXAgPSBiLnBhcmVudE5vZGUsXG5cdFx0XHRhcCA9IFsgYSBdLFxuXHRcdFx0YnAgPSBbIGIgXTtcblxuXHRcdC8vIFBhcmVudGxlc3Mgbm9kZXMgYXJlIGVpdGhlciBkb2N1bWVudHMgb3IgZGlzY29ubmVjdGVkXG5cdFx0aWYgKCAhYXVwIHx8ICFidXAgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBlcWVxZXEgKi9cblx0XHRcdHJldHVybiBhID09IGRvY3VtZW50ID8gLTEgOlxuXHRcdFx0XHRiID09IGRvY3VtZW50ID8gMSA6XG5cdFx0XHRcdC8qIGVzbGludC1lbmFibGUgZXFlcWVxICovXG5cdFx0XHRcdGF1cCA/IC0xIDpcblx0XHRcdFx0YnVwID8gMSA6XG5cdFx0XHRcdHNvcnRJbnB1dCA/XG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcblx0XHRcdFx0MDtcblxuXHRcdC8vIElmIHRoZSBub2RlcyBhcmUgc2libGluZ3MsIHdlIGNhbiBkbyBhIHF1aWNrIGNoZWNrXG5cdFx0fSBlbHNlIGlmICggYXVwID09PSBidXAgKSB7XG5cdFx0XHRyZXR1cm4gc2libGluZ0NoZWNrKCBhLCBiICk7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXJ3aXNlIHdlIG5lZWQgZnVsbCBsaXN0cyBvZiB0aGVpciBhbmNlc3RvcnMgZm9yIGNvbXBhcmlzb25cblx0XHRjdXIgPSBhO1xuXHRcdHdoaWxlICggKCBjdXIgPSBjdXIucGFyZW50Tm9kZSApICkge1xuXHRcdFx0YXAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXHRcdGN1ciA9IGI7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGN1ci5wYXJlbnROb2RlICkgKSB7XG5cdFx0XHRicC51bnNoaWZ0KCBjdXIgKTtcblx0XHR9XG5cblx0XHQvLyBXYWxrIGRvd24gdGhlIHRyZWUgbG9va2luZyBmb3IgYSBkaXNjcmVwYW5jeVxuXHRcdHdoaWxlICggYXBbIGkgXSA9PT0gYnBbIGkgXSApIHtcblx0XHRcdGkrKztcblx0XHR9XG5cblx0XHRyZXR1cm4gaSA/XG5cblx0XHRcdC8vIERvIGEgc2libGluZyBjaGVjayBpZiB0aGUgbm9kZXMgaGF2ZSBhIGNvbW1vbiBhbmNlc3RvclxuXHRcdFx0c2libGluZ0NoZWNrKCBhcFsgaSBdLCBicFsgaSBdICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugbm9kZXMgaW4gb3VyIGRvY3VtZW50IHNvcnQgZmlyc3Rcblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBlcWVxZXEgKi9cblx0XHRcdGFwWyBpIF0gPT0gcHJlZmVycmVkRG9jID8gLTEgOlxuXHRcdFx0YnBbIGkgXSA9PSBwcmVmZXJyZWREb2MgPyAxIDpcblx0XHRcdC8qIGVzbGludC1lbmFibGUgZXFlcWVxICovXG5cdFx0XHQwO1xuXHR9O1xuXG5cdHJldHVybiBkb2N1bWVudDtcbn07XG5cblNpenpsZS5tYXRjaGVzID0gZnVuY3Rpb24oIGV4cHIsIGVsZW1lbnRzICkge1xuXHRyZXR1cm4gU2l6emxlKCBleHByLCBudWxsLCBudWxsLCBlbGVtZW50cyApO1xufTtcblxuU2l6emxlLm1hdGNoZXNTZWxlY3RvciA9IGZ1bmN0aW9uKCBlbGVtLCBleHByICkge1xuXHRzZXREb2N1bWVudCggZWxlbSApO1xuXG5cdGlmICggc3VwcG9ydC5tYXRjaGVzU2VsZWN0b3IgJiYgZG9jdW1lbnRJc0hUTUwgJiZcblx0XHQhbm9ubmF0aXZlU2VsZWN0b3JDYWNoZVsgZXhwciArIFwiIFwiIF0gJiZcblx0XHQoICFyYnVnZ3lNYXRjaGVzIHx8ICFyYnVnZ3lNYXRjaGVzLnRlc3QoIGV4cHIgKSApICYmXG5cdFx0KCAhcmJ1Z2d5UVNBICAgICB8fCAhcmJ1Z2d5UVNBLnRlc3QoIGV4cHIgKSApICkge1xuXG5cdFx0dHJ5IHtcblx0XHRcdHZhciByZXQgPSBtYXRjaGVzLmNhbGwoIGVsZW0sIGV4cHIgKTtcblxuXHRcdFx0Ly8gSUUgOSdzIG1hdGNoZXNTZWxlY3RvciByZXR1cm5zIGZhbHNlIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuXHRcdFx0aWYgKCByZXQgfHwgc3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCB8fFxuXG5cdFx0XHRcdC8vIEFzIHdlbGwsIGRpc2Nvbm5lY3RlZCBub2RlcyBhcmUgc2FpZCB0byBiZSBpbiBhIGRvY3VtZW50XG5cdFx0XHRcdC8vIGZyYWdtZW50IGluIElFIDlcblx0XHRcdFx0ZWxlbS5kb2N1bWVudCAmJiBlbGVtLmRvY3VtZW50Lm5vZGVUeXBlICE9PSAxMSApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblx0XHR9IGNhdGNoICggZSApIHtcblx0XHRcdG5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUoIGV4cHIsIHRydWUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gU2l6emxlKCBleHByLCBkb2N1bWVudCwgbnVsbCwgWyBlbGVtIF0gKS5sZW5ndGggPiAwO1xufTtcblxuU2l6emxlLmNvbnRhaW5zID0gZnVuY3Rpb24oIGNvbnRleHQsIGVsZW0gKSB7XG5cblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdGlmICggKCBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCApICE9IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdH1cblx0cmV0dXJuIGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICk7XG59O1xuXG5TaXp6bGUuYXR0ciA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxuXHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRpZiAoICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKSAhPSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHR9XG5cblx0dmFyIGZuID0gRXhwci5hdHRySGFuZGxlWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSxcblxuXHRcdC8vIERvbid0IGdldCBmb29sZWQgYnkgT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzIChqUXVlcnkgIzEzODA3KVxuXHRcdHZhbCA9IGZuICYmIGhhc093bi5jYWxsKCBFeHByLmF0dHJIYW5kbGUsIG5hbWUudG9Mb3dlckNhc2UoKSApID9cblx0XHRcdGZuKCBlbGVtLCBuYW1lLCAhZG9jdW1lbnRJc0hUTUwgKSA6XG5cdFx0XHR1bmRlZmluZWQ7XG5cblx0cmV0dXJuIHZhbCAhPT0gdW5kZWZpbmVkID9cblx0XHR2YWwgOlxuXHRcdHN1cHBvcnQuYXR0cmlidXRlcyB8fCAhZG9jdW1lbnRJc0hUTUwgP1xuXHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKSA6XG5cdFx0XHQoIHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggbmFtZSApICkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdHZhbC52YWx1ZSA6XG5cdFx0XHRcdG51bGw7XG59O1xuXG5TaXp6bGUuZXNjYXBlID0gZnVuY3Rpb24oIHNlbCApIHtcblx0cmV0dXJuICggc2VsICsgXCJcIiApLnJlcGxhY2UoIHJjc3Nlc2NhcGUsIGZjc3Nlc2NhcGUgKTtcbn07XG5cblNpenpsZS5lcnJvciA9IGZ1bmN0aW9uKCBtc2cgKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiBcIiArIG1zZyApO1xufTtcblxuLyoqXG4gKiBEb2N1bWVudCBzb3J0aW5nIGFuZCByZW1vdmluZyBkdXBsaWNhdGVzXG4gKiBAcGFyYW0ge0FycmF5TGlrZX0gcmVzdWx0c1xuICovXG5TaXp6bGUudW5pcXVlU29ydCA9IGZ1bmN0aW9uKCByZXN1bHRzICkge1xuXHR2YXIgZWxlbSxcblx0XHRkdXBsaWNhdGVzID0gW10sXG5cdFx0aiA9IDAsXG5cdFx0aSA9IDA7XG5cblx0Ly8gVW5sZXNzIHdlICprbm93KiB3ZSBjYW4gZGV0ZWN0IGR1cGxpY2F0ZXMsIGFzc3VtZSB0aGVpciBwcmVzZW5jZVxuXHRoYXNEdXBsaWNhdGUgPSAhc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzO1xuXHRzb3J0SW5wdXQgPSAhc3VwcG9ydC5zb3J0U3RhYmxlICYmIHJlc3VsdHMuc2xpY2UoIDAgKTtcblx0cmVzdWx0cy5zb3J0KCBzb3J0T3JkZXIgKTtcblxuXHRpZiAoIGhhc0R1cGxpY2F0ZSApIHtcblx0XHR3aGlsZSAoICggZWxlbSA9IHJlc3VsdHNbIGkrKyBdICkgKSB7XG5cdFx0XHRpZiAoIGVsZW0gPT09IHJlc3VsdHNbIGkgXSApIHtcblx0XHRcdFx0aiA9IGR1cGxpY2F0ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdHJlc3VsdHMuc3BsaWNlKCBkdXBsaWNhdGVzWyBqIF0sIDEgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBDbGVhciBpbnB1dCBhZnRlciBzb3J0aW5nIHRvIHJlbGVhc2Ugb2JqZWN0c1xuXHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9zaXp6bGUvcHVsbC8yMjVcblx0c29ydElucHV0ID0gbnVsbDtcblxuXHRyZXR1cm4gcmVzdWx0cztcbn07XG5cbi8qKlxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmV0cmlldmluZyB0aGUgdGV4dCB2YWx1ZSBvZiBhbiBhcnJheSBvZiBET00gbm9kZXNcbiAqIEBwYXJhbSB7QXJyYXl8RWxlbWVudH0gZWxlbVxuICovXG5nZXRUZXh0ID0gU2l6emxlLmdldFRleHQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0dmFyIG5vZGUsXG5cdFx0cmV0ID0gXCJcIixcblx0XHRpID0gMCxcblx0XHRub2RlVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0aWYgKCAhbm9kZVR5cGUgKSB7XG5cblx0XHQvLyBJZiBubyBub2RlVHlwZSwgdGhpcyBpcyBleHBlY3RlZCB0byBiZSBhbiBhcnJheVxuXHRcdHdoaWxlICggKCBub2RlID0gZWxlbVsgaSsrIF0gKSApIHtcblxuXHRcdFx0Ly8gRG8gbm90IHRyYXZlcnNlIGNvbW1lbnQgbm9kZXNcblx0XHRcdHJldCArPSBnZXRUZXh0KCBub2RlICk7XG5cdFx0fVxuXHR9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMSB8fCBub2RlVHlwZSA9PT0gOSB8fCBub2RlVHlwZSA9PT0gMTEgKSB7XG5cblx0XHQvLyBVc2UgdGV4dENvbnRlbnQgZm9yIGVsZW1lbnRzXG5cdFx0Ly8gaW5uZXJUZXh0IHVzYWdlIHJlbW92ZWQgZm9yIGNvbnNpc3RlbmN5IG9mIG5ldyBsaW5lcyAoalF1ZXJ5ICMxMTE1Mylcblx0XHRpZiAoIHR5cGVvZiBlbGVtLnRleHRDb250ZW50ID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIGVsZW0udGV4dENvbnRlbnQ7XG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gVHJhdmVyc2UgaXRzIGNoaWxkcmVuXG5cdFx0XHRmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHtcblx0XHRcdFx0cmV0ICs9IGdldFRleHQoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gZWxzZSBpZiAoIG5vZGVUeXBlID09PSAzIHx8IG5vZGVUeXBlID09PSA0ICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVWYWx1ZTtcblx0fVxuXG5cdC8vIERvIG5vdCBpbmNsdWRlIGNvbW1lbnQgb3IgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbiBub2Rlc1xuXG5cdHJldHVybiByZXQ7XG59O1xuXG5FeHByID0gU2l6emxlLnNlbGVjdG9ycyA9IHtcblxuXHQvLyBDYW4gYmUgYWRqdXN0ZWQgYnkgdGhlIHVzZXJcblx0Y2FjaGVMZW5ndGg6IDUwLFxuXG5cdGNyZWF0ZVBzZXVkbzogbWFya0Z1bmN0aW9uLFxuXG5cdG1hdGNoOiBtYXRjaEV4cHIsXG5cblx0YXR0ckhhbmRsZToge30sXG5cblx0ZmluZDoge30sXG5cblx0cmVsYXRpdmU6IHtcblx0XHRcIj5cIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiIFwiOiB7IGRpcjogXCJwYXJlbnROb2RlXCIgfSxcblx0XHRcIitcIjogeyBkaXI6IFwicHJldmlvdXNTaWJsaW5nXCIsIGZpcnN0OiB0cnVlIH0sXG5cdFx0XCJ+XCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiIH1cblx0fSxcblxuXHRwcmVGaWx0ZXI6IHtcblx0XHRcIkFUVFJcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0bWF0Y2hbIDEgXSA9IG1hdGNoWyAxIF0ucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0Ly8gTW92ZSB0aGUgZ2l2ZW4gdmFsdWUgdG8gbWF0Y2hbM10gd2hldGhlciBxdW90ZWQgb3IgdW5xdW90ZWRcblx0XHRcdG1hdGNoWyAzIF0gPSAoIG1hdGNoWyAzIF0gfHwgbWF0Y2hbIDQgXSB8fFxuXHRcdFx0XHRtYXRjaFsgNSBdIHx8IFwiXCIgKS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHRpZiAoIG1hdGNoWyAyIF0gPT09IFwifj1cIiApIHtcblx0XHRcdFx0bWF0Y2hbIDMgXSA9IFwiIFwiICsgbWF0Y2hbIDMgXSArIFwiIFwiO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDQgKTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cblx0XHRcdC8qIG1hdGNoZXMgZnJvbSBtYXRjaEV4cHJbXCJDSElMRFwiXVxuXHRcdFx0XHQxIHR5cGUgKG9ubHl8bnRofC4uLilcblx0XHRcdFx0MiB3aGF0IChjaGlsZHxvZi10eXBlKVxuXHRcdFx0XHQzIGFyZ3VtZW50IChldmVufG9kZHxcXGQqfFxcZCpuKFsrLV1cXGQrKT98Li4uKVxuXHRcdFx0XHQ0IHhuLWNvbXBvbmVudCBvZiB4bit5IGFyZ3VtZW50IChbKy1dP1xcZCpufClcblx0XHRcdFx0NSBzaWduIG9mIHhuLWNvbXBvbmVudFxuXHRcdFx0XHQ2IHggb2YgeG4tY29tcG9uZW50XG5cdFx0XHRcdDcgc2lnbiBvZiB5LWNvbXBvbmVudFxuXHRcdFx0XHQ4IHkgb2YgeS1jb21wb25lbnRcblx0XHRcdCovXG5cdFx0XHRtYXRjaFsgMSBdID0gbWF0Y2hbIDEgXS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0XHRpZiAoIG1hdGNoWyAxIF0uc2xpY2UoIDAsIDMgKSA9PT0gXCJudGhcIiApIHtcblxuXHRcdFx0XHQvLyBudGgtKiByZXF1aXJlcyBhcmd1bWVudFxuXHRcdFx0XHRpZiAoICFtYXRjaFsgMyBdICkge1xuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbIDAgXSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gbnVtZXJpYyB4IGFuZCB5IHBhcmFtZXRlcnMgZm9yIEV4cHIuZmlsdGVyLkNISUxEXG5cdFx0XHRcdC8vIHJlbWVtYmVyIHRoYXQgZmFsc2UvdHJ1ZSBjYXN0IHJlc3BlY3RpdmVseSB0byAwLzFcblx0XHRcdFx0bWF0Y2hbIDQgXSA9ICsoIG1hdGNoWyA0IF0gP1xuXHRcdFx0XHRcdG1hdGNoWyA1IF0gKyAoIG1hdGNoWyA2IF0gfHwgMSApIDpcblx0XHRcdFx0XHQyICogKCBtYXRjaFsgMyBdID09PSBcImV2ZW5cIiB8fCBtYXRjaFsgMyBdID09PSBcIm9kZFwiICkgKTtcblx0XHRcdFx0bWF0Y2hbIDUgXSA9ICsoICggbWF0Y2hbIDcgXSArIG1hdGNoWyA4IF0gKSB8fCBtYXRjaFsgMyBdID09PSBcIm9kZFwiICk7XG5cblx0XHRcdFx0Ly8gb3RoZXIgdHlwZXMgcHJvaGliaXQgYXJndW1lbnRzXG5cdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFsgMyBdICkge1xuXHRcdFx0XHRTaXp6bGUuZXJyb3IoIG1hdGNoWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoO1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHR2YXIgZXhjZXNzLFxuXHRcdFx0XHR1bnF1b3RlZCA9ICFtYXRjaFsgNiBdICYmIG1hdGNoWyAyIF07XG5cblx0XHRcdGlmICggbWF0Y2hFeHByWyBcIkNISUxEXCIgXS50ZXN0KCBtYXRjaFsgMCBdICkgKSB7XG5cdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBY2NlcHQgcXVvdGVkIGFyZ3VtZW50cyBhcy1pc1xuXHRcdFx0aWYgKCBtYXRjaFsgMyBdICkge1xuXHRcdFx0XHRtYXRjaFsgMiBdID0gbWF0Y2hbIDQgXSB8fCBtYXRjaFsgNSBdIHx8IFwiXCI7XG5cblx0XHRcdC8vIFN0cmlwIGV4Y2VzcyBjaGFyYWN0ZXJzIGZyb20gdW5xdW90ZWQgYXJndW1lbnRzXG5cdFx0XHR9IGVsc2UgaWYgKCB1bnF1b3RlZCAmJiBycHNldWRvLnRlc3QoIHVucXVvdGVkICkgJiZcblxuXHRcdFx0XHQvLyBHZXQgZXhjZXNzIGZyb20gdG9rZW5pemUgKHJlY3Vyc2l2ZWx5KVxuXHRcdFx0XHQoIGV4Y2VzcyA9IHRva2VuaXplKCB1bnF1b3RlZCwgdHJ1ZSApICkgJiZcblxuXHRcdFx0XHQvLyBhZHZhbmNlIHRvIHRoZSBuZXh0IGNsb3NpbmcgcGFyZW50aGVzaXNcblx0XHRcdFx0KCBleGNlc3MgPSB1bnF1b3RlZC5pbmRleE9mKCBcIilcIiwgdW5xdW90ZWQubGVuZ3RoIC0gZXhjZXNzICkgLSB1bnF1b3RlZC5sZW5ndGggKSApIHtcblxuXHRcdFx0XHQvLyBleGNlc3MgaXMgYSBuZWdhdGl2ZSBpbmRleFxuXHRcdFx0XHRtYXRjaFsgMCBdID0gbWF0Y2hbIDAgXS5zbGljZSggMCwgZXhjZXNzICk7XG5cdFx0XHRcdG1hdGNoWyAyIF0gPSB1bnF1b3RlZC5zbGljZSggMCwgZXhjZXNzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldHVybiBvbmx5IGNhcHR1cmVzIG5lZWRlZCBieSB0aGUgcHNldWRvIGZpbHRlciBtZXRob2QgKHR5cGUgYW5kIGFyZ3VtZW50KVxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCAzICk7XG5cdFx0fVxuXHR9LFxuXG5cdGZpbHRlcjoge1xuXG5cdFx0XCJUQUdcIjogZnVuY3Rpb24oIG5vZGVOYW1lU2VsZWN0b3IgKSB7XG5cdFx0XHR2YXIgbm9kZU5hbWUgPSBub2RlTmFtZVNlbGVjdG9yLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICkudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBub2RlTmFtZVNlbGVjdG9yID09PSBcIipcIiA/XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9IDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBub2RlTmFtZTtcblx0XHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDTEFTU1wiOiBmdW5jdGlvbiggY2xhc3NOYW1lICkge1xuXHRcdFx0dmFyIHBhdHRlcm4gPSBjbGFzc0NhY2hlWyBjbGFzc05hbWUgKyBcIiBcIiBdO1xuXG5cdFx0XHRyZXR1cm4gcGF0dGVybiB8fFxuXHRcdFx0XHQoIHBhdHRlcm4gPSBuZXcgUmVnRXhwKCBcIihefFwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcdFx0XCIpXCIgKyBjbGFzc05hbWUgKyBcIihcIiArIHdoaXRlc3BhY2UgKyBcInwkKVwiICkgKSAmJiBjbGFzc0NhY2hlKFxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHBhdHRlcm4udGVzdChcblx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgZWxlbS5jbGFzc05hbWUgPT09IFwic3RyaW5nXCIgJiYgZWxlbS5jbGFzc05hbWUgfHxcblx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgIT09IFwidW5kZWZpbmVkXCIgJiZcblx0XHRcdFx0XHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKCBcImNsYXNzXCIgKSB8fFxuXHRcdFx0XHRcdFx0XHRcdFwiXCJcblx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0fSApO1xuXHRcdH0sXG5cblx0XHRcIkFUVFJcIjogZnVuY3Rpb24oIG5hbWUsIG9wZXJhdG9yLCBjaGVjayApIHtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIHJlc3VsdCA9IFNpenpsZS5hdHRyKCBlbGVtLCBuYW1lICk7XG5cblx0XHRcdFx0aWYgKCByZXN1bHQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXR1cm4gb3BlcmF0b3IgPT09IFwiIT1cIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoICFvcGVyYXRvciApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJlc3VsdCArPSBcIlwiO1xuXG5cdFx0XHRcdC8qIGVzbGludC1kaXNhYmxlIG1heC1sZW4gKi9cblxuXHRcdFx0XHRyZXR1cm4gb3BlcmF0b3IgPT09IFwiPVwiID8gcmVzdWx0ID09PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiIT1cIiA/IHJlc3VsdCAhPT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIl49XCIgPyBjaGVjayAmJiByZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA9PT0gMCA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiKj1cIiA/IGNoZWNrICYmIHJlc3VsdC5pbmRleE9mKCBjaGVjayApID4gLTEgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIiQ9XCIgPyBjaGVjayAmJiByZXN1bHQuc2xpY2UoIC1jaGVjay5sZW5ndGggKSA9PT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIn49XCIgPyAoIFwiIFwiICsgcmVzdWx0LnJlcGxhY2UoIHJ3aGl0ZXNwYWNlLCBcIiBcIiApICsgXCIgXCIgKS5pbmRleE9mKCBjaGVjayApID4gLTEgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcInw9XCIgPyByZXN1bHQgPT09IGNoZWNrIHx8IHJlc3VsdC5zbGljZSggMCwgY2hlY2subGVuZ3RoICsgMSApID09PSBjaGVjayArIFwiLVwiIDpcblx0XHRcdFx0XHRmYWxzZTtcblx0XHRcdFx0LyogZXNsaW50LWVuYWJsZSBtYXgtbGVuICovXG5cblx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIHR5cGUsIHdoYXQsIF9hcmd1bWVudCwgZmlyc3QsIGxhc3QgKSB7XG5cdFx0XHR2YXIgc2ltcGxlID0gdHlwZS5zbGljZSggMCwgMyApICE9PSBcIm50aFwiLFxuXHRcdFx0XHRmb3J3YXJkID0gdHlwZS5zbGljZSggLTQgKSAhPT0gXCJsYXN0XCIsXG5cdFx0XHRcdG9mVHlwZSA9IHdoYXQgPT09IFwib2YtdHlwZVwiO1xuXG5cdFx0XHRyZXR1cm4gZmlyc3QgPT09IDEgJiYgbGFzdCA9PT0gMCA/XG5cblx0XHRcdFx0Ly8gU2hvcnRjdXQgZm9yIDpudGgtKihuKVxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRyZXR1cm4gISFlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRcdH0gOlxuXG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBfY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBjYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsIG5vZGUsIG5vZGVJbmRleCwgc3RhcnQsXG5cdFx0XHRcdFx0XHRkaXIgPSBzaW1wbGUgIT09IGZvcndhcmQgPyBcIm5leHRTaWJsaW5nXCIgOiBcInByZXZpb3VzU2libGluZ1wiLFxuXHRcdFx0XHRcdFx0cGFyZW50ID0gZWxlbS5wYXJlbnROb2RlLFxuXHRcdFx0XHRcdFx0bmFtZSA9IG9mVHlwZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksXG5cdFx0XHRcdFx0XHR1c2VDYWNoZSA9ICF4bWwgJiYgIW9mVHlwZSxcblx0XHRcdFx0XHRcdGRpZmYgPSBmYWxzZTtcblxuXHRcdFx0XHRcdGlmICggcGFyZW50ICkge1xuXG5cdFx0XHRcdFx0XHQvLyA6KGZpcnN0fGxhc3R8b25seSktKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdFx0XHRpZiAoIHNpbXBsZSApIHtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCBkaXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bm9kZSA9IGVsZW07XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG5vZGUgPSBub2RlWyBkaXIgXSApICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBvZlR5cGUgP1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUgOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBSZXZlcnNlIGRpcmVjdGlvbiBmb3IgOm9ubHktKiAoaWYgd2UgaGF2ZW4ndCB5ZXQgZG9uZSBzbylcblx0XHRcdFx0XHRcdFx0XHRzdGFydCA9IGRpciA9IHR5cGUgPT09IFwib25seVwiICYmICFzdGFydCAmJiBcIm5leHRTaWJsaW5nXCI7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdHN0YXJ0ID0gWyBmb3J3YXJkID8gcGFyZW50LmZpcnN0Q2hpbGQgOiBwYXJlbnQubGFzdENoaWxkIF07XG5cblx0XHRcdFx0XHRcdC8vIG5vbi14bWwgOm50aC1jaGlsZCguLi4pIHN0b3JlcyBjYWNoZSBkYXRhIG9uIGBwYXJlbnRgXG5cdFx0XHRcdFx0XHRpZiAoIGZvcndhcmQgJiYgdXNlQ2FjaGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU2VlayBgZWxlbWAgZnJvbSBhIHByZXZpb3VzbHktY2FjaGVkIGluZGV4XG5cblx0XHRcdFx0XHRcdFx0Ly8gLi4uaW4gYSBnemlwLWZyaWVuZGx5IHdheVxuXHRcdFx0XHRcdFx0XHRub2RlID0gcGFyZW50O1xuXHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8ICggbm9kZVsgZXhwYW5kbyBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdCggb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdG5vZGVJbmRleCA9IGNhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgY2FjaGVbIDEgXTtcblx0XHRcdFx0XHRcdFx0ZGlmZiA9IG5vZGVJbmRleCAmJiBjYWNoZVsgMiBdO1xuXHRcdFx0XHRcdFx0XHRub2RlID0gbm9kZUluZGV4ICYmIHBhcmVudC5jaGlsZE5vZGVzWyBub2RlSW5kZXggXTtcblxuXHRcdFx0XHRcdFx0XHR3aGlsZSAoICggbm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsgZGlyIF0gfHxcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEZhbGxiYWNrIHRvIHNlZWtpbmcgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0KCBkaWZmID0gbm9kZUluZGV4ID0gMCApIHx8IHN0YXJ0LnBvcCgpICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBXaGVuIGZvdW5kLCBjYWNoZSBpbmRleGVzIG9uIGBwYXJlbnRgIGFuZCBicmVha1xuXHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZS5ub2RlVHlwZSA9PT0gMSAmJiArK2RpZmYgJiYgbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIG5vZGVJbmRleCwgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gVXNlIHByZXZpb3VzbHktY2FjaGVkIGVsZW1lbnQgaW5kZXggaWYgYXZhaWxhYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggdXNlQ2FjaGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyAuLi5pbiBhIGd6aXAtZnJpZW5kbHkgd2F5XG5cdFx0XHRcdFx0XHRcdFx0bm9kZSA9IGVsZW07XG5cdFx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAoIG5vZGVbIGV4cGFuZG8gXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdCggb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0XHRcdGNhY2hlID0gdW5pcXVlQ2FjaGVbIHR5cGUgXSB8fCBbXTtcblx0XHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdFx0ZGlmZiA9IG5vZGVJbmRleDtcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdC8vIHhtbCA6bnRoLWNoaWxkKC4uLilcblx0XHRcdFx0XHRcdFx0Ly8gb3IgOm50aC1sYXN0LWNoaWxkKC4uLikgb3IgOm50aCgtbGFzdCk/LW9mLXR5cGUoLi4uKVxuXHRcdFx0XHRcdFx0XHRpZiAoIGRpZmYgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gVXNlIHRoZSBzYW1lIGxvb3AgYXMgYWJvdmUgdG8gc2VlayBgZWxlbWAgZnJvbSB0aGUgc3RhcnRcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoICggbm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsgZGlyIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdCggZGlmZiA9IG5vZGVJbmRleCA9IDAgKSB8fCBzdGFydC5wb3AoKSApICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCsrZGlmZiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBDYWNoZSB0aGUgaW5kZXggb2YgZWFjaCBlbmNvdW50ZXJlZCBlbGVtZW50XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggdXNlQ2FjaGUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0KCBub2RlWyBleHBhbmRvIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQoIG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZVsgdHlwZSBdID0gWyBkaXJydW5zLCBkaWZmIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIG5vZGUgPT09IGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gSW5jb3Jwb3JhdGUgdGhlIG9mZnNldCwgdGhlbiBjaGVjayBhZ2FpbnN0IGN5Y2xlIHNpemVcblx0XHRcdFx0XHRcdGRpZmYgLT0gbGFzdDtcblx0XHRcdFx0XHRcdHJldHVybiBkaWZmID09PSBmaXJzdCB8fCAoIGRpZmYgJSBmaXJzdCA9PT0gMCAmJiBkaWZmIC8gZmlyc3QgPj0gMCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJQU0VVRE9cIjogZnVuY3Rpb24oIHBzZXVkbywgYXJndW1lbnQgKSB7XG5cblx0XHRcdC8vIHBzZXVkby1jbGFzcyBuYW1lcyBhcmUgY2FzZS1pbnNlbnNpdGl2ZVxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNwc2V1ZG8tY2xhc3Nlc1xuXHRcdFx0Ly8gUHJpb3JpdGl6ZSBieSBjYXNlIHNlbnNpdGl2aXR5IGluIGNhc2UgY3VzdG9tIHBzZXVkb3MgYXJlIGFkZGVkIHdpdGggdXBwZXJjYXNlIGxldHRlcnNcblx0XHRcdC8vIFJlbWVtYmVyIHRoYXQgc2V0RmlsdGVycyBpbmhlcml0cyBmcm9tIHBzZXVkb3Ncblx0XHRcdHZhciBhcmdzLFxuXHRcdFx0XHRmbiA9IEV4cHIucHNldWRvc1sgcHNldWRvIF0gfHwgRXhwci5zZXRGaWx0ZXJzWyBwc2V1ZG8udG9Mb3dlckNhc2UoKSBdIHx8XG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIHBzZXVkbzogXCIgKyBwc2V1ZG8gKTtcblxuXHRcdFx0Ly8gVGhlIHVzZXIgbWF5IHVzZSBjcmVhdGVQc2V1ZG8gdG8gaW5kaWNhdGUgdGhhdFxuXHRcdFx0Ly8gYXJndW1lbnRzIGFyZSBuZWVkZWQgdG8gY3JlYXRlIHRoZSBmaWx0ZXIgZnVuY3Rpb25cblx0XHRcdC8vIGp1c3QgYXMgU2l6emxlIGRvZXNcblx0XHRcdGlmICggZm5bIGV4cGFuZG8gXSApIHtcblx0XHRcdFx0cmV0dXJuIGZuKCBhcmd1bWVudCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBCdXQgbWFpbnRhaW4gc3VwcG9ydCBmb3Igb2xkIHNpZ25hdHVyZXNcblx0XHRcdGlmICggZm4ubGVuZ3RoID4gMSApIHtcblx0XHRcdFx0YXJncyA9IFsgcHNldWRvLCBwc2V1ZG8sIFwiXCIsIGFyZ3VtZW50IF07XG5cdFx0XHRcdHJldHVybiBFeHByLnNldEZpbHRlcnMuaGFzT3duUHJvcGVydHkoIHBzZXVkby50b0xvd2VyQ2FzZSgpICkgP1xuXHRcdFx0XHRcdG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMgKSB7XG5cdFx0XHRcdFx0XHR2YXIgaWR4LFxuXHRcdFx0XHRcdFx0XHRtYXRjaGVkID0gZm4oIHNlZWQsIGFyZ3VtZW50ICksXG5cdFx0XHRcdFx0XHRcdGkgPSBtYXRjaGVkLmxlbmd0aDtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZHggPSBpbmRleE9mKCBzZWVkLCBtYXRjaGVkWyBpIF0gKTtcblx0XHRcdFx0XHRcdFx0c2VlZFsgaWR4IF0gPSAhKCBtYXRjaGVzWyBpZHggXSA9IG1hdGNoZWRbIGkgXSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gKSA6XG5cdFx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZm4oIGVsZW0sIDAsIGFyZ3MgKTtcblx0XHRcdFx0XHR9O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZm47XG5cdFx0fVxuXHR9LFxuXG5cdHBzZXVkb3M6IHtcblxuXHRcdC8vIFBvdGVudGlhbGx5IGNvbXBsZXggcHNldWRvc1xuXHRcdFwibm90XCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXG5cdFx0XHQvLyBUcmltIHRoZSBzZWxlY3RvciBwYXNzZWQgdG8gY29tcGlsZVxuXHRcdFx0Ly8gdG8gYXZvaWQgdHJlYXRpbmcgbGVhZGluZyBhbmQgdHJhaWxpbmdcblx0XHRcdC8vIHNwYWNlcyBhcyBjb21iaW5hdG9yc1xuXHRcdFx0dmFyIGlucHV0ID0gW10sXG5cdFx0XHRcdHJlc3VsdHMgPSBbXSxcblx0XHRcdFx0bWF0Y2hlciA9IGNvbXBpbGUoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSApO1xuXG5cdFx0XHRyZXR1cm4gbWF0Y2hlclsgZXhwYW5kbyBdID9cblx0XHRcdFx0bWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcywgX2NvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHR2YXIgZWxlbSxcblx0XHRcdFx0XHRcdHVubWF0Y2hlZCA9IG1hdGNoZXIoIHNlZWQsIG51bGwsIHhtbCwgW10gKSxcblx0XHRcdFx0XHRcdGkgPSBzZWVkLmxlbmd0aDtcblxuXHRcdFx0XHRcdC8vIE1hdGNoIGVsZW1lbnRzIHVubWF0Y2hlZCBieSBgbWF0Y2hlcmBcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGlmICggKCBlbGVtID0gdW5tYXRjaGVkWyBpIF0gKSApIHtcblx0XHRcdFx0XHRcdFx0c2VlZFsgaSBdID0gISggbWF0Y2hlc1sgaSBdID0gZWxlbSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApIDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIF9jb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0aW5wdXRbIDAgXSA9IGVsZW07XG5cdFx0XHRcdFx0bWF0Y2hlciggaW5wdXQsIG51bGwsIHhtbCwgcmVzdWx0cyApO1xuXG5cdFx0XHRcdFx0Ly8gRG9uJ3Qga2VlcCB0aGUgZWxlbWVudCAoaXNzdWUgIzI5OSlcblx0XHRcdFx0XHRpbnB1dFsgMCBdID0gbnVsbDtcblx0XHRcdFx0XHRyZXR1cm4gIXJlc3VsdHMucG9wKCk7XG5cdFx0XHRcdH07XG5cdFx0fSApLFxuXG5cdFx0XCJoYXNcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBTaXp6bGUoIHNlbGVjdG9yLCBlbGVtICkubGVuZ3RoID4gMDtcblx0XHRcdH07XG5cdFx0fSApLFxuXG5cdFx0XCJjb250YWluc1wiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuICggZWxlbS50ZXh0Q29udGVudCB8fCBnZXRUZXh0KCBlbGVtICkgKS5pbmRleE9mKCB0ZXh0ICkgPiAtMTtcblx0XHRcdH07XG5cdFx0fSApLFxuXG5cdFx0Ly8gXCJXaGV0aGVyIGFuIGVsZW1lbnQgaXMgcmVwcmVzZW50ZWQgYnkgYSA6bGFuZygpIHNlbGVjdG9yXG5cdFx0Ly8gaXMgYmFzZWQgc29sZWx5IG9uIHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWVcblx0XHQvLyBiZWluZyBlcXVhbCB0byB0aGUgaWRlbnRpZmllciBDLFxuXHRcdC8vIG9yIGJlZ2lubmluZyB3aXRoIHRoZSBpZGVudGlmaWVyIEMgaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgXCItXCIuXG5cdFx0Ly8gVGhlIG1hdGNoaW5nIG9mIEMgYWdhaW5zdCB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlIGlzIHBlcmZvcm1lZCBjYXNlLWluc2Vuc2l0aXZlbHkuXG5cdFx0Ly8gVGhlIGlkZW50aWZpZXIgQyBkb2VzIG5vdCBoYXZlIHRvIGJlIGEgdmFsaWQgbGFuZ3VhZ2UgbmFtZS5cIlxuXHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jbGFuZy1wc2V1ZG9cblx0XHRcImxhbmdcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggbGFuZyApIHtcblxuXHRcdFx0Ly8gbGFuZyB2YWx1ZSBtdXN0IGJlIGEgdmFsaWQgaWRlbnRpZmllclxuXHRcdFx0aWYgKCAhcmlkZW50aWZpZXIudGVzdCggbGFuZyB8fCBcIlwiICkgKSB7XG5cdFx0XHRcdFNpenpsZS5lcnJvciggXCJ1bnN1cHBvcnRlZCBsYW5nOiBcIiArIGxhbmcgKTtcblx0XHRcdH1cblx0XHRcdGxhbmcgPSBsYW5nLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICkudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIGVsZW1MYW5nO1xuXHRcdFx0XHRkbyB7XG5cdFx0XHRcdFx0aWYgKCAoIGVsZW1MYW5nID0gZG9jdW1lbnRJc0hUTUwgP1xuXHRcdFx0XHRcdFx0ZWxlbS5sYW5nIDpcblx0XHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKCBcInhtbDpsYW5nXCIgKSB8fCBlbGVtLmdldEF0dHJpYnV0ZSggXCJsYW5nXCIgKSApICkge1xuXG5cdFx0XHRcdFx0XHRlbGVtTGFuZyA9IGVsZW1MYW5nLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbUxhbmcgPT09IGxhbmcgfHwgZWxlbUxhbmcuaW5kZXhPZiggbGFuZyArIFwiLVwiICkgPT09IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IHdoaWxlICggKCBlbGVtID0gZWxlbS5wYXJlbnROb2RlICkgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0gKSxcblxuXHRcdC8vIE1pc2NlbGxhbmVvdXNcblx0XHRcInRhcmdldFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBoYXNoID0gd2luZG93LmxvY2F0aW9uICYmIHdpbmRvdy5sb2NhdGlvbi5oYXNoO1xuXHRcdFx0cmV0dXJuIGhhc2ggJiYgaGFzaC5zbGljZSggMSApID09PSBlbGVtLmlkO1xuXHRcdH0sXG5cblx0XHRcInJvb3RcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gZG9jRWxlbTtcblx0XHR9LFxuXG5cdFx0XCJmb2N1c1wiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmXG5cdFx0XHRcdCggIWRvY3VtZW50Lmhhc0ZvY3VzIHx8IGRvY3VtZW50Lmhhc0ZvY3VzKCkgKSAmJlxuXHRcdFx0XHQhISggZWxlbS50eXBlIHx8IGVsZW0uaHJlZiB8fCB+ZWxlbS50YWJJbmRleCApO1xuXHRcdH0sXG5cblx0XHQvLyBCb29sZWFuIHByb3BlcnRpZXNcblx0XHRcImVuYWJsZWRcIjogY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIGZhbHNlICksXG5cdFx0XCJkaXNhYmxlZFwiOiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggdHJ1ZSApLFxuXG5cdFx0XCJjaGVja2VkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvLyBJbiBDU1MzLCA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIGJvdGggY2hlY2tlZCBhbmQgc2VsZWN0ZWQgZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHR2YXIgbm9kZU5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiICYmICEhZWxlbS5jaGVja2VkICkgfHxcblx0XHRcdFx0KCBub2RlTmFtZSA9PT0gXCJvcHRpb25cIiAmJiAhIWVsZW0uc2VsZWN0ZWQgKTtcblx0XHR9LFxuXG5cdFx0XCJzZWxlY3RlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0Ly8gQWNjZXNzaW5nIHRoaXMgcHJvcGVydHkgbWFrZXMgc2VsZWN0ZWQtYnktZGVmYXVsdFxuXHRcdFx0Ly8gb3B0aW9ucyBpbiBTYWZhcmkgd29yayBwcm9wZXJseVxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtZXhwcmVzc2lvbnNcblx0XHRcdFx0ZWxlbS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBlbGVtLnNlbGVjdGVkID09PSB0cnVlO1xuXHRcdH0sXG5cblx0XHQvLyBDb250ZW50c1xuXHRcdFwiZW1wdHlcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jZW1wdHktcHNldWRvXG5cdFx0XHQvLyA6ZW1wdHkgaXMgbmVnYXRlZCBieSBlbGVtZW50ICgxKSBvciBjb250ZW50IG5vZGVzICh0ZXh0OiAzOyBjZGF0YTogNDsgZW50aXR5IHJlZjogNSksXG5cdFx0XHQvLyAgIGJ1dCBub3QgYnkgb3RoZXJzIChjb21tZW50OiA4OyBwcm9jZXNzaW5nIGluc3RydWN0aW9uOiA3OyBldGMuKVxuXHRcdFx0Ly8gbm9kZVR5cGUgPCA2IHdvcmtzIGJlY2F1c2UgYXR0cmlidXRlcyAoMikgZG8gbm90IGFwcGVhciBhcyBjaGlsZHJlblxuXHRcdFx0Zm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcgKSB7XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA8IDYgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0XCJwYXJlbnRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gIUV4cHIucHNldWRvc1sgXCJlbXB0eVwiIF0oIGVsZW0gKTtcblx0XHR9LFxuXG5cdFx0Ly8gRWxlbWVudC9pbnB1dCB0eXBlc1xuXHRcdFwiaGVhZGVyXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIHJoZWFkZXIudGVzdCggZWxlbS5ub2RlTmFtZSApO1xuXHRcdH0sXG5cblx0XHRcImlucHV0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIHJpbnB1dHMudGVzdCggZWxlbS5ub2RlTmFtZSApO1xuXHRcdH0sXG5cblx0XHRcImJ1dHRvblwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIG5hbWUgPT09IFwiaW5wdXRcIiAmJiBlbGVtLnR5cGUgPT09IFwiYnV0dG9uXCIgfHwgbmFtZSA9PT0gXCJidXR0b25cIjtcblx0XHR9LFxuXG5cdFx0XCJ0ZXh0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIGF0dHI7XG5cdFx0XHRyZXR1cm4gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImlucHV0XCIgJiZcblx0XHRcdFx0ZWxlbS50eXBlID09PSBcInRleHRcIiAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFPDhcblx0XHRcdFx0Ly8gTmV3IEhUTUw1IGF0dHJpYnV0ZSB2YWx1ZXMgKGUuZy4sIFwic2VhcmNoXCIpIGFwcGVhciB3aXRoIGVsZW0udHlwZSA9PT0gXCJ0ZXh0XCJcblx0XHRcdFx0KCAoIGF0dHIgPSBlbGVtLmdldEF0dHJpYnV0ZSggXCJ0eXBlXCIgKSApID09IG51bGwgfHxcblx0XHRcdFx0XHRhdHRyLnRvTG93ZXJDYXNlKCkgPT09IFwidGV4dFwiICk7XG5cdFx0fSxcblxuXHRcdC8vIFBvc2l0aW9uLWluLWNvbGxlY3Rpb25cblx0XHRcImZpcnN0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIFsgMCBdO1xuXHRcdH0gKSxcblxuXHRcdFwibGFzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggX21hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIFsgbGVuZ3RoIC0gMSBdO1xuXHRcdH0gKSxcblxuXHRcdFwiZXFcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIF9tYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHRyZXR1cm4gWyBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50IF07XG5cdFx0fSApLFxuXG5cdFx0XCJldmVuXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHZhciBpID0gMDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSArPSAyICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9ICksXG5cblx0XHRcIm9kZFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDE7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSApLFxuXG5cdFx0XCJsdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgP1xuXHRcdFx0XHRhcmd1bWVudCArIGxlbmd0aCA6XG5cdFx0XHRcdGFyZ3VtZW50ID4gbGVuZ3RoID9cblx0XHRcdFx0XHRsZW5ndGggOlxuXHRcdFx0XHRcdGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyAtLWkgPj0gMDsgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0gKSxcblxuXHRcdFwiZ3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudDtcblx0XHRcdGZvciAoIDsgKytpIDwgbGVuZ3RoOyApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSApXG5cdH1cbn07XG5cbkV4cHIucHNldWRvc1sgXCJudGhcIiBdID0gRXhwci5wc2V1ZG9zWyBcImVxXCIgXTtcblxuLy8gQWRkIGJ1dHRvbi9pbnB1dCB0eXBlIHBzZXVkb3NcbmZvciAoIGkgaW4geyByYWRpbzogdHJ1ZSwgY2hlY2tib3g6IHRydWUsIGZpbGU6IHRydWUsIHBhc3N3b3JkOiB0cnVlLCBpbWFnZTogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUlucHV0UHNldWRvKCBpICk7XG59XG5mb3IgKCBpIGluIHsgc3VibWl0OiB0cnVlLCByZXNldDogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUJ1dHRvblBzZXVkbyggaSApO1xufVxuXG4vLyBFYXN5IEFQSSBmb3IgY3JlYXRpbmcgbmV3IHNldEZpbHRlcnNcbmZ1bmN0aW9uIHNldEZpbHRlcnMoKSB7fVxuc2V0RmlsdGVycy5wcm90b3R5cGUgPSBFeHByLmZpbHRlcnMgPSBFeHByLnBzZXVkb3M7XG5FeHByLnNldEZpbHRlcnMgPSBuZXcgc2V0RmlsdGVycygpO1xuXG50b2tlbml6ZSA9IFNpenpsZS50b2tlbml6ZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgcGFyc2VPbmx5ICkge1xuXHR2YXIgbWF0Y2hlZCwgbWF0Y2gsIHRva2VucywgdHlwZSxcblx0XHRzb0ZhciwgZ3JvdXBzLCBwcmVGaWx0ZXJzLFxuXHRcdGNhY2hlZCA9IHRva2VuQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcblxuXHRpZiAoIGNhY2hlZCApIHtcblx0XHRyZXR1cm4gcGFyc2VPbmx5ID8gMCA6IGNhY2hlZC5zbGljZSggMCApO1xuXHR9XG5cblx0c29GYXIgPSBzZWxlY3Rvcjtcblx0Z3JvdXBzID0gW107XG5cdHByZUZpbHRlcnMgPSBFeHByLnByZUZpbHRlcjtcblxuXHR3aGlsZSAoIHNvRmFyICkge1xuXG5cdFx0Ly8gQ29tbWEgYW5kIGZpcnN0IHJ1blxuXHRcdGlmICggIW1hdGNoZWQgfHwgKCBtYXRjaCA9IHJjb21tYS5leGVjKCBzb0ZhciApICkgKSB7XG5cdFx0XHRpZiAoIG1hdGNoICkge1xuXG5cdFx0XHRcdC8vIERvbid0IGNvbnN1bWUgdHJhaWxpbmcgY29tbWFzIGFzIHZhbGlkXG5cdFx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoWyAwIF0ubGVuZ3RoICkgfHwgc29GYXI7XG5cdFx0XHR9XG5cdFx0XHRncm91cHMucHVzaCggKCB0b2tlbnMgPSBbXSApICk7XG5cdFx0fVxuXG5cdFx0bWF0Y2hlZCA9IGZhbHNlO1xuXG5cdFx0Ly8gQ29tYmluYXRvcnNcblx0XHRpZiAoICggbWF0Y2ggPSByY29tYmluYXRvcnMuZXhlYyggc29GYXIgKSApICkge1xuXHRcdFx0bWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7XG5cdFx0XHR0b2tlbnMucHVzaCgge1xuXHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblxuXHRcdFx0XHQvLyBDYXN0IGRlc2NlbmRhbnQgY29tYmluYXRvcnMgdG8gc3BhY2Vcblx0XHRcdFx0dHlwZTogbWF0Y2hbIDAgXS5yZXBsYWNlKCBydHJpbSwgXCIgXCIgKVxuXHRcdFx0fSApO1xuXHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hlZC5sZW5ndGggKTtcblx0XHR9XG5cblx0XHQvLyBGaWx0ZXJzXG5cdFx0Zm9yICggdHlwZSBpbiBFeHByLmZpbHRlciApIHtcblx0XHRcdGlmICggKCBtYXRjaCA9IG1hdGNoRXhwclsgdHlwZSBdLmV4ZWMoIHNvRmFyICkgKSAmJiAoICFwcmVGaWx0ZXJzWyB0eXBlIF0gfHxcblx0XHRcdFx0KCBtYXRjaCA9IHByZUZpbHRlcnNbIHR5cGUgXSggbWF0Y2ggKSApICkgKSB7XG5cdFx0XHRcdG1hdGNoZWQgPSBtYXRjaC5zaGlmdCgpO1xuXHRcdFx0XHR0b2tlbnMucHVzaCgge1xuXHRcdFx0XHRcdHZhbHVlOiBtYXRjaGVkLFxuXHRcdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdFx0bWF0Y2hlczogbWF0Y2hcblx0XHRcdFx0fSApO1xuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggIW1hdGNoZWQgKSB7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIGxlbmd0aCBvZiB0aGUgaW52YWxpZCBleGNlc3Ncblx0Ly8gaWYgd2UncmUganVzdCBwYXJzaW5nXG5cdC8vIE90aGVyd2lzZSwgdGhyb3cgYW4gZXJyb3Igb3IgcmV0dXJuIHRva2Vuc1xuXHRyZXR1cm4gcGFyc2VPbmx5ID9cblx0XHRzb0Zhci5sZW5ndGggOlxuXHRcdHNvRmFyID9cblx0XHRcdFNpenpsZS5lcnJvciggc2VsZWN0b3IgKSA6XG5cblx0XHRcdC8vIENhY2hlIHRoZSB0b2tlbnNcblx0XHRcdHRva2VuQ2FjaGUoIHNlbGVjdG9yLCBncm91cHMgKS5zbGljZSggMCApO1xufTtcblxuZnVuY3Rpb24gdG9TZWxlY3RvciggdG9rZW5zICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRzZWxlY3RvciA9IFwiXCI7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdHNlbGVjdG9yICs9IHRva2Vuc1sgaSBdLnZhbHVlO1xuXHR9XG5cdHJldHVybiBzZWxlY3Rvcjtcbn1cblxuZnVuY3Rpb24gYWRkQ29tYmluYXRvciggbWF0Y2hlciwgY29tYmluYXRvciwgYmFzZSApIHtcblx0dmFyIGRpciA9IGNvbWJpbmF0b3IuZGlyLFxuXHRcdHNraXAgPSBjb21iaW5hdG9yLm5leHQsXG5cdFx0a2V5ID0gc2tpcCB8fCBkaXIsXG5cdFx0Y2hlY2tOb25FbGVtZW50cyA9IGJhc2UgJiYga2V5ID09PSBcInBhcmVudE5vZGVcIixcblx0XHRkb25lTmFtZSA9IGRvbmUrKztcblxuXHRyZXR1cm4gY29tYmluYXRvci5maXJzdCA/XG5cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGNsb3Nlc3QgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICkge1xuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRyZXR1cm4gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9IDpcblxuXHRcdC8vIENoZWNrIGFnYWluc3QgYWxsIGFuY2VzdG9yL3ByZWNlZGluZyBlbGVtZW50c1xuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR2YXIgb2xkQ2FjaGUsIHVuaXF1ZUNhY2hlLCBvdXRlckNhY2hlLFxuXHRcdFx0XHRuZXdDYWNoZSA9IFsgZGlycnVucywgZG9uZU5hbWUgXTtcblxuXHRcdFx0Ly8gV2UgY2FuJ3Qgc2V0IGFyYml0cmFyeSBkYXRhIG9uIFhNTCBub2Rlcywgc28gdGhleSBkb24ndCBiZW5lZml0IGZyb20gY29tYmluYXRvciBjYWNoaW5nXG5cdFx0XHRpZiAoIHhtbCApIHtcblx0XHRcdFx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICkge1xuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gZWxlbVsgZXhwYW5kbyBdIHx8ICggZWxlbVsgZXhwYW5kbyBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHQoIG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdGlmICggc2tpcCAmJiBza2lwID09PSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgKSB7XG5cdFx0XHRcdFx0XHRcdGVsZW0gPSBlbGVtWyBkaXIgXSB8fCBlbGVtO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmICggKCBvbGRDYWNoZSA9IHVuaXF1ZUNhY2hlWyBrZXkgXSApICYmXG5cdFx0XHRcdFx0XHRcdG9sZENhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgb2xkQ2FjaGVbIDEgXSA9PT0gZG9uZU5hbWUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQXNzaWduIHRvIG5ld0NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0cmV0dXJuICggbmV3Q2FjaGVbIDIgXSA9IG9sZENhY2hlWyAyIF0gKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gUmV1c2UgbmV3Y2FjaGUgc28gcmVzdWx0cyBiYWNrLXByb3BhZ2F0ZSB0byBwcmV2aW91cyBlbGVtZW50c1xuXHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZVsga2V5IF0gPSBuZXdDYWNoZTtcblxuXHRcdFx0XHRcdFx0XHQvLyBBIG1hdGNoIG1lYW5zIHdlJ3JlIGRvbmU7IGEgZmFpbCBtZWFucyB3ZSBoYXZlIHRvIGtlZXAgY2hlY2tpbmdcblx0XHRcdFx0XHRcdFx0aWYgKCAoIG5ld0NhY2hlWyAyIF0gPSBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICkge1xuXHRyZXR1cm4gbWF0Y2hlcnMubGVuZ3RoID4gMSA/XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBpID0gbWF0Y2hlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggIW1hdGNoZXJzWyBpIF0oIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSA6XG5cdFx0bWF0Y2hlcnNbIDAgXTtcbn1cblxuZnVuY3Rpb24gbXVsdGlwbGVDb250ZXh0cyggc2VsZWN0b3IsIGNvbnRleHRzLCByZXN1bHRzICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bGVuID0gY29udGV4dHMubGVuZ3RoO1xuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRTaXp6bGUoIHNlbGVjdG9yLCBjb250ZXh0c1sgaSBdLCByZXN1bHRzICk7XG5cdH1cblx0cmV0dXJuIHJlc3VsdHM7XG59XG5cbmZ1bmN0aW9uIGNvbmRlbnNlKCB1bm1hdGNoZWQsIG1hcCwgZmlsdGVyLCBjb250ZXh0LCB4bWwgKSB7XG5cdHZhciBlbGVtLFxuXHRcdG5ld1VubWF0Y2hlZCA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGxlbiA9IHVubWF0Y2hlZC5sZW5ndGgsXG5cdFx0bWFwcGVkID0gbWFwICE9IG51bGw7XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAoIGVsZW0gPSB1bm1hdGNoZWRbIGkgXSApICkge1xuXHRcdFx0aWYgKCAhZmlsdGVyIHx8IGZpbHRlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XG5cdFx0XHRcdG5ld1VubWF0Y2hlZC5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdGlmICggbWFwcGVkICkge1xuXHRcdFx0XHRcdG1hcC5wdXNoKCBpICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbmV3VW5tYXRjaGVkO1xufVxuXG5mdW5jdGlvbiBzZXRNYXRjaGVyKCBwcmVGaWx0ZXIsIHNlbGVjdG9yLCBtYXRjaGVyLCBwb3N0RmlsdGVyLCBwb3N0RmluZGVyLCBwb3N0U2VsZWN0b3IgKSB7XG5cdGlmICggcG9zdEZpbHRlciAmJiAhcG9zdEZpbHRlclsgZXhwYW5kbyBdICkge1xuXHRcdHBvc3RGaWx0ZXIgPSBzZXRNYXRjaGVyKCBwb3N0RmlsdGVyICk7XG5cdH1cblx0aWYgKCBwb3N0RmluZGVyICYmICFwb3N0RmluZGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbmRlciA9IHNldE1hdGNoZXIoIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApO1xuXHR9XG5cdHJldHVybiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWVkLCByZXN1bHRzLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0dmFyIHRlbXAsIGksIGVsZW0sXG5cdFx0XHRwcmVNYXAgPSBbXSxcblx0XHRcdHBvc3RNYXAgPSBbXSxcblx0XHRcdHByZWV4aXN0aW5nID0gcmVzdWx0cy5sZW5ndGgsXG5cblx0XHRcdC8vIEdldCBpbml0aWFsIGVsZW1lbnRzIGZyb20gc2VlZCBvciBjb250ZXh0XG5cdFx0XHRlbGVtcyA9IHNlZWQgfHwgbXVsdGlwbGVDb250ZXh0cyhcblx0XHRcdFx0c2VsZWN0b3IgfHwgXCIqXCIsXG5cdFx0XHRcdGNvbnRleHQubm9kZVR5cGUgPyBbIGNvbnRleHQgXSA6IGNvbnRleHQsXG5cdFx0XHRcdFtdXG5cdFx0XHQpLFxuXG5cdFx0XHQvLyBQcmVmaWx0ZXIgdG8gZ2V0IG1hdGNoZXIgaW5wdXQsIHByZXNlcnZpbmcgYSBtYXAgZm9yIHNlZWQtcmVzdWx0cyBzeW5jaHJvbml6YXRpb25cblx0XHRcdG1hdGNoZXJJbiA9IHByZUZpbHRlciAmJiAoIHNlZWQgfHwgIXNlbGVjdG9yICkgP1xuXHRcdFx0XHRjb25kZW5zZSggZWxlbXMsIHByZU1hcCwgcHJlRmlsdGVyLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdGVsZW1zLFxuXG5cdFx0XHRtYXRjaGVyT3V0ID0gbWF0Y2hlciA/XG5cblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBhIHBvc3RGaW5kZXIsIG9yIGZpbHRlcmVkIHNlZWQsIG9yIG5vbi1zZWVkIHBvc3RGaWx0ZXIgb3IgcHJlZXhpc3RpbmcgcmVzdWx0cyxcblx0XHRcdFx0cG9zdEZpbmRlciB8fCAoIHNlZWQgPyBwcmVGaWx0ZXIgOiBwcmVleGlzdGluZyB8fCBwb3N0RmlsdGVyICkgP1xuXG5cdFx0XHRcdFx0Ly8gLi4uaW50ZXJtZWRpYXRlIHByb2Nlc3NpbmcgaXMgbmVjZXNzYXJ5XG5cdFx0XHRcdFx0W10gOlxuXG5cdFx0XHRcdFx0Ly8gLi4ub3RoZXJ3aXNlIHVzZSByZXN1bHRzIGRpcmVjdGx5XG5cdFx0XHRcdFx0cmVzdWx0cyA6XG5cdFx0XHRcdG1hdGNoZXJJbjtcblxuXHRcdC8vIEZpbmQgcHJpbWFyeSBtYXRjaGVzXG5cdFx0aWYgKCBtYXRjaGVyICkge1xuXHRcdFx0bWF0Y2hlciggbWF0Y2hlckluLCBtYXRjaGVyT3V0LCBjb250ZXh0LCB4bWwgKTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSBwb3N0RmlsdGVyXG5cdFx0aWYgKCBwb3N0RmlsdGVyICkge1xuXHRcdFx0dGVtcCA9IGNvbmRlbnNlKCBtYXRjaGVyT3V0LCBwb3N0TWFwICk7XG5cdFx0XHRwb3N0RmlsdGVyKCB0ZW1wLCBbXSwgY29udGV4dCwgeG1sICk7XG5cblx0XHRcdC8vIFVuLW1hdGNoIGZhaWxpbmcgZWxlbWVudHMgYnkgbW92aW5nIHRoZW0gYmFjayB0byBtYXRjaGVySW5cblx0XHRcdGkgPSB0ZW1wLmxlbmd0aDtcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoICggZWxlbSA9IHRlbXBbIGkgXSApICkge1xuXHRcdFx0XHRcdG1hdGNoZXJPdXRbIHBvc3RNYXBbIGkgXSBdID0gISggbWF0Y2hlckluWyBwb3N0TWFwWyBpIF0gXSA9IGVsZW0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggc2VlZCApIHtcblx0XHRcdGlmICggcG9zdEZpbmRlciB8fCBwcmVGaWx0ZXIgKSB7XG5cdFx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblxuXHRcdFx0XHRcdC8vIEdldCB0aGUgZmluYWwgbWF0Y2hlck91dCBieSBjb25kZW5zaW5nIHRoaXMgaW50ZXJtZWRpYXRlIGludG8gcG9zdEZpbmRlciBjb250ZXh0c1xuXHRcdFx0XHRcdHRlbXAgPSBbXTtcblx0XHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRpZiAoICggZWxlbSA9IG1hdGNoZXJPdXRbIGkgXSApICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFJlc3RvcmUgbWF0Y2hlckluIHNpbmNlIGVsZW0gaXMgbm90IHlldCBhIGZpbmFsIG1hdGNoXG5cdFx0XHRcdFx0XHRcdHRlbXAucHVzaCggKCBtYXRjaGVySW5bIGkgXSA9IGVsZW0gKSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCAoIG1hdGNoZXJPdXQgPSBbXSApLCB0ZW1wLCB4bWwgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIE1vdmUgbWF0Y2hlZCBlbGVtZW50cyBmcm9tIHNlZWQgdG8gcmVzdWx0cyB0byBrZWVwIHRoZW0gc3luY2hyb25pemVkXG5cdFx0XHRcdGkgPSBtYXRjaGVyT3V0Lmxlbmd0aDtcblx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0aWYgKCAoIGVsZW0gPSBtYXRjaGVyT3V0WyBpIF0gKSAmJlxuXHRcdFx0XHRcdFx0KCB0ZW1wID0gcG9zdEZpbmRlciA/IGluZGV4T2YoIHNlZWQsIGVsZW0gKSA6IHByZU1hcFsgaSBdICkgPiAtMSApIHtcblxuXHRcdFx0XHRcdFx0c2VlZFsgdGVtcCBdID0gISggcmVzdWx0c1sgdGVtcCBdID0gZWxlbSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gQWRkIGVsZW1lbnRzIHRvIHJlc3VsdHMsIHRocm91Z2ggcG9zdEZpbmRlciBpZiBkZWZpbmVkXG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXJPdXQgPSBjb25kZW5zZShcblx0XHRcdFx0bWF0Y2hlck91dCA9PT0gcmVzdWx0cyA/XG5cdFx0XHRcdFx0bWF0Y2hlck91dC5zcGxpY2UoIHByZWV4aXN0aW5nLCBtYXRjaGVyT3V0Lmxlbmd0aCApIDpcblx0XHRcdFx0XHRtYXRjaGVyT3V0XG5cdFx0XHQpO1xuXHRcdFx0aWYgKCBwb3N0RmluZGVyICkge1xuXHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCByZXN1bHRzLCBtYXRjaGVyT3V0LCB4bWwgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIG1hdGNoZXJPdXQgKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gKTtcbn1cblxuZnVuY3Rpb24gbWF0Y2hlckZyb21Ub2tlbnMoIHRva2VucyApIHtcblx0dmFyIGNoZWNrQ29udGV4dCwgbWF0Y2hlciwgaixcblx0XHRsZW4gPSB0b2tlbnMubGVuZ3RoLFxuXHRcdGxlYWRpbmdSZWxhdGl2ZSA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1sgMCBdLnR5cGUgXSxcblx0XHRpbXBsaWNpdFJlbGF0aXZlID0gbGVhZGluZ1JlbGF0aXZlIHx8IEV4cHIucmVsYXRpdmVbIFwiIFwiIF0sXG5cdFx0aSA9IGxlYWRpbmdSZWxhdGl2ZSA/IDEgOiAwLFxuXG5cdFx0Ly8gVGhlIGZvdW5kYXRpb25hbCBtYXRjaGVyIGVuc3VyZXMgdGhhdCBlbGVtZW50cyBhcmUgcmVhY2hhYmxlIGZyb20gdG9wLWxldmVsIGNvbnRleHQocylcblx0XHRtYXRjaENvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBjaGVja0NvbnRleHQ7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoQW55Q29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YoIGNoZWNrQ29udGV4dCwgZWxlbSApID4gLTE7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoZXJzID0gWyBmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIHJldCA9ICggIWxlYWRpbmdSZWxhdGl2ZSAmJiAoIHhtbCB8fCBjb250ZXh0ICE9PSBvdXRlcm1vc3RDb250ZXh0ICkgKSB8fCAoXG5cdFx0XHRcdCggY2hlY2tDb250ZXh0ID0gY29udGV4dCApLm5vZGVUeXBlID9cblx0XHRcdFx0XHRtYXRjaENvbnRleHQoIGVsZW0sIGNvbnRleHQsIHhtbCApIDpcblx0XHRcdFx0XHRtYXRjaEFueUNvbnRleHQoIGVsZW0sIGNvbnRleHQsIHhtbCApICk7XG5cblx0XHRcdC8vIEF2b2lkIGhhbmdpbmcgb250byBlbGVtZW50IChpc3N1ZSAjMjk5KVxuXHRcdFx0Y2hlY2tDb250ZXh0ID0gbnVsbDtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fSBdO1xuXG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdGlmICggKCBtYXRjaGVyID0gRXhwci5yZWxhdGl2ZVsgdG9rZW5zWyBpIF0udHlwZSBdICkgKSB7XG5cdFx0XHRtYXRjaGVycyA9IFsgYWRkQ29tYmluYXRvciggZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksIG1hdGNoZXIgKSBdO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRtYXRjaGVyID0gRXhwci5maWx0ZXJbIHRva2Vuc1sgaSBdLnR5cGUgXS5hcHBseSggbnVsbCwgdG9rZW5zWyBpIF0ubWF0Y2hlcyApO1xuXG5cdFx0XHQvLyBSZXR1cm4gc3BlY2lhbCB1cG9uIHNlZWluZyBhIHBvc2l0aW9uYWwgbWF0Y2hlclxuXHRcdFx0aWYgKCBtYXRjaGVyWyBleHBhbmRvIF0gKSB7XG5cblx0XHRcdFx0Ly8gRmluZCB0aGUgbmV4dCByZWxhdGl2ZSBvcGVyYXRvciAoaWYgYW55KSBmb3IgcHJvcGVyIGhhbmRsaW5nXG5cdFx0XHRcdGogPSArK2k7XG5cdFx0XHRcdGZvciAoIDsgaiA8IGxlbjsgaisrICkge1xuXHRcdFx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgdG9rZW5zWyBqIF0udHlwZSBdICkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBzZXRNYXRjaGVyKFxuXHRcdFx0XHRcdGkgPiAxICYmIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLFxuXHRcdFx0XHRcdGkgPiAxICYmIHRvU2VsZWN0b3IoXG5cblx0XHRcdFx0XHQvLyBJZiB0aGUgcHJlY2VkaW5nIHRva2VuIHdhcyBhIGRlc2NlbmRhbnQgY29tYmluYXRvciwgaW5zZXJ0IGFuIGltcGxpY2l0IGFueS1lbGVtZW50IGAqYFxuXHRcdFx0XHRcdHRva2Vuc1xuXHRcdFx0XHRcdFx0LnNsaWNlKCAwLCBpIC0gMSApXG5cdFx0XHRcdFx0XHQuY29uY2F0KCB7IHZhbHVlOiB0b2tlbnNbIGkgLSAyIF0udHlwZSA9PT0gXCIgXCIgPyBcIipcIiA6IFwiXCIgfSApXG5cdFx0XHRcdFx0KS5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICksXG5cdFx0XHRcdFx0bWF0Y2hlcixcblx0XHRcdFx0XHRpIDwgaiAmJiBtYXRjaGVyRnJvbVRva2VucyggdG9rZW5zLnNsaWNlKCBpLCBqICkgKSxcblx0XHRcdFx0XHRqIDwgbGVuICYmIG1hdGNoZXJGcm9tVG9rZW5zKCAoIHRva2VucyA9IHRva2Vucy5zbGljZSggaiApICkgKSxcblx0XHRcdFx0XHRqIDwgbGVuICYmIHRvU2VsZWN0b3IoIHRva2VucyApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVycy5wdXNoKCBtYXRjaGVyICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSB7XG5cdHZhciBieVNldCA9IHNldE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0YnlFbGVtZW50ID0gZWxlbWVudE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0c3VwZXJNYXRjaGVyID0gZnVuY3Rpb24oIHNlZWQsIGNvbnRleHQsIHhtbCwgcmVzdWx0cywgb3V0ZXJtb3N0ICkge1xuXHRcdFx0dmFyIGVsZW0sIGosIG1hdGNoZXIsXG5cdFx0XHRcdG1hdGNoZWRDb3VudCA9IDAsXG5cdFx0XHRcdGkgPSBcIjBcIixcblx0XHRcdFx0dW5tYXRjaGVkID0gc2VlZCAmJiBbXSxcblx0XHRcdFx0c2V0TWF0Y2hlZCA9IFtdLFxuXHRcdFx0XHRjb250ZXh0QmFja3VwID0gb3V0ZXJtb3N0Q29udGV4dCxcblxuXHRcdFx0XHQvLyBXZSBtdXN0IGFsd2F5cyBoYXZlIGVpdGhlciBzZWVkIGVsZW1lbnRzIG9yIG91dGVybW9zdCBjb250ZXh0XG5cdFx0XHRcdGVsZW1zID0gc2VlZCB8fCBieUVsZW1lbnQgJiYgRXhwci5maW5kWyBcIlRBR1wiIF0oIFwiKlwiLCBvdXRlcm1vc3QgKSxcblxuXHRcdFx0XHQvLyBVc2UgaW50ZWdlciBkaXJydW5zIGlmZiB0aGlzIGlzIHRoZSBvdXRlcm1vc3QgbWF0Y2hlclxuXHRcdFx0XHRkaXJydW5zVW5pcXVlID0gKCBkaXJydW5zICs9IGNvbnRleHRCYWNrdXAgPT0gbnVsbCA/IDEgOiBNYXRoLnJhbmRvbSgpIHx8IDAuMSApLFxuXHRcdFx0XHRsZW4gPSBlbGVtcy5sZW5ndGg7XG5cblx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdFx0XHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0XHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdFx0XHRcdG91dGVybW9zdENvbnRleHQgPSBjb250ZXh0ID09IGRvY3VtZW50IHx8IGNvbnRleHQgfHwgb3V0ZXJtb3N0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgZWxlbWVudHMgcGFzc2luZyBlbGVtZW50TWF0Y2hlcnMgZGlyZWN0bHkgdG8gcmVzdWx0c1xuXHRcdFx0Ly8gU3VwcG9ydDogSUU8OSwgU2FmYXJpXG5cdFx0XHQvLyBUb2xlcmF0ZSBOb2RlTGlzdCBwcm9wZXJ0aWVzIChJRTogXCJsZW5ndGhcIjsgU2FmYXJpOiA8bnVtYmVyPikgbWF0Y2hpbmcgZWxlbWVudHMgYnkgaWRcblx0XHRcdGZvciAoIDsgaSAhPT0gbGVuICYmICggZWxlbSA9IGVsZW1zWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0XHRcdGlmICggYnlFbGVtZW50ICYmIGVsZW0gKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdFx0XHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0XHRcdFx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0XHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRcdFx0XHRcdGlmICggIWNvbnRleHQgJiYgZWxlbS5vd25lckRvY3VtZW50ICE9IGRvY3VtZW50ICkge1xuXHRcdFx0XHRcdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblx0XHRcdFx0XHRcdHhtbCA9ICFkb2N1bWVudElzSFRNTDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0d2hpbGUgKCAoIG1hdGNoZXIgPSBlbGVtZW50TWF0Y2hlcnNbIGorKyBdICkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQgfHwgZG9jdW1lbnQsIHhtbCApICkge1xuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHJhY2sgdW5tYXRjaGVkIGVsZW1lbnRzIGZvciBzZXQgZmlsdGVyc1xuXHRcdFx0XHRpZiAoIGJ5U2V0ICkge1xuXG5cdFx0XHRcdFx0Ly8gVGhleSB3aWxsIGhhdmUgZ29uZSB0aHJvdWdoIGFsbCBwb3NzaWJsZSBtYXRjaGVyc1xuXHRcdFx0XHRcdGlmICggKCBlbGVtID0gIW1hdGNoZXIgJiYgZWxlbSApICkge1xuXHRcdFx0XHRcdFx0bWF0Y2hlZENvdW50LS07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gTGVuZ3RoZW4gdGhlIGFycmF5IGZvciBldmVyeSBlbGVtZW50LCBtYXRjaGVkIG9yIG5vdFxuXHRcdFx0XHRcdGlmICggc2VlZCApIHtcblx0XHRcdFx0XHRcdHVubWF0Y2hlZC5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIGBpYCBpcyBub3cgdGhlIGNvdW50IG9mIGVsZW1lbnRzIHZpc2l0ZWQgYWJvdmUsIGFuZCBhZGRpbmcgaXQgdG8gYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIG1ha2VzIHRoZSBsYXR0ZXIgbm9ubmVnYXRpdmUuXG5cdFx0XHRtYXRjaGVkQ291bnQgKz0gaTtcblxuXHRcdFx0Ly8gQXBwbHkgc2V0IGZpbHRlcnMgdG8gdW5tYXRjaGVkIGVsZW1lbnRzXG5cdFx0XHQvLyBOT1RFOiBUaGlzIGNhbiBiZSBza2lwcGVkIGlmIHRoZXJlIGFyZSBubyB1bm1hdGNoZWQgZWxlbWVudHMgKGkuZS4sIGBtYXRjaGVkQ291bnRgXG5cdFx0XHQvLyBlcXVhbHMgYGlgKSwgdW5sZXNzIHdlIGRpZG4ndCB2aXNpdCBfYW55XyBlbGVtZW50cyBpbiB0aGUgYWJvdmUgbG9vcCBiZWNhdXNlIHdlIGhhdmVcblx0XHRcdC8vIG5vIGVsZW1lbnQgbWF0Y2hlcnMgYW5kIG5vIHNlZWQuXG5cdFx0XHQvLyBJbmNyZW1lbnRpbmcgYW4gaW5pdGlhbGx5LXN0cmluZyBcIjBcIiBgaWAgYWxsb3dzIGBpYCB0byByZW1haW4gYSBzdHJpbmcgb25seSBpbiB0aGF0XG5cdFx0XHQvLyBjYXNlLCB3aGljaCB3aWxsIHJlc3VsdCBpbiBhIFwiMDBcIiBgbWF0Y2hlZENvdW50YCB0aGF0IGRpZmZlcnMgZnJvbSBgaWAgYnV0IGlzIGFsc29cblx0XHRcdC8vIG51bWVyaWNhbGx5IHplcm8uXG5cdFx0XHRpZiAoIGJ5U2V0ICYmIGkgIT09IG1hdGNoZWRDb3VudCApIHtcblx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdHdoaWxlICggKCBtYXRjaGVyID0gc2V0TWF0Y2hlcnNbIGorKyBdICkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlciggdW5tYXRjaGVkLCBzZXRNYXRjaGVkLCBjb250ZXh0LCB4bWwgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICggc2VlZCApIHtcblxuXHRcdFx0XHRcdC8vIFJlaW50ZWdyYXRlIGVsZW1lbnQgbWF0Y2hlcyB0byBlbGltaW5hdGUgdGhlIG5lZWQgZm9yIHNvcnRpbmdcblx0XHRcdFx0XHRpZiAoIG1hdGNoZWRDb3VudCA+IDAgKSB7XG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdFx0aWYgKCAhKCB1bm1hdGNoZWRbIGkgXSB8fCBzZXRNYXRjaGVkWyBpIF0gKSApIHtcblx0XHRcdFx0XHRcdFx0XHRzZXRNYXRjaGVkWyBpIF0gPSBwb3AuY2FsbCggcmVzdWx0cyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRGlzY2FyZCBpbmRleCBwbGFjZWhvbGRlciB2YWx1ZXMgdG8gZ2V0IG9ubHkgYWN0dWFsIG1hdGNoZXNcblx0XHRcdFx0XHRzZXRNYXRjaGVkID0gY29uZGVuc2UoIHNldE1hdGNoZWQgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFkZCBtYXRjaGVzIHRvIHJlc3VsdHNcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2V0TWF0Y2hlZCApO1xuXG5cdFx0XHRcdC8vIFNlZWRsZXNzIHNldCBtYXRjaGVzIHN1Y2NlZWRpbmcgbXVsdGlwbGUgc3VjY2Vzc2Z1bCBtYXRjaGVycyBzdGlwdWxhdGUgc29ydGluZ1xuXHRcdFx0XHRpZiAoIG91dGVybW9zdCAmJiAhc2VlZCAmJiBzZXRNYXRjaGVkLmxlbmd0aCA+IDAgJiZcblx0XHRcdFx0XHQoIG1hdGNoZWRDb3VudCArIHNldE1hdGNoZXJzLmxlbmd0aCApID4gMSApIHtcblxuXHRcdFx0XHRcdFNpenpsZS51bmlxdWVTb3J0KCByZXN1bHRzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gT3ZlcnJpZGUgbWFuaXB1bGF0aW9uIG9mIGdsb2JhbHMgYnkgbmVzdGVkIG1hdGNoZXJzXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdG91dGVybW9zdENvbnRleHQgPSBjb250ZXh0QmFja3VwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdW5tYXRjaGVkO1xuXHRcdH07XG5cblx0cmV0dXJuIGJ5U2V0ID9cblx0XHRtYXJrRnVuY3Rpb24oIHN1cGVyTWF0Y2hlciApIDpcblx0XHRzdXBlck1hdGNoZXI7XG59XG5cbmNvbXBpbGUgPSBTaXp6bGUuY29tcGlsZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgbWF0Y2ggLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XG5cdHZhciBpLFxuXHRcdHNldE1hdGNoZXJzID0gW10sXG5cdFx0ZWxlbWVudE1hdGNoZXJzID0gW10sXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggIWNhY2hlZCApIHtcblxuXHRcdC8vIEdlbmVyYXRlIGEgZnVuY3Rpb24gb2YgcmVjdXJzaXZlIGZ1bmN0aW9ucyB0aGF0IGNhbiBiZSB1c2VkIHRvIGNoZWNrIGVhY2ggZWxlbWVudFxuXHRcdGlmICggIW1hdGNoICkge1xuXHRcdFx0bWF0Y2ggPSB0b2tlbml6ZSggc2VsZWN0b3IgKTtcblx0XHR9XG5cdFx0aSA9IG1hdGNoLmxlbmd0aDtcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdGNhY2hlZCA9IG1hdGNoZXJGcm9tVG9rZW5zKCBtYXRjaFsgaSBdICk7XG5cdFx0XHRpZiAoIGNhY2hlZFsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHRzZXRNYXRjaGVycy5wdXNoKCBjYWNoZWQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1lbnRNYXRjaGVycy5wdXNoKCBjYWNoZWQgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDYWNoZSB0aGUgY29tcGlsZWQgZnVuY3Rpb25cblx0XHRjYWNoZWQgPSBjb21waWxlckNhY2hlKFxuXHRcdFx0c2VsZWN0b3IsXG5cdFx0XHRtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKVxuXHRcdCk7XG5cblx0XHQvLyBTYXZlIHNlbGVjdG9yIGFuZCB0b2tlbml6YXRpb25cblx0XHRjYWNoZWQuc2VsZWN0b3IgPSBzZWxlY3Rvcjtcblx0fVxuXHRyZXR1cm4gY2FjaGVkO1xufTtcblxuLyoqXG4gKiBBIGxvdy1sZXZlbCBzZWxlY3Rpb24gZnVuY3Rpb24gdGhhdCB3b3JrcyB3aXRoIFNpenpsZSdzIGNvbXBpbGVkXG4gKiAgc2VsZWN0b3IgZnVuY3Rpb25zXG4gKiBAcGFyYW0ge1N0cmluZ3xGdW5jdGlvbn0gc2VsZWN0b3IgQSBzZWxlY3RvciBvciBhIHByZS1jb21waWxlZFxuICogIHNlbGVjdG9yIGZ1bmN0aW9uIGJ1aWx0IHdpdGggU2l6emxlLmNvbXBpbGVcbiAqIEBwYXJhbSB7RWxlbWVudH0gY29udGV4dFxuICogQHBhcmFtIHtBcnJheX0gW3Jlc3VsdHNdXG4gKiBAcGFyYW0ge0FycmF5fSBbc2VlZF0gQSBzZXQgb2YgZWxlbWVudHMgdG8gbWF0Y2ggYWdhaW5zdFxuICovXG5zZWxlY3QgPSBTaXp6bGUuc2VsZWN0ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkge1xuXHR2YXIgaSwgdG9rZW5zLCB0b2tlbiwgdHlwZSwgZmluZCxcblx0XHRjb21waWxlZCA9IHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiICYmIHNlbGVjdG9yLFxuXHRcdG1hdGNoID0gIXNlZWQgJiYgdG9rZW5pemUoICggc2VsZWN0b3IgPSBjb21waWxlZC5zZWxlY3RvciB8fCBzZWxlY3RvciApICk7XG5cblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XG5cblx0Ly8gVHJ5IHRvIG1pbmltaXplIG9wZXJhdGlvbnMgaWYgdGhlcmUgaXMgb25seSBvbmUgc2VsZWN0b3IgaW4gdGhlIGxpc3QgYW5kIG5vIHNlZWRcblx0Ly8gKHRoZSBsYXR0ZXIgb2Ygd2hpY2ggZ3VhcmFudGVlcyB1cyBjb250ZXh0KVxuXHRpZiAoIG1hdGNoLmxlbmd0aCA9PT0gMSApIHtcblxuXHRcdC8vIFJlZHVjZSBjb250ZXh0IGlmIHRoZSBsZWFkaW5nIGNvbXBvdW5kIHNlbGVjdG9yIGlzIGFuIElEXG5cdFx0dG9rZW5zID0gbWF0Y2hbIDAgXSA9IG1hdGNoWyAwIF0uc2xpY2UoIDAgKTtcblx0XHRpZiAoIHRva2Vucy5sZW5ndGggPiAyICYmICggdG9rZW4gPSB0b2tlbnNbIDAgXSApLnR5cGUgPT09IFwiSURcIiAmJlxuXHRcdFx0Y29udGV4dC5ub2RlVHlwZSA9PT0gOSAmJiBkb2N1bWVudElzSFRNTCAmJiBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIDEgXS50eXBlIF0gKSB7XG5cblx0XHRcdGNvbnRleHQgPSAoIEV4cHIuZmluZFsgXCJJRFwiIF0oIHRva2VuLm1hdGNoZXNbIDAgXVxuXHRcdFx0XHQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKSwgY29udGV4dCApIHx8IFtdIClbIDAgXTtcblx0XHRcdGlmICggIWNvbnRleHQgKSB7XG5cdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHQvLyBQcmVjb21waWxlZCBtYXRjaGVycyB3aWxsIHN0aWxsIHZlcmlmeSBhbmNlc3RyeSwgc28gc3RlcCB1cCBhIGxldmVsXG5cdFx0XHR9IGVsc2UgaWYgKCBjb21waWxlZCApIHtcblx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQucGFyZW50Tm9kZTtcblx0XHRcdH1cblxuXHRcdFx0c2VsZWN0b3IgPSBzZWxlY3Rvci5zbGljZSggdG9rZW5zLnNoaWZ0KCkudmFsdWUubGVuZ3RoICk7XG5cdFx0fVxuXG5cdFx0Ly8gRmV0Y2ggYSBzZWVkIHNldCBmb3IgcmlnaHQtdG8tbGVmdCBtYXRjaGluZ1xuXHRcdGkgPSBtYXRjaEV4cHJbIFwibmVlZHNDb250ZXh0XCIgXS50ZXN0KCBzZWxlY3RvciApID8gMCA6IHRva2Vucy5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR0b2tlbiA9IHRva2Vuc1sgaSBdO1xuXG5cdFx0XHQvLyBBYm9ydCBpZiB3ZSBoaXQgYSBjb21iaW5hdG9yXG5cdFx0XHRpZiAoIEV4cHIucmVsYXRpdmVbICggdHlwZSA9IHRva2VuLnR5cGUgKSBdICkge1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGlmICggKCBmaW5kID0gRXhwci5maW5kWyB0eXBlIF0gKSApIHtcblxuXHRcdFx0XHQvLyBTZWFyY2gsIGV4cGFuZGluZyBjb250ZXh0IGZvciBsZWFkaW5nIHNpYmxpbmcgY29tYmluYXRvcnNcblx0XHRcdFx0aWYgKCAoIHNlZWQgPSBmaW5kKFxuXHRcdFx0XHRcdHRva2VuLm1hdGNoZXNbIDAgXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLFxuXHRcdFx0XHRcdHJzaWJsaW5nLnRlc3QoIHRva2Vuc1sgMCBdLnR5cGUgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHxcblx0XHRcdFx0XHRcdGNvbnRleHRcblx0XHRcdFx0KSApICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgc2VlZCBpcyBlbXB0eSBvciBubyB0b2tlbnMgcmVtYWluLCB3ZSBjYW4gcmV0dXJuIGVhcmx5XG5cdFx0XHRcdFx0dG9rZW5zLnNwbGljZSggaSwgMSApO1xuXHRcdFx0XHRcdHNlbGVjdG9yID0gc2VlZC5sZW5ndGggJiYgdG9TZWxlY3RvciggdG9rZW5zICk7XG5cdFx0XHRcdFx0aWYgKCAhc2VsZWN0b3IgKSB7XG5cdFx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBzZWVkICk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIENvbXBpbGUgYW5kIGV4ZWN1dGUgYSBmaWx0ZXJpbmcgZnVuY3Rpb24gaWYgb25lIGlzIG5vdCBwcm92aWRlZFxuXHQvLyBQcm92aWRlIGBtYXRjaGAgdG8gYXZvaWQgcmV0b2tlbml6YXRpb24gaWYgd2UgbW9kaWZpZWQgdGhlIHNlbGVjdG9yIGFib3ZlXG5cdCggY29tcGlsZWQgfHwgY29tcGlsZSggc2VsZWN0b3IsIG1hdGNoICkgKShcblx0XHRzZWVkLFxuXHRcdGNvbnRleHQsXG5cdFx0IWRvY3VtZW50SXNIVE1MLFxuXHRcdHJlc3VsdHMsXG5cdFx0IWNvbnRleHQgfHwgcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHwgY29udGV4dFxuXHQpO1xuXHRyZXR1cm4gcmVzdWx0cztcbn07XG5cbi8vIE9uZS10aW1lIGFzc2lnbm1lbnRzXG5cbi8vIFNvcnQgc3RhYmlsaXR5XG5zdXBwb3J0LnNvcnRTdGFibGUgPSBleHBhbmRvLnNwbGl0KCBcIlwiICkuc29ydCggc29ydE9yZGVyICkuam9pbiggXCJcIiApID09PSBleHBhbmRvO1xuXG4vLyBTdXBwb3J0OiBDaHJvbWUgMTQtMzUrXG4vLyBBbHdheXMgYXNzdW1lIGR1cGxpY2F0ZXMgaWYgdGhleSBhcmVuJ3QgcGFzc2VkIHRvIHRoZSBjb21wYXJpc29uIGZ1bmN0aW9uXG5zdXBwb3J0LmRldGVjdER1cGxpY2F0ZXMgPSAhIWhhc0R1cGxpY2F0ZTtcblxuLy8gSW5pdGlhbGl6ZSBhZ2FpbnN0IHRoZSBkZWZhdWx0IGRvY3VtZW50XG5zZXREb2N1bWVudCgpO1xuXG4vLyBTdXBwb3J0OiBXZWJraXQ8NTM3LjMyIC0gU2FmYXJpIDYuMC4zL0Nocm9tZSAyNSAoZml4ZWQgaW4gQ2hyb21lIDI3KVxuLy8gRGV0YWNoZWQgbm9kZXMgY29uZm91bmRpbmdseSBmb2xsb3cgKmVhY2ggb3RoZXIqXG5zdXBwb3J0LnNvcnREZXRhY2hlZCA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXG5cdC8vIFNob3VsZCByZXR1cm4gMSwgYnV0IHJldHVybnMgNCAoZm9sbG93aW5nKVxuXHRyZXR1cm4gZWwuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZmllbGRzZXRcIiApICkgJiAxO1xufSApO1xuXG4vLyBTdXBwb3J0OiBJRTw4XG4vLyBQcmV2ZW50IGF0dHJpYnV0ZS9wcm9wZXJ0eSBcImludGVycG9sYXRpb25cIlxuLy8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9tczUzNjQyOSUyOFZTLjg1JTI5LmFzcHhcbmlmICggIWFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRlbC5pbm5lckhUTUwgPSBcIjxhIGhyZWY9JyMnPjwvYT5cIjtcblx0cmV0dXJuIGVsLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCBcImhyZWZcIiApID09PSBcIiNcIjtcbn0gKSApIHtcblx0YWRkSGFuZGxlKCBcInR5cGV8aHJlZnxoZWlnaHR8d2lkdGhcIiwgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwidHlwZVwiID8gMSA6IDIgKTtcblx0XHR9XG5cdH0gKTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGRlZmF1bHRWYWx1ZSBpbiBwbGFjZSBvZiBnZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKVxuaWYgKCAhc3VwcG9ydC5hdHRyaWJ1dGVzIHx8ICFhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0ZWwuaW5uZXJIVE1MID0gXCI8aW5wdXQvPlwiO1xuXHRlbC5maXJzdENoaWxkLnNldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiLCBcIlwiICk7XG5cdHJldHVybiBlbC5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiICkgPT09IFwiXCI7XG59ICkgKSB7XG5cdGFkZEhhbmRsZSggXCJ2YWx1ZVwiLCBmdW5jdGlvbiggZWxlbSwgX25hbWUsIGlzWE1MICkge1xuXHRcdGlmICggIWlzWE1MICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGVmYXVsdFZhbHVlO1xuXHRcdH1cblx0fSApO1xufVxuXG4vLyBTdXBwb3J0OiBJRTw5XG4vLyBVc2UgZ2V0QXR0cmlidXRlTm9kZSB0byBmZXRjaCBib29sZWFucyB3aGVuIGdldEF0dHJpYnV0ZSBsaWVzXG5pZiAoICFhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0cmV0dXJuIGVsLmdldEF0dHJpYnV0ZSggXCJkaXNhYmxlZFwiICkgPT0gbnVsbDtcbn0gKSApIHtcblx0YWRkSGFuZGxlKCBib29sZWFucywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdHZhciB2YWw7XG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbVsgbmFtZSBdID09PSB0cnVlID8gbmFtZS50b0xvd2VyQ2FzZSgpIDpcblx0XHRcdFx0KCB2YWwgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKSApICYmIHZhbC5zcGVjaWZpZWQgP1xuXHRcdFx0XHRcdHZhbC52YWx1ZSA6XG5cdFx0XHRcdFx0bnVsbDtcblx0XHR9XG5cdH0gKTtcbn1cblxucmV0dXJuIFNpenpsZTtcblxufSApKCB3aW5kb3cgKTtcblxuXG5cbmpRdWVyeS5maW5kID0gU2l6emxlO1xualF1ZXJ5LmV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzO1xuXG4vLyBEZXByZWNhdGVkXG5qUXVlcnkuZXhwclsgXCI6XCIgXSA9IGpRdWVyeS5leHByLnBzZXVkb3M7XG5qUXVlcnkudW5pcXVlU29ydCA9IGpRdWVyeS51bmlxdWUgPSBTaXp6bGUudW5pcXVlU29ydDtcbmpRdWVyeS50ZXh0ID0gU2l6emxlLmdldFRleHQ7XG5qUXVlcnkuaXNYTUxEb2MgPSBTaXp6bGUuaXNYTUw7XG5qUXVlcnkuY29udGFpbnMgPSBTaXp6bGUuY29udGFpbnM7XG5qUXVlcnkuZXNjYXBlU2VsZWN0b3IgPSBTaXp6bGUuZXNjYXBlO1xuXG5cblxuXG52YXIgZGlyID0gZnVuY3Rpb24oIGVsZW0sIGRpciwgdW50aWwgKSB7XG5cdHZhciBtYXRjaGVkID0gW10sXG5cdFx0dHJ1bmNhdGUgPSB1bnRpbCAhPT0gdW5kZWZpbmVkO1xuXG5cdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSAmJiBlbGVtLm5vZGVUeXBlICE9PSA5ICkge1xuXHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdGlmICggdHJ1bmNhdGUgJiYgalF1ZXJ5KCBlbGVtICkuaXMoIHVudGlsICkgKSB7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0bWF0Y2hlZC5wdXNoKCBlbGVtICk7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBtYXRjaGVkO1xufTtcblxuXG52YXIgc2libGluZ3MgPSBmdW5jdGlvbiggbiwgZWxlbSApIHtcblx0dmFyIG1hdGNoZWQgPSBbXTtcblxuXHRmb3IgKCA7IG47IG4gPSBuLm5leHRTaWJsaW5nICkge1xuXHRcdGlmICggbi5ub2RlVHlwZSA9PT0gMSAmJiBuICE9PSBlbGVtICkge1xuXHRcdFx0bWF0Y2hlZC5wdXNoKCBuICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBybmVlZHNDb250ZXh0ID0galF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0O1xuXG5cblxuZnVuY3Rpb24gbm9kZU5hbWUoIGVsZW0sIG5hbWUgKSB7XG5cbiAgcmV0dXJuIGVsZW0ubm9kZU5hbWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cbn07XG52YXIgcnNpbmdsZVRhZyA9ICggL148KFthLXpdW15cXC9cXDA+OlxceDIwXFx0XFxyXFxuXFxmXSopW1xceDIwXFx0XFxyXFxuXFxmXSpcXC8/Pig/OjxcXC9cXDE+fCkkL2kgKTtcblxuXG5cbi8vIEltcGxlbWVudCB0aGUgaWRlbnRpY2FsIGZ1bmN0aW9uYWxpdHkgZm9yIGZpbHRlciBhbmQgbm90XG5mdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHtcblx0aWYgKCBpc0Z1bmN0aW9uKCBxdWFsaWZpZXIgKSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiAhIXF1YWxpZmllci5jYWxsKCBlbGVtLCBpLCBlbGVtICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBTaW5nbGUgZWxlbWVudFxuXHRpZiAoIHF1YWxpZmllci5ub2RlVHlwZSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAoIGVsZW0gPT09IHF1YWxpZmllciApICE9PSBub3Q7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gQXJyYXlsaWtlIG9mIGVsZW1lbnRzIChqUXVlcnksIGFyZ3VtZW50cywgQXJyYXkpXG5cdGlmICggdHlwZW9mIHF1YWxpZmllciAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAoIGluZGV4T2YuY2FsbCggcXVhbGlmaWVyLCBlbGVtICkgPiAtMSApICE9PSBub3Q7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gRmlsdGVyZWQgZGlyZWN0bHkgZm9yIGJvdGggc2ltcGxlIGFuZCBjb21wbGV4IHNlbGVjdG9yc1xuXHRyZXR1cm4galF1ZXJ5LmZpbHRlciggcXVhbGlmaWVyLCBlbGVtZW50cywgbm90ICk7XG59XG5cbmpRdWVyeS5maWx0ZXIgPSBmdW5jdGlvbiggZXhwciwgZWxlbXMsIG5vdCApIHtcblx0dmFyIGVsZW0gPSBlbGVtc1sgMCBdO1xuXG5cdGlmICggbm90ICkge1xuXHRcdGV4cHIgPSBcIjpub3QoXCIgKyBleHByICsgXCIpXCI7XG5cdH1cblxuXHRpZiAoIGVsZW1zLmxlbmd0aCA9PT0gMSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdHJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGVsZW0sIGV4cHIgKSA/IFsgZWxlbSBdIDogW107XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5LmZpbmQubWF0Y2hlcyggZXhwciwgalF1ZXJ5LmdyZXAoIGVsZW1zLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZWxlbS5ub2RlVHlwZSA9PT0gMTtcblx0fSApICk7XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGZpbmQ6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgaSwgcmV0LFxuXHRcdFx0bGVuID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRzZWxmID0gdGhpcztcblxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkoIHNlbGVjdG9yICkuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggc2VsZlsgaSBdLCB0aGlzICkgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gKSApO1xuXHRcdH1cblxuXHRcdHJldCA9IHRoaXMucHVzaFN0YWNrKCBbXSApO1xuXG5cdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdGpRdWVyeS5maW5kKCBzZWxlY3Rvciwgc2VsZlsgaSBdLCByZXQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbGVuID4gMSA/IGpRdWVyeS51bmlxdWVTb3J0KCByZXQgKSA6IHJldDtcblx0fSxcblx0ZmlsdGVyOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCBmYWxzZSApICk7XG5cdH0sXG5cdG5vdDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgdHJ1ZSApICk7XG5cdH0sXG5cdGlzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuICEhd2lubm93KFxuXHRcdFx0dGhpcyxcblxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIHBvc2l0aW9uYWwvcmVsYXRpdmUgc2VsZWN0b3IsIGNoZWNrIG1lbWJlcnNoaXAgaW4gdGhlIHJldHVybmVkIHNldFxuXHRcdFx0Ly8gc28gJChcInA6Zmlyc3RcIikuaXMoXCJwOmxhc3RcIikgd29uJ3QgcmV0dXJuIHRydWUgZm9yIGEgZG9jIHdpdGggdHdvIFwicFwiLlxuXHRcdFx0dHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICYmIHJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3IgKSA/XG5cdFx0XHRcdGpRdWVyeSggc2VsZWN0b3IgKSA6XG5cdFx0XHRcdHNlbGVjdG9yIHx8IFtdLFxuXHRcdFx0ZmFsc2Vcblx0XHQpLmxlbmd0aDtcblx0fVxufSApO1xuXG5cbi8vIEluaXRpYWxpemUgYSBqUXVlcnkgb2JqZWN0XG5cblxuLy8gQSBjZW50cmFsIHJlZmVyZW5jZSB0byB0aGUgcm9vdCBqUXVlcnkoZG9jdW1lbnQpXG52YXIgcm9vdGpRdWVyeSxcblxuXHQvLyBBIHNpbXBsZSB3YXkgdG8gY2hlY2sgZm9yIEhUTUwgc3RyaW5nc1xuXHQvLyBQcmlvcml0aXplICNpZCBvdmVyIDx0YWc+IHRvIGF2b2lkIFhTUyB2aWEgbG9jYXRpb24uaGFzaCAoIzk1MjEpXG5cdC8vIFN0cmljdCBIVE1MIHJlY29nbml0aW9uICgjMTEyOTA6IG11c3Qgc3RhcnQgd2l0aCA8KVxuXHQvLyBTaG9ydGN1dCBzaW1wbGUgI2lkIGNhc2UgZm9yIHNwZWVkXG5cdHJxdWlja0V4cHIgPSAvXig/OlxccyooPFtcXHdcXFddKz4pW14+XSp8IyhbXFx3LV0rKSkkLyxcblxuXHRpbml0ID0galF1ZXJ5LmZuLmluaXQgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3QgKSB7XG5cdFx0dmFyIG1hdGNoLCBlbGVtO1xuXG5cdFx0Ly8gSEFORExFOiAkKFwiXCIpLCAkKG51bGwpLCAkKHVuZGVmaW5lZCksICQoZmFsc2UpXG5cdFx0aWYgKCAhc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cblx0XHQvLyBNZXRob2QgaW5pdCgpIGFjY2VwdHMgYW4gYWx0ZXJuYXRlIHJvb3RqUXVlcnlcblx0XHQvLyBzbyBtaWdyYXRlIGNhbiBzdXBwb3J0IGpRdWVyeS5zdWIgKGdoLTIxMDEpXG5cdFx0cm9vdCA9IHJvb3QgfHwgcm9vdGpRdWVyeTtcblxuXHRcdC8vIEhhbmRsZSBIVE1MIHN0cmluZ3Ncblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGlmICggc2VsZWN0b3JbIDAgXSA9PT0gXCI8XCIgJiZcblx0XHRcdFx0c2VsZWN0b3JbIHNlbGVjdG9yLmxlbmd0aCAtIDEgXSA9PT0gXCI+XCIgJiZcblx0XHRcdFx0c2VsZWN0b3IubGVuZ3RoID49IDMgKSB7XG5cblx0XHRcdFx0Ly8gQXNzdW1lIHRoYXQgc3RyaW5ncyB0aGF0IHN0YXJ0IGFuZCBlbmQgd2l0aCA8PiBhcmUgSFRNTCBhbmQgc2tpcCB0aGUgcmVnZXggY2hlY2tcblx0XHRcdFx0bWF0Y2ggPSBbIG51bGwsIHNlbGVjdG9yLCBudWxsIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYXRjaCBodG1sIG9yIG1ha2Ugc3VyZSBubyBjb250ZXh0IGlzIHNwZWNpZmllZCBmb3IgI2lkXG5cdFx0XHRpZiAoIG1hdGNoICYmICggbWF0Y2hbIDEgXSB8fCAhY29udGV4dCApICkge1xuXG5cdFx0XHRcdC8vIEhBTkRMRTogJChodG1sKSAtPiAkKGFycmF5KVxuXHRcdFx0XHRpZiAoIG1hdGNoWyAxIF0gKSB7XG5cdFx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnkgPyBjb250ZXh0WyAwIF0gOiBjb250ZXh0O1xuXG5cdFx0XHRcdFx0Ly8gT3B0aW9uIHRvIHJ1biBzY3JpcHRzIGlzIHRydWUgZm9yIGJhY2stY29tcGF0XG5cdFx0XHRcdFx0Ly8gSW50ZW50aW9uYWxseSBsZXQgdGhlIGVycm9yIGJlIHRocm93biBpZiBwYXJzZUhUTUwgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMsIGpRdWVyeS5wYXJzZUhUTUwoXG5cdFx0XHRcdFx0XHRtYXRjaFsgMSBdLFxuXHRcdFx0XHRcdFx0Y29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID8gY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgOiBkb2N1bWVudCxcblx0XHRcdFx0XHRcdHRydWVcblx0XHRcdFx0XHQpICk7XG5cblx0XHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCwgcHJvcHMpXG5cdFx0XHRcdFx0aWYgKCByc2luZ2xlVGFnLnRlc3QoIG1hdGNoWyAxIF0gKSAmJiBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29udGV4dCApICkge1xuXHRcdFx0XHRcdFx0Zm9yICggbWF0Y2ggaW4gY29udGV4dCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBQcm9wZXJ0aWVzIG9mIGNvbnRleHQgYXJlIGNhbGxlZCBhcyBtZXRob2RzIGlmIHBvc3NpYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggaXNGdW5jdGlvbiggdGhpc1sgbWF0Y2ggXSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXNbIG1hdGNoIF0oIGNvbnRleHRbIG1hdGNoIF0gKTtcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgb3RoZXJ3aXNlIHNldCBhcyBhdHRyaWJ1dGVzXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpcy5hdHRyKCBtYXRjaCwgY29udGV4dFsgbWF0Y2ggXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKCNpZClcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIG1hdGNoWyAyIF0gKTtcblxuXHRcdFx0XHRcdGlmICggZWxlbSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSW5qZWN0IHRoZSBlbGVtZW50IGRpcmVjdGx5IGludG8gdGhlIGpRdWVyeSBvYmplY3Rcblx0XHRcdFx0XHRcdHRoaXNbIDAgXSA9IGVsZW07XG5cdFx0XHRcdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cblx0XHRcdC8vIEhBTkRMRTogJChleHByLCAkKC4uLikpXG5cdFx0XHR9IGVsc2UgaWYgKCAhY29udGV4dCB8fCBjb250ZXh0LmpxdWVyeSApIHtcblx0XHRcdFx0cmV0dXJuICggY29udGV4dCB8fCByb290ICkuZmluZCggc2VsZWN0b3IgKTtcblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsIGNvbnRleHQpXG5cdFx0XHQvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcilcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLmNvbnN0cnVjdG9yKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKTtcblx0XHRcdH1cblxuXHRcdC8vIEhBTkRMRTogJChET01FbGVtZW50KVxuXHRcdH0gZWxzZSBpZiAoIHNlbGVjdG9yLm5vZGVUeXBlICkge1xuXHRcdFx0dGhpc1sgMCBdID0gc2VsZWN0b3I7XG5cdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdC8vIEhBTkRMRTogJChmdW5jdGlvbilcblx0XHQvLyBTaG9ydGN1dCBmb3IgZG9jdW1lbnQgcmVhZHlcblx0XHR9IGVsc2UgaWYgKCBpc0Z1bmN0aW9uKCBzZWxlY3RvciApICkge1xuXHRcdFx0cmV0dXJuIHJvb3QucmVhZHkgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHJvb3QucmVhZHkoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHRcdC8vIEV4ZWN1dGUgaW1tZWRpYXRlbHkgaWYgcmVhZHkgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0c2VsZWN0b3IoIGpRdWVyeSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBqUXVlcnkubWFrZUFycmF5KCBzZWxlY3RvciwgdGhpcyApO1xuXHR9O1xuXG4vLyBHaXZlIHRoZSBpbml0IGZ1bmN0aW9uIHRoZSBqUXVlcnkgcHJvdG90eXBlIGZvciBsYXRlciBpbnN0YW50aWF0aW9uXG5pbml0LnByb3RvdHlwZSA9IGpRdWVyeS5mbjtcblxuLy8gSW5pdGlhbGl6ZSBjZW50cmFsIHJlZmVyZW5jZVxucm9vdGpRdWVyeSA9IGpRdWVyeSggZG9jdW1lbnQgKTtcblxuXG52YXIgcnBhcmVudHNwcmV2ID0gL14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8sXG5cblx0Ly8gTWV0aG9kcyBndWFyYW50ZWVkIHRvIHByb2R1Y2UgYSB1bmlxdWUgc2V0IHdoZW4gc3RhcnRpbmcgZnJvbSBhIHVuaXF1ZSBzZXRcblx0Z3VhcmFudGVlZFVuaXF1ZSA9IHtcblx0XHRjaGlsZHJlbjogdHJ1ZSxcblx0XHRjb250ZW50czogdHJ1ZSxcblx0XHRuZXh0OiB0cnVlLFxuXHRcdHByZXY6IHRydWVcblx0fTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRoYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdFx0dmFyIHRhcmdldHMgPSBqUXVlcnkoIHRhcmdldCwgdGhpcyApLFxuXHRcdFx0bCA9IHRhcmdldHMubGVuZ3RoO1xuXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpID0gMDtcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHRoaXMsIHRhcmdldHNbIGkgXSApICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7XG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0bCA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0bWF0Y2hlZCA9IFtdLFxuXHRcdFx0dGFyZ2V0cyA9IHR5cGVvZiBzZWxlY3RvcnMgIT09IFwic3RyaW5nXCIgJiYgalF1ZXJ5KCBzZWxlY3RvcnMgKTtcblxuXHRcdC8vIFBvc2l0aW9uYWwgc2VsZWN0b3JzIG5ldmVyIG1hdGNoLCBzaW5jZSB0aGVyZSdzIG5vIF9zZWxlY3Rpb25fIGNvbnRleHRcblx0XHRpZiAoICFybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9ycyApICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRmb3IgKCBjdXIgPSB0aGlzWyBpIF07IGN1ciAmJiBjdXIgIT09IGNvbnRleHQ7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXG5cdFx0XHRcdFx0Ly8gQWx3YXlzIHNraXAgZG9jdW1lbnQgZnJhZ21lbnRzXG5cdFx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPCAxMSAmJiAoIHRhcmdldHMgP1xuXHRcdFx0XHRcdFx0dGFyZ2V0cy5pbmRleCggY3VyICkgPiAtMSA6XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IHBhc3Mgbm9uLWVsZW1lbnRzIHRvIFNpenpsZVxuXHRcdFx0XHRcdFx0Y3VyLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggY3VyLCBzZWxlY3RvcnMgKSApICkge1xuXG5cdFx0XHRcdFx0XHRtYXRjaGVkLnB1c2goIGN1ciApO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkLmxlbmd0aCA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApIDogbWF0Y2hlZCApO1xuXHR9LFxuXG5cdC8vIERldGVybWluZSB0aGUgcG9zaXRpb24gb2YgYW4gZWxlbWVudCB3aXRoaW4gdGhlIHNldFxuXHRpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBObyBhcmd1bWVudCwgcmV0dXJuIGluZGV4IGluIHBhcmVudFxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCB0aGlzWyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoIDogLTE7XG5cdFx0fVxuXG5cdFx0Ly8gSW5kZXggaW4gc2VsZWN0b3Jcblx0XHRpZiAoIHR5cGVvZiBlbGVtID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggalF1ZXJ5KCBlbGVtICksIHRoaXNbIDAgXSApO1xuXHRcdH1cblxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxuXHRcdHJldHVybiBpbmRleE9mLmNhbGwoIHRoaXMsXG5cblx0XHRcdC8vIElmIGl0IHJlY2VpdmVzIGEgalF1ZXJ5IG9iamVjdCwgdGhlIGZpcnN0IGVsZW1lbnQgaXMgdXNlZFxuXHRcdFx0ZWxlbS5qcXVlcnkgPyBlbGVtWyAwIF0gOiBlbGVtXG5cdFx0KTtcblx0fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soXG5cdFx0XHRqUXVlcnkudW5pcXVlU29ydChcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCB0aGlzLmdldCgpLCBqUXVlcnkoIHNlbGVjdG9yLCBjb250ZXh0ICkgKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0YWRkQmFjazogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLmFkZCggc2VsZWN0b3IgPT0gbnVsbCA/XG5cdFx0XHR0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBzZWxlY3RvciApXG5cdFx0KTtcblx0fVxufSApO1xuXG5mdW5jdGlvbiBzaWJsaW5nKCBjdXIsIGRpciApIHtcblx0d2hpbGUgKCAoIGN1ciA9IGN1clsgZGlyIF0gKSAmJiBjdXIubm9kZVR5cGUgIT09IDEgKSB7fVxuXHRyZXR1cm4gY3VyO1xufVxuXG5qUXVlcnkuZWFjaCgge1xuXHRwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0cmV0dXJuIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgIT09IDExID8gcGFyZW50IDogbnVsbDtcblx0fSxcblx0cGFyZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIgKTtcblx0fSxcblx0cGFyZW50c1VudGlsOiBmdW5jdGlvbiggZWxlbSwgX2ksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiLCB1bnRpbCApO1xuXHR9LFxuXHRuZXh0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXY6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xuXHR9LFxuXHRwcmV2QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRVbnRpbDogZnVuY3Rpb24oIGVsZW0sIF9pLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHByZXZVbnRpbDogZnVuY3Rpb24oIGVsZW0sIF9pLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRzaWJsaW5nczogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCAoIGVsZW0ucGFyZW50Tm9kZSB8fCB7fSApLmZpcnN0Q2hpbGQsIGVsZW0gKTtcblx0fSxcblx0Y2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5ncyggZWxlbS5maXJzdENoaWxkICk7XG5cdH0sXG5cdGNvbnRlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRpZiAoIGVsZW0uY29udGVudERvY3VtZW50ICE9IG51bGwgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErXG5cdFx0XHQvLyA8b2JqZWN0PiBlbGVtZW50cyB3aXRoIG5vIGBkYXRhYCBhdHRyaWJ1dGUgaGFzIGFuIG9iamVjdFxuXHRcdFx0Ly8gYGNvbnRlbnREb2N1bWVudGAgd2l0aCBhIGBudWxsYCBwcm90b3R5cGUuXG5cdFx0XHRnZXRQcm90byggZWxlbS5jb250ZW50RG9jdW1lbnQgKSApIHtcblxuXHRcdFx0cmV0dXJuIGVsZW0uY29udGVudERvY3VtZW50O1xuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5LCBpT1MgNyBvbmx5LCBBbmRyb2lkIEJyb3dzZXIgPD00LjMgb25seVxuXHRcdC8vIFRyZWF0IHRoZSB0ZW1wbGF0ZSBlbGVtZW50IGFzIGEgcmVndWxhciBvbmUgaW4gYnJvd3NlcnMgdGhhdFxuXHRcdC8vIGRvbid0IHN1cHBvcnQgaXQuXG5cdFx0aWYgKCBub2RlTmFtZSggZWxlbSwgXCJ0ZW1wbGF0ZVwiICkgKSB7XG5cdFx0XHRlbGVtID0gZWxlbS5jb250ZW50IHx8IGVsZW07XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIGVsZW0uY2hpbGROb2RlcyApO1xuXHR9XG59LCBmdW5jdGlvbiggbmFtZSwgZm4gKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciApIHtcblx0XHR2YXIgbWF0Y2hlZCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApO1xuXG5cdFx0aWYgKCBuYW1lLnNsaWNlKCAtNSApICE9PSBcIlVudGlsXCIgKSB7XG5cdFx0XHRzZWxlY3RvciA9IHVudGlsO1xuXHRcdH1cblxuXHRcdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0bWF0Y2hlZCA9IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBtYXRjaGVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLmxlbmd0aCA+IDEgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBkdXBsaWNhdGVzXG5cdFx0XHRpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldmVyc2Ugb3JkZXIgZm9yIHBhcmVudHMqIGFuZCBwcmV2LWRlcml2YXRpdmVzXG5cdFx0XHRpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7XG5cdFx0XHRcdG1hdGNoZWQucmV2ZXJzZSgpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZCApO1xuXHR9O1xufSApO1xudmFyIHJub3RodG1sd2hpdGUgPSAoIC9bXlxceDIwXFx0XFxyXFxuXFxmXSsvZyApO1xuXG5cblxuLy8gQ29udmVydCBTdHJpbmctZm9ybWF0dGVkIG9wdGlvbnMgaW50byBPYmplY3QtZm9ybWF0dGVkIG9uZXNcbmZ1bmN0aW9uIGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSB7XG5cdHZhciBvYmplY3QgPSB7fTtcblx0alF1ZXJ5LmVhY2goIG9wdGlvbnMubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XG5cdFx0b2JqZWN0WyBmbGFnIF0gPSB0cnVlO1xuXHR9ICk7XG5cdHJldHVybiBvYmplY3Q7XG59XG5cbi8qXG4gKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczpcbiAqXG4gKlx0b3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvd1xuICpcdFx0XHR0aGUgY2FsbGJhY2sgbGlzdCBiZWhhdmVzIG9yIGEgbW9yZSB0cmFkaXRpb25hbCBvcHRpb24gb2JqZWN0XG4gKlxuICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmVcbiAqIFwiZmlyZWRcIiBtdWx0aXBsZSB0aW1lcy5cbiAqXG4gKiBQb3NzaWJsZSBvcHRpb25zOlxuICpcbiAqXHRvbmNlOlx0XHRcdHdpbGwgZW5zdXJlIHRoZSBjYWxsYmFjayBsaXN0IGNhbiBvbmx5IGJlIGZpcmVkIG9uY2UgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0bWVtb3J5Olx0XHRcdHdpbGwga2VlcCB0cmFjayBvZiBwcmV2aW91cyB2YWx1ZXMgYW5kIHdpbGwgY2FsbCBhbnkgY2FsbGJhY2sgYWRkZWRcbiAqXHRcdFx0XHRcdGFmdGVyIHRoZSBsaXN0IGhhcyBiZWVuIGZpcmVkIHJpZ2h0IGF3YXkgd2l0aCB0aGUgbGF0ZXN0IFwibWVtb3JpemVkXCJcbiAqXHRcdFx0XHRcdHZhbHVlcyAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHR1bmlxdWU6XHRcdFx0d2lsbCBlbnN1cmUgYSBjYWxsYmFjayBjYW4gb25seSBiZSBhZGRlZCBvbmNlIChubyBkdXBsaWNhdGUgaW4gdGhlIGxpc3QpXG4gKlxuICpcdHN0b3BPbkZhbHNlOlx0aW50ZXJydXB0IGNhbGxpbmdzIHdoZW4gYSBjYWxsYmFjayByZXR1cm5zIGZhbHNlXG4gKlxuICovXG5qUXVlcnkuQ2FsbGJhY2tzID0gZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0Ly8gQ29udmVydCBvcHRpb25zIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkIGlmIG5lZWRlZFxuXHQvLyAod2UgY2hlY2sgaW4gY2FjaGUgZmlyc3QpXG5cdG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0Y3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIDpcblx0XHRqUXVlcnkuZXh0ZW5kKCB7fSwgb3B0aW9ucyApO1xuXG5cdHZhciAvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCBpcyBjdXJyZW50bHkgZmlyaW5nXG5cdFx0ZmlyaW5nLFxuXG5cdFx0Ly8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHNcblx0XHRtZW1vcnksXG5cblx0XHQvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZFxuXHRcdGZpcmVkLFxuXG5cdFx0Ly8gRmxhZyB0byBwcmV2ZW50IGZpcmluZ1xuXHRcdGxvY2tlZCxcblxuXHRcdC8vIEFjdHVhbCBjYWxsYmFjayBsaXN0XG5cdFx0bGlzdCA9IFtdLFxuXG5cdFx0Ly8gUXVldWUgb2YgZXhlY3V0aW9uIGRhdGEgZm9yIHJlcGVhdGFibGUgbGlzdHNcblx0XHRxdWV1ZSA9IFtdLFxuXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgYWRkL3JlbW92ZSBhcyBuZWVkZWQpXG5cdFx0ZmlyaW5nSW5kZXggPSAtMSxcblxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXG5cdFx0ZmlyZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbmZvcmNlIHNpbmdsZS1maXJpbmdcblx0XHRcdGxvY2tlZCA9IGxvY2tlZCB8fCBvcHRpb25zLm9uY2U7XG5cblx0XHRcdC8vIEV4ZWN1dGUgY2FsbGJhY2tzIGZvciBhbGwgcGVuZGluZyBleGVjdXRpb25zLFxuXHRcdFx0Ly8gcmVzcGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlc1xuXHRcdFx0ZmlyZWQgPSBmaXJpbmcgPSB0cnVlO1xuXHRcdFx0Zm9yICggOyBxdWV1ZS5sZW5ndGg7IGZpcmluZ0luZGV4ID0gLTEgKSB7XG5cdFx0XHRcdG1lbW9yeSA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRcdHdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0Ly8gUnVuIGNhbGxiYWNrIGFuZCBjaGVjayBmb3IgZWFybHkgdGVybWluYXRpb25cblx0XHRcdFx0XHRpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApID09PSBmYWxzZSAmJlxuXHRcdFx0XHRcdFx0b3B0aW9ucy5zdG9wT25GYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSnVtcCB0byBlbmQgYW5kIGZvcmdldCB0aGUgZGF0YSBzbyAuYWRkIGRvZXNuJ3QgcmUtZmlyZVxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3JnZXQgdGhlIGRhdGEgaWYgd2UncmUgZG9uZSB3aXRoIGl0XG5cdFx0XHRpZiAoICFvcHRpb25zLm1lbW9yeSApIHtcblx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGZpcmluZyA9IGZhbHNlO1xuXG5cdFx0XHQvLyBDbGVhbiB1cCBpZiB3ZSdyZSBkb25lIGZpcmluZyBmb3IgZ29vZFxuXHRcdFx0aWYgKCBsb2NrZWQgKSB7XG5cblx0XHRcdFx0Ly8gS2VlcCBhbiBlbXB0eSBsaXN0IGlmIHdlIGhhdmUgZGF0YSBmb3IgZnV0dXJlIGFkZCBjYWxsc1xuXHRcdFx0XHRpZiAoIG1lbW9yeSApIHtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB0aGlzIG9iamVjdCBpcyBzcGVudFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxpc3QgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0XG5cdFx0c2VsZiA9IHtcblxuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxuXHRcdFx0YWRkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBtZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmdcblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aCAtIDE7XG5cdFx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBtZW1vcnkgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQoIGZ1bmN0aW9uIGFkZCggYXJncyApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmdzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggIW9wdGlvbnMudW5pcXVlIHx8ICFzZWxmLmhhcyggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRsaXN0LnB1c2goIGFyZyApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggYXJnICYmIGFyZy5sZW5ndGggJiYgdG9UeXBlKCBhcmcgKSAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEluc3BlY3QgcmVjdXJzaXZlbHlcblx0XHRcdFx0XHRcdFx0XHRhZGQoIGFyZyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fSApKCBhcmd1bWVudHMgKTtcblxuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdFxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHR2YXIgaW5kZXg7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZSggaW5kZXgsIDEgKTtcblxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGZpcmluZyBpbmRleGVzXG5cdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xuXHRcdFx0XHRcdFx0XHRmaXJpbmdJbmRleC0tO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENoZWNrIGlmIGEgZ2l2ZW4gY2FsbGJhY2sgaXMgaW4gdGhlIGxpc3QuXG5cdFx0XHQvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC5cblx0XHRcdGhhczogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRyZXR1cm4gZm4gP1xuXHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOlxuXHRcdFx0XHRcdGxpc3QubGVuZ3RoID4gMDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20gdGhlIGxpc3Rcblx0XHRcdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIERpc2FibGUgLmZpcmUgYW5kIC5hZGRcblx0XHRcdC8vIEFib3J0IGFueSBjdXJyZW50L3BlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bG9ja2VkID0gcXVldWUgPSBbXTtcblx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZVxuXHRcdFx0Ly8gQWxzbyBkaXNhYmxlIC5hZGQgdW5sZXNzIHdlIGhhdmUgbWVtb3J5IChzaW5jZSBpdCB3b3VsZCBoYXZlIG5vIGVmZmVjdClcblx0XHRcdC8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnNcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRpZiAoICFtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRsb2NrZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFsb2NrZWQ7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XG5cdFx0XHRcdGlmICggIWxvY2tlZCApIHtcblx0XHRcdFx0XHRhcmdzID0gYXJncyB8fCBbXTtcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGFyZ3MgKTtcblx0XHRcdFx0XHRpZiAoICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcblx0XHRcdGZpcmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLmZpcmVXaXRoKCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2Vcblx0XHRcdGZpcmVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhZmlyZWQ7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRyZXR1cm4gc2VsZjtcbn07XG5cblxuZnVuY3Rpb24gSWRlbnRpdHkoIHYgKSB7XG5cdHJldHVybiB2O1xufVxuZnVuY3Rpb24gVGhyb3dlciggZXggKSB7XG5cdHRocm93IGV4O1xufVxuXG5mdW5jdGlvbiBhZG9wdFZhbHVlKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0LCBub1ZhbHVlICkge1xuXHR2YXIgbWV0aG9kO1xuXG5cdHRyeSB7XG5cblx0XHQvLyBDaGVjayBmb3IgcHJvbWlzZSBhc3BlY3QgZmlyc3QgdG8gcHJpdmlsZWdlIHN5bmNocm9ub3VzIGJlaGF2aW9yXG5cdFx0aWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnByb21pc2UgKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlICkuZG9uZSggcmVzb2x2ZSApLmZhaWwoIHJlamVjdCApO1xuXG5cdFx0Ly8gT3RoZXIgdGhlbmFibGVzXG5cdFx0fSBlbHNlIGlmICggdmFsdWUgJiYgaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS50aGVuICkgKSApIHtcblx0XHRcdG1ldGhvZC5jYWxsKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0ICk7XG5cblx0XHQvLyBPdGhlciBub24tdGhlbmFibGVzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29udHJvbCBgcmVzb2x2ZWAgYXJndW1lbnRzIGJ5IGxldHRpbmcgQXJyYXkjc2xpY2UgY2FzdCBib29sZWFuIGBub1ZhbHVlYCB0byBpbnRlZ2VyOlxuXHRcdFx0Ly8gKiBmYWxzZTogWyB2YWx1ZSBdLnNsaWNlKCAwICkgPT4gcmVzb2x2ZSggdmFsdWUgKVxuXHRcdFx0Ly8gKiB0cnVlOiBbIHZhbHVlIF0uc2xpY2UoIDEgKSA9PiByZXNvbHZlKClcblx0XHRcdHJlc29sdmUuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdLnNsaWNlKCBub1ZhbHVlICkgKTtcblx0XHR9XG5cblx0Ly8gRm9yIFByb21pc2VzL0ErLCBjb252ZXJ0IGV4Y2VwdGlvbnMgaW50byByZWplY3Rpb25zXG5cdC8vIFNpbmNlIGpRdWVyeS53aGVuIGRvZXNuJ3QgdW53cmFwIHRoZW5hYmxlcywgd2UgY2FuIHNraXAgdGhlIGV4dHJhIGNoZWNrcyBhcHBlYXJpbmcgaW5cblx0Ly8gRGVmZXJyZWQjdGhlbiB0byBjb25kaXRpb25hbGx5IHN1cHByZXNzIHJlamVjdGlvbi5cblx0fSBjYXRjaCAoIHZhbHVlICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgb25seVxuXHRcdC8vIFN0cmljdCBtb2RlIGZ1bmN0aW9ucyBpbnZva2VkIHdpdGhvdXQgLmNhbGwvLmFwcGx5IGdldCBnbG9iYWwtb2JqZWN0IGNvbnRleHRcblx0XHRyZWplY3QuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdICk7XG5cdH1cbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdERlZmVycmVkOiBmdW5jdGlvbiggZnVuYyApIHtcblx0XHR2YXIgdHVwbGVzID0gW1xuXG5cdFx0XHRcdC8vIGFjdGlvbiwgYWRkIGxpc3RlbmVyLCBjYWxsYmFja3MsXG5cdFx0XHRcdC8vIC4uLiAudGhlbiBoYW5kbGVycywgYXJndW1lbnQgaW5kZXgsIFtmaW5hbCBzdGF0ZV1cblx0XHRcdFx0WyBcIm5vdGlmeVwiLCBcInByb2dyZXNzXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICksIDIgXSxcblx0XHRcdFx0WyBcInJlc29sdmVcIiwgXCJkb25lXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAwLCBcInJlc29sdmVkXCIgXSxcblx0XHRcdFx0WyBcInJlamVjdFwiLCBcImZhaWxcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIDEsIFwicmVqZWN0ZWRcIiBdXG5cdFx0XHRdLFxuXHRcdFx0c3RhdGUgPSBcInBlbmRpbmdcIixcblx0XHRcdHByb21pc2UgPSB7XG5cdFx0XHRcdHN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gc3RhdGU7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGFsd2F5czogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQuZG9uZSggYXJndW1lbnRzICkuZmFpbCggYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdFwiY2F0Y2hcIjogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRcdHJldHVybiBwcm9taXNlLnRoZW4oIG51bGwsIGZuICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gS2VlcCBwaXBlIGZvciBiYWNrLWNvbXBhdFxuXHRcdFx0XHRwaXBlOiBmdW5jdGlvbiggLyogZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKi8gKSB7XG5cdFx0XHRcdFx0dmFyIGZucyA9IGFyZ3VtZW50cztcblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBfaSwgdHVwbGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTWFwIHR1cGxlcyAocHJvZ3Jlc3MsIGRvbmUsIGZhaWwpIHRvIGFyZ3VtZW50cyAoZG9uZSwgZmFpbCwgcHJvZ3Jlc3MpXG5cdFx0XHRcdFx0XHRcdHZhciBmbiA9IGlzRnVuY3Rpb24oIGZuc1sgdHVwbGVbIDQgXSBdICkgJiYgZm5zWyB0dXBsZVsgNCBdIF07XG5cblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQucHJvZ3Jlc3MoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIubm90aWZ5IH0pXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLmRvbmUoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVzb2x2ZSB9KVxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5mYWlsKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLnJlamVjdCB9KVxuXHRcdFx0XHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDEgXSBdKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQgPSBmbiAmJiBmbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCByZXR1cm5lZCAmJiBpc0Z1bmN0aW9uKCByZXR1cm5lZC5wcm9taXNlICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC5wcm9taXNlKClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LnByb2dyZXNzKCBuZXdEZWZlci5ub3RpZnkgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuZG9uZSggbmV3RGVmZXIucmVzb2x2ZSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5mYWlsKCBuZXdEZWZlci5yZWplY3QgKTtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXJbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR0aGlzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRmbiA/IFsgcmV0dXJuZWQgXSA6IGFyZ3VtZW50c1xuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdGZucyA9IG51bGw7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0dGhlbjogZnVuY3Rpb24oIG9uRnVsZmlsbGVkLCBvblJlamVjdGVkLCBvblByb2dyZXNzICkge1xuXHRcdFx0XHRcdHZhciBtYXhEZXB0aCA9IDA7XG5cdFx0XHRcdFx0ZnVuY3Rpb24gcmVzb2x2ZSggZGVwdGgsIGRlZmVycmVkLCBoYW5kbGVyLCBzcGVjaWFsICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0YXJncyA9IGFyZ3VtZW50cyxcblx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQsIHRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4zXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01OVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSWdub3JlIGRvdWJsZS1yZXNvbHV0aW9uIGF0dGVtcHRzXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoIDwgbWF4RGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQgPSBoYW5kbGVyLmFwcGx5KCB0aGF0LCBhcmdzICk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjFcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTQ4XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkID09PSBkZWZlcnJlZC5wcm9taXNlKCkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoIFwiVGhlbmFibGUgc2VsZi1yZXNvbHV0aW9uXCIgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbnMgMi4zLjMuMSwgMy41XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01NFxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNzVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIFJldHJpZXZlIGB0aGVuYCBvbmx5IG9uY2Vcblx0XHRcdFx0XHRcdFx0XHRcdHRoZW4gPSByZXR1cm5lZCAmJlxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBjaGVjayBvYmplY3RzIGFuZCBmdW5jdGlvbnMgZm9yIHRoZW5hYmlsaXR5XG5cdFx0XHRcdFx0XHRcdFx0XHRcdCggdHlwZW9mIHJldHVybmVkID09PSBcIm9iamVjdFwiIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZW9mIHJldHVybmVkID09PSBcImZ1bmN0aW9uXCIgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC50aGVuO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBIYW5kbGUgYSByZXR1cm5lZCB0aGVuYWJsZVxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGVuICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3BlY2lhbCBwcm9jZXNzb3JzIChub3RpZnkpIGp1c3Qgd2FpdCBmb3IgcmVzb2x1dGlvblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gTm9ybWFsIHByb2Nlc3NvcnMgKHJlc29sdmUpIGFsc28gaG9vayBpbnRvIHByb2dyZXNzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgZGlzcmVnYXJkIG9sZGVyIHJlc29sdXRpb24gdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bWF4RGVwdGgrKztcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoZW4uY2FsbChcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSwgc3BlY2lhbCApLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBUaHJvd2VyLCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhbGwgb3RoZXIgcmV0dXJuZWQgdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgc3Vic3RpdHV0ZSBoYW5kbGVycyBwYXNzIG9uIGNvbnRleHRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gSWRlbnRpdHkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRhcmdzID0gWyByZXR1cm5lZCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gUHJvY2VzcyB0aGUgdmFsdWUocylcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRGVmYXVsdCBwcm9jZXNzIGlzIHJlc29sdmVcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCBzcGVjaWFsIHx8IGRlZmVycmVkLnJlc29sdmVXaXRoICkoIHRoYXQsIGFyZ3MgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBub3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgY2F0Y2ggYW5kIHJlamVjdCBleGNlcHRpb25zXG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcyA9IHNwZWNpYWwgP1xuXHRcdFx0XHRcdFx0XHRcdFx0bWlnaHRUaHJvdyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93KCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rKCBlLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuNC4xXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgcG9zdC1yZXNvbHV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoICsgMSA+PSBtYXhEZXB0aCApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGhhbmRsZXIgIT09IFRocm93ZXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoYXQgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIGUgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuMVxuXHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01N1xuXHRcdFx0XHRcdFx0XHQvLyBSZS1yZXNvbHZlIHByb21pc2VzIGltbWVkaWF0ZWx5IHRvIGRvZGdlIGZhbHNlIHJlamVjdGlvbiBmcm9tXG5cdFx0XHRcdFx0XHRcdC8vIHN1YnNlcXVlbnQgZXJyb3JzXG5cdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcygpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQ2FsbCBhbiBvcHRpb25hbCBob29rIHRvIHJlY29yZCB0aGUgc3RhY2ssIGluIGNhc2Ugb2YgZXhjZXB0aW9uXG5cdFx0XHRcdFx0XHRcdFx0Ly8gc2luY2UgaXQncyBvdGhlcndpc2UgbG9zdCB3aGVuIGV4ZWN1dGlvbiBnb2VzIGFzeW5jXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0cHJvY2Vzcy5zdGFja1RyYWNlID0galF1ZXJ5LkRlZmVycmVkLmdldFN0YWNrSG9vaygpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggcHJvY2VzcyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblxuXHRcdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblByb2dyZXNzICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25Qcm9ncmVzcyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eSxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlci5ub3RpZnlXaXRoXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDEgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uRnVsZmlsbGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25GdWxmaWxsZWQgOlxuXHRcdFx0XHRcdFx0XHRcdFx0SWRlbnRpdHlcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAyIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblJlamVjdGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25SZWplY3RlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRUaHJvd2VyXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBHZXQgYSBwcm9taXNlIGZvciB0aGlzIGRlZmVycmVkXG5cdFx0XHRcdC8vIElmIG9iaiBpcyBwcm92aWRlZCwgdGhlIHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3Rcblx0XHRcdFx0cHJvbWlzZTogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRcdFx0XHRyZXR1cm4gb2JqICE9IG51bGwgPyBqUXVlcnkuZXh0ZW5kKCBvYmosIHByb21pc2UgKSA6IHByb21pc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWZlcnJlZCA9IHt9O1xuXG5cdFx0Ly8gQWRkIGxpc3Qtc3BlY2lmaWMgbWV0aG9kc1xuXHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHtcblx0XHRcdHZhciBsaXN0ID0gdHVwbGVbIDIgXSxcblx0XHRcdFx0c3RhdGVTdHJpbmcgPSB0dXBsZVsgNSBdO1xuXG5cdFx0XHQvLyBwcm9taXNlLnByb2dyZXNzID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZG9uZSA9IGxpc3QuYWRkXG5cdFx0XHQvLyBwcm9taXNlLmZhaWwgPSBsaXN0LmFkZFxuXHRcdFx0cHJvbWlzZVsgdHVwbGVbIDEgXSBdID0gbGlzdC5hZGQ7XG5cblx0XHRcdC8vIEhhbmRsZSBzdGF0ZVxuXHRcdFx0aWYgKCBzdGF0ZVN0cmluZyApIHtcblx0XHRcdFx0bGlzdC5hZGQoXG5cdFx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZXNvbHZlZFwiIChpLmUuLCBmdWxmaWxsZWQpXG5cdFx0XHRcdFx0XHQvLyBzdGF0ZSA9IFwicmVqZWN0ZWRcIlxuXHRcdFx0XHRcdFx0c3RhdGUgPSBzdGF0ZVN0cmluZztcblx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHQvLyBmdWxmaWxsZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDIgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZGlzYWJsZVxuXHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5kaXNhYmxlXG5cdFx0XHRcdFx0dHVwbGVzWyAzIC0gaSBdWyAzIF0uZGlzYWJsZSxcblxuXHRcdFx0XHRcdC8vIHByb2dyZXNzX2NhbGxiYWNrcy5sb2NrXG5cdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDIgXS5sb2NrLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMubG9ja1xuXHRcdFx0XHRcdHR1cGxlc1sgMCBdWyAzIF0ubG9ja1xuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5maXJlXG5cdFx0XHQvLyBmdWxmaWxsZWRfaGFuZGxlcnMuZmlyZVxuXHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZmlyZVxuXHRcdFx0bGlzdC5hZGQoIHR1cGxlWyAzIF0uZmlyZSApO1xuXG5cdFx0XHQvLyBkZWZlcnJlZC5ub3RpZnkgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQubm90aWZ5V2l0aCguLi4pIH1cblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmUgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVzb2x2ZVdpdGgoLi4uKSB9XG5cdFx0XHQvLyBkZWZlcnJlZC5yZWplY3QgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVqZWN0V2l0aCguLi4pIH1cblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKCB0aGlzID09PSBkZWZlcnJlZCA/IHVuZGVmaW5lZCA6IHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH07XG5cblx0XHRcdC8vIGRlZmVycmVkLm5vdGlmeVdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHQvLyBkZWZlcnJlZC5yZXNvbHZlV2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdFdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0gPSBsaXN0LmZpcmVXaXRoO1xuXHRcdH0gKTtcblxuXHRcdC8vIE1ha2UgdGhlIGRlZmVycmVkIGEgcHJvbWlzZVxuXHRcdHByb21pc2UucHJvbWlzZSggZGVmZXJyZWQgKTtcblxuXHRcdC8vIENhbGwgZ2l2ZW4gZnVuYyBpZiBhbnlcblx0XHRpZiAoIGZ1bmMgKSB7XG5cdFx0XHRmdW5jLmNhbGwoIGRlZmVycmVkLCBkZWZlcnJlZCApO1xuXHRcdH1cblxuXHRcdC8vIEFsbCBkb25lIVxuXHRcdHJldHVybiBkZWZlcnJlZDtcblx0fSxcblxuXHQvLyBEZWZlcnJlZCBoZWxwZXJcblx0d2hlbjogZnVuY3Rpb24oIHNpbmdsZVZhbHVlICkge1xuXHRcdHZhclxuXG5cdFx0XHQvLyBjb3VudCBvZiB1bmNvbXBsZXRlZCBzdWJvcmRpbmF0ZXNcblx0XHRcdHJlbWFpbmluZyA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cblx0XHRcdC8vIGNvdW50IG9mIHVucHJvY2Vzc2VkIGFyZ3VtZW50c1xuXHRcdFx0aSA9IHJlbWFpbmluZyxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgZnVsZmlsbG1lbnQgZGF0YVxuXHRcdFx0cmVzb2x2ZUNvbnRleHRzID0gQXJyYXkoIGkgKSxcblx0XHRcdHJlc29sdmVWYWx1ZXMgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSxcblxuXHRcdFx0Ly8gdGhlIG1hc3RlciBEZWZlcnJlZFxuXHRcdFx0bWFzdGVyID0galF1ZXJ5LkRlZmVycmVkKCksXG5cblx0XHRcdC8vIHN1Ym9yZGluYXRlIGNhbGxiYWNrIGZhY3Rvcnlcblx0XHRcdHVwZGF0ZUZ1bmMgPSBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXNvbHZlQ29udGV4dHNbIGkgXSA9IHRoaXM7XG5cdFx0XHRcdFx0cmVzb2x2ZVZhbHVlc1sgaSBdID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSA6IHZhbHVlO1xuXHRcdFx0XHRcdGlmICggISggLS1yZW1haW5pbmcgKSApIHtcblx0XHRcdFx0XHRcdG1hc3Rlci5yZXNvbHZlV2l0aCggcmVzb2x2ZUNvbnRleHRzLCByZXNvbHZlVmFsdWVzICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0fTtcblxuXHRcdC8vIFNpbmdsZS0gYW5kIGVtcHR5IGFyZ3VtZW50cyBhcmUgYWRvcHRlZCBsaWtlIFByb21pc2UucmVzb2x2ZVxuXHRcdGlmICggcmVtYWluaW5nIDw9IDEgKSB7XG5cdFx0XHRhZG9wdFZhbHVlKCBzaW5nbGVWYWx1ZSwgbWFzdGVyLmRvbmUoIHVwZGF0ZUZ1bmMoIGkgKSApLnJlc29sdmUsIG1hc3Rlci5yZWplY3QsXG5cdFx0XHRcdCFyZW1haW5pbmcgKTtcblxuXHRcdFx0Ly8gVXNlIC50aGVuKCkgdG8gdW53cmFwIHNlY29uZGFyeSB0aGVuYWJsZXMgKGNmLiBnaC0zMDAwKVxuXHRcdFx0aWYgKCBtYXN0ZXIuc3RhdGUoKSA9PT0gXCJwZW5kaW5nXCIgfHxcblx0XHRcdFx0aXNGdW5jdGlvbiggcmVzb2x2ZVZhbHVlc1sgaSBdICYmIHJlc29sdmVWYWx1ZXNbIGkgXS50aGVuICkgKSB7XG5cblx0XHRcdFx0cmV0dXJuIG1hc3Rlci50aGVuKCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gTXVsdGlwbGUgYXJndW1lbnRzIGFyZSBhZ2dyZWdhdGVkIGxpa2UgUHJvbWlzZS5hbGwgYXJyYXkgZWxlbWVudHNcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdGFkb3B0VmFsdWUoIHJlc29sdmVWYWx1ZXNbIGkgXSwgdXBkYXRlRnVuYyggaSApLCBtYXN0ZXIucmVqZWN0ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hc3Rlci5wcm9taXNlKCk7XG5cdH1cbn0gKTtcblxuXG4vLyBUaGVzZSB1c3VhbGx5IGluZGljYXRlIGEgcHJvZ3JhbW1lciBtaXN0YWtlIGR1cmluZyBkZXZlbG9wbWVudCxcbi8vIHdhcm4gYWJvdXQgdGhlbSBBU0FQIHJhdGhlciB0aGFuIHN3YWxsb3dpbmcgdGhlbSBieSBkZWZhdWx0LlxudmFyIHJlcnJvck5hbWVzID0gL14oRXZhbHxJbnRlcm5hbHxSYW5nZXxSZWZlcmVuY2V8U3ludGF4fFR5cGV8VVJJKUVycm9yJC87XG5cbmpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rID0gZnVuY3Rpb24oIGVycm9yLCBzdGFjayApIHtcblxuXHQvLyBTdXBwb3J0OiBJRSA4IC0gOSBvbmx5XG5cdC8vIENvbnNvbGUgZXhpc3RzIHdoZW4gZGV2IHRvb2xzIGFyZSBvcGVuLCB3aGljaCBjYW4gaGFwcGVuIGF0IGFueSB0aW1lXG5cdGlmICggd2luZG93LmNvbnNvbGUgJiYgd2luZG93LmNvbnNvbGUud2FybiAmJiBlcnJvciAmJiByZXJyb3JOYW1lcy50ZXN0KCBlcnJvci5uYW1lICkgKSB7XG5cdFx0d2luZG93LmNvbnNvbGUud2FybiggXCJqUXVlcnkuRGVmZXJyZWQgZXhjZXB0aW9uOiBcIiArIGVycm9yLm1lc3NhZ2UsIGVycm9yLnN0YWNrLCBzdGFjayApO1xuXHR9XG59O1xuXG5cblxuXG5qUXVlcnkucmVhZHlFeGNlcHRpb24gPSBmdW5jdGlvbiggZXJyb3IgKSB7XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHR0aHJvdyBlcnJvcjtcblx0fSApO1xufTtcblxuXG5cblxuLy8gVGhlIGRlZmVycmVkIHVzZWQgb24gRE9NIHJlYWR5XG52YXIgcmVhZHlMaXN0ID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cbmpRdWVyeS5mbi5yZWFkeSA9IGZ1bmN0aW9uKCBmbiApIHtcblxuXHRyZWFkeUxpc3Rcblx0XHQudGhlbiggZm4gKVxuXG5cdFx0Ly8gV3JhcCBqUXVlcnkucmVhZHlFeGNlcHRpb24gaW4gYSBmdW5jdGlvbiBzbyB0aGF0IHRoZSBsb29rdXBcblx0XHQvLyBoYXBwZW5zIGF0IHRoZSB0aW1lIG9mIGVycm9yIGhhbmRsaW5nIGluc3RlYWQgb2YgY2FsbGJhY2tcblx0XHQvLyByZWdpc3RyYXRpb24uXG5cdFx0LmNhdGNoKCBmdW5jdGlvbiggZXJyb3IgKSB7XG5cdFx0XHRqUXVlcnkucmVhZHlFeGNlcHRpb24oIGVycm9yICk7XG5cdFx0fSApO1xuXG5cdHJldHVybiB0aGlzO1xufTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIElzIHRoZSBET00gcmVhZHkgdG8gYmUgdXNlZD8gU2V0IHRvIHRydWUgb25jZSBpdCBvY2N1cnMuXG5cdGlzUmVhZHk6IGZhbHNlLFxuXG5cdC8vIEEgY291bnRlciB0byB0cmFjayBob3cgbWFueSBpdGVtcyB0byB3YWl0IGZvciBiZWZvcmVcblx0Ly8gdGhlIHJlYWR5IGV2ZW50IGZpcmVzLiBTZWUgIzY3ODFcblx0cmVhZHlXYWl0OiAxLFxuXG5cdC8vIEhhbmRsZSB3aGVuIHRoZSBET00gaXMgcmVhZHlcblx0cmVhZHk6IGZ1bmN0aW9uKCB3YWl0ICkge1xuXG5cdFx0Ly8gQWJvcnQgaWYgdGhlcmUgYXJlIHBlbmRpbmcgaG9sZHMgb3Igd2UncmUgYWxyZWFkeSByZWFkeVxuXHRcdGlmICggd2FpdCA9PT0gdHJ1ZSA/IC0talF1ZXJ5LnJlYWR5V2FpdCA6IGpRdWVyeS5pc1JlYWR5ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIFJlbWVtYmVyIHRoYXQgdGhlIERPTSBpcyByZWFkeVxuXHRcdGpRdWVyeS5pc1JlYWR5ID0gdHJ1ZTtcblxuXHRcdC8vIElmIGEgbm9ybWFsIERPTSBSZWFkeSBldmVudCBmaXJlZCwgZGVjcmVtZW50LCBhbmQgd2FpdCBpZiBuZWVkIGJlXG5cdFx0aWYgKCB3YWl0ICE9PSB0cnVlICYmIC0talF1ZXJ5LnJlYWR5V2FpdCA+IDAgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gSWYgdGhlcmUgYXJlIGZ1bmN0aW9ucyBib3VuZCwgdG8gZXhlY3V0ZVxuXHRcdHJlYWR5TGlzdC5yZXNvbHZlV2l0aCggZG9jdW1lbnQsIFsgalF1ZXJ5IF0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkucmVhZHkudGhlbiA9IHJlYWR5TGlzdC50aGVuO1xuXG4vLyBUaGUgcmVhZHkgZXZlbnQgaGFuZGxlciBhbmQgc2VsZiBjbGVhbnVwIG1ldGhvZFxuZnVuY3Rpb24gY29tcGxldGVkKCkge1xuXHRkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCBcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY29tcGxldGVkICk7XG5cdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCBcImxvYWRcIiwgY29tcGxldGVkICk7XG5cdGpRdWVyeS5yZWFkeSgpO1xufVxuXG4vLyBDYXRjaCBjYXNlcyB3aGVyZSAkKGRvY3VtZW50KS5yZWFkeSgpIGlzIGNhbGxlZFxuLy8gYWZ0ZXIgdGhlIGJyb3dzZXIgZXZlbnQgaGFzIGFscmVhZHkgb2NjdXJyZWQuXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMCBvbmx5XG4vLyBPbGRlciBJRSBzb21ldGltZXMgc2lnbmFscyBcImludGVyYWN0aXZlXCIgdG9vIHNvb25cbmlmICggZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiIHx8XG5cdCggZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gXCJsb2FkaW5nXCIgJiYgIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbCApICkge1xuXG5cdC8vIEhhbmRsZSBpdCBhc3luY2hyb25vdXNseSB0byBhbGxvdyBzY3JpcHRzIHRoZSBvcHBvcnR1bml0eSB0byBkZWxheSByZWFkeVxuXHR3aW5kb3cuc2V0VGltZW91dCggalF1ZXJ5LnJlYWR5ICk7XG5cbn0gZWxzZSB7XG5cblx0Ly8gVXNlIHRoZSBoYW5keSBldmVudCBjYWxsYmFja1xuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCBcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY29tcGxldGVkICk7XG5cblx0Ly8gQSBmYWxsYmFjayB0byB3aW5kb3cub25sb2FkLCB0aGF0IHdpbGwgYWx3YXlzIHdvcmtcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcbn1cblxuXG5cblxuLy8gTXVsdGlmdW5jdGlvbmFsIG1ldGhvZCB0byBnZXQgYW5kIHNldCB2YWx1ZXMgb2YgYSBjb2xsZWN0aW9uXG4vLyBUaGUgdmFsdWUvcyBjYW4gb3B0aW9uYWxseSBiZSBleGVjdXRlZCBpZiBpdCdzIGEgZnVuY3Rpb25cbnZhciBhY2Nlc3MgPSBmdW5jdGlvbiggZWxlbXMsIGZuLCBrZXksIHZhbHVlLCBjaGFpbmFibGUsIGVtcHR5R2V0LCByYXcgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBlbGVtcy5sZW5ndGgsXG5cdFx0YnVsayA9IGtleSA9PSBudWxsO1xuXG5cdC8vIFNldHMgbWFueSB2YWx1ZXNcblx0aWYgKCB0b1R5cGUoIGtleSApID09PSBcIm9iamVjdFwiICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cdFx0Zm9yICggaSBpbiBrZXkgKSB7XG5cdFx0XHRhY2Nlc3MoIGVsZW1zLCBmbiwgaSwga2V5WyBpIF0sIHRydWUsIGVtcHR5R2V0LCByYXcgKTtcblx0XHR9XG5cblx0Ly8gU2V0cyBvbmUgdmFsdWVcblx0fSBlbHNlIGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRjaGFpbmFibGUgPSB0cnVlO1xuXG5cdFx0aWYgKCAhaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJhdyA9IHRydWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBidWxrICkge1xuXG5cdFx0XHQvLyBCdWxrIG9wZXJhdGlvbnMgcnVuIGFnYWluc3QgdGhlIGVudGlyZSBzZXRcblx0XHRcdGlmICggcmF3ICkge1xuXHRcdFx0XHRmbi5jYWxsKCBlbGVtcywgdmFsdWUgKTtcblx0XHRcdFx0Zm4gPSBudWxsO1xuXG5cdFx0XHQvLyAuLi5leGNlcHQgd2hlbiBleGVjdXRpbmcgZnVuY3Rpb24gdmFsdWVzXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRidWxrID0gZm47XG5cdFx0XHRcdGZuID0gZnVuY3Rpb24oIGVsZW0sIF9rZXksIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiBidWxrLmNhbGwoIGpRdWVyeSggZWxlbSApLCB2YWx1ZSApO1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0Zm4oXG5cdFx0XHRcdFx0ZWxlbXNbIGkgXSwga2V5LCByYXcgP1xuXHRcdFx0XHRcdHZhbHVlIDpcblx0XHRcdFx0XHR2YWx1ZS5jYWxsKCBlbGVtc1sgaSBdLCBpLCBmbiggZWxlbXNbIGkgXSwga2V5ICkgKVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdGlmICggY2hhaW5hYmxlICkge1xuXHRcdHJldHVybiBlbGVtcztcblx0fVxuXG5cdC8vIEdldHNcblx0aWYgKCBidWxrICkge1xuXHRcdHJldHVybiBmbi5jYWxsKCBlbGVtcyApO1xuXHR9XG5cblx0cmV0dXJuIGxlbiA/IGZuKCBlbGVtc1sgMCBdLCBrZXkgKSA6IGVtcHR5R2V0O1xufTtcblxuXG4vLyBNYXRjaGVzIGRhc2hlZCBzdHJpbmcgZm9yIGNhbWVsaXppbmdcbnZhciBybXNQcmVmaXggPSAvXi1tcy0vLFxuXHRyZGFzaEFscGhhID0gLy0oW2Etel0pL2c7XG5cbi8vIFVzZWQgYnkgY2FtZWxDYXNlIGFzIGNhbGxiYWNrIHRvIHJlcGxhY2UoKVxuZnVuY3Rpb24gZmNhbWVsQ2FzZSggX2FsbCwgbGV0dGVyICkge1xuXHRyZXR1cm4gbGV0dGVyLnRvVXBwZXJDYXNlKCk7XG59XG5cbi8vIENvbnZlcnQgZGFzaGVkIHRvIGNhbWVsQ2FzZTsgdXNlZCBieSB0aGUgY3NzIGFuZCBkYXRhIG1vZHVsZXNcbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDExLCBFZGdlIDEyIC0gMTVcbi8vIE1pY3Jvc29mdCBmb3Jnb3QgdG8gaHVtcCB0aGVpciB2ZW5kb3IgcHJlZml4ICgjOTU3MilcbmZ1bmN0aW9uIGNhbWVsQ2FzZSggc3RyaW5nICkge1xuXHRyZXR1cm4gc3RyaW5nLnJlcGxhY2UoIHJtc1ByZWZpeCwgXCJtcy1cIiApLnJlcGxhY2UoIHJkYXNoQWxwaGEsIGZjYW1lbENhc2UgKTtcbn1cbnZhciBhY2NlcHREYXRhID0gZnVuY3Rpb24oIG93bmVyICkge1xuXG5cdC8vIEFjY2VwdHMgb25seTpcblx0Ly8gIC0gTm9kZVxuXHQvLyAgICAtIE5vZGUuRUxFTUVOVF9OT0RFXG5cdC8vICAgIC0gTm9kZS5ET0NVTUVOVF9OT0RFXG5cdC8vICAtIE9iamVjdFxuXHQvLyAgICAtIEFueVxuXHRyZXR1cm4gb3duZXIubm9kZVR5cGUgPT09IDEgfHwgb3duZXIubm9kZVR5cGUgPT09IDkgfHwgISggK293bmVyLm5vZGVUeXBlICk7XG59O1xuXG5cblxuXG5mdW5jdGlvbiBEYXRhKCkge1xuXHR0aGlzLmV4cGFuZG8gPSBqUXVlcnkuZXhwYW5kbyArIERhdGEudWlkKys7XG59XG5cbkRhdGEudWlkID0gMTtcblxuRGF0YS5wcm90b3R5cGUgPSB7XG5cblx0Y2FjaGU6IGZ1bmN0aW9uKCBvd25lciApIHtcblxuXHRcdC8vIENoZWNrIGlmIHRoZSBvd25lciBvYmplY3QgYWxyZWFkeSBoYXMgYSBjYWNoZVxuXHRcdHZhciB2YWx1ZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdC8vIElmIG5vdCwgY3JlYXRlIG9uZVxuXHRcdGlmICggIXZhbHVlICkge1xuXHRcdFx0dmFsdWUgPSB7fTtcblxuXHRcdFx0Ly8gV2UgY2FuIGFjY2VwdCBkYXRhIGZvciBub24tZWxlbWVudCBub2RlcyBpbiBtb2Rlcm4gYnJvd3NlcnMsXG5cdFx0XHQvLyBidXQgd2Ugc2hvdWxkIG5vdCwgc2VlICM4MzM1LlxuXHRcdFx0Ly8gQWx3YXlzIHJldHVybiBhbiBlbXB0eSBvYmplY3QuXG5cdFx0XHRpZiAoIGFjY2VwdERhdGEoIG93bmVyICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYgaXQgaXMgYSBub2RlIHVubGlrZWx5IHRvIGJlIHN0cmluZ2lmeS1lZCBvciBsb29wZWQgb3ZlclxuXHRcdFx0XHQvLyB1c2UgcGxhaW4gYXNzaWdubWVudFxuXHRcdFx0XHRpZiAoIG93bmVyLm5vZGVUeXBlICkge1xuXHRcdFx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHZhbHVlO1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBzZWN1cmUgaXQgaW4gYSBub24tZW51bWVyYWJsZSBwcm9wZXJ0eVxuXHRcdFx0XHQvLyBjb25maWd1cmFibGUgbXVzdCBiZSB0cnVlIHRvIGFsbG93IHRoZSBwcm9wZXJ0eSB0byBiZVxuXHRcdFx0XHQvLyBkZWxldGVkIHdoZW4gZGF0YSBpcyByZW1vdmVkXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBvd25lciwgdGhpcy5leHBhbmRvLCB7XG5cdFx0XHRcdFx0XHR2YWx1ZTogdmFsdWUsXG5cdFx0XHRcdFx0XHRjb25maWd1cmFibGU6IHRydWVcblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsdWU7XG5cdH0sXG5cdHNldDogZnVuY3Rpb24oIG93bmVyLCBkYXRhLCB2YWx1ZSApIHtcblx0XHR2YXIgcHJvcCxcblx0XHRcdGNhY2hlID0gdGhpcy5jYWNoZSggb3duZXIgKTtcblxuXHRcdC8vIEhhbmRsZTogWyBvd25lciwga2V5LCB2YWx1ZSBdIGFyZ3Ncblx0XHQvLyBBbHdheXMgdXNlIGNhbWVsQ2FzZSBrZXkgKGdoLTIyNTcpXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGNhY2hlWyBjYW1lbENhc2UoIGRhdGEgKSBdID0gdmFsdWU7XG5cblx0XHQvLyBIYW5kbGU6IFsgb3duZXIsIHsgcHJvcGVydGllcyB9IF0gYXJnc1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIENvcHkgdGhlIHByb3BlcnRpZXMgb25lLWJ5LW9uZSB0byB0aGUgY2FjaGUgb2JqZWN0XG5cdFx0XHRmb3IgKCBwcm9wIGluIGRhdGEgKSB7XG5cdFx0XHRcdGNhY2hlWyBjYW1lbENhc2UoIHByb3AgKSBdID0gZGF0YVsgcHJvcCBdO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gY2FjaGU7XG5cdH0sXG5cdGdldDogZnVuY3Rpb24oIG93bmVyLCBrZXkgKSB7XG5cdFx0cmV0dXJuIGtleSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMuY2FjaGUoIG93bmVyICkgOlxuXG5cdFx0XHQvLyBBbHdheXMgdXNlIGNhbWVsQ2FzZSBrZXkgKGdoLTIyNTcpXG5cdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gJiYgb3duZXJbIHRoaXMuZXhwYW5kbyBdWyBjYW1lbENhc2UoIGtleSApIF07XG5cdH0sXG5cdGFjY2VzczogZnVuY3Rpb24oIG93bmVyLCBrZXksIHZhbHVlICkge1xuXG5cdFx0Ly8gSW4gY2FzZXMgd2hlcmUgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBObyBrZXkgd2FzIHNwZWNpZmllZFxuXHRcdC8vICAgMi4gQSBzdHJpbmcga2V5IHdhcyBzcGVjaWZpZWQsIGJ1dCBubyB2YWx1ZSBwcm92aWRlZFxuXHRcdC8vXG5cdFx0Ly8gVGFrZSB0aGUgXCJyZWFkXCIgcGF0aCBhbmQgYWxsb3cgdGhlIGdldCBtZXRob2QgdG8gZGV0ZXJtaW5lXG5cdFx0Ly8gd2hpY2ggdmFsdWUgdG8gcmV0dXJuLCByZXNwZWN0aXZlbHkgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBUaGUgZW50aXJlIGNhY2hlIG9iamVjdFxuXHRcdC8vICAgMi4gVGhlIGRhdGEgc3RvcmVkIGF0IHRoZSBrZXlcblx0XHQvL1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHxcblx0XHRcdFx0KCAoIGtleSAmJiB0eXBlb2Yga2V5ID09PSBcInN0cmluZ1wiICkgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApICkge1xuXG5cdFx0XHRyZXR1cm4gdGhpcy5nZXQoIG93bmVyLCBrZXkgKTtcblx0XHR9XG5cblx0XHQvLyBXaGVuIHRoZSBrZXkgaXMgbm90IGEgc3RyaW5nLCBvciBib3RoIGEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vIGFyZSBzcGVjaWZpZWQsIHNldCBvciBleHRlbmQgKGV4aXN0aW5nIG9iamVjdHMpIHdpdGggZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBBbiBvYmplY3Qgb2YgcHJvcGVydGllc1xuXHRcdC8vICAgMi4gQSBrZXkgYW5kIHZhbHVlXG5cdFx0Ly9cblx0XHR0aGlzLnNldCggb3duZXIsIGtleSwgdmFsdWUgKTtcblxuXHRcdC8vIFNpbmNlIHRoZSBcInNldFwiIHBhdGggY2FuIGhhdmUgdHdvIHBvc3NpYmxlIGVudHJ5IHBvaW50c1xuXHRcdC8vIHJldHVybiB0aGUgZXhwZWN0ZWQgZGF0YSBiYXNlZCBvbiB3aGljaCBwYXRoIHdhcyB0YWtlblsqXVxuXHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiBrZXk7XG5cdH0sXG5cdHJlbW92ZTogZnVuY3Rpb24oIG93bmVyLCBrZXkgKSB7XG5cdFx0dmFyIGksXG5cdFx0XHRjYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdGlmICggY2FjaGUgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIGtleSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0IGFycmF5IG9yIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmcgb2Yga2V5c1xuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCBrZXkgKSApIHtcblxuXHRcdFx0XHQvLyBJZiBrZXkgaXMgYW4gYXJyYXkgb2Yga2V5cy4uLlxuXHRcdFx0XHQvLyBXZSBhbHdheXMgc2V0IGNhbWVsQ2FzZSBrZXlzLCBzbyByZW1vdmUgdGhhdC5cblx0XHRcdFx0a2V5ID0ga2V5Lm1hcCggY2FtZWxDYXNlICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRrZXkgPSBjYW1lbENhc2UoIGtleSApO1xuXG5cdFx0XHRcdC8vIElmIGEga2V5IHdpdGggdGhlIHNwYWNlcyBleGlzdHMsIHVzZSBpdC5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCBjcmVhdGUgYW4gYXJyYXkgYnkgbWF0Y2hpbmcgbm9uLXdoaXRlc3BhY2Vcblx0XHRcdFx0a2V5ID0ga2V5IGluIGNhY2hlID9cblx0XHRcdFx0XHRbIGtleSBdIDpcblx0XHRcdFx0XHQoIGtleS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdICk7XG5cdFx0XHR9XG5cblx0XHRcdGkgPSBrZXkubGVuZ3RoO1xuXG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0ZGVsZXRlIGNhY2hlWyBrZXlbIGkgXSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSB0aGUgZXhwYW5kbyBpZiB0aGVyZSdzIG5vIG1vcmUgZGF0YVxuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHwgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGNhY2hlICkgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDVcblx0XHRcdC8vIFdlYmtpdCAmIEJsaW5rIHBlcmZvcm1hbmNlIHN1ZmZlcnMgd2hlbiBkZWxldGluZyBwcm9wZXJ0aWVzXG5cdFx0XHQvLyBmcm9tIERPTSBub2Rlcywgc28gc2V0IHRvIHVuZGVmaW5lZCBpbnN0ZWFkXG5cdFx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0zNzg2MDcgKGJ1ZyByZXN0cmljdGVkKVxuXHRcdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcblx0XHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGVsZXRlIG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cdGhhc0RhdGE6IGZ1bmN0aW9uKCBvd25lciApIHtcblx0XHR2YXIgY2FjaGUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cdFx0cmV0dXJuIGNhY2hlICE9PSB1bmRlZmluZWQgJiYgIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApO1xuXHR9XG59O1xudmFyIGRhdGFQcml2ID0gbmV3IERhdGEoKTtcblxudmFyIGRhdGFVc2VyID0gbmV3IERhdGEoKTtcblxuXG5cbi8vXHRJbXBsZW1lbnRhdGlvbiBTdW1tYXJ5XG4vL1xuLy9cdDEuIEVuZm9yY2UgQVBJIHN1cmZhY2UgYW5kIHNlbWFudGljIGNvbXBhdGliaWxpdHkgd2l0aCAxLjkueCBicmFuY2hcbi8vXHQyLiBJbXByb3ZlIHRoZSBtb2R1bGUncyBtYWludGFpbmFiaWxpdHkgYnkgcmVkdWNpbmcgdGhlIHN0b3JhZ2Vcbi8vXHRcdHBhdGhzIHRvIGEgc2luZ2xlIG1lY2hhbmlzbS5cbi8vXHQzLiBVc2UgdGhlIHNhbWUgc2luZ2xlIG1lY2hhbmlzbSB0byBzdXBwb3J0IFwicHJpdmF0ZVwiIGFuZCBcInVzZXJcIiBkYXRhLlxuLy9cdDQuIF9OZXZlcl8gZXhwb3NlIFwicHJpdmF0ZVwiIGRhdGEgdG8gdXNlciBjb2RlIChUT0RPOiBEcm9wIF9kYXRhLCBfcmVtb3ZlRGF0YSlcbi8vXHQ1LiBBdm9pZCBleHBvc2luZyBpbXBsZW1lbnRhdGlvbiBkZXRhaWxzIG9uIHVzZXIgb2JqZWN0cyAoZWcuIGV4cGFuZG8gcHJvcGVydGllcylcbi8vXHQ2LiBQcm92aWRlIGEgY2xlYXIgcGF0aCBmb3IgaW1wbGVtZW50YXRpb24gdXBncmFkZSB0byBXZWFrTWFwIGluIDIwMTRcblxudmFyIHJicmFjZSA9IC9eKD86XFx7W1xcd1xcV10qXFx9fFxcW1tcXHdcXFddKlxcXSkkLyxcblx0cm11bHRpRGFzaCA9IC9bQS1aXS9nO1xuXG5mdW5jdGlvbiBnZXREYXRhKCBkYXRhICkge1xuXHRpZiAoIGRhdGEgPT09IFwidHJ1ZVwiICkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0aWYgKCBkYXRhID09PSBcImZhbHNlXCIgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0aWYgKCBkYXRhID09PSBcIm51bGxcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIE9ubHkgY29udmVydCB0byBhIG51bWJlciBpZiBpdCBkb2Vzbid0IGNoYW5nZSB0aGUgc3RyaW5nXG5cdGlmICggZGF0YSA9PT0gK2RhdGEgKyBcIlwiICkge1xuXHRcdHJldHVybiArZGF0YTtcblx0fVxuXG5cdGlmICggcmJyYWNlLnRlc3QoIGRhdGEgKSApIHtcblx0XHRyZXR1cm4gSlNPTi5wYXJzZSggZGF0YSApO1xuXHR9XG5cblx0cmV0dXJuIGRhdGE7XG59XG5cbmZ1bmN0aW9uIGRhdGFBdHRyKCBlbGVtLCBrZXksIGRhdGEgKSB7XG5cdHZhciBuYW1lO1xuXG5cdC8vIElmIG5vdGhpbmcgd2FzIGZvdW5kIGludGVybmFsbHksIHRyeSB0byBmZXRjaCBhbnlcblx0Ly8gZGF0YSBmcm9tIHRoZSBIVE1MNSBkYXRhLSogYXR0cmlidXRlXG5cdGlmICggZGF0YSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0bmFtZSA9IFwiZGF0YS1cIiArIGtleS5yZXBsYWNlKCBybXVsdGlEYXNoLCBcIi0kJlwiICkudG9Mb3dlckNhc2UoKTtcblx0XHRkYXRhID0gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKTtcblxuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRkYXRhID0gZ2V0RGF0YSggZGF0YSApO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXG5cdFx0XHQvLyBNYWtlIHN1cmUgd2Ugc2V0IHRoZSBkYXRhIHNvIGl0IGlzbid0IGNoYW5nZWQgbGF0ZXJcblx0XHRcdGRhdGFVc2VyLnNldCggZWxlbSwga2V5LCBkYXRhICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBkYXRhO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGhhc0RhdGE6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkYXRhVXNlci5oYXNEYXRhKCBlbGVtICkgfHwgZGF0YVByaXYuaGFzRGF0YSggZWxlbSApO1xuXHR9LFxuXG5cdGRhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBkYXRhVXNlci5hY2Nlc3MoIGVsZW0sIG5hbWUsIGRhdGEgKTtcblx0fSxcblxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRkYXRhVXNlci5yZW1vdmUoIGVsZW0sIG5hbWUgKTtcblx0fSxcblxuXHQvLyBUT0RPOiBOb3cgdGhhdCBhbGwgY2FsbHMgdG8gX2RhdGEgYW5kIF9yZW1vdmVEYXRhIGhhdmUgYmVlbiByZXBsYWNlZFxuXHQvLyB3aXRoIGRpcmVjdCBjYWxscyB0byBkYXRhUHJpdiBtZXRob2RzLCB0aGVzZSBjYW4gYmUgZGVwcmVjYXRlZC5cblx0X2RhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIG5hbWUsIGRhdGEgKTtcblx0fSxcblxuXHRfcmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBuYW1lICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRkYXRhOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblx0XHR2YXIgaSwgbmFtZSwgZGF0YSxcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRhdHRycyA9IGVsZW0gJiYgZWxlbS5hdHRyaWJ1dGVzO1xuXG5cdFx0Ly8gR2V0cyBhbGwgdmFsdWVzXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdGhpcy5sZW5ndGggKSB7XG5cdFx0XHRcdGRhdGEgPSBkYXRhVXNlci5nZXQoIGVsZW0gKTtcblxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgIWRhdGFQcml2LmdldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiApICkge1xuXHRcdFx0XHRcdGkgPSBhdHRycy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDExIG9ubHlcblx0XHRcdFx0XHRcdC8vIFRoZSBhdHRycyBlbGVtZW50cyBjYW4gYmUgbnVsbCAoIzE0ODk0KVxuXHRcdFx0XHRcdFx0aWYgKCBhdHRyc1sgaSBdICkge1xuXHRcdFx0XHRcdFx0XHRuYW1lID0gYXR0cnNbIGkgXS5uYW1lO1xuXHRcdFx0XHRcdFx0XHRpZiAoIG5hbWUuaW5kZXhPZiggXCJkYXRhLVwiICkgPT09IDAgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bmFtZSA9IGNhbWVsQ2FzZSggbmFtZS5zbGljZSggNSApICk7XG5cdFx0XHRcdFx0XHRcdFx0ZGF0YUF0dHIoIGVsZW0sIG5hbWUsIGRhdGFbIG5hbWUgXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBkYXRhO1xuXHRcdH1cblxuXHRcdC8vIFNldHMgbXVsdGlwbGUgdmFsdWVzXG5cdFx0aWYgKCB0eXBlb2Yga2V5ID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5ICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGRhdGE7XG5cblx0XHRcdC8vIFRoZSBjYWxsaW5nIGpRdWVyeSBvYmplY3QgKGVsZW1lbnQgbWF0Y2hlcykgaXMgbm90IGVtcHR5XG5cdFx0XHQvLyAoYW5kIHRoZXJlZm9yZSBoYXMgYW4gZWxlbWVudCBhcHBlYXJzIGF0IHRoaXNbIDAgXSkgYW5kIHRoZVxuXHRcdFx0Ly8gYHZhbHVlYCBwYXJhbWV0ZXIgd2FzIG5vdCB1bmRlZmluZWQuIEFuIGVtcHR5IGpRdWVyeSBvYmplY3Rcblx0XHRcdC8vIHdpbGwgcmVzdWx0IGluIGB1bmRlZmluZWRgIGZvciBlbGVtID0gdGhpc1sgMCBdIHdoaWNoIHdpbGxcblx0XHRcdC8vIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhbiBhdHRlbXB0IHRvIHJlYWQgYSBkYXRhIGNhY2hlIGlzIG1hZGUuXG5cdFx0XHRpZiAoIGVsZW0gJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIGdldCBkYXRhIGZyb20gdGhlIGNhY2hlXG5cdFx0XHRcdC8vIFRoZSBrZXkgd2lsbCBhbHdheXMgYmUgY2FtZWxDYXNlZCBpbiBEYXRhXG5cdFx0XHRcdGRhdGEgPSBkYXRhVXNlci5nZXQoIGVsZW0sIGtleSApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gXCJkaXNjb3ZlclwiIHRoZSBkYXRhIGluXG5cdFx0XHRcdC8vIEhUTUw1IGN1c3RvbSBkYXRhLSogYXR0cnNcblx0XHRcdFx0ZGF0YSA9IGRhdGFBdHRyKCBlbGVtLCBrZXkgKTtcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBXZSB0cmllZCByZWFsbHkgaGFyZCwgYnV0IHRoZSBkYXRhIGRvZXNuJ3QgZXhpc3QuXG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IHRoZSBkYXRhLi4uXG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIFdlIGFsd2F5cyBzdG9yZSB0aGUgY2FtZWxDYXNlZCBrZXlcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXksIHZhbHVlICk7XG5cdFx0XHR9ICk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxLCBudWxsLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGtleSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGRhdGFVc2VyLnJlbW92ZSggdGhpcywga2V5ICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHF1ZXVlO1xuXG5cdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0dHlwZSA9ICggdHlwZSB8fCBcImZ4XCIgKSArIFwicXVldWVcIjtcblx0XHRcdHF1ZXVlID0gZGF0YVByaXYuZ2V0KCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdC8vIFNwZWVkIHVwIGRlcXVldWUgYnkgZ2V0dGluZyBvdXQgcXVpY2tseSBpZiB0aGlzIGlzIGp1c3QgYSBsb29rdXBcblx0XHRcdGlmICggZGF0YSApIHtcblx0XHRcdFx0aWYgKCAhcXVldWUgfHwgQXJyYXkuaXNBcnJheSggZGF0YSApICkge1xuXHRcdFx0XHRcdHF1ZXVlID0gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCB0eXBlLCBqUXVlcnkubWFrZUFycmF5KCBkYXRhICkgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBkYXRhICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBxdWV1ZSB8fCBbXTtcblx0XHR9XG5cdH0sXG5cblx0ZGVxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdFx0dmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCBlbGVtLCB0eXBlICksXG5cdFx0XHRzdGFydExlbmd0aCA9IHF1ZXVlLmxlbmd0aCxcblx0XHRcdGZuID0gcXVldWUuc2hpZnQoKSxcblx0XHRcdGhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVtLCB0eXBlICksXG5cdFx0XHRuZXh0ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCBlbGVtLCB0eXBlICk7XG5cdFx0XHR9O1xuXG5cdFx0Ly8gSWYgdGhlIGZ4IHF1ZXVlIGlzIGRlcXVldWVkLCBhbHdheXMgcmVtb3ZlIHRoZSBwcm9ncmVzcyBzZW50aW5lbFxuXHRcdGlmICggZm4gPT09IFwiaW5wcm9ncmVzc1wiICkge1xuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpO1xuXHRcdFx0c3RhcnRMZW5ndGgtLTtcblx0XHR9XG5cblx0XHRpZiAoIGZuICkge1xuXG5cdFx0XHQvLyBBZGQgYSBwcm9ncmVzcyBzZW50aW5lbCB0byBwcmV2ZW50IHRoZSBmeCBxdWV1ZSBmcm9tIGJlaW5nXG5cdFx0XHQvLyBhdXRvbWF0aWNhbGx5IGRlcXVldWVkXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiApIHtcblx0XHRcdFx0cXVldWUudW5zaGlmdCggXCJpbnByb2dyZXNzXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2xlYXIgdXAgdGhlIGxhc3QgcXVldWUgc3RvcCBmdW5jdGlvblxuXHRcdFx0ZGVsZXRlIGhvb2tzLnN0b3A7XG5cdFx0XHRmbi5jYWxsKCBlbGVtLCBuZXh0LCBob29rcyApO1xuXHRcdH1cblxuXHRcdGlmICggIXN0YXJ0TGVuZ3RoICYmIGhvb2tzICkge1xuXHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdH1cblx0fSxcblxuXHQvLyBOb3QgcHVibGljIC0gZ2VuZXJhdGUgYSBxdWV1ZUhvb2tzIG9iamVjdCwgb3IgcmV0dXJuIHRoZSBjdXJyZW50IG9uZVxuXHRfcXVldWVIb29rczogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XG5cdFx0dmFyIGtleSA9IHR5cGUgKyBcInF1ZXVlSG9va3NcIjtcblx0XHRyZXR1cm4gZGF0YVByaXYuZ2V0KCBlbGVtLCBrZXkgKSB8fCBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIGtleSwge1xuXHRcdFx0ZW1wdHk6IGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLmFkZCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgWyB0eXBlICsgXCJxdWV1ZVwiLCBrZXkgXSApO1xuXHRcdFx0fSApXG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0cXVldWU6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBzZXR0ZXIgPSAyO1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGRhdGEgPSB0eXBlO1xuXHRcdFx0dHlwZSA9IFwiZnhcIjtcblx0XHRcdHNldHRlci0tO1xuXHRcdH1cblxuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCA8IHNldHRlciApIHtcblx0XHRcdHJldHVybiBqUXVlcnkucXVldWUoIHRoaXNbIDAgXSwgdHlwZSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBkYXRhID09PSB1bmRlZmluZWQgP1xuXHRcdFx0dGhpcyA6XG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIGRhdGEgKTtcblxuXHRcdFx0XHQvLyBFbnN1cmUgYSBob29rcyBmb3IgdGhpcyBxdWV1ZVxuXHRcdFx0XHRqUXVlcnkuX3F1ZXVlSG9va3MoIHRoaXMsIHR5cGUgKTtcblxuXHRcdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiAmJiBxdWV1ZVsgMCBdICE9PSBcImlucHJvZ3Jlc3NcIiApIHtcblx0XHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdH0sXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHR9ICk7XG5cdH0sXG5cdGNsZWFyUXVldWU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdHJldHVybiB0aGlzLnF1ZXVlKCB0eXBlIHx8IFwiZnhcIiwgW10gKTtcblx0fSxcblxuXHQvLyBHZXQgYSBwcm9taXNlIHJlc29sdmVkIHdoZW4gcXVldWVzIG9mIGEgY2VydGFpbiB0eXBlXG5cdC8vIGFyZSBlbXB0aWVkIChmeCBpcyB0aGUgdHlwZSBieSBkZWZhdWx0KVxuXHRwcm9taXNlOiBmdW5jdGlvbiggdHlwZSwgb2JqICkge1xuXHRcdHZhciB0bXAsXG5cdFx0XHRjb3VudCA9IDEsXG5cdFx0XHRkZWZlciA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuXHRcdFx0ZWxlbWVudHMgPSB0aGlzLFxuXHRcdFx0aSA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0cmVzb2x2ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoICEoIC0tY291bnQgKSApIHtcblx0XHRcdFx0XHRkZWZlci5yZXNvbHZlV2l0aCggZWxlbWVudHMsIFsgZWxlbWVudHMgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdG9iaiA9IHR5cGU7XG5cdFx0XHR0eXBlID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRtcCA9IGRhdGFQcml2LmdldCggZWxlbWVudHNbIGkgXSwgdHlwZSArIFwicXVldWVIb29rc1wiICk7XG5cdFx0XHRpZiAoIHRtcCAmJiB0bXAuZW1wdHkgKSB7XG5cdFx0XHRcdGNvdW50Kys7XG5cdFx0XHRcdHRtcC5lbXB0eS5hZGQoIHJlc29sdmUgKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmVzb2x2ZSgpO1xuXHRcdHJldHVybiBkZWZlci5wcm9taXNlKCBvYmogKTtcblx0fVxufSApO1xudmFyIHBudW0gPSAoIC9bKy1dPyg/OlxcZCpcXC58KVxcZCsoPzpbZUVdWystXT9cXGQrfCkvICkuc291cmNlO1xuXG52YXIgcmNzc051bSA9IG5ldyBSZWdFeHAoIFwiXig/OihbKy1dKT18KShcIiArIHBudW0gKyBcIikoW2EteiVdKikkXCIsIFwiaVwiICk7XG5cblxudmFyIGNzc0V4cGFuZCA9IFsgXCJUb3BcIiwgXCJSaWdodFwiLCBcIkJvdHRvbVwiLCBcIkxlZnRcIiBdO1xuXG52YXIgZG9jdW1lbnRFbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG5cblxuXHR2YXIgaXNBdHRhY2hlZCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICk7XG5cdFx0fSxcblx0XHRjb21wb3NlZCA9IHsgY29tcG9zZWQ6IHRydWUgfTtcblxuXHQvLyBTdXBwb3J0OiBJRSA5IC0gMTErLCBFZGdlIDEyIC0gMTgrLCBpT1MgMTAuMCAtIDEwLjIgb25seVxuXHQvLyBDaGVjayBhdHRhY2htZW50IGFjcm9zcyBzaGFkb3cgRE9NIGJvdW5kYXJpZXMgd2hlbiBwb3NzaWJsZSAoZ2gtMzUwNClcblx0Ly8gU3VwcG9ydDogaU9TIDEwLjAtMTAuMiBvbmx5XG5cdC8vIEVhcmx5IGlPUyAxMCB2ZXJzaW9ucyBzdXBwb3J0IGBhdHRhY2hTaGFkb3dgIGJ1dCBub3QgYGdldFJvb3ROb2RlYCxcblx0Ly8gbGVhZGluZyB0byBlcnJvcnMuIFdlIG5lZWQgdG8gY2hlY2sgZm9yIGBnZXRSb290Tm9kZWAuXG5cdGlmICggZG9jdW1lbnRFbGVtZW50LmdldFJvb3ROb2RlICkge1xuXHRcdGlzQXR0YWNoZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApIHx8XG5cdFx0XHRcdGVsZW0uZ2V0Um9vdE5vZGUoIGNvbXBvc2VkICkgPT09IGVsZW0ub3duZXJEb2N1bWVudDtcblx0XHR9O1xuXHR9XG52YXIgaXNIaWRkZW5XaXRoaW5UcmVlID0gZnVuY3Rpb24oIGVsZW0sIGVsICkge1xuXG5cdFx0Ly8gaXNIaWRkZW5XaXRoaW5UcmVlIG1pZ2h0IGJlIGNhbGxlZCBmcm9tIGpRdWVyeSNmaWx0ZXIgZnVuY3Rpb247XG5cdFx0Ly8gaW4gdGhhdCBjYXNlLCBlbGVtZW50IHdpbGwgYmUgc2Vjb25kIGFyZ3VtZW50XG5cdFx0ZWxlbSA9IGVsIHx8IGVsZW07XG5cblx0XHQvLyBJbmxpbmUgc3R5bGUgdHJ1bXBzIGFsbFxuXHRcdHJldHVybiBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiIHx8XG5cdFx0XHRlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwiXCIgJiZcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlLCBjaGVjayBjb21wdXRlZCBzdHlsZVxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTQzIC0gNDVcblx0XHRcdC8vIERpc2Nvbm5lY3RlZCBlbGVtZW50cyBjYW4gaGF2ZSBjb21wdXRlZCBkaXNwbGF5OiBub25lLCBzbyBmaXJzdCBjb25maXJtIHRoYXQgZWxlbSBpc1xuXHRcdFx0Ly8gaW4gdGhlIGRvY3VtZW50LlxuXHRcdFx0aXNBdHRhY2hlZCggZWxlbSApICYmXG5cblx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICkgPT09IFwibm9uZVwiO1xuXHR9O1xuXG5cblxuZnVuY3Rpb24gYWRqdXN0Q1NTKCBlbGVtLCBwcm9wLCB2YWx1ZVBhcnRzLCB0d2VlbiApIHtcblx0dmFyIGFkanVzdGVkLCBzY2FsZSxcblx0XHRtYXhJdGVyYXRpb25zID0gMjAsXG5cdFx0Y3VycmVudFZhbHVlID0gdHdlZW4gP1xuXHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiB0d2Vlbi5jdXIoKTtcblx0XHRcdH0gOlxuXHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wLCBcIlwiICk7XG5cdFx0XHR9LFxuXHRcdGluaXRpYWwgPSBjdXJyZW50VmFsdWUoKSxcblx0XHR1bml0ID0gdmFsdWVQYXJ0cyAmJiB2YWx1ZVBhcnRzWyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICksXG5cblx0XHQvLyBTdGFydGluZyB2YWx1ZSBjb21wdXRhdGlvbiBpcyByZXF1aXJlZCBmb3IgcG90ZW50aWFsIHVuaXQgbWlzbWF0Y2hlc1xuXHRcdGluaXRpYWxJblVuaXQgPSBlbGVtLm5vZGVUeXBlICYmXG5cdFx0XHQoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSB8fCB1bml0ICE9PSBcInB4XCIgJiYgK2luaXRpYWwgKSAmJlxuXHRcdFx0cmNzc051bS5leGVjKCBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wICkgKTtcblxuXHRpZiAoIGluaXRpYWxJblVuaXQgJiYgaW5pdGlhbEluVW5pdFsgMyBdICE9PSB1bml0ICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTU0XG5cdFx0Ly8gSGFsdmUgdGhlIGl0ZXJhdGlvbiB0YXJnZXQgdmFsdWUgdG8gcHJldmVudCBpbnRlcmZlcmVuY2UgZnJvbSBDU1MgdXBwZXIgYm91bmRzIChnaC0yMTQ0KVxuXHRcdGluaXRpYWwgPSBpbml0aWFsIC8gMjtcblxuXHRcdC8vIFRydXN0IHVuaXRzIHJlcG9ydGVkIGJ5IGpRdWVyeS5jc3Ncblx0XHR1bml0ID0gdW5pdCB8fCBpbml0aWFsSW5Vbml0WyAzIF07XG5cblx0XHQvLyBJdGVyYXRpdmVseSBhcHByb3hpbWF0ZSBmcm9tIGEgbm9uemVybyBzdGFydGluZyBwb2ludFxuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbCB8fCAxO1xuXG5cdFx0d2hpbGUgKCBtYXhJdGVyYXRpb25zLS0gKSB7XG5cblx0XHRcdC8vIEV2YWx1YXRlIGFuZCB1cGRhdGUgb3VyIGJlc3QgZ3Vlc3MgKGRvdWJsaW5nIGd1ZXNzZXMgdGhhdCB6ZXJvIG91dCkuXG5cdFx0XHQvLyBGaW5pc2ggaWYgdGhlIHNjYWxlIGVxdWFscyBvciBjcm9zc2VzIDEgKG1ha2luZyB0aGUgb2xkKm5ldyBwcm9kdWN0IG5vbi1wb3NpdGl2ZSkuXG5cdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIGluaXRpYWxJblVuaXQgKyB1bml0ICk7XG5cdFx0XHRpZiAoICggMSAtIHNjYWxlICkgKiAoIDEgLSAoIHNjYWxlID0gY3VycmVudFZhbHVlKCkgLyBpbml0aWFsIHx8IDAuNSApICkgPD0gMCApIHtcblx0XHRcdFx0bWF4SXRlcmF0aW9ucyA9IDA7XG5cdFx0XHR9XG5cdFx0XHRpbml0aWFsSW5Vbml0ID0gaW5pdGlhbEluVW5pdCAvIHNjYWxlO1xuXG5cdFx0fVxuXG5cdFx0aW5pdGlhbEluVW5pdCA9IGluaXRpYWxJblVuaXQgKiAyO1xuXHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB3ZSB1cGRhdGUgdGhlIHR3ZWVuIHByb3BlcnRpZXMgbGF0ZXIgb25cblx0XHR2YWx1ZVBhcnRzID0gdmFsdWVQYXJ0cyB8fCBbXTtcblx0fVxuXG5cdGlmICggdmFsdWVQYXJ0cyApIHtcblx0XHRpbml0aWFsSW5Vbml0ID0gK2luaXRpYWxJblVuaXQgfHwgK2luaXRpYWwgfHwgMDtcblxuXHRcdC8vIEFwcGx5IHJlbGF0aXZlIG9mZnNldCAoKz0vLT0pIGlmIHNwZWNpZmllZFxuXHRcdGFkanVzdGVkID0gdmFsdWVQYXJ0c1sgMSBdID9cblx0XHRcdGluaXRpYWxJblVuaXQgKyAoIHZhbHVlUGFydHNbIDEgXSArIDEgKSAqIHZhbHVlUGFydHNbIDIgXSA6XG5cdFx0XHQrdmFsdWVQYXJ0c1sgMiBdO1xuXHRcdGlmICggdHdlZW4gKSB7XG5cdFx0XHR0d2Vlbi51bml0ID0gdW5pdDtcblx0XHRcdHR3ZWVuLnN0YXJ0ID0gaW5pdGlhbEluVW5pdDtcblx0XHRcdHR3ZWVuLmVuZCA9IGFkanVzdGVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gYWRqdXN0ZWQ7XG59XG5cblxudmFyIGRlZmF1bHREaXNwbGF5TWFwID0ge307XG5cbmZ1bmN0aW9uIGdldERlZmF1bHREaXNwbGF5KCBlbGVtICkge1xuXHR2YXIgdGVtcCxcblx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQsXG5cdFx0bm9kZU5hbWUgPSBlbGVtLm5vZGVOYW1lLFxuXHRcdGRpc3BsYXkgPSBkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXTtcblxuXHRpZiAoIGRpc3BsYXkgKSB7XG5cdFx0cmV0dXJuIGRpc3BsYXk7XG5cdH1cblxuXHR0ZW1wID0gZG9jLmJvZHkuYXBwZW5kQ2hpbGQoIGRvYy5jcmVhdGVFbGVtZW50KCBub2RlTmFtZSApICk7XG5cdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCB0ZW1wLCBcImRpc3BsYXlcIiApO1xuXG5cdHRlbXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggdGVtcCApO1xuXG5cdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0ZGlzcGxheSA9IFwiYmxvY2tcIjtcblx0fVxuXHRkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXSA9IGRpc3BsYXk7XG5cblx0cmV0dXJuIGRpc3BsYXk7XG59XG5cbmZ1bmN0aW9uIHNob3dIaWRlKCBlbGVtZW50cywgc2hvdyApIHtcblx0dmFyIGRpc3BsYXksIGVsZW0sXG5cdFx0dmFsdWVzID0gW10sXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGVsZW1lbnRzLmxlbmd0aDtcblxuXHQvLyBEZXRlcm1pbmUgbmV3IGRpc3BsYXkgdmFsdWUgZm9yIGVsZW1lbnRzIHRoYXQgbmVlZCB0byBjaGFuZ2Vcblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRlbGVtID0gZWxlbWVudHNbIGluZGV4IF07XG5cdFx0aWYgKCAhZWxlbS5zdHlsZSApIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGRpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXk7XG5cdFx0aWYgKCBzaG93ICkge1xuXG5cdFx0XHQvLyBTaW5jZSB3ZSBmb3JjZSB2aXNpYmlsaXR5IHVwb24gY2FzY2FkZS1oaWRkZW4gZWxlbWVudHMsIGFuIGltbWVkaWF0ZSAoYW5kIHNsb3cpXG5cdFx0XHQvLyBjaGVjayBpcyByZXF1aXJlZCBpbiB0aGlzIGZpcnN0IGxvb3AgdW5sZXNzIHdlIGhhdmUgYSBub25lbXB0eSBkaXNwbGF5IHZhbHVlIChlaXRoZXJcblx0XHRcdC8vIGlubGluZSBvciBhYm91dC10by1iZS1yZXN0b3JlZClcblx0XHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJkaXNwbGF5XCIgKSB8fCBudWxsO1xuXHRcdFx0XHRpZiAoICF2YWx1ZXNbIGluZGV4IF0gKSB7XG5cdFx0XHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKCBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwiXCIgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICkgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IGdldERlZmF1bHREaXNwbGF5KCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICggZGlzcGxheSAhPT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IFwibm9uZVwiO1xuXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHdoYXQgd2UncmUgb3ZlcndyaXRpbmdcblx0XHRcdFx0ZGF0YVByaXYuc2V0KCBlbGVtLCBcImRpc3BsYXlcIiwgZGlzcGxheSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFNldCB0aGUgZGlzcGxheSBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQgbG9vcCB0byBhdm9pZCBjb25zdGFudCByZWZsb3dcblx0Zm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRpZiAoIHZhbHVlc1sgaW5kZXggXSAhPSBudWxsICkge1xuXHRcdFx0ZWxlbWVudHNbIGluZGV4IF0uc3R5bGUuZGlzcGxheSA9IHZhbHVlc1sgaW5kZXggXTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbWVudHM7XG59XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2hvdzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzLCB0cnVlICk7XG5cdH0sXG5cdGhpZGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcyApO1xuXHR9LFxuXHR0b2dnbGU6IGZ1bmN0aW9uKCBzdGF0ZSApIHtcblx0XHRpZiAoIHR5cGVvZiBzdGF0ZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGUgPyB0aGlzLnNob3coKSA6IHRoaXMuaGlkZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBpc0hpZGRlbldpdGhpblRyZWUoIHRoaXMgKSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuc2hvdygpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuaGlkZSgpO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxufSApO1xudmFyIHJjaGVja2FibGVUeXBlID0gKCAvXig/OmNoZWNrYm94fHJhZGlvKSQvaSApO1xuXG52YXIgcnRhZ05hbWUgPSAoIC88KFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKikvaSApO1xuXG52YXIgcnNjcmlwdFR5cGUgPSAoIC9eJHxebW9kdWxlJHxcXC8oPzpqYXZhfGVjbWEpc2NyaXB0L2kgKTtcblxuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcblx0XHRkaXYgPSBmcmFnbWVudC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICksXG5cdFx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5XG5cdC8vIENoZWNrIHN0YXRlIGxvc3QgaWYgdGhlIG5hbWUgaXMgc2V0ICgjMTEyMTcpXG5cdC8vIFN1cHBvcnQ6IFdpbmRvd3MgV2ViIEFwcHMgKFdXQSlcblx0Ly8gYG5hbWVgIGFuZCBgdHlwZWAgbXVzdCB1c2UgLnNldEF0dHJpYnV0ZSBmb3IgV1dBICgjMTQ5MDEpXG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwicmFkaW9cIiApO1xuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwiY2hlY2tlZFwiLCBcImNoZWNrZWRcIiApO1xuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcInRcIiApO1xuXG5cdGRpdi5hcHBlbmRDaGlsZCggaW5wdXQgKTtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4xIG9ubHlcblx0Ly8gT2xkZXIgV2ViS2l0IGRvZXNuJ3QgY2xvbmUgY2hlY2tlZCBzdGF0ZSBjb3JyZWN0bHkgaW4gZnJhZ21lbnRzXG5cdHN1cHBvcnQuY2hlY2tDbG9uZSA9IGRpdi5jbG9uZU5vZGUoIHRydWUgKS5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuY2hlY2tlZDtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gTWFrZSBzdXJlIHRleHRhcmVhIChhbmQgY2hlY2tib3gpIGRlZmF1bHRWYWx1ZSBpcyBwcm9wZXJseSBjbG9uZWRcblx0ZGl2LmlubmVySFRNTCA9IFwiPHRleHRhcmVhPng8L3RleHRhcmVhPlwiO1xuXHRzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkID0gISFkaXYuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZTtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHQvLyBJRSA8PTkgcmVwbGFjZXMgPG9wdGlvbj4gdGFncyB3aXRoIHRoZWlyIGNvbnRlbnRzIHdoZW4gaW5zZXJ0ZWQgb3V0c2lkZSBvZlxuXHQvLyB0aGUgc2VsZWN0IGVsZW1lbnQuXG5cdGRpdi5pbm5lckhUTUwgPSBcIjxvcHRpb24+PC9vcHRpb24+XCI7XG5cdHN1cHBvcnQub3B0aW9uID0gISFkaXYubGFzdENoaWxkO1xufSApKCk7XG5cblxuLy8gV2UgaGF2ZSB0byBjbG9zZSB0aGVzZSB0YWdzIHRvIHN1cHBvcnQgWEhUTUwgKCMxMzIwMClcbnZhciB3cmFwTWFwID0ge1xuXG5cdC8vIFhIVE1MIHBhcnNlcnMgZG8gbm90IG1hZ2ljYWxseSBpbnNlcnQgZWxlbWVudHMgaW4gdGhlXG5cdC8vIHNhbWUgd2F5IHRoYXQgdGFnIHNvdXAgcGFyc2VycyBkby4gU28gd2UgY2Fubm90IHNob3J0ZW5cblx0Ly8gdGhpcyBieSBvbWl0dGluZyA8dGJvZHk+IG9yIG90aGVyIHJlcXVpcmVkIGVsZW1lbnRzLlxuXHR0aGVhZDogWyAxLCBcIjx0YWJsZT5cIiwgXCI8L3RhYmxlPlwiIF0sXG5cdGNvbDogWyAyLCBcIjx0YWJsZT48Y29sZ3JvdXA+XCIsIFwiPC9jb2xncm91cD48L3RhYmxlPlwiIF0sXG5cdHRyOiBbIDIsIFwiPHRhYmxlPjx0Ym9keT5cIiwgXCI8L3Rib2R5PjwvdGFibGU+XCIgXSxcblx0dGQ6IFsgMywgXCI8dGFibGU+PHRib2R5Pjx0cj5cIiwgXCI8L3RyPjwvdGJvZHk+PC90YWJsZT5cIiBdLFxuXG5cdF9kZWZhdWx0OiBbIDAsIFwiXCIsIFwiXCIgXVxufTtcblxud3JhcE1hcC50Ym9keSA9IHdyYXBNYXAudGZvb3QgPSB3cmFwTWFwLmNvbGdyb3VwID0gd3JhcE1hcC5jYXB0aW9uID0gd3JhcE1hcC50aGVhZDtcbndyYXBNYXAudGggPSB3cmFwTWFwLnRkO1xuXG4vLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuaWYgKCAhc3VwcG9ydC5vcHRpb24gKSB7XG5cdHdyYXBNYXAub3B0Z3JvdXAgPSB3cmFwTWFwLm9wdGlvbiA9IFsgMSwgXCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+XCIsIFwiPC9zZWxlY3Q+XCIgXTtcbn1cblxuXG5mdW5jdGlvbiBnZXRBbGwoIGNvbnRleHQsIHRhZyApIHtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdC8vIFVzZSB0eXBlb2YgdG8gYXZvaWQgemVyby1hcmd1bWVudCBtZXRob2QgaW52b2NhdGlvbiBvbiBob3N0IG9iamVjdHMgKCMxNTE1MSlcblx0dmFyIHJldDtcblxuXHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdHJldCA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyB8fCBcIipcIiApO1xuXG5cdH0gZWxzZSBpZiAoIHR5cGVvZiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0cmV0ID0gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgfHwgXCIqXCIgKTtcblxuXHR9IGVsc2Uge1xuXHRcdHJldCA9IFtdO1xuXHR9XG5cblx0aWYgKCB0YWcgPT09IHVuZGVmaW5lZCB8fCB0YWcgJiYgbm9kZU5hbWUoIGNvbnRleHQsIHRhZyApICkge1xuXHRcdHJldHVybiBqUXVlcnkubWVyZ2UoIFsgY29udGV4dCBdLCByZXQgKTtcblx0fVxuXG5cdHJldHVybiByZXQ7XG59XG5cblxuLy8gTWFyayBzY3JpcHRzIGFzIGhhdmluZyBhbHJlYWR5IGJlZW4gZXZhbHVhdGVkXG5mdW5jdGlvbiBzZXRHbG9iYWxFdmFsKCBlbGVtcywgcmVmRWxlbWVudHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsID0gZWxlbXMubGVuZ3RoO1xuXG5cdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRkYXRhUHJpdi5zZXQoXG5cdFx0XHRlbGVtc1sgaSBdLFxuXHRcdFx0XCJnbG9iYWxFdmFsXCIsXG5cdFx0XHQhcmVmRWxlbWVudHMgfHwgZGF0YVByaXYuZ2V0KCByZWZFbGVtZW50c1sgaSBdLCBcImdsb2JhbEV2YWxcIiApXG5cdFx0KTtcblx0fVxufVxuXG5cbnZhciByaHRtbCA9IC88fCYjP1xcdys7LztcblxuZnVuY3Rpb24gYnVpbGRGcmFnbWVudCggZWxlbXMsIGNvbnRleHQsIHNjcmlwdHMsIHNlbGVjdGlvbiwgaWdub3JlZCApIHtcblx0dmFyIGVsZW0sIHRtcCwgdGFnLCB3cmFwLCBhdHRhY2hlZCwgaixcblx0XHRmcmFnbWVudCA9IGNvbnRleHQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdG5vZGVzID0gW10sXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcblxuXHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1zWyBpIF07XG5cblx0XHRpZiAoIGVsZW0gfHwgZWxlbSA9PT0gMCApIHtcblxuXHRcdFx0Ly8gQWRkIG5vZGVzIGRpcmVjdGx5XG5cdFx0XHRpZiAoIHRvVHlwZSggZWxlbSApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIGVsZW0ubm9kZVR5cGUgPyBbIGVsZW0gXSA6IGVsZW0gKTtcblxuXHRcdFx0Ly8gQ29udmVydCBub24taHRtbCBpbnRvIGEgdGV4dCBub2RlXG5cdFx0XHR9IGVsc2UgaWYgKCAhcmh0bWwudGVzdCggZWxlbSApICkge1xuXHRcdFx0XHRub2Rlcy5wdXNoKCBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBlbGVtICkgKTtcblxuXHRcdFx0Ly8gQ29udmVydCBodG1sIGludG8gRE9NIG5vZGVzXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0bXAgPSB0bXAgfHwgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cblx0XHRcdFx0Ly8gRGVzZXJpYWxpemUgYSBzdGFuZGFyZCByZXByZXNlbnRhdGlvblxuXHRcdFx0XHR0YWcgPSAoIHJ0YWdOYW1lLmV4ZWMoIGVsZW0gKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0d3JhcCA9IHdyYXBNYXBbIHRhZyBdIHx8IHdyYXBNYXAuX2RlZmF1bHQ7XG5cdFx0XHRcdHRtcC5pbm5lckhUTUwgPSB3cmFwWyAxIF0gKyBqUXVlcnkuaHRtbFByZWZpbHRlciggZWxlbSApICsgd3JhcFsgMiBdO1xuXG5cdFx0XHRcdC8vIERlc2NlbmQgdGhyb3VnaCB3cmFwcGVycyB0byB0aGUgcmlnaHQgY29udGVudFxuXHRcdFx0XHRqID0gd3JhcFsgMCBdO1xuXHRcdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0XHR0bXAgPSB0bXAubGFzdENoaWxkO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgdG1wLmNoaWxkTm9kZXMgKTtcblxuXHRcdFx0XHQvLyBSZW1lbWJlciB0aGUgdG9wLWxldmVsIGNvbnRhaW5lclxuXHRcdFx0XHR0bXAgPSBmcmFnbWVudC5maXJzdENoaWxkO1xuXG5cdFx0XHRcdC8vIEVuc3VyZSB0aGUgY3JlYXRlZCBub2RlcyBhcmUgb3JwaGFuZWQgKCMxMjM5Milcblx0XHRcdFx0dG1wLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZW1vdmUgd3JhcHBlciBmcm9tIGZyYWdtZW50XG5cdGZyYWdtZW50LnRleHRDb250ZW50ID0gXCJcIjtcblxuXHRpID0gMDtcblx0d2hpbGUgKCAoIGVsZW0gPSBub2Rlc1sgaSsrIF0gKSApIHtcblxuXHRcdC8vIFNraXAgZWxlbWVudHMgYWxyZWFkeSBpbiB0aGUgY29udGV4dCBjb2xsZWN0aW9uICh0cmFjLTQwODcpXG5cdFx0aWYgKCBzZWxlY3Rpb24gJiYgalF1ZXJ5LmluQXJyYXkoIGVsZW0sIHNlbGVjdGlvbiApID4gLTEgKSB7XG5cdFx0XHRpZiAoIGlnbm9yZWQgKSB7XG5cdFx0XHRcdGlnbm9yZWQucHVzaCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0YXR0YWNoZWQgPSBpc0F0dGFjaGVkKCBlbGVtICk7XG5cblx0XHQvLyBBcHBlbmQgdG8gZnJhZ21lbnRcblx0XHR0bXAgPSBnZXRBbGwoIGZyYWdtZW50LmFwcGVuZENoaWxkKCBlbGVtICksIFwic2NyaXB0XCIgKTtcblxuXHRcdC8vIFByZXNlcnZlIHNjcmlwdCBldmFsdWF0aW9uIGhpc3Rvcnlcblx0XHRpZiAoIGF0dGFjaGVkICkge1xuXHRcdFx0c2V0R2xvYmFsRXZhbCggdG1wICk7XG5cdFx0fVxuXG5cdFx0Ly8gQ2FwdHVyZSBleGVjdXRhYmxlc1xuXHRcdGlmICggc2NyaXB0cyApIHtcblx0XHRcdGogPSAwO1xuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0bXBbIGorKyBdICkgKSB7XG5cdFx0XHRcdGlmICggcnNjcmlwdFR5cGUudGVzdCggZWxlbS50eXBlIHx8IFwiXCIgKSApIHtcblx0XHRcdFx0XHRzY3JpcHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBmcmFnbWVudDtcbn1cblxuXG52YXJcblx0cmtleUV2ZW50ID0gL15rZXkvLFxuXHRybW91c2VFdmVudCA9IC9eKD86bW91c2V8cG9pbnRlcnxjb250ZXh0bWVudXxkcmFnfGRyb3ApfGNsaWNrLyxcblx0cnR5cGVuYW1lc3BhY2UgPSAvXihbXi5dKikoPzpcXC4oLispfCkvO1xuXG5mdW5jdGlvbiByZXR1cm5UcnVlKCkge1xuXHRyZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gcmV0dXJuRmFsc2UoKSB7XG5cdHJldHVybiBmYWxzZTtcbn1cblxuLy8gU3VwcG9ydDogSUUgPD05IC0gMTErXG4vLyBmb2N1cygpIGFuZCBibHVyKCkgYXJlIGFzeW5jaHJvbm91cywgZXhjZXB0IHdoZW4gdGhleSBhcmUgbm8tb3AuXG4vLyBTbyBleHBlY3QgZm9jdXMgdG8gYmUgc3luY2hyb25vdXMgd2hlbiB0aGUgZWxlbWVudCBpcyBhbHJlYWR5IGFjdGl2ZSxcbi8vIGFuZCBibHVyIHRvIGJlIHN5bmNocm9ub3VzIHdoZW4gdGhlIGVsZW1lbnQgaXMgbm90IGFscmVhZHkgYWN0aXZlLlxuLy8gKGZvY3VzIGFuZCBibHVyIGFyZSBhbHdheXMgc3luY2hyb25vdXMgaW4gb3RoZXIgc3VwcG9ydGVkIGJyb3dzZXJzLFxuLy8gdGhpcyBqdXN0IGRlZmluZXMgd2hlbiB3ZSBjYW4gY291bnQgb24gaXQpLlxuZnVuY3Rpb24gZXhwZWN0U3luYyggZWxlbSwgdHlwZSApIHtcblx0cmV0dXJuICggZWxlbSA9PT0gc2FmZUFjdGl2ZUVsZW1lbnQoKSApID09PSAoIHR5cGUgPT09IFwiZm9jdXNcIiApO1xufVxuXG4vLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuLy8gQWNjZXNzaW5nIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgY2FuIHRocm93IHVuZXhwZWN0ZWRseVxuLy8gaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEzMzkzXG5mdW5jdGlvbiBzYWZlQWN0aXZlRWxlbWVudCgpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcblx0fSBjYXRjaCAoIGVyciApIHsgfVxufVxuXG5mdW5jdGlvbiBvbiggZWxlbSwgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgb25lICkge1xuXHR2YXIgb3JpZ0ZuLCB0eXBlO1xuXG5cdC8vIFR5cGVzIGNhbiBiZSBhIG1hcCBvZiB0eXBlcy9oYW5kbGVyc1xuXHRpZiAoIHR5cGVvZiB0eXBlcyA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vICggdHlwZXMtT2JqZWN0LCBzZWxlY3RvciwgZGF0YSApXG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMtT2JqZWN0LCBkYXRhIClcblx0XHRcdGRhdGEgPSBkYXRhIHx8IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGZvciAoIHR5cGUgaW4gdHlwZXMgKSB7XG5cdFx0XHRvbiggZWxlbSwgdHlwZSwgc2VsZWN0b3IsIGRhdGEsIHR5cGVzWyB0eXBlIF0sIG9uZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gZWxlbTtcblx0fVxuXG5cdGlmICggZGF0YSA9PSBudWxsICYmIGZuID09IG51bGwgKSB7XG5cblx0XHQvLyAoIHR5cGVzLCBmbiApXG5cdFx0Zm4gPSBzZWxlY3Rvcjtcblx0XHRkYXRhID0gc2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdH0gZWxzZSBpZiAoIGZuID09IG51bGwgKSB7XG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMsIHNlbGVjdG9yLCBmbiApXG5cdFx0XHRmbiA9IGRhdGE7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vICggdHlwZXMsIGRhdGEsIGZuIClcblx0XHRcdGZuID0gZGF0YTtcblx0XHRcdGRhdGEgPSBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXHRpZiAoIGZuID09PSBmYWxzZSApIHtcblx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHR9IGVsc2UgaWYgKCAhZm4gKSB7XG5cdFx0cmV0dXJuIGVsZW07XG5cdH1cblxuXHRpZiAoIG9uZSA9PT0gMSApIHtcblx0XHRvcmlnRm4gPSBmbjtcblx0XHRmbiA9IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0Ly8gQ2FuIHVzZSBhbiBlbXB0eSBzZXQsIHNpbmNlIGV2ZW50IGNvbnRhaW5zIHRoZSBpbmZvXG5cdFx0XHRqUXVlcnkoKS5vZmYoIGV2ZW50ICk7XG5cdFx0XHRyZXR1cm4gb3JpZ0ZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9O1xuXG5cdFx0Ly8gVXNlIHNhbWUgZ3VpZCBzbyBjYWxsZXIgY2FuIHJlbW92ZSB1c2luZyBvcmlnRm5cblx0XHRmbi5ndWlkID0gb3JpZ0ZuLmd1aWQgfHwgKCBvcmlnRm4uZ3VpZCA9IGpRdWVyeS5ndWlkKysgKTtcblx0fVxuXHRyZXR1cm4gZWxlbS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCB0eXBlcywgZm4sIGRhdGEsIHNlbGVjdG9yICk7XG5cdH0gKTtcbn1cblxuLypcbiAqIEhlbHBlciBmdW5jdGlvbnMgZm9yIG1hbmFnaW5nIGV2ZW50cyAtLSBub3QgcGFydCBvZiB0aGUgcHVibGljIGludGVyZmFjZS5cbiAqIFByb3BzIHRvIERlYW4gRWR3YXJkcycgYWRkRXZlbnQgbGlicmFyeSBmb3IgbWFueSBvZiB0aGUgaWRlYXMuXG4gKi9cbmpRdWVyeS5ldmVudCA9IHtcblxuXHRnbG9iYWw6IHt9LFxuXG5cdGFkZDogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBkYXRhLCBzZWxlY3RvciApIHtcblxuXHRcdHZhciBoYW5kbGVPYmpJbiwgZXZlbnRIYW5kbGUsIHRtcCxcblx0XHRcdGV2ZW50cywgdCwgaGFuZGxlT2JqLFxuXHRcdFx0c3BlY2lhbCwgaGFuZGxlcnMsIHR5cGUsIG5hbWVzcGFjZXMsIG9yaWdUeXBlLFxuXHRcdFx0ZWxlbURhdGEgPSBkYXRhUHJpdi5nZXQoIGVsZW0gKTtcblxuXHRcdC8vIE9ubHkgYXR0YWNoIGV2ZW50cyB0byBvYmplY3RzIHRoYXQgYWNjZXB0IGRhdGFcblx0XHRpZiAoICFhY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbGVyIGNhbiBwYXNzIGluIGFuIG9iamVjdCBvZiBjdXN0b20gZGF0YSBpbiBsaWV1IG9mIHRoZSBoYW5kbGVyXG5cdFx0aWYgKCBoYW5kbGVyLmhhbmRsZXIgKSB7XG5cdFx0XHRoYW5kbGVPYmpJbiA9IGhhbmRsZXI7XG5cdFx0XHRoYW5kbGVyID0gaGFuZGxlT2JqSW4uaGFuZGxlcjtcblx0XHRcdHNlbGVjdG9yID0gaGFuZGxlT2JqSW4uc2VsZWN0b3I7XG5cdFx0fVxuXG5cdFx0Ly8gRW5zdXJlIHRoYXQgaW52YWxpZCBzZWxlY3RvcnMgdGhyb3cgZXhjZXB0aW9ucyBhdCBhdHRhY2ggdGltZVxuXHRcdC8vIEV2YWx1YXRlIGFnYWluc3QgZG9jdW1lbnRFbGVtZW50IGluIGNhc2UgZWxlbSBpcyBhIG5vbi1lbGVtZW50IG5vZGUgKGUuZy4sIGRvY3VtZW50KVxuXHRcdGlmICggc2VsZWN0b3IgKSB7XG5cdFx0XHRqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGRvY3VtZW50RWxlbWVudCwgc2VsZWN0b3IgKTtcblx0XHR9XG5cblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB0aGUgaGFuZGxlciBoYXMgYSB1bmlxdWUgSUQsIHVzZWQgdG8gZmluZC9yZW1vdmUgaXQgbGF0ZXJcblx0XHRpZiAoICFoYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRoYW5kbGVyLmd1aWQgPSBqUXVlcnkuZ3VpZCsrO1xuXHRcdH1cblxuXHRcdC8vIEluaXQgdGhlIGVsZW1lbnQncyBldmVudCBzdHJ1Y3R1cmUgYW5kIG1haW4gaGFuZGxlciwgaWYgdGhpcyBpcyB0aGUgZmlyc3Rcblx0XHRpZiAoICEoIGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyApICkge1xuXHRcdFx0ZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzID0gT2JqZWN0LmNyZWF0ZSggbnVsbCApO1xuXHRcdH1cblx0XHRpZiAoICEoIGV2ZW50SGFuZGxlID0gZWxlbURhdGEuaGFuZGxlICkgKSB7XG5cdFx0XHRldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSA9IGZ1bmN0aW9uKCBlICkge1xuXG5cdFx0XHRcdC8vIERpc2NhcmQgdGhlIHNlY29uZCBldmVudCBvZiBhIGpRdWVyeS5ldmVudC50cmlnZ2VyKCkgYW5kXG5cdFx0XHRcdC8vIHdoZW4gYW4gZXZlbnQgaXMgY2FsbGVkIGFmdGVyIGEgcGFnZSBoYXMgdW5sb2FkZWRcblx0XHRcdFx0cmV0dXJuIHR5cGVvZiBqUXVlcnkgIT09IFwidW5kZWZpbmVkXCIgJiYgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCAhPT0gZS50eXBlID9cblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuZGlzcGF0Y2guYXBwbHkoIGVsZW0sIGFyZ3VtZW50cyApIDogdW5kZWZpbmVkO1xuXHRcdFx0fTtcblx0XHR9XG5cblx0XHQvLyBIYW5kbGUgbXVsdGlwbGUgZXZlbnRzIHNlcGFyYXRlZCBieSBhIHNwYWNlXG5cdFx0dHlwZXMgPSAoIHR5cGVzIHx8IFwiXCIgKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXHRcdHQgPSB0eXBlcy5sZW5ndGg7XG5cdFx0d2hpbGUgKCB0LS0gKSB7XG5cdFx0XHR0bXAgPSBydHlwZW5hbWVzcGFjZS5leGVjKCB0eXBlc1sgdCBdICkgfHwgW107XG5cdFx0XHR0eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEgXTtcblx0XHRcdG5hbWVzcGFjZXMgPSAoIHRtcFsgMiBdIHx8IFwiXCIgKS5zcGxpdCggXCIuXCIgKS5zb3J0KCk7XG5cblx0XHRcdC8vIFRoZXJlICptdXN0KiBiZSBhIHR5cGUsIG5vIGF0dGFjaGluZyBuYW1lc3BhY2Utb25seSBoYW5kbGVyc1xuXHRcdFx0aWYgKCAhdHlwZSApIHtcblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGV2ZW50IGNoYW5nZXMgaXRzIHR5cGUsIHVzZSB0aGUgc3BlY2lhbCBldmVudCBoYW5kbGVycyBmb3IgdGhlIGNoYW5nZWQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIElmIHNlbGVjdG9yIGRlZmluZWQsIGRldGVybWluZSBzcGVjaWFsIGV2ZW50IGFwaSB0eXBlLCBvdGhlcndpc2UgZ2l2ZW4gdHlwZVxuXHRcdFx0dHlwZSA9ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlO1xuXG5cdFx0XHQvLyBVcGRhdGUgc3BlY2lhbCBiYXNlZCBvbiBuZXdseSByZXNldCB0eXBlXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblxuXHRcdFx0Ly8gaGFuZGxlT2JqIGlzIHBhc3NlZCB0byBhbGwgZXZlbnQgaGFuZGxlcnNcblx0XHRcdGhhbmRsZU9iaiA9IGpRdWVyeS5leHRlbmQoIHtcblx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0b3JpZ1R5cGU6IG9yaWdUeXBlLFxuXHRcdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0XHRoYW5kbGVyOiBoYW5kbGVyLFxuXHRcdFx0XHRndWlkOiBoYW5kbGVyLmd1aWQsXG5cdFx0XHRcdHNlbGVjdG9yOiBzZWxlY3Rvcixcblx0XHRcdFx0bmVlZHNDb250ZXh0OiBzZWxlY3RvciAmJiBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3IgKSxcblx0XHRcdFx0bmFtZXNwYWNlOiBuYW1lc3BhY2VzLmpvaW4oIFwiLlwiIClcblx0XHRcdH0sIGhhbmRsZU9iakluICk7XG5cblx0XHRcdC8vIEluaXQgdGhlIGV2ZW50IGhhbmRsZXIgcXVldWUgaWYgd2UncmUgdGhlIGZpcnN0XG5cdFx0XHRpZiAoICEoIGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gKSApIHtcblx0XHRcdFx0aGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSA9IFtdO1xuXHRcdFx0XHRoYW5kbGVycy5kZWxlZ2F0ZUNvdW50ID0gMDtcblxuXHRcdFx0XHQvLyBPbmx5IHVzZSBhZGRFdmVudExpc3RlbmVyIGlmIHRoZSBzcGVjaWFsIGV2ZW50cyBoYW5kbGVyIHJldHVybnMgZmFsc2Vcblx0XHRcdFx0aWYgKCAhc3BlY2lhbC5zZXR1cCB8fFxuXHRcdFx0XHRcdHNwZWNpYWwuc2V0dXAuY2FsbCggZWxlbSwgZGF0YSwgbmFtZXNwYWNlcywgZXZlbnRIYW5kbGUgKSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRpZiAoIGVsZW0uYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdFx0XHRcdGVsZW0uYWRkRXZlbnRMaXN0ZW5lciggdHlwZSwgZXZlbnRIYW5kbGUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0aWYgKCBzcGVjaWFsLmFkZCApIHtcblx0XHRcdFx0c3BlY2lhbC5hZGQuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7XG5cblx0XHRcdFx0aWYgKCAhaGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCApIHtcblx0XHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlci5ndWlkID0gaGFuZGxlci5ndWlkO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCB0byB0aGUgZWxlbWVudCdzIGhhbmRsZXIgbGlzdCwgZGVsZWdhdGVzIGluIGZyb250XG5cdFx0XHRpZiAoIHNlbGVjdG9yICkge1xuXHRcdFx0XHRoYW5kbGVycy5zcGxpY2UoIGhhbmRsZXJzLmRlbGVnYXRlQ291bnQrKywgMCwgaGFuZGxlT2JqICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRoYW5kbGVycy5wdXNoKCBoYW5kbGVPYmogKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gS2VlcCB0cmFjayBvZiB3aGljaCBldmVudHMgaGF2ZSBldmVyIGJlZW4gdXNlZCwgZm9yIGV2ZW50IG9wdGltaXphdGlvblxuXHRcdFx0alF1ZXJ5LmV2ZW50Lmdsb2JhbFsgdHlwZSBdID0gdHJ1ZTtcblx0XHR9XG5cblx0fSxcblxuXHQvLyBEZXRhY2ggYW4gZXZlbnQgb3Igc2V0IG9mIGV2ZW50cyBmcm9tIGFuIGVsZW1lbnRcblx0cmVtb3ZlOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIHNlbGVjdG9yLCBtYXBwZWRUeXBlcyApIHtcblxuXHRcdHZhciBqLCBvcmlnQ291bnQsIHRtcCxcblx0XHRcdGV2ZW50cywgdCwgaGFuZGxlT2JqLFxuXHRcdFx0c3BlY2lhbCwgaGFuZGxlcnMsIHR5cGUsIG5hbWVzcGFjZXMsIG9yaWdUeXBlLFxuXHRcdFx0ZWxlbURhdGEgPSBkYXRhUHJpdi5oYXNEYXRhKCBlbGVtICkgJiYgZGF0YVByaXYuZ2V0KCBlbGVtICk7XG5cblx0XHRpZiAoICFlbGVtRGF0YSB8fCAhKCBldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBPbmNlIGZvciBlYWNoIHR5cGUubmFtZXNwYWNlIGluIHR5cGVzOyB0eXBlIG1heSBiZSBvbWl0dGVkXG5cdFx0dHlwZXMgPSAoIHR5cGVzIHx8IFwiXCIgKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXHRcdHQgPSB0eXBlcy5sZW5ndGg7XG5cdFx0d2hpbGUgKCB0LS0gKSB7XG5cdFx0XHR0bXAgPSBydHlwZW5hbWVzcGFjZS5leGVjKCB0eXBlc1sgdCBdICkgfHwgW107XG5cdFx0XHR0eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEgXTtcblx0XHRcdG5hbWVzcGFjZXMgPSAoIHRtcFsgMiBdIHx8IFwiXCIgKS5zcGxpdCggXCIuXCIgKS5zb3J0KCk7XG5cblx0XHRcdC8vIFVuYmluZCBhbGwgZXZlbnRzIChvbiB0aGlzIG5hbWVzcGFjZSwgaWYgcHJvdmlkZWQpIGZvciB0aGUgZWxlbWVudFxuXHRcdFx0aWYgKCAhdHlwZSApIHtcblx0XHRcdFx0Zm9yICggdHlwZSBpbiBldmVudHMgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSArIHR5cGVzWyB0IF0sIGhhbmRsZXIsIHNlbGVjdG9yLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHR9XG5cblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXHRcdFx0dHlwZSA9ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlO1xuXHRcdFx0aGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSB8fCBbXTtcblx0XHRcdHRtcCA9IHRtcFsgMiBdICYmXG5cdFx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApO1xuXG5cdFx0XHQvLyBSZW1vdmUgbWF0Y2hpbmcgZXZlbnRzXG5cdFx0XHRvcmlnQ291bnQgPSBqID0gaGFuZGxlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRcdGhhbmRsZU9iaiA9IGhhbmRsZXJzWyBqIF07XG5cblx0XHRcdFx0aWYgKCAoIG1hcHBlZFR5cGVzIHx8IG9yaWdUeXBlID09PSBoYW5kbGVPYmoub3JpZ1R5cGUgKSAmJlxuXHRcdFx0XHRcdCggIWhhbmRsZXIgfHwgaGFuZGxlci5ndWlkID09PSBoYW5kbGVPYmouZ3VpZCApICYmXG5cdFx0XHRcdFx0KCAhdG1wIHx8IHRtcC50ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSAmJlxuXHRcdFx0XHRcdCggIXNlbGVjdG9yIHx8IHNlbGVjdG9yID09PSBoYW5kbGVPYmouc2VsZWN0b3IgfHxcblx0XHRcdFx0XHRcdHNlbGVjdG9yID09PSBcIioqXCIgJiYgaGFuZGxlT2JqLnNlbGVjdG9yICkgKSB7XG5cdFx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBqLCAxICk7XG5cblx0XHRcdFx0XHRpZiAoIGhhbmRsZU9iai5zZWxlY3RvciApIHtcblx0XHRcdFx0XHRcdGhhbmRsZXJzLmRlbGVnYXRlQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBzcGVjaWFsLnJlbW92ZSApIHtcblx0XHRcdFx0XHRcdHNwZWNpYWwucmVtb3ZlLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZW1vdmUgZ2VuZXJpYyBldmVudCBoYW5kbGVyIGlmIHdlIHJlbW92ZWQgc29tZXRoaW5nIGFuZCBubyBtb3JlIGhhbmRsZXJzIGV4aXN0XG5cdFx0XHQvLyAoYXZvaWRzIHBvdGVudGlhbCBmb3IgZW5kbGVzcyByZWN1cnNpb24gZHVyaW5nIHJlbW92YWwgb2Ygc3BlY2lhbCBldmVudCBoYW5kbGVycylcblx0XHRcdGlmICggb3JpZ0NvdW50ICYmICFoYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRcdGlmICggIXNwZWNpYWwudGVhcmRvd24gfHxcblx0XHRcdFx0XHRzcGVjaWFsLnRlYXJkb3duLmNhbGwoIGVsZW0sIG5hbWVzcGFjZXMsIGVsZW1EYXRhLmhhbmRsZSApID09PSBmYWxzZSApIHtcblxuXHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZWxlbURhdGEuaGFuZGxlICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRkZWxldGUgZXZlbnRzWyB0eXBlIF07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUmVtb3ZlIGRhdGEgYW5kIHRoZSBleHBhbmRvIGlmIGl0J3Mgbm8gbG9uZ2VyIHVzZWRcblx0XHRpZiAoIGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBldmVudHMgKSApIHtcblx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgXCJoYW5kbGUgZXZlbnRzXCIgKTtcblx0XHR9XG5cdH0sXG5cblx0ZGlzcGF0Y2g6IGZ1bmN0aW9uKCBuYXRpdmVFdmVudCApIHtcblxuXHRcdHZhciBpLCBqLCByZXQsIG1hdGNoZWQsIGhhbmRsZU9iaiwgaGFuZGxlclF1ZXVlLFxuXHRcdFx0YXJncyA9IG5ldyBBcnJheSggYXJndW1lbnRzLmxlbmd0aCApLFxuXG5cdFx0XHQvLyBNYWtlIGEgd3JpdGFibGUgalF1ZXJ5LkV2ZW50IGZyb20gdGhlIG5hdGl2ZSBldmVudCBvYmplY3Rcblx0XHRcdGV2ZW50ID0galF1ZXJ5LmV2ZW50LmZpeCggbmF0aXZlRXZlbnQgKSxcblxuXHRcdFx0aGFuZGxlcnMgPSAoXG5cdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCB0aGlzLCBcImV2ZW50c1wiICkgfHwgT2JqZWN0LmNyZWF0ZSggbnVsbCApXG5cdFx0XHRcdClbIGV2ZW50LnR5cGUgXSB8fCBbXSxcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZXZlbnQudHlwZSBdIHx8IHt9O1xuXG5cdFx0Ly8gVXNlIHRoZSBmaXgtZWQgalF1ZXJ5LkV2ZW50IHJhdGhlciB0aGFuIHRoZSAocmVhZC1vbmx5KSBuYXRpdmUgZXZlbnRcblx0XHRhcmdzWyAwIF0gPSBldmVudDtcblxuXHRcdGZvciAoIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrICkge1xuXHRcdFx0YXJnc1sgaSBdID0gYXJndW1lbnRzWyBpIF07XG5cdFx0fVxuXG5cdFx0ZXZlbnQuZGVsZWdhdGVUYXJnZXQgPSB0aGlzO1xuXG5cdFx0Ly8gQ2FsbCB0aGUgcHJlRGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlLCBhbmQgbGV0IGl0IGJhaWwgaWYgZGVzaXJlZFxuXHRcdGlmICggc3BlY2lhbC5wcmVEaXNwYXRjaCAmJiBzcGVjaWFsLnByZURpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICkgPT09IGZhbHNlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIERldGVybWluZSBoYW5kbGVyc1xuXHRcdGhhbmRsZXJRdWV1ZSA9IGpRdWVyeS5ldmVudC5oYW5kbGVycy5jYWxsKCB0aGlzLCBldmVudCwgaGFuZGxlcnMgKTtcblxuXHRcdC8vIFJ1biBkZWxlZ2F0ZXMgZmlyc3Q7IHRoZXkgbWF5IHdhbnQgdG8gc3RvcCBwcm9wYWdhdGlvbiBiZW5lYXRoIHVzXG5cdFx0aSA9IDA7XG5cdFx0d2hpbGUgKCAoIG1hdGNoZWQgPSBoYW5kbGVyUXVldWVbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRldmVudC5jdXJyZW50VGFyZ2V0ID0gbWF0Y2hlZC5lbGVtO1xuXG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBoYW5kbGVPYmogPSBtYXRjaGVkLmhhbmRsZXJzWyBqKysgXSApICYmXG5cdFx0XHRcdCFldmVudC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXG5cdFx0XHRcdC8vIElmIHRoZSBldmVudCBpcyBuYW1lc3BhY2VkLCB0aGVuIGVhY2ggaGFuZGxlciBpcyBvbmx5IGludm9rZWQgaWYgaXQgaXNcblx0XHRcdFx0Ly8gc3BlY2lhbGx5IHVuaXZlcnNhbCBvciBpdHMgbmFtZXNwYWNlcyBhcmUgYSBzdXBlcnNldCBvZiB0aGUgZXZlbnQncy5cblx0XHRcdFx0aWYgKCAhZXZlbnQucm5hbWVzcGFjZSB8fCBoYW5kbGVPYmoubmFtZXNwYWNlID09PSBmYWxzZSB8fFxuXHRcdFx0XHRcdGV2ZW50LnJuYW1lc3BhY2UudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkge1xuXG5cdFx0XHRcdFx0ZXZlbnQuaGFuZGxlT2JqID0gaGFuZGxlT2JqO1xuXHRcdFx0XHRcdGV2ZW50LmRhdGEgPSBoYW5kbGVPYmouZGF0YTtcblxuXHRcdFx0XHRcdHJldCA9ICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30gKS5oYW5kbGUgfHxcblx0XHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyICkuYXBwbHkoIG1hdGNoZWQuZWxlbSwgYXJncyApO1xuXG5cdFx0XHRcdFx0aWYgKCByZXQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdGlmICggKCBldmVudC5yZXN1bHQgPSByZXQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGwgdGhlIHBvc3REaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGVcblx0XHRpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkge1xuXHRcdFx0c3BlY2lhbC5wb3N0RGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdGhhbmRsZXJzOiBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXJzICkge1xuXHRcdHZhciBpLCBoYW5kbGVPYmosIHNlbCwgbWF0Y2hlZEhhbmRsZXJzLCBtYXRjaGVkU2VsZWN0b3JzLFxuXHRcdFx0aGFuZGxlclF1ZXVlID0gW10sXG5cdFx0XHRkZWxlZ2F0ZUNvdW50ID0gaGFuZGxlcnMuZGVsZWdhdGVDb3VudCxcblx0XHRcdGN1ciA9IGV2ZW50LnRhcmdldDtcblxuXHRcdC8vIEZpbmQgZGVsZWdhdGUgaGFuZGxlcnNcblx0XHRpZiAoIGRlbGVnYXRlQ291bnQgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05XG5cdFx0XHQvLyBCbGFjay1ob2xlIFNWRyA8dXNlPiBpbnN0YW5jZSB0cmVlcyAodHJhYy0xMzE4MClcblx0XHRcdGN1ci5ub2RlVHlwZSAmJlxuXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NDJcblx0XHRcdC8vIFN1cHByZXNzIHNwZWMtdmlvbGF0aW5nIGNsaWNrcyBpbmRpY2F0aW5nIGEgbm9uLXByaW1hcnkgcG9pbnRlciBidXR0b24gKHRyYWMtMzg2MSlcblx0XHRcdC8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50LXR5cGUtY2xpY2tcblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExIG9ubHlcblx0XHRcdC8vIC4uLmJ1dCBub3QgYXJyb3cga2V5IFwiY2xpY2tzXCIgb2YgcmFkaW8gaW5wdXRzLCB3aGljaCBjYW4gaGF2ZSBgYnV0dG9uYCAtMSAoZ2gtMjM0Mylcblx0XHRcdCEoIGV2ZW50LnR5cGUgPT09IFwiY2xpY2tcIiAmJiBldmVudC5idXR0b24gPj0gMSApICkge1xuXG5cdFx0XHRmb3IgKCA7IGN1ciAhPT0gdGhpczsgY3VyID0gY3VyLnBhcmVudE5vZGUgfHwgdGhpcyApIHtcblxuXHRcdFx0XHQvLyBEb24ndCBjaGVjayBub24tZWxlbWVudHMgKCMxMzIwOClcblx0XHRcdFx0Ly8gRG9uJ3QgcHJvY2VzcyBjbGlja3Mgb24gZGlzYWJsZWQgZWxlbWVudHMgKCM2OTExLCAjODE2NSwgIzExMzgyLCAjMTE3NjQpXG5cdFx0XHRcdGlmICggY3VyLm5vZGVUeXBlID09PSAxICYmICEoIGV2ZW50LnR5cGUgPT09IFwiY2xpY2tcIiAmJiBjdXIuZGlzYWJsZWQgPT09IHRydWUgKSApIHtcblx0XHRcdFx0XHRtYXRjaGVkSGFuZGxlcnMgPSBbXTtcblx0XHRcdFx0XHRtYXRjaGVkU2VsZWN0b3JzID0ge307XG5cdFx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBkZWxlZ2F0ZUNvdW50OyBpKysgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaSBdO1xuXG5cdFx0XHRcdFx0XHQvLyBEb24ndCBjb25mbGljdCB3aXRoIE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoIzEzMjAzKVxuXHRcdFx0XHRcdFx0c2VsID0gaGFuZGxlT2JqLnNlbGVjdG9yICsgXCIgXCI7XG5cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPSBoYW5kbGVPYmoubmVlZHNDb250ZXh0ID9cblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkoIHNlbCwgdGhpcyApLmluZGV4KCBjdXIgKSA+IC0xIDpcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZmluZCggc2VsLCB0aGlzLCBudWxsLCBbIGN1ciBdICkubGVuZ3RoO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZEhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIG1hdGNoZWRIYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBtYXRjaGVkSGFuZGxlcnMgfSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEFkZCB0aGUgcmVtYWluaW5nIChkaXJlY3RseS1ib3VuZCkgaGFuZGxlcnNcblx0XHRjdXIgPSB0aGlzO1xuXHRcdGlmICggZGVsZWdhdGVDb3VudCA8IGhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKCB7IGVsZW06IGN1ciwgaGFuZGxlcnM6IGhhbmRsZXJzLnNsaWNlKCBkZWxlZ2F0ZUNvdW50ICkgfSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBoYW5kbGVyUXVldWU7XG5cdH0sXG5cblx0YWRkUHJvcDogZnVuY3Rpb24oIG5hbWUsIGhvb2sgKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBqUXVlcnkuRXZlbnQucHJvdG90eXBlLCBuYW1lLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXG5cdFx0XHRnZXQ6IGlzRnVuY3Rpb24oIGhvb2sgKSA/XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gaG9vayggdGhpcy5vcmlnaW5hbEV2ZW50ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IDpcblx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLm9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0aGlzLm9yaWdpbmFsRXZlbnRbIG5hbWUgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cblx0XHRcdHNldDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoIHRoaXMsIG5hbWUsIHtcblx0XHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcblx0XHRcdFx0XHR3cml0YWJsZTogdHJ1ZSxcblx0XHRcdFx0XHR2YWx1ZTogdmFsdWVcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRmaXg6IGZ1bmN0aW9uKCBvcmlnaW5hbEV2ZW50ICkge1xuXHRcdHJldHVybiBvcmlnaW5hbEV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdID9cblx0XHRcdG9yaWdpbmFsRXZlbnQgOlxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCggb3JpZ2luYWxFdmVudCApO1xuXHR9LFxuXG5cdHNwZWNpYWw6IHtcblx0XHRsb2FkOiB7XG5cblx0XHRcdC8vIFByZXZlbnQgdHJpZ2dlcmVkIGltYWdlLmxvYWQgZXZlbnRzIGZyb20gYnViYmxpbmcgdG8gd2luZG93LmxvYWRcblx0XHRcdG5vQnViYmxlOiB0cnVlXG5cdFx0fSxcblx0XHRjbGljazoge1xuXG5cdFx0XHQvLyBVdGlsaXplIG5hdGl2ZSBldmVudCB0byBlbnN1cmUgY29ycmVjdCBzdGF0ZSBmb3IgY2hlY2thYmxlIGlucHV0c1xuXHRcdFx0c2V0dXA6IGZ1bmN0aW9uKCBkYXRhICkge1xuXG5cdFx0XHRcdC8vIEZvciBtdXR1YWwgY29tcHJlc3NpYmlsaXR5IHdpdGggX2RlZmF1bHQsIHJlcGxhY2UgYHRoaXNgIGFjY2VzcyB3aXRoIGEgbG9jYWwgdmFyLlxuXHRcdFx0XHQvLyBgfHwgZGF0YWAgaXMgZGVhZCBjb2RlIG1lYW50IG9ubHkgdG8gcHJlc2VydmUgdGhlIHZhcmlhYmxlIHRocm91Z2ggbWluaWZpY2F0aW9uLlxuXHRcdFx0XHR2YXIgZWwgPSB0aGlzIHx8IGRhdGE7XG5cblx0XHRcdFx0Ly8gQ2xhaW0gdGhlIGZpcnN0IGhhbmRsZXJcblx0XHRcdFx0aWYgKCByY2hlY2thYmxlVHlwZS50ZXN0KCBlbC50eXBlICkgJiZcblx0XHRcdFx0XHRlbC5jbGljayAmJiBub2RlTmFtZSggZWwsIFwiaW5wdXRcIiApICkge1xuXG5cdFx0XHRcdFx0Ly8gZGF0YVByaXYuc2V0KCBlbCwgXCJjbGlja1wiLCAuLi4gKVxuXHRcdFx0XHRcdGxldmVyYWdlTmF0aXZlKCBlbCwgXCJjbGlja1wiLCByZXR1cm5UcnVlICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZXR1cm4gZmFsc2UgdG8gYWxsb3cgbm9ybWFsIHByb2Nlc3NpbmcgaW4gdGhlIGNhbGxlclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9LFxuXHRcdFx0dHJpZ2dlcjogZnVuY3Rpb24oIGRhdGEgKSB7XG5cblx0XHRcdFx0Ly8gRm9yIG11dHVhbCBjb21wcmVzc2liaWxpdHkgd2l0aCBfZGVmYXVsdCwgcmVwbGFjZSBgdGhpc2AgYWNjZXNzIHdpdGggYSBsb2NhbCB2YXIuXG5cdFx0XHRcdC8vIGB8fCBkYXRhYCBpcyBkZWFkIGNvZGUgbWVhbnQgb25seSB0byBwcmVzZXJ2ZSB0aGUgdmFyaWFibGUgdGhyb3VnaCBtaW5pZmljYXRpb24uXG5cdFx0XHRcdHZhciBlbCA9IHRoaXMgfHwgZGF0YTtcblxuXHRcdFx0XHQvLyBGb3JjZSBzZXR1cCBiZWZvcmUgdHJpZ2dlcmluZyBhIGNsaWNrXG5cdFx0XHRcdGlmICggcmNoZWNrYWJsZVR5cGUudGVzdCggZWwudHlwZSApICYmXG5cdFx0XHRcdFx0ZWwuY2xpY2sgJiYgbm9kZU5hbWUoIGVsLCBcImlucHV0XCIgKSApIHtcblxuXHRcdFx0XHRcdGxldmVyYWdlTmF0aXZlKCBlbCwgXCJjbGlja1wiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZXR1cm4gbm9uLWZhbHNlIHRvIGFsbG93IG5vcm1hbCBldmVudC1wYXRoIHByb3BhZ2F0aW9uXG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRm9yIGNyb3NzLWJyb3dzZXIgY29uc2lzdGVuY3ksIHN1cHByZXNzIG5hdGl2ZSAuY2xpY2soKSBvbiBsaW5rc1xuXHRcdFx0Ly8gQWxzbyBwcmV2ZW50IGl0IGlmIHdlJ3JlIGN1cnJlbnRseSBpbnNpZGUgYSBsZXZlcmFnZWQgbmF0aXZlLWV2ZW50IHN0YWNrXG5cdFx0XHRfZGVmYXVsdDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuXHRcdFx0XHRyZXR1cm4gcmNoZWNrYWJsZVR5cGUudGVzdCggdGFyZ2V0LnR5cGUgKSAmJlxuXHRcdFx0XHRcdHRhcmdldC5jbGljayAmJiBub2RlTmFtZSggdGFyZ2V0LCBcImlucHV0XCIgKSAmJlxuXHRcdFx0XHRcdGRhdGFQcml2LmdldCggdGFyZ2V0LCBcImNsaWNrXCIgKSB8fFxuXHRcdFx0XHRcdG5vZGVOYW1lKCB0YXJnZXQsIFwiYVwiICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdGJlZm9yZXVubG9hZDoge1xuXHRcdFx0cG9zdERpc3BhdGNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCAyMCtcblx0XHRcdFx0Ly8gRmlyZWZveCBkb2Vzbid0IGFsZXJ0IGlmIHRoZSByZXR1cm5WYWx1ZSBmaWVsZCBpcyBub3Qgc2V0LlxuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCAhPT0gdW5kZWZpbmVkICYmIGV2ZW50Lm9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0XHRcdFx0ZXZlbnQub3JpZ2luYWxFdmVudC5yZXR1cm5WYWx1ZSA9IGV2ZW50LnJlc3VsdDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufTtcblxuLy8gRW5zdXJlIHRoZSBwcmVzZW5jZSBvZiBhbiBldmVudCBsaXN0ZW5lciB0aGF0IGhhbmRsZXMgbWFudWFsbHktdHJpZ2dlcmVkXG4vLyBzeW50aGV0aWMgZXZlbnRzIGJ5IGludGVycnVwdGluZyBwcm9ncmVzcyB1bnRpbCByZWludm9rZWQgaW4gcmVzcG9uc2UgdG9cbi8vICpuYXRpdmUqIGV2ZW50cyB0aGF0IGl0IGZpcmVzIGRpcmVjdGx5LCBlbnN1cmluZyB0aGF0IHN0YXRlIGNoYW5nZXMgaGF2ZVxuLy8gYWxyZWFkeSBvY2N1cnJlZCBiZWZvcmUgb3RoZXIgbGlzdGVuZXJzIGFyZSBpbnZva2VkLlxuZnVuY3Rpb24gbGV2ZXJhZ2VOYXRpdmUoIGVsLCB0eXBlLCBleHBlY3RTeW5jICkge1xuXG5cdC8vIE1pc3NpbmcgZXhwZWN0U3luYyBpbmRpY2F0ZXMgYSB0cmlnZ2VyIGNhbGwsIHdoaWNoIG11c3QgZm9yY2Ugc2V0dXAgdGhyb3VnaCBqUXVlcnkuZXZlbnQuYWRkXG5cdGlmICggIWV4cGVjdFN5bmMgKSB7XG5cdFx0aWYgKCBkYXRhUHJpdi5nZXQoIGVsLCB0eXBlICkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIGVsLCB0eXBlLCByZXR1cm5UcnVlICk7XG5cdFx0fVxuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFJlZ2lzdGVyIHRoZSBjb250cm9sbGVyIGFzIGEgc3BlY2lhbCB1bml2ZXJzYWwgaGFuZGxlciBmb3IgYWxsIGV2ZW50IG5hbWVzcGFjZXNcblx0ZGF0YVByaXYuc2V0KCBlbCwgdHlwZSwgZmFsc2UgKTtcblx0alF1ZXJ5LmV2ZW50LmFkZCggZWwsIHR5cGUsIHtcblx0XHRuYW1lc3BhY2U6IGZhbHNlLFxuXHRcdGhhbmRsZXI6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdHZhciBub3RBc3luYywgcmVzdWx0LFxuXHRcdFx0XHRzYXZlZCA9IGRhdGFQcml2LmdldCggdGhpcywgdHlwZSApO1xuXG5cdFx0XHRpZiAoICggZXZlbnQuaXNUcmlnZ2VyICYgMSApICYmIHRoaXNbIHR5cGUgXSApIHtcblxuXHRcdFx0XHQvLyBJbnRlcnJ1cHQgcHJvY2Vzc2luZyBvZiB0aGUgb3V0ZXIgc3ludGhldGljIC50cmlnZ2VyKCllZCBldmVudFxuXHRcdFx0XHQvLyBTYXZlZCBkYXRhIHNob3VsZCBiZSBmYWxzZSBpbiBzdWNoIGNhc2VzLCBidXQgbWlnaHQgYmUgYSBsZWZ0b3ZlciBjYXB0dXJlIG9iamVjdFxuXHRcdFx0XHQvLyBmcm9tIGFuIGFzeW5jIG5hdGl2ZSBoYW5kbGVyIChnaC00MzUwKVxuXHRcdFx0XHRpZiAoICFzYXZlZC5sZW5ndGggKSB7XG5cblx0XHRcdFx0XHQvLyBTdG9yZSBhcmd1bWVudHMgZm9yIHVzZSB3aGVuIGhhbmRsaW5nIHRoZSBpbm5lciBuYXRpdmUgZXZlbnRcblx0XHRcdFx0XHQvLyBUaGVyZSB3aWxsIGFsd2F5cyBiZSBhdCBsZWFzdCBvbmUgYXJndW1lbnQgKGFuIGV2ZW50IG9iamVjdCksIHNvIHRoaXMgYXJyYXlcblx0XHRcdFx0XHQvLyB3aWxsIG5vdCBiZSBjb25mdXNlZCB3aXRoIGEgbGVmdG92ZXIgY2FwdHVyZSBvYmplY3QuXG5cdFx0XHRcdFx0c2F2ZWQgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIHR5cGUsIHNhdmVkICk7XG5cblx0XHRcdFx0XHQvLyBUcmlnZ2VyIHRoZSBuYXRpdmUgZXZlbnQgYW5kIGNhcHR1cmUgaXRzIHJlc3VsdFxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExK1xuXHRcdFx0XHRcdC8vIGZvY3VzKCkgYW5kIGJsdXIoKSBhcmUgYXN5bmNocm9ub3VzXG5cdFx0XHRcdFx0bm90QXN5bmMgPSBleHBlY3RTeW5jKCB0aGlzLCB0eXBlICk7XG5cdFx0XHRcdFx0dGhpc1sgdHlwZSBdKCk7XG5cdFx0XHRcdFx0cmVzdWx0ID0gZGF0YVByaXYuZ2V0KCB0aGlzLCB0eXBlICk7XG5cdFx0XHRcdFx0aWYgKCBzYXZlZCAhPT0gcmVzdWx0IHx8IG5vdEFzeW5jICkge1xuXHRcdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCB0aGlzLCB0eXBlLCBmYWxzZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRyZXN1bHQgPSB7fTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBzYXZlZCAhPT0gcmVzdWx0ICkge1xuXG5cdFx0XHRcdFx0XHQvLyBDYW5jZWwgdGhlIG91dGVyIHN5bnRoZXRpYyBldmVudFxuXHRcdFx0XHRcdFx0ZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdC52YWx1ZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSWYgdGhpcyBpcyBhbiBpbm5lciBzeW50aGV0aWMgZXZlbnQgZm9yIGFuIGV2ZW50IHdpdGggYSBidWJibGluZyBzdXJyb2dhdGVcblx0XHRcdFx0Ly8gKGZvY3VzIG9yIGJsdXIpLCBhc3N1bWUgdGhhdCB0aGUgc3Vycm9nYXRlIGFscmVhZHkgcHJvcGFnYXRlZCBmcm9tIHRyaWdnZXJpbmcgdGhlXG5cdFx0XHRcdC8vIG5hdGl2ZSBldmVudCBhbmQgcHJldmVudCB0aGF0IGZyb20gaGFwcGVuaW5nIGFnYWluIGhlcmUuXG5cdFx0XHRcdC8vIFRoaXMgdGVjaG5pY2FsbHkgZ2V0cyB0aGUgb3JkZXJpbmcgd3Jvbmcgdy5yLnQuIHRvIGAudHJpZ2dlcigpYCAoaW4gd2hpY2ggdGhlXG5cdFx0XHRcdC8vIGJ1YmJsaW5nIHN1cnJvZ2F0ZSBwcm9wYWdhdGVzICphZnRlciogdGhlIG5vbi1idWJibGluZyBiYXNlKSwgYnV0IHRoYXQgc2VlbXNcblx0XHRcdFx0Ly8gbGVzcyBiYWQgdGhhbiBkdXBsaWNhdGlvbi5cblx0XHRcdFx0fSBlbHNlIGlmICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9ICkuZGVsZWdhdGVUeXBlICkge1xuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHR9XG5cblx0XHRcdC8vIElmIHRoaXMgaXMgYSBuYXRpdmUgZXZlbnQgdHJpZ2dlcmVkIGFib3ZlLCBldmVyeXRoaW5nIGlzIG5vdyBpbiBvcmRlclxuXHRcdFx0Ly8gRmlyZSBhbiBpbm5lciBzeW50aGV0aWMgZXZlbnQgd2l0aCB0aGUgb3JpZ2luYWwgYXJndW1lbnRzXG5cdFx0XHR9IGVsc2UgaWYgKCBzYXZlZC5sZW5ndGggKSB7XG5cblx0XHRcdFx0Ly8gLi4uYW5kIGNhcHR1cmUgdGhlIHJlc3VsdFxuXHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIHR5cGUsIHtcblx0XHRcdFx0XHR2YWx1ZTogalF1ZXJ5LmV2ZW50LnRyaWdnZXIoXG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExK1xuXHRcdFx0XHRcdFx0Ly8gRXh0ZW5kIHdpdGggdGhlIHByb3RvdHlwZSB0byByZXNldCB0aGUgYWJvdmUgc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKClcblx0XHRcdFx0XHRcdGpRdWVyeS5leHRlbmQoIHNhdmVkWyAwIF0sIGpRdWVyeS5FdmVudC5wcm90b3R5cGUgKSxcblx0XHRcdFx0XHRcdHNhdmVkLnNsaWNlKCAxICksXG5cdFx0XHRcdFx0XHR0aGlzXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHR9ICk7XG5cblx0XHRcdFx0Ly8gQWJvcnQgaGFuZGxpbmcgb2YgdGhlIG5hdGl2ZSBldmVudFxuXHRcdFx0XHRldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gKTtcbn1cblxualF1ZXJ5LnJlbW92ZUV2ZW50ID0gZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGhhbmRsZSApIHtcblxuXHQvLyBUaGlzIFwiaWZcIiBpcyBuZWVkZWQgZm9yIHBsYWluIG9iamVjdHNcblx0aWYgKCBlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0ZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyKCB0eXBlLCBoYW5kbGUgKTtcblx0fVxufTtcblxualF1ZXJ5LkV2ZW50ID0gZnVuY3Rpb24oIHNyYywgcHJvcHMgKSB7XG5cblx0Ly8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IHRoZSAnbmV3JyBrZXl3b3JkXG5cdGlmICggISggdGhpcyBpbnN0YW5jZW9mIGpRdWVyeS5FdmVudCApICkge1xuXHRcdHJldHVybiBuZXcgalF1ZXJ5LkV2ZW50KCBzcmMsIHByb3BzICk7XG5cdH1cblxuXHQvLyBFdmVudCBvYmplY3Rcblx0aWYgKCBzcmMgJiYgc3JjLnR5cGUgKSB7XG5cdFx0dGhpcy5vcmlnaW5hbEV2ZW50ID0gc3JjO1xuXHRcdHRoaXMudHlwZSA9IHNyYy50eXBlO1xuXG5cdFx0Ly8gRXZlbnRzIGJ1YmJsaW5nIHVwIHRoZSBkb2N1bWVudCBtYXkgaGF2ZSBiZWVuIG1hcmtlZCBhcyBwcmV2ZW50ZWRcblx0XHQvLyBieSBhIGhhbmRsZXIgbG93ZXIgZG93biB0aGUgdHJlZTsgcmVmbGVjdCB0aGUgY29ycmVjdCB2YWx1ZS5cblx0XHR0aGlzLmlzRGVmYXVsdFByZXZlbnRlZCA9IHNyYy5kZWZhdWx0UHJldmVudGVkIHx8XG5cdFx0XHRcdHNyYy5kZWZhdWx0UHJldmVudGVkID09PSB1bmRlZmluZWQgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9Mi4zIG9ubHlcblx0XHRcdFx0c3JjLnJldHVyblZhbHVlID09PSBmYWxzZSA/XG5cdFx0XHRyZXR1cm5UcnVlIDpcblx0XHRcdHJldHVybkZhbHNlO1xuXG5cdFx0Ly8gQ3JlYXRlIHRhcmdldCBwcm9wZXJ0aWVzXG5cdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDw9NiAtIDcgb25seVxuXHRcdC8vIFRhcmdldCBzaG91bGQgbm90IGJlIGEgdGV4dCBub2RlICgjNTA0LCAjMTMxNDMpXG5cdFx0dGhpcy50YXJnZXQgPSAoIHNyYy50YXJnZXQgJiYgc3JjLnRhcmdldC5ub2RlVHlwZSA9PT0gMyApID9cblx0XHRcdHNyYy50YXJnZXQucGFyZW50Tm9kZSA6XG5cdFx0XHRzcmMudGFyZ2V0O1xuXG5cdFx0dGhpcy5jdXJyZW50VGFyZ2V0ID0gc3JjLmN1cnJlbnRUYXJnZXQ7XG5cdFx0dGhpcy5yZWxhdGVkVGFyZ2V0ID0gc3JjLnJlbGF0ZWRUYXJnZXQ7XG5cblx0Ly8gRXZlbnQgdHlwZVxuXHR9IGVsc2Uge1xuXHRcdHRoaXMudHlwZSA9IHNyYztcblx0fVxuXG5cdC8vIFB1dCBleHBsaWNpdGx5IHByb3ZpZGVkIHByb3BlcnRpZXMgb250byB0aGUgZXZlbnQgb2JqZWN0XG5cdGlmICggcHJvcHMgKSB7XG5cdFx0alF1ZXJ5LmV4dGVuZCggdGhpcywgcHJvcHMgKTtcblx0fVxuXG5cdC8vIENyZWF0ZSBhIHRpbWVzdGFtcCBpZiBpbmNvbWluZyBldmVudCBkb2Vzbid0IGhhdmUgb25lXG5cdHRoaXMudGltZVN0YW1wID0gc3JjICYmIHNyYy50aW1lU3RhbXAgfHwgRGF0ZS5ub3coKTtcblxuXHQvLyBNYXJrIGl0IGFzIGZpeGVkXG5cdHRoaXNbIGpRdWVyeS5leHBhbmRvIF0gPSB0cnVlO1xufTtcblxuLy8galF1ZXJ5LkV2ZW50IGlzIGJhc2VkIG9uIERPTTMgRXZlbnRzIGFzIHNwZWNpZmllZCBieSB0aGUgRUNNQVNjcmlwdCBMYW5ndWFnZSBCaW5kaW5nXG4vLyBodHRwczovL3d3dy53My5vcmcvVFIvMjAwMy9XRC1ET00tTGV2ZWwtMy1FdmVudHMtMjAwMzAzMzEvZWNtYS1zY3JpcHQtYmluZGluZy5odG1sXG5qUXVlcnkuRXZlbnQucHJvdG90eXBlID0ge1xuXHRjb25zdHJ1Y3RvcjogalF1ZXJ5LkV2ZW50LFxuXHRpc0RlZmF1bHRQcmV2ZW50ZWQ6IHJldHVybkZhbHNlLFxuXHRpc1Byb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2UsXG5cdGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNTaW11bGF0ZWQ6IGZhbHNlLFxuXG5cdHByZXZlbnREZWZhdWx0OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXHR9LFxuXHRzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRydWU7XG5cblx0XHRpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7XG5cdFx0XHRlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdH1cblxuXHRcdHRoaXMuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdH1cbn07XG5cbi8vIEluY2x1ZGVzIGFsbCBjb21tb24gZXZlbnQgcHJvcHMgaW5jbHVkaW5nIEtleUV2ZW50IGFuZCBNb3VzZUV2ZW50IHNwZWNpZmljIHByb3BzXG5qUXVlcnkuZWFjaCgge1xuXHRhbHRLZXk6IHRydWUsXG5cdGJ1YmJsZXM6IHRydWUsXG5cdGNhbmNlbGFibGU6IHRydWUsXG5cdGNoYW5nZWRUb3VjaGVzOiB0cnVlLFxuXHRjdHJsS2V5OiB0cnVlLFxuXHRkZXRhaWw6IHRydWUsXG5cdGV2ZW50UGhhc2U6IHRydWUsXG5cdG1ldGFLZXk6IHRydWUsXG5cdHBhZ2VYOiB0cnVlLFxuXHRwYWdlWTogdHJ1ZSxcblx0c2hpZnRLZXk6IHRydWUsXG5cdHZpZXc6IHRydWUsXG5cdFwiY2hhclwiOiB0cnVlLFxuXHRjb2RlOiB0cnVlLFxuXHRjaGFyQ29kZTogdHJ1ZSxcblx0a2V5OiB0cnVlLFxuXHRrZXlDb2RlOiB0cnVlLFxuXHRidXR0b246IHRydWUsXG5cdGJ1dHRvbnM6IHRydWUsXG5cdGNsaWVudFg6IHRydWUsXG5cdGNsaWVudFk6IHRydWUsXG5cdG9mZnNldFg6IHRydWUsXG5cdG9mZnNldFk6IHRydWUsXG5cdHBvaW50ZXJJZDogdHJ1ZSxcblx0cG9pbnRlclR5cGU6IHRydWUsXG5cdHNjcmVlblg6IHRydWUsXG5cdHNjcmVlblk6IHRydWUsXG5cdHRhcmdldFRvdWNoZXM6IHRydWUsXG5cdHRvRWxlbWVudDogdHJ1ZSxcblx0dG91Y2hlczogdHJ1ZSxcblxuXHR3aGljaDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdHZhciBidXR0b24gPSBldmVudC5idXR0b247XG5cblx0XHQvLyBBZGQgd2hpY2ggZm9yIGtleSBldmVudHNcblx0XHRpZiAoIGV2ZW50LndoaWNoID09IG51bGwgJiYgcmtleUV2ZW50LnRlc3QoIGV2ZW50LnR5cGUgKSApIHtcblx0XHRcdHJldHVybiBldmVudC5jaGFyQ29kZSAhPSBudWxsID8gZXZlbnQuY2hhckNvZGUgOiBldmVudC5rZXlDb2RlO1xuXHRcdH1cblxuXHRcdC8vIEFkZCB3aGljaCBmb3IgY2xpY2s6IDEgPT09IGxlZnQ7IDIgPT09IG1pZGRsZTsgMyA9PT0gcmlnaHRcblx0XHRpZiAoICFldmVudC53aGljaCAmJiBidXR0b24gIT09IHVuZGVmaW5lZCAmJiBybW91c2VFdmVudC50ZXN0KCBldmVudC50eXBlICkgKSB7XG5cdFx0XHRpZiAoIGJ1dHRvbiAmIDEgKSB7XG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGJ1dHRvbiAmIDIgKSB7XG5cdFx0XHRcdHJldHVybiAzO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGJ1dHRvbiAmIDQgKSB7XG5cdFx0XHRcdHJldHVybiAyO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gMDtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQud2hpY2g7XG5cdH1cbn0sIGpRdWVyeS5ldmVudC5hZGRQcm9wICk7XG5cbmpRdWVyeS5lYWNoKCB7IGZvY3VzOiBcImZvY3VzaW5cIiwgYmx1cjogXCJmb2N1c291dFwiIH0sIGZ1bmN0aW9uKCB0eXBlLCBkZWxlZ2F0ZVR5cGUgKSB7XG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gPSB7XG5cblx0XHQvLyBVdGlsaXplIG5hdGl2ZSBldmVudCBpZiBwb3NzaWJsZSBzbyBibHVyL2ZvY3VzIHNlcXVlbmNlIGlzIGNvcnJlY3Rcblx0XHRzZXR1cDogZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENsYWltIHRoZSBmaXJzdCBoYW5kbGVyXG5cdFx0XHQvLyBkYXRhUHJpdi5zZXQoIHRoaXMsIFwiZm9jdXNcIiwgLi4uIClcblx0XHRcdC8vIGRhdGFQcml2LnNldCggdGhpcywgXCJibHVyXCIsIC4uLiApXG5cdFx0XHRsZXZlcmFnZU5hdGl2ZSggdGhpcywgdHlwZSwgZXhwZWN0U3luYyApO1xuXG5cdFx0XHQvLyBSZXR1cm4gZmFsc2UgdG8gYWxsb3cgbm9ybWFsIHByb2Nlc3NpbmcgaW4gdGhlIGNhbGxlclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cdFx0dHJpZ2dlcjogZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIEZvcmNlIHNldHVwIGJlZm9yZSB0cmlnZ2VyXG5cdFx0XHRsZXZlcmFnZU5hdGl2ZSggdGhpcywgdHlwZSApO1xuXG5cdFx0XHQvLyBSZXR1cm4gbm9uLWZhbHNlIHRvIGFsbG93IG5vcm1hbCBldmVudC1wYXRoIHByb3BhZ2F0aW9uXG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0ZGVsZWdhdGVUeXBlOiBkZWxlZ2F0ZVR5cGVcblx0fTtcbn0gKTtcblxuLy8gQ3JlYXRlIG1vdXNlZW50ZXIvbGVhdmUgZXZlbnRzIHVzaW5nIG1vdXNlb3Zlci9vdXQgYW5kIGV2ZW50LXRpbWUgY2hlY2tzXG4vLyBzbyB0aGF0IGV2ZW50IGRlbGVnYXRpb24gd29ya3MgaW4galF1ZXJ5LlxuLy8gRG8gdGhlIHNhbWUgZm9yIHBvaW50ZXJlbnRlci9wb2ludGVybGVhdmUgYW5kIHBvaW50ZXJvdmVyL3BvaW50ZXJvdXRcbi8vXG4vLyBTdXBwb3J0OiBTYWZhcmkgNyBvbmx5XG4vLyBTYWZhcmkgc2VuZHMgbW91c2VlbnRlciB0b28gb2Z0ZW47IHNlZTpcbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ3MDI1OFxuLy8gZm9yIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgYnVnIChpdCBleGlzdGVkIGluIG9sZGVyIENocm9tZSB2ZXJzaW9ucyBhcyB3ZWxsKS5cbmpRdWVyeS5lYWNoKCB7XG5cdG1vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsXG5cdG1vdXNlbGVhdmU6IFwibW91c2VvdXRcIixcblx0cG9pbnRlcmVudGVyOiBcInBvaW50ZXJvdmVyXCIsXG5cdHBvaW50ZXJsZWF2ZTogXCJwb2ludGVyb3V0XCJcbn0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBvcmlnIF0gPSB7XG5cdFx0ZGVsZWdhdGVUeXBlOiBmaXgsXG5cdFx0YmluZFR5cGU6IGZpeCxcblxuXHRcdGhhbmRsZTogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIHJldCxcblx0XHRcdFx0dGFyZ2V0ID0gdGhpcyxcblx0XHRcdFx0cmVsYXRlZCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQsXG5cdFx0XHRcdGhhbmRsZU9iaiA9IGV2ZW50LmhhbmRsZU9iajtcblxuXHRcdFx0Ly8gRm9yIG1vdXNlZW50ZXIvbGVhdmUgY2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUgdGhlIHRhcmdldC5cblx0XHRcdC8vIE5COiBObyByZWxhdGVkVGFyZ2V0IGlmIHRoZSBtb3VzZSBsZWZ0L2VudGVyZWQgdGhlIGJyb3dzZXIgd2luZG93XG5cdFx0XHRpZiAoICFyZWxhdGVkIHx8ICggcmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwgcmVsYXRlZCApICkgKSB7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBoYW5kbGVPYmoub3JpZ1R5cGU7XG5cdFx0XHRcdHJldCA9IGhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGZpeDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0b246IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApO1xuXHR9LFxuXHRvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgMSApO1xuXHR9LFxuXHRvZmY6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGZuICkge1xuXHRcdHZhciBoYW5kbGVPYmosIHR5cGU7XG5cdFx0aWYgKCB0eXBlcyAmJiB0eXBlcy5wcmV2ZW50RGVmYXVsdCAmJiB0eXBlcy5oYW5kbGVPYmogKSB7XG5cblx0XHRcdC8vICggZXZlbnQgKSAgZGlzcGF0Y2hlZCBqUXVlcnkuRXZlbnRcblx0XHRcdGhhbmRsZU9iaiA9IHR5cGVzLmhhbmRsZU9iajtcblx0XHRcdGpRdWVyeSggdHlwZXMuZGVsZWdhdGVUYXJnZXQgKS5vZmYoXG5cdFx0XHRcdGhhbmRsZU9iai5uYW1lc3BhY2UgP1xuXHRcdFx0XHRcdGhhbmRsZU9iai5vcmlnVHlwZSArIFwiLlwiICsgaGFuZGxlT2JqLm5hbWVzcGFjZSA6XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlLFxuXHRcdFx0XHRoYW5kbGVPYmouc2VsZWN0b3IsXG5cdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHRcdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLW9iamVjdCBbLCBzZWxlY3Rvcl0gKVxuXHRcdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdFx0dGhpcy5vZmYoIHR5cGUsIHNlbGVjdG9yLCB0eXBlc1sgdHlwZSBdICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCBzZWxlY3RvciA9PT0gZmFsc2UgfHwgdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMgWywgZm5dIClcblx0XHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIHRoaXMsIHR5cGVzLCBmbiwgc2VsZWN0b3IgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuXG52YXJcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTEwIC0gMTEsIEVkZ2UgMTIgLSAxMyBvbmx5XG5cdC8vIEluIElFL0VkZ2UgdXNpbmcgcmVnZXggZ3JvdXBzIGhlcmUgY2F1c2VzIHNldmVyZSBzbG93ZG93bnMuXG5cdC8vIFNlZSBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzE3MzY1MTIvXG5cdHJub0lubmVyaHRtbCA9IC88c2NyaXB0fDxzdHlsZXw8bGluay9pLFxuXG5cdC8vIGNoZWNrZWQ9XCJjaGVja2VkXCIgb3IgY2hlY2tlZFxuXHRyY2hlY2tlZCA9IC9jaGVja2VkXFxzKig/OltePV18PVxccyouY2hlY2tlZC4pL2ksXG5cdHJjbGVhblNjcmlwdCA9IC9eXFxzKjwhKD86XFxbQ0RBVEFcXFt8LS0pfCg/OlxcXVxcXXwtLSk+XFxzKiQvZztcblxuLy8gUHJlZmVyIGEgdGJvZHkgb3ZlciBpdHMgcGFyZW50IHRhYmxlIGZvciBjb250YWluaW5nIG5ldyByb3dzXG5mdW5jdGlvbiBtYW5pcHVsYXRpb25UYXJnZXQoIGVsZW0sIGNvbnRlbnQgKSB7XG5cdGlmICggbm9kZU5hbWUoIGVsZW0sIFwidGFibGVcIiApICYmXG5cdFx0bm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQuZmlyc3RDaGlsZCwgXCJ0clwiICkgKSB7XG5cblx0XHRyZXR1cm4galF1ZXJ5KCBlbGVtICkuY2hpbGRyZW4oIFwidGJvZHlcIiApWyAwIF0gfHwgZWxlbTtcblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG4vLyBSZXBsYWNlL3Jlc3RvcmUgdGhlIHR5cGUgYXR0cmlidXRlIG9mIHNjcmlwdCBlbGVtZW50cyBmb3Igc2FmZSBET00gbWFuaXB1bGF0aW9uXG5mdW5jdGlvbiBkaXNhYmxlU2NyaXB0KCBlbGVtICkge1xuXHRlbGVtLnR5cGUgPSAoIGVsZW0uZ2V0QXR0cmlidXRlKCBcInR5cGVcIiApICE9PSBudWxsICkgKyBcIi9cIiArIGVsZW0udHlwZTtcblx0cmV0dXJuIGVsZW07XG59XG5mdW5jdGlvbiByZXN0b3JlU2NyaXB0KCBlbGVtICkge1xuXHRpZiAoICggZWxlbS50eXBlIHx8IFwiXCIgKS5zbGljZSggMCwgNSApID09PSBcInRydWUvXCIgKSB7XG5cdFx0ZWxlbS50eXBlID0gZWxlbS50eXBlLnNsaWNlKCA1ICk7XG5cdH0gZWxzZSB7XG5cdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIFwidHlwZVwiICk7XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxuZnVuY3Rpb24gY2xvbmVDb3B5RXZlbnQoIHNyYywgZGVzdCApIHtcblx0dmFyIGksIGwsIHR5cGUsIHBkYXRhT2xkLCB1ZGF0YU9sZCwgdWRhdGFDdXIsIGV2ZW50cztcblxuXHRpZiAoIGRlc3Qubm9kZVR5cGUgIT09IDEgKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gMS4gQ29weSBwcml2YXRlIGRhdGE6IGV2ZW50cywgaGFuZGxlcnMsIGV0Yy5cblx0aWYgKCBkYXRhUHJpdi5oYXNEYXRhKCBzcmMgKSApIHtcblx0XHRwZGF0YU9sZCA9IGRhdGFQcml2LmdldCggc3JjICk7XG5cdFx0ZXZlbnRzID0gcGRhdGFPbGQuZXZlbnRzO1xuXG5cdFx0aWYgKCBldmVudHMgKSB7XG5cdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGRlc3QsIFwiaGFuZGxlIGV2ZW50c1wiICk7XG5cblx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRmb3IgKCBpID0gMCwgbCA9IGV2ZW50c1sgdHlwZSBdLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCBkZXN0LCB0eXBlLCBldmVudHNbIHR5cGUgXVsgaSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyAyLiBDb3B5IHVzZXIgZGF0YVxuXHRpZiAoIGRhdGFVc2VyLmhhc0RhdGEoIHNyYyApICkge1xuXHRcdHVkYXRhT2xkID0gZGF0YVVzZXIuYWNjZXNzKCBzcmMgKTtcblx0XHR1ZGF0YUN1ciA9IGpRdWVyeS5leHRlbmQoIHt9LCB1ZGF0YU9sZCApO1xuXG5cdFx0ZGF0YVVzZXIuc2V0KCBkZXN0LCB1ZGF0YUN1ciApO1xuXHR9XG59XG5cbi8vIEZpeCBJRSBidWdzLCBzZWUgc3VwcG9ydCB0ZXN0c1xuZnVuY3Rpb24gZml4SW5wdXQoIHNyYywgZGVzdCApIHtcblx0dmFyIG5vZGVOYW1lID0gZGVzdC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG5cdC8vIEZhaWxzIHRvIHBlcnNpc3QgdGhlIGNoZWNrZWQgc3RhdGUgb2YgYSBjbG9uZWQgY2hlY2tib3ggb3IgcmFkaW8gYnV0dG9uLlxuXHRpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgcmNoZWNrYWJsZVR5cGUudGVzdCggc3JjLnR5cGUgKSApIHtcblx0XHRkZXN0LmNoZWNrZWQgPSBzcmMuY2hlY2tlZDtcblxuXHQvLyBGYWlscyB0byByZXR1cm4gdGhlIHNlbGVjdGVkIG9wdGlvbiB0byB0aGUgZGVmYXVsdCBzZWxlY3RlZCBzdGF0ZSB3aGVuIGNsb25pbmcgb3B0aW9uc1xuXHR9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5vZGVOYW1lID09PSBcInRleHRhcmVhXCIgKSB7XG5cdFx0ZGVzdC5kZWZhdWx0VmFsdWUgPSBzcmMuZGVmYXVsdFZhbHVlO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGRvbU1hbmlwKCBjb2xsZWN0aW9uLCBhcmdzLCBjYWxsYmFjaywgaWdub3JlZCApIHtcblxuXHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXG5cdGFyZ3MgPSBmbGF0KCBhcmdzICk7XG5cblx0dmFyIGZyYWdtZW50LCBmaXJzdCwgc2NyaXB0cywgaGFzU2NyaXB0cywgbm9kZSwgZG9jLFxuXHRcdGkgPSAwLFxuXHRcdGwgPSBjb2xsZWN0aW9uLmxlbmd0aCxcblx0XHRpTm9DbG9uZSA9IGwgLSAxLFxuXHRcdHZhbHVlID0gYXJnc1sgMCBdLFxuXHRcdHZhbHVlSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0Ly8gV2UgY2FuJ3QgY2xvbmVOb2RlIGZyYWdtZW50cyB0aGF0IGNvbnRhaW4gY2hlY2tlZCwgaW4gV2ViS2l0XG5cdGlmICggdmFsdWVJc0Z1bmN0aW9uIHx8XG5cdFx0XHQoIGwgPiAxICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc3VwcG9ydC5jaGVja0Nsb25lICYmIHJjaGVja2VkLnRlc3QoIHZhbHVlICkgKSApIHtcblx0XHRyZXR1cm4gY29sbGVjdGlvbi5lYWNoKCBmdW5jdGlvbiggaW5kZXggKSB7XG5cdFx0XHR2YXIgc2VsZiA9IGNvbGxlY3Rpb24uZXEoIGluZGV4ICk7XG5cdFx0XHRpZiAoIHZhbHVlSXNGdW5jdGlvbiApIHtcblx0XHRcdFx0YXJnc1sgMCBdID0gdmFsdWUuY2FsbCggdGhpcywgaW5kZXgsIHNlbGYuaHRtbCgpICk7XG5cdFx0XHR9XG5cdFx0XHRkb21NYW5pcCggc2VsZiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKTtcblx0XHR9ICk7XG5cdH1cblxuXHRpZiAoIGwgKSB7XG5cdFx0ZnJhZ21lbnQgPSBidWlsZEZyYWdtZW50KCBhcmdzLCBjb2xsZWN0aW9uWyAwIF0ub3duZXJEb2N1bWVudCwgZmFsc2UsIGNvbGxlY3Rpb24sIGlnbm9yZWQgKTtcblx0XHRmaXJzdCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XG5cblx0XHRpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkge1xuXHRcdFx0ZnJhZ21lbnQgPSBmaXJzdDtcblx0XHR9XG5cblx0XHQvLyBSZXF1aXJlIGVpdGhlciBuZXcgY29udGVudCBvciBhbiBpbnRlcmVzdCBpbiBpZ25vcmVkIGVsZW1lbnRzIHRvIGludm9rZSB0aGUgY2FsbGJhY2tcblx0XHRpZiAoIGZpcnN0IHx8IGlnbm9yZWQgKSB7XG5cdFx0XHRzY3JpcHRzID0galF1ZXJ5Lm1hcCggZ2V0QWxsKCBmcmFnbWVudCwgXCJzY3JpcHRcIiApLCBkaXNhYmxlU2NyaXB0ICk7XG5cdFx0XHRoYXNTY3JpcHRzID0gc2NyaXB0cy5sZW5ndGg7XG5cblx0XHRcdC8vIFVzZSB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgZm9yIHRoZSBsYXN0IGl0ZW1cblx0XHRcdC8vIGluc3RlYWQgb2YgdGhlIGZpcnN0IGJlY2F1c2UgaXQgY2FuIGVuZCB1cFxuXHRcdFx0Ly8gYmVpbmcgZW1wdGllZCBpbmNvcnJlY3RseSBpbiBjZXJ0YWluIHNpdHVhdGlvbnMgKCM4MDcwKS5cblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0bm9kZSA9IGZyYWdtZW50O1xuXG5cdFx0XHRcdGlmICggaSAhPT0gaU5vQ2xvbmUgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IGpRdWVyeS5jbG9uZSggbm9kZSwgdHJ1ZSwgdHJ1ZSApO1xuXG5cdFx0XHRcdFx0Ly8gS2VlcCByZWZlcmVuY2VzIHRvIGNsb25lZCBzY3JpcHRzIGZvciBsYXRlciByZXN0b3JhdGlvblxuXHRcdFx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHNjcmlwdHMsIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y2FsbGJhY2suY2FsbCggY29sbGVjdGlvblsgaSBdLCBub2RlLCBpICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblx0XHRcdFx0ZG9jID0gc2NyaXB0c1sgc2NyaXB0cy5sZW5ndGggLSAxIF0ub3duZXJEb2N1bWVudDtcblxuXHRcdFx0XHQvLyBSZWVuYWJsZSBzY3JpcHRzXG5cdFx0XHRcdGpRdWVyeS5tYXAoIHNjcmlwdHMsIHJlc3RvcmVTY3JpcHQgKTtcblxuXHRcdFx0XHQvLyBFdmFsdWF0ZSBleGVjdXRhYmxlIHNjcmlwdHMgb24gZmlyc3QgZG9jdW1lbnQgaW5zZXJ0aW9uXG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgaGFzU2NyaXB0czsgaSsrICkge1xuXHRcdFx0XHRcdG5vZGUgPSBzY3JpcHRzWyBpIF07XG5cdFx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBub2RlLnR5cGUgfHwgXCJcIiApICYmXG5cdFx0XHRcdFx0XHQhZGF0YVByaXYuYWNjZXNzKCBub2RlLCBcImdsb2JhbEV2YWxcIiApICYmXG5cdFx0XHRcdFx0XHRqUXVlcnkuY29udGFpbnMoIGRvYywgbm9kZSApICkge1xuXG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUuc3JjICYmICggbm9kZS50eXBlIHx8IFwiXCIgKS50b0xvd2VyQ2FzZSgpICAhPT0gXCJtb2R1bGVcIiApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBPcHRpb25hbCBBSkFYIGRlcGVuZGVuY3ksIGJ1dCB3b24ndCBydW4gc2NyaXB0cyBpZiBub3QgcHJlc2VudFxuXHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5fZXZhbFVybCAmJiAhbm9kZS5ub01vZHVsZSApIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuX2V2YWxVcmwoIG5vZGUuc3JjLCB7XG5cdFx0XHRcdFx0XHRcdFx0XHRub25jZTogbm9kZS5ub25jZSB8fCBub2RlLmdldEF0dHJpYnV0ZSggXCJub25jZVwiIClcblx0XHRcdFx0XHRcdFx0XHR9LCBkb2MgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0RE9NRXZhbCggbm9kZS50ZXh0Q29udGVudC5yZXBsYWNlKCByY2xlYW5TY3JpcHQsIFwiXCIgKSwgbm9kZSwgZG9jICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGNvbGxlY3Rpb247XG59XG5cbmZ1bmN0aW9uIHJlbW92ZSggZWxlbSwgc2VsZWN0b3IsIGtlZXBEYXRhICkge1xuXHR2YXIgbm9kZSxcblx0XHRub2RlcyA9IHNlbGVjdG9yID8galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIGVsZW0gKSA6IGVsZW0sXG5cdFx0aSA9IDA7XG5cblx0Zm9yICggOyAoIG5vZGUgPSBub2Rlc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdGlmICggIWtlZXBEYXRhICYmIG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIG5vZGUgKSApO1xuXHRcdH1cblxuXHRcdGlmICggbm9kZS5wYXJlbnROb2RlICkge1xuXHRcdFx0aWYgKCBrZWVwRGF0YSAmJiBpc0F0dGFjaGVkKCBub2RlICkgKSB7XG5cdFx0XHRcdHNldEdsb2JhbEV2YWwoIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHR9XG5cdFx0XHRub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRodG1sUHJlZmlsdGVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRyZXR1cm4gaHRtbDtcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdHZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLFxuXHRcdFx0Y2xvbmUgPSBlbGVtLmNsb25lTm9kZSggdHJ1ZSApLFxuXHRcdFx0aW5QYWdlID0gaXNBdHRhY2hlZCggZWxlbSApO1xuXG5cdFx0Ly8gRml4IElFIGNsb25pbmcgaXNzdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCAmJiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgZWxlbS5ub2RlVHlwZSA9PT0gMTEgKSAmJlxuXHRcdFx0XHQhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIFdlIGVzY2hldyBTaXp6bGUgaGVyZSBmb3IgcGVyZm9ybWFuY2UgcmVhc29uczogaHR0cHM6Ly9qc3BlcmYuY29tL2dldGFsbC12cy1zaXp6bGUvMlxuXHRcdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSApO1xuXHRcdFx0c3JjRWxlbWVudHMgPSBnZXRBbGwoIGVsZW0gKTtcblxuXHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZpeElucHV0KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvcHkgdGhlIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCB0byB0aGUgY2xvbmVcblx0XHRpZiAoIGRhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRpZiAoIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0XHRzcmNFbGVtZW50cyA9IHNyY0VsZW1lbnRzIHx8IGdldEFsbCggZWxlbSApO1xuXHRcdFx0XHRkZXN0RWxlbWVudHMgPSBkZXN0RWxlbWVudHMgfHwgZ2V0QWxsKCBjbG9uZSApO1xuXG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGNsb25lQ29weUV2ZW50KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjbG9uZUNvcHlFdmVudCggZWxlbSwgY2xvbmUgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSwgXCJzY3JpcHRcIiApO1xuXHRcdGlmICggZGVzdEVsZW1lbnRzLmxlbmd0aCA+IDAgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCBkZXN0RWxlbWVudHMsICFpblBhZ2UgJiYgZ2V0QWxsKCBlbGVtLCBcInNjcmlwdFwiICkgKTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gdGhlIGNsb25lZCBzZXRcblx0XHRyZXR1cm4gY2xvbmU7XG5cdH0sXG5cblx0Y2xlYW5EYXRhOiBmdW5jdGlvbiggZWxlbXMgKSB7XG5cdFx0dmFyIGRhdGEsIGVsZW0sIHR5cGUsXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWwsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9PSB1bmRlZmluZWQ7IGkrKyApIHtcblx0XHRcdGlmICggYWNjZXB0RGF0YSggZWxlbSApICkge1xuXHRcdFx0XHRpZiAoICggZGF0YSA9IGVsZW1bIGRhdGFQcml2LmV4cGFuZG8gXSApICkge1xuXHRcdFx0XHRcdGlmICggZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCB0eXBlIGluIGRhdGEuZXZlbnRzICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWxbIHR5cGUgXSApIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gVGhpcyBpcyBhIHNob3J0Y3V0IHRvIGF2b2lkIGpRdWVyeS5ldmVudC5yZW1vdmUncyBvdmVyaGVhZFxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDUrXG5cdFx0XHRcdFx0Ly8gQXNzaWduIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHVzaW5nIGRlbGV0ZSwgc2VlIERhdGEjcmVtb3ZlXG5cdFx0XHRcdFx0ZWxlbVsgZGF0YVByaXYuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdICkge1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NStcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcblx0XHRcdFx0XHRlbGVtWyBkYXRhVXNlci5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRkZXRhY2g6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gcmVtb3ZlKCB0aGlzLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHR9LFxuXG5cdHJlbW92ZTogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yICk7XG5cdH0sXG5cblx0dGV4dDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdFx0alF1ZXJ5LnRleHQoIHRoaXMgKSA6XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRcdHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gKTtcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdGFwcGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBtYW5pcHVsYXRpb25UYXJnZXQoIHRoaXMsIGVsZW0gKTtcblx0XHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHByZXBlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoIGVsZW0sIHRhcmdldC5maXJzdENoaWxkICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGJlZm9yZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0YWZ0ZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzLm5leHRTaWJsaW5nICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZWxlbSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyAoIGVsZW0gPSB0aGlzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0Ly8gUHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XG5cblx0XHRcdFx0Ly8gUmVtb3ZlIGFueSByZW1haW5pbmcgbm9kZXNcblx0XHRcdFx0ZWxlbS50ZXh0Q29udGVudCA9IFwiXCI7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0Y2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHRkYXRhQW5kRXZlbnRzID0gZGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZmFsc2UgOiBkYXRhQW5kRXZlbnRzO1xuXHRcdGRlZXBEYXRhQW5kRXZlbnRzID0gZGVlcERhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGRhdGFBbmRFdmVudHMgOiBkZWVwRGF0YUFuZEV2ZW50cztcblxuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNsb25lKCB0aGlzLCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApO1xuXHRcdH0gKTtcblx0fSxcblxuXHRodG1sOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF0gfHwge30sXG5cdFx0XHRcdGkgPSAwLFxuXHRcdFx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0XHRcdGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pbm5lckhUTUw7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNlZSBpZiB3ZSBjYW4gdGFrZSBhIHNob3J0Y3V0IGFuZCBqdXN0IHVzZSBpbm5lckhUTUxcblx0XHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmICFybm9Jbm5lcmh0bWwudGVzdCggdmFsdWUgKSAmJlxuXHRcdFx0XHQhd3JhcE1hcFsgKCBydGFnTmFtZS5leGVjKCB2YWx1ZSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpIF0gKSB7XG5cblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuaHRtbFByZWZpbHRlciggdmFsdWUgKTtcblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRcdGVsZW0gPSB0aGlzWyBpIF0gfHwge307XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSBlbGVtZW50IG5vZGVzIGFuZCBwcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblx0XHRcdFx0XHRcdFx0ZWxlbS5pbm5lckhUTUwgPSB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtID0gMDtcblxuXHRcdFx0XHQvLyBJZiB1c2luZyBpbm5lckhUTUwgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgdXNlIHRoZSBmYWxsYmFjayBtZXRob2Rcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5hcHBlbmQoIHZhbHVlICk7XG5cdFx0XHR9XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRyZXBsYWNlV2l0aDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGlnbm9yZWQgPSBbXTtcblxuXHRcdC8vIE1ha2UgdGhlIGNoYW5nZXMsIHJlcGxhY2luZyBlYWNoIG5vbi1pZ25vcmVkIGNvbnRleHQgZWxlbWVudCB3aXRoIHRoZSBuZXcgY29udGVudFxuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG5cblx0XHRcdGlmICggalF1ZXJ5LmluQXJyYXkoIHRoaXMsIGlnbm9yZWQgKSA8IDAgKSB7XG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggdGhpcyApICk7XG5cdFx0XHRcdGlmICggcGFyZW50ICkge1xuXHRcdFx0XHRcdHBhcmVudC5yZXBsYWNlQ2hpbGQoIGVsZW0sIHRoaXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gRm9yY2UgY2FsbGJhY2sgaW52b2NhdGlvblxuXHRcdH0sIGlnbm9yZWQgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCgge1xuXHRhcHBlbmRUbzogXCJhcHBlbmRcIixcblx0cHJlcGVuZFRvOiBcInByZXBlbmRcIixcblx0aW5zZXJ0QmVmb3JlOiBcImJlZm9yZVwiLFxuXHRpbnNlcnRBZnRlcjogXCJhZnRlclwiLFxuXHRyZXBsYWNlQWxsOiBcInJlcGxhY2VXaXRoXCJcbn0sIGZ1bmN0aW9uKCBuYW1lLCBvcmlnaW5hbCApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGVsZW1zLFxuXHRcdFx0cmV0ID0gW10sXG5cdFx0XHRpbnNlcnQgPSBqUXVlcnkoIHNlbGVjdG9yICksXG5cdFx0XHRsYXN0ID0gaW5zZXJ0Lmxlbmd0aCAtIDEsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgaSA8PSBsYXN0OyBpKysgKSB7XG5cdFx0XHRlbGVtcyA9IGkgPT09IGxhc3QgPyB0aGlzIDogdGhpcy5jbG9uZSggdHJ1ZSApO1xuXHRcdFx0alF1ZXJ5KCBpbnNlcnRbIGkgXSApWyBvcmlnaW5hbCBdKCBlbGVtcyApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdC8vIC5nZXQoKSBiZWNhdXNlIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdHB1c2guYXBwbHkoIHJldCwgZWxlbXMuZ2V0KCkgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHJldCApO1xuXHR9O1xufSApO1xudmFyIHJudW1ub25weCA9IG5ldyBSZWdFeHAoIFwiXihcIiArIHBudW0gKyBcIikoPyFweClbYS16JV0rJFwiLCBcImlcIiApO1xuXG52YXIgZ2V0U3R5bGVzID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHksIEZpcmVmb3ggPD0zMCAoIzE1MDk4LCAjMTQxNTApXG5cdFx0Ly8gSUUgdGhyb3dzIG9uIGVsZW1lbnRzIGNyZWF0ZWQgaW4gcG9wdXBzXG5cdFx0Ly8gRkYgbWVhbndoaWxlIHRocm93cyBvbiBmcmFtZSBlbGVtZW50cyB0aHJvdWdoIFwiZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZVwiXG5cdFx0dmFyIHZpZXcgPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG5cblx0XHRpZiAoICF2aWV3IHx8ICF2aWV3Lm9wZW5lciApIHtcblx0XHRcdHZpZXcgPSB3aW5kb3c7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSggZWxlbSApO1xuXHR9O1xuXG52YXIgc3dhcCA9IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBjYWxsYmFjayApIHtcblx0dmFyIHJldCwgbmFtZSxcblx0XHRvbGQgPSB7fTtcblxuXHQvLyBSZW1lbWJlciB0aGUgb2xkIHZhbHVlcywgYW5kIGluc2VydCB0aGUgbmV3IG9uZXNcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdG9sZFsgbmFtZSBdID0gZWxlbS5zdHlsZVsgbmFtZSBdO1xuXHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IG9wdGlvbnNbIG5hbWUgXTtcblx0fVxuXG5cdHJldCA9IGNhbGxiYWNrLmNhbGwoIGVsZW0gKTtcblxuXHQvLyBSZXZlcnQgdGhlIG9sZCB2YWx1ZXNcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IG9sZFsgbmFtZSBdO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn07XG5cblxudmFyIHJib3hTdHlsZSA9IG5ldyBSZWdFeHAoIGNzc0V4cGFuZC5qb2luKCBcInxcIiApLCBcImlcIiApO1xuXG5cblxuKCBmdW5jdGlvbigpIHtcblxuXHQvLyBFeGVjdXRpbmcgYm90aCBwaXhlbFBvc2l0aW9uICYgYm94U2l6aW5nUmVsaWFibGUgdGVzdHMgcmVxdWlyZSBvbmx5IG9uZSBsYXlvdXRcblx0Ly8gc28gdGhleSdyZSBleGVjdXRlZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHNhdmUgdGhlIHNlY29uZCBjb21wdXRhdGlvbi5cblx0ZnVuY3Rpb24gY29tcHV0ZVN0eWxlVGVzdHMoKSB7XG5cblx0XHQvLyBUaGlzIGlzIGEgc2luZ2xldG9uLCB3ZSBuZWVkIHRvIGV4ZWN1dGUgaXQgb25seSBvbmNlXG5cdFx0aWYgKCAhZGl2ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gXCJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMTExMXB4O3dpZHRoOjYwcHg7XCIgK1xuXHRcdFx0XCJtYXJnaW4tdG9wOjFweDtwYWRkaW5nOjA7Ym9yZGVyOjBcIjtcblx0XHRkaXYuc3R5bGUuY3NzVGV4dCA9XG5cdFx0XHRcInBvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7Ym94LXNpemluZzpib3JkZXItYm94O292ZXJmbG93OnNjcm9sbDtcIiArXG5cdFx0XHRcIm1hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7XCIgK1xuXHRcdFx0XCJ3aWR0aDo2MCU7dG9wOjElXCI7XG5cdFx0ZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKCBjb250YWluZXIgKS5hcHBlbmRDaGlsZCggZGl2ICk7XG5cblx0XHR2YXIgZGl2U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggZGl2ICk7XG5cdFx0cGl4ZWxQb3NpdGlvblZhbCA9IGRpdlN0eWxlLnRvcCAhPT0gXCIxJVwiO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgRmlyZWZveCA8PTMgLSA0NFxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdFZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUubWFyZ2luTGVmdCApID09PSAxMjtcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHksIFNhZmFyaSA8PTkuMSAtIDEwLjEsIGlPUyA8PTcuMCAtIDkuM1xuXHRcdC8vIFNvbWUgc3R5bGVzIGNvbWUgYmFjayB3aXRoIHBlcmNlbnRhZ2UgdmFsdWVzLCBldmVuIHRob3VnaCB0aGV5IHNob3VsZG4ndFxuXHRcdGRpdi5zdHlsZS5yaWdodCA9IFwiNjAlXCI7XG5cdFx0cGl4ZWxCb3hTdHlsZXNWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLnJpZ2h0ICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcblx0XHQvLyBEZXRlY3QgbWlzcmVwb3J0aW5nIG9mIGNvbnRlbnQgZGltZW5zaW9ucyBmb3IgYm94LXNpemluZzpib3JkZXItYm94IGVsZW1lbnRzXG5cdFx0Ym94U2l6aW5nUmVsaWFibGVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLndpZHRoICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSBvbmx5XG5cdFx0Ly8gRGV0ZWN0IG92ZXJmbG93OnNjcm9sbCBzY3Jld2luZXNzIChnaC0zNjk5KVxuXHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTY0XG5cdFx0Ly8gRG9uJ3QgZ2V0IHRyaWNrZWQgd2hlbiB6b29tIGFmZmVjdHMgb2Zmc2V0V2lkdGggKGdoLTQwMjkpXG5cdFx0ZGl2LnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuXHRcdHNjcm9sbGJveFNpemVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdi5vZmZzZXRXaWR0aCAvIDMgKSA9PT0gMTI7XG5cblx0XHRkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApO1xuXG5cdFx0Ly8gTnVsbGlmeSB0aGUgZGl2IHNvIGl0IHdvdWxkbid0IGJlIHN0b3JlZCBpbiB0aGUgbWVtb3J5IGFuZFxuXHRcdC8vIGl0IHdpbGwgYWxzbyBiZSBhIHNpZ24gdGhhdCBjaGVja3MgYWxyZWFkeSBwZXJmb3JtZWRcblx0XHRkaXYgPSBudWxsO1xuXHR9XG5cblx0ZnVuY3Rpb24gcm91bmRQaXhlbE1lYXN1cmVzKCBtZWFzdXJlICkge1xuXHRcdHJldHVybiBNYXRoLnJvdW5kKCBwYXJzZUZsb2F0KCBtZWFzdXJlICkgKTtcblx0fVxuXG5cdHZhciBwaXhlbFBvc2l0aW9uVmFsLCBib3hTaXppbmdSZWxpYWJsZVZhbCwgc2Nyb2xsYm94U2l6ZVZhbCwgcGl4ZWxCb3hTdHlsZXNWYWwsXG5cdFx0cmVsaWFibGVUckRpbWVuc2lvbnNWYWwsIHJlbGlhYmxlTWFyZ2luTGVmdFZhbCxcblx0XHRjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICksXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdC8vIEZpbmlzaCBlYXJseSBpbiBsaW1pdGVkIChub24tYnJvd3NlcikgZW52aXJvbm1lbnRzXG5cdGlmICggIWRpdi5zdHlsZSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdC8vIFN0eWxlIG9mIGNsb25lZCBlbGVtZW50IGFmZmVjdHMgc291cmNlIGVsZW1lbnQgY2xvbmVkICgjODkwOClcblx0ZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID0gXCJjb250ZW50LWJveFwiO1xuXHRkaXYuY2xvbmVOb2RlKCB0cnVlICkuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcIlwiO1xuXHRzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSA9IGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9PT0gXCJjb250ZW50LWJveFwiO1xuXG5cdGpRdWVyeS5leHRlbmQoIHN1cHBvcnQsIHtcblx0XHRib3hTaXppbmdSZWxpYWJsZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIGJveFNpemluZ1JlbGlhYmxlVmFsO1xuXHRcdH0sXG5cdFx0cGl4ZWxCb3hTdHlsZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBwaXhlbEJveFN0eWxlc1ZhbDtcblx0XHR9LFxuXHRcdHBpeGVsUG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBwaXhlbFBvc2l0aW9uVmFsO1xuXHRcdH0sXG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0OiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gcmVsaWFibGVNYXJnaW5MZWZ0VmFsO1xuXHRcdH0sXG5cdFx0c2Nyb2xsYm94U2l6ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHNjcm9sbGJveFNpemVWYWw7XG5cdFx0fSxcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTUgLSAxOCtcblx0XHQvLyBJRS9FZGdlIG1pc3JlcG9ydCBgZ2V0Q29tcHV0ZWRTdHlsZWAgb2YgdGFibGUgcm93cyB3aXRoIHdpZHRoL2hlaWdodFxuXHRcdC8vIHNldCBpbiBDU1Mgd2hpbGUgYG9mZnNldCpgIHByb3BlcnRpZXMgcmVwb3J0IGNvcnJlY3QgdmFsdWVzLlxuXHRcdC8vIEJlaGF2aW9yIGluIElFIDkgaXMgbW9yZSBzdWJ0bGUgdGhhbiBpbiBuZXdlciB2ZXJzaW9ucyAmIGl0IHBhc3Nlc1xuXHRcdC8vIHNvbWUgdmVyc2lvbnMgb2YgdGhpcyB0ZXN0OyBtYWtlIHN1cmUgbm90IHRvIG1ha2UgaXQgcGFzcyB0aGVyZSFcblx0XHRyZWxpYWJsZVRyRGltZW5zaW9uczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdGFibGUsIHRyLCB0ckNoaWxkLCB0clN0eWxlO1xuXHRcdFx0aWYgKCByZWxpYWJsZVRyRGltZW5zaW9uc1ZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR0YWJsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwidGFibGVcIiApO1xuXHRcdFx0XHR0ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwidHJcIiApO1xuXHRcdFx0XHR0ckNoaWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdFx0XHRcdHRhYmxlLnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTExMTExcHhcIjtcblx0XHRcdFx0dHIuc3R5bGUuaGVpZ2h0ID0gXCIxcHhcIjtcblx0XHRcdFx0dHJDaGlsZC5zdHlsZS5oZWlnaHQgPSBcIjlweFwiO1xuXG5cdFx0XHRcdGRvY3VtZW50RWxlbWVudFxuXHRcdFx0XHRcdC5hcHBlbmRDaGlsZCggdGFibGUgKVxuXHRcdFx0XHRcdC5hcHBlbmRDaGlsZCggdHIgKVxuXHRcdFx0XHRcdC5hcHBlbmRDaGlsZCggdHJDaGlsZCApO1xuXG5cdFx0XHRcdHRyU3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggdHIgKTtcblx0XHRcdFx0cmVsaWFibGVUckRpbWVuc2lvbnNWYWwgPSBwYXJzZUludCggdHJTdHlsZS5oZWlnaHQgKSA+IDM7XG5cblx0XHRcdFx0ZG9jdW1lbnRFbGVtZW50LnJlbW92ZUNoaWxkKCB0YWJsZSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsO1xuXHRcdH1cblx0fSApO1xufSApKCk7XG5cblxuZnVuY3Rpb24gY3VyQ1NTKCBlbGVtLCBuYW1lLCBjb21wdXRlZCApIHtcblx0dmFyIHdpZHRoLCBtaW5XaWR0aCwgbWF4V2lkdGgsIHJldCxcblxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggNTErXG5cdFx0Ly8gUmV0cmlldmluZyBzdHlsZSBiZWZvcmUgY29tcHV0ZWQgc29tZWhvd1xuXHRcdC8vIGZpeGVzIGFuIGlzc3VlIHdpdGggZ2V0dGluZyB3cm9uZyB2YWx1ZXNcblx0XHQvLyBvbiBkZXRhY2hlZCBlbGVtZW50c1xuXHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRjb21wdXRlZCA9IGNvbXB1dGVkIHx8IGdldFN0eWxlcyggZWxlbSApO1xuXG5cdC8vIGdldFByb3BlcnR5VmFsdWUgaXMgbmVlZGVkIGZvcjpcblx0Ly8gICAuY3NzKCdmaWx0ZXInKSAoSUUgOSBvbmx5LCAjMTI1MzcpXG5cdC8vICAgLmNzcygnLS1jdXN0b21Qcm9wZXJ0eSkgKCMzMTQ0KVxuXHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdHJldCA9IGNvbXB1dGVkLmdldFByb3BlcnR5VmFsdWUoIG5hbWUgKSB8fCBjb21wdXRlZFsgbmFtZSBdO1xuXG5cdFx0aWYgKCByZXQgPT09IFwiXCIgJiYgIWlzQXR0YWNoZWQoIGVsZW0gKSApIHtcblx0XHRcdHJldCA9IGpRdWVyeS5zdHlsZSggZWxlbSwgbmFtZSApO1xuXHRcdH1cblxuXHRcdC8vIEEgdHJpYnV0ZSB0byB0aGUgXCJhd2Vzb21lIGhhY2sgYnkgRGVhbiBFZHdhcmRzXCJcblx0XHQvLyBBbmRyb2lkIEJyb3dzZXIgcmV0dXJucyBwZXJjZW50YWdlIGZvciBzb21lIHZhbHVlcyxcblx0XHQvLyBidXQgd2lkdGggc2VlbXMgdG8gYmUgcmVsaWFibHkgcGl4ZWxzLlxuXHRcdC8vIFRoaXMgaXMgYWdhaW5zdCB0aGUgQ1NTT00gZHJhZnQgc3BlYzpcblx0XHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3Nzb20vI3Jlc29sdmVkLXZhbHVlc1xuXHRcdGlmICggIXN1cHBvcnQucGl4ZWxCb3hTdHlsZXMoKSAmJiBybnVtbm9ucHgudGVzdCggcmV0ICkgJiYgcmJveFN0eWxlLnRlc3QoIG5hbWUgKSApIHtcblxuXHRcdFx0Ly8gUmVtZW1iZXIgdGhlIG9yaWdpbmFsIHZhbHVlc1xuXHRcdFx0d2lkdGggPSBzdHlsZS53aWR0aDtcblx0XHRcdG1pbldpZHRoID0gc3R5bGUubWluV2lkdGg7XG5cdFx0XHRtYXhXaWR0aCA9IHN0eWxlLm1heFdpZHRoO1xuXG5cdFx0XHQvLyBQdXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0XG5cdFx0XHRzdHlsZS5taW5XaWR0aCA9IHN0eWxlLm1heFdpZHRoID0gc3R5bGUud2lkdGggPSByZXQ7XG5cdFx0XHRyZXQgPSBjb21wdXRlZC53aWR0aDtcblxuXHRcdFx0Ly8gUmV2ZXJ0IHRoZSBjaGFuZ2VkIHZhbHVlc1xuXHRcdFx0c3R5bGUud2lkdGggPSB3aWR0aDtcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gbWluV2lkdGg7XG5cdFx0XHRzdHlsZS5tYXhXaWR0aCA9IG1heFdpZHRoO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiByZXQgIT09IHVuZGVmaW5lZCA/XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdFx0Ly8gSUUgcmV0dXJucyB6SW5kZXggdmFsdWUgYXMgYW4gaW50ZWdlci5cblx0XHRyZXQgKyBcIlwiIDpcblx0XHRyZXQ7XG59XG5cblxuZnVuY3Rpb24gYWRkR2V0SG9va0lmKCBjb25kaXRpb25GbiwgaG9va0ZuICkge1xuXG5cdC8vIERlZmluZSB0aGUgaG9vaywgd2UnbGwgY2hlY2sgb24gdGhlIGZpcnN0IHJ1biBpZiBpdCdzIHJlYWxseSBuZWVkZWQuXG5cdHJldHVybiB7XG5cdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggY29uZGl0aW9uRm4oKSApIHtcblxuXHRcdFx0XHQvLyBIb29rIG5vdCBuZWVkZWQgKG9yIGl0J3Mgbm90IHBvc3NpYmxlIHRvIHVzZSBpdCBkdWVcblx0XHRcdFx0Ly8gdG8gbWlzc2luZyBkZXBlbmRlbmN5KSwgcmVtb3ZlIGl0LlxuXHRcdFx0XHRkZWxldGUgdGhpcy5nZXQ7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSG9vayBuZWVkZWQ7IHJlZGVmaW5lIGl0IHNvIHRoYXQgdGhlIHN1cHBvcnQgdGVzdCBpcyBub3QgZXhlY3V0ZWQgYWdhaW4uXG5cdFx0XHRyZXR1cm4gKCB0aGlzLmdldCA9IGhvb2tGbiApLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9XG5cdH07XG59XG5cblxudmFyIGNzc1ByZWZpeGVzID0gWyBcIldlYmtpdFwiLCBcIk1velwiLCBcIm1zXCIgXSxcblx0ZW1wdHlTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKS5zdHlsZSxcblx0dmVuZG9yUHJvcHMgPSB7fTtcblxuLy8gUmV0dXJuIGEgdmVuZG9yLXByZWZpeGVkIHByb3BlcnR5IG9yIHVuZGVmaW5lZFxuZnVuY3Rpb24gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB7XG5cblx0Ly8gQ2hlY2sgZm9yIHZlbmRvciBwcmVmaXhlZCBuYW1lc1xuXHR2YXIgY2FwTmFtZSA9IG5hbWVbIDAgXS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSggMSApLFxuXHRcdGkgPSBjc3NQcmVmaXhlcy5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0bmFtZSA9IGNzc1ByZWZpeGVzWyBpIF0gKyBjYXBOYW1lO1xuXHRcdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdFx0cmV0dXJuIG5hbWU7XG5cdFx0fVxuXHR9XG59XG5cbi8vIFJldHVybiBhIHBvdGVudGlhbGx5LW1hcHBlZCBqUXVlcnkuY3NzUHJvcHMgb3IgdmVuZG9yIHByZWZpeGVkIHByb3BlcnR5XG5mdW5jdGlvbiBmaW5hbFByb3BOYW1lKCBuYW1lICkge1xuXHR2YXIgZmluYWwgPSBqUXVlcnkuY3NzUHJvcHNbIG5hbWUgXSB8fCB2ZW5kb3JQcm9wc1sgbmFtZSBdO1xuXG5cdGlmICggZmluYWwgKSB7XG5cdFx0cmV0dXJuIGZpbmFsO1xuXHR9XG5cdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdHJldHVybiBuYW1lO1xuXHR9XG5cdHJldHVybiB2ZW5kb3JQcm9wc1sgbmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB8fCBuYW1lO1xufVxuXG5cbnZhclxuXG5cdC8vIFN3YXBwYWJsZSBpZiBkaXNwbGF5IGlzIG5vbmUgb3Igc3RhcnRzIHdpdGggdGFibGVcblx0Ly8gZXhjZXB0IFwidGFibGVcIiwgXCJ0YWJsZS1jZWxsXCIsIG9yIFwidGFibGUtY2FwdGlvblwiXG5cdC8vIFNlZSBoZXJlIGZvciBkaXNwbGF5IHZhbHVlczogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9DU1MvZGlzcGxheVxuXHRyZGlzcGxheXN3YXAgPSAvXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8sXG5cdHJjdXN0b21Qcm9wID0gL14tLS8sXG5cdGNzc1Nob3cgPSB7IHBvc2l0aW9uOiBcImFic29sdXRlXCIsIHZpc2liaWxpdHk6IFwiaGlkZGVuXCIsIGRpc3BsYXk6IFwiYmxvY2tcIiB9LFxuXHRjc3NOb3JtYWxUcmFuc2Zvcm0gPSB7XG5cdFx0bGV0dGVyU3BhY2luZzogXCIwXCIsXG5cdFx0Zm9udFdlaWdodDogXCI0MDBcIlxuXHR9O1xuXG5mdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlciggX2VsZW0sIHZhbHVlLCBzdWJ0cmFjdCApIHtcblxuXHQvLyBBbnkgcmVsYXRpdmUgKCsvLSkgdmFsdWVzIGhhdmUgYWxyZWFkeSBiZWVuXG5cdC8vIG5vcm1hbGl6ZWQgYXQgdGhpcyBwb2ludFxuXHR2YXIgbWF0Y2hlcyA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKTtcblx0cmV0dXJuIG1hdGNoZXMgP1xuXG5cdFx0Ly8gR3VhcmQgYWdhaW5zdCB1bmRlZmluZWQgXCJzdWJ0cmFjdFwiLCBlLmcuLCB3aGVuIHVzZWQgYXMgaW4gY3NzSG9va3Ncblx0XHRNYXRoLm1heCggMCwgbWF0Y2hlc1sgMiBdIC0gKCBzdWJ0cmFjdCB8fCAwICkgKSArICggbWF0Y2hlc1sgMyBdIHx8IFwicHhcIiApIDpcblx0XHR2YWx1ZTtcbn1cblxuZnVuY3Rpb24gYm94TW9kZWxBZGp1c3RtZW50KCBlbGVtLCBkaW1lbnNpb24sIGJveCwgaXNCb3JkZXJCb3gsIHN0eWxlcywgY29tcHV0ZWRWYWwgKSB7XG5cdHZhciBpID0gZGltZW5zaW9uID09PSBcIndpZHRoXCIgPyAxIDogMCxcblx0XHRleHRyYSA9IDAsXG5cdFx0ZGVsdGEgPSAwO1xuXG5cdC8vIEFkanVzdG1lbnQgbWF5IG5vdCBiZSBuZWNlc3Nhcnlcblx0aWYgKCBib3ggPT09ICggaXNCb3JkZXJCb3ggPyBcImJvcmRlclwiIDogXCJjb250ZW50XCIgKSApIHtcblx0XHRyZXR1cm4gMDtcblx0fVxuXG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiApIHtcblxuXHRcdC8vIEJvdGggYm94IG1vZGVscyBleGNsdWRlIG1hcmdpblxuXHRcdGlmICggYm94ID09PSBcIm1hcmdpblwiICkge1xuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgYm94ICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdC8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBjb250ZW50LWJveCwgd2UncmUgc2Vla2luZyBcInBhZGRpbmdcIiBvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCJcblx0XHRpZiAoICFpc0JvcmRlckJveCApIHtcblxuXHRcdFx0Ly8gQWRkIHBhZGRpbmdcblx0XHRcdGRlbHRhICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwicGFkZGluZ1wiICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXG5cdFx0XHQvLyBGb3IgXCJib3JkZXJcIiBvciBcIm1hcmdpblwiLCBhZGQgYm9yZGVyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJwYWRkaW5nXCIgKSB7XG5cdFx0XHRcdGRlbHRhICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEJ1dCBzdGlsbCBrZWVwIHRyYWNrIG9mIGl0IG90aGVyd2lzZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZXh0cmEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblxuXHRcdC8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBib3JkZXItYm94IChjb250ZW50ICsgcGFkZGluZyArIGJvcmRlciksIHdlJ3JlIHNlZWtpbmcgXCJjb250ZW50XCIgb3Jcblx0XHQvLyBcInBhZGRpbmdcIiBvciBcIm1hcmdpblwiXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gRm9yIFwiY29udGVudFwiLCBzdWJ0cmFjdCBwYWRkaW5nXG5cdFx0XHRpZiAoIGJveCA9PT0gXCJjb250ZW50XCIgKSB7XG5cdFx0XHRcdGRlbHRhIC09IGpRdWVyeS5jc3MoIGVsZW0sIFwicGFkZGluZ1wiICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIgb3IgXCJwYWRkaW5nXCIsIHN1YnRyYWN0IGJvcmRlclxuXHRcdFx0aWYgKCBib3ggIT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRcdGRlbHRhIC09IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQWNjb3VudCBmb3IgcG9zaXRpdmUgY29udGVudC1ib3ggc2Nyb2xsIGd1dHRlciB3aGVuIHJlcXVlc3RlZCBieSBwcm92aWRpbmcgY29tcHV0ZWRWYWxcblx0aWYgKCAhaXNCb3JkZXJCb3ggJiYgY29tcHV0ZWRWYWwgPj0gMCApIHtcblxuXHRcdC8vIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBpcyBhIHJvdW5kZWQgc3VtIG9mIGNvbnRlbnQsIHBhZGRpbmcsIHNjcm9sbCBndXR0ZXIsIGFuZCBib3JkZXJcblx0XHQvLyBBc3N1bWluZyBpbnRlZ2VyIHNjcm9sbCBndXR0ZXIsIHN1YnRyYWN0IHRoZSByZXN0IGFuZCByb3VuZCBkb3duXG5cdFx0ZGVsdGEgKz0gTWF0aC5tYXgoIDAsIE1hdGguY2VpbChcblx0XHRcdGVsZW1bIFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXSAtXG5cdFx0XHRjb21wdXRlZFZhbCAtXG5cdFx0XHRkZWx0YSAtXG5cdFx0XHRleHRyYSAtXG5cdFx0XHQwLjVcblxuXHRcdC8vIElmIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBpcyB1bmtub3duLCB0aGVuIHdlIGNhbid0IGRldGVybWluZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyXG5cdFx0Ly8gVXNlIGFuIGV4cGxpY2l0IHplcm8gdG8gYXZvaWQgTmFOIChnaC0zOTY0KVxuXHRcdCkgKSB8fCAwO1xuXHR9XG5cblx0cmV0dXJuIGRlbHRhO1xufVxuXG5mdW5jdGlvbiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICkge1xuXG5cdC8vIFN0YXJ0IHdpdGggY29tcHV0ZWQgc3R5bGVcblx0dmFyIHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApLFxuXG5cdFx0Ly8gVG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdywgb25seSBmZXRjaCBib3hTaXppbmcgaWYgd2UgbmVlZCBpdCAoZ2gtNDMyMikuXG5cdFx0Ly8gRmFrZSBjb250ZW50LWJveCB1bnRpbCB3ZSBrbm93IGl0J3MgbmVlZGVkIHRvIGtub3cgdGhlIHRydWUgdmFsdWUuXG5cdFx0Ym94U2l6aW5nTmVlZGVkID0gIXN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSB8fCBleHRyYSxcblx0XHRpc0JvcmRlckJveCA9IGJveFNpemluZ05lZWRlZCAmJlxuXHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIixcblx0XHR2YWx1ZUlzQm9yZGVyQm94ID0gaXNCb3JkZXJCb3gsXG5cblx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIGRpbWVuc2lvbiwgc3R5bGVzICksXG5cdFx0b2Zmc2V0UHJvcCA9IFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICk7XG5cblx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTU0XG5cdC8vIFJldHVybiBhIGNvbmZvdW5kaW5nIG5vbi1waXhlbCB2YWx1ZSBvciBmZWlnbiBpZ25vcmFuY2UsIGFzIGFwcHJvcHJpYXRlLlxuXHRpZiAoIHJudW1ub25weC50ZXN0KCB2YWwgKSApIHtcblx0XHRpZiAoICFleHRyYSApIHtcblx0XHRcdHJldHVybiB2YWw7XG5cdFx0fVxuXHRcdHZhbCA9IFwiYXV0b1wiO1xuXHR9XG5cblxuXHQvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seVxuXHQvLyBVc2Ugb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGZvciB3aGVuIGJveCBzaXppbmcgaXMgdW5yZWxpYWJsZS5cblx0Ly8gSW4gdGhvc2UgY2FzZXMsIHRoZSBjb21wdXRlZCB2YWx1ZSBjYW4gYmUgdHJ1c3RlZCB0byBiZSBib3JkZXItYm94LlxuXHRpZiAoICggIXN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSAmJiBpc0JvcmRlckJveCB8fFxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgMTAgLSAxMSssIEVkZ2UgMTUgLSAxOCtcblx0XHQvLyBJRS9FZGdlIG1pc3JlcG9ydCBgZ2V0Q29tcHV0ZWRTdHlsZWAgb2YgdGFibGUgcm93cyB3aXRoIHdpZHRoL2hlaWdodFxuXHRcdC8vIHNldCBpbiBDU1Mgd2hpbGUgYG9mZnNldCpgIHByb3BlcnRpZXMgcmVwb3J0IGNvcnJlY3QgdmFsdWVzLlxuXHRcdC8vIEludGVyZXN0aW5nbHksIGluIHNvbWUgY2FzZXMgSUUgOSBkb2Vzbid0IHN1ZmZlciBmcm9tIHRoaXMgaXNzdWUuXG5cdFx0IXN1cHBvcnQucmVsaWFibGVUckRpbWVuc2lvbnMoKSAmJiBub2RlTmFtZSggZWxlbSwgXCJ0clwiICkgfHxcblxuXHRcdC8vIEZhbGwgYmFjayB0byBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgd2hlbiB2YWx1ZSBpcyBcImF1dG9cIlxuXHRcdC8vIFRoaXMgaGFwcGVucyBmb3IgaW5saW5lIGVsZW1lbnRzIHdpdGggbm8gZXhwbGljaXQgc2V0dGluZyAoZ2gtMzU3MSlcblx0XHR2YWwgPT09IFwiYXV0b1wiIHx8XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4xIC0gNC4zIG9ubHlcblx0XHQvLyBBbHNvIHVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIG1pc3JlcG9ydGVkIGlubGluZSBkaW1lbnNpb25zIChnaC0zNjAyKVxuXHRcdCFwYXJzZUZsb2F0KCB2YWwgKSAmJiBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImlubGluZVwiICkgJiZcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGUgZWxlbWVudCBpcyB2aXNpYmxlICYgY29ubmVjdGVkXG5cdFx0ZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHtcblxuXHRcdGlzQm9yZGVyQm94ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIjtcblxuXHRcdC8vIFdoZXJlIGF2YWlsYWJsZSwgb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGFwcHJveGltYXRlIGJvcmRlciBib3ggZGltZW5zaW9ucy5cblx0XHQvLyBXaGVyZSBub3QgYXZhaWxhYmxlIChlLmcuLCBTVkcpLCBhc3N1bWUgdW5yZWxpYWJsZSBib3gtc2l6aW5nIGFuZCBpbnRlcnByZXQgdGhlXG5cdFx0Ly8gcmV0cmlldmVkIHZhbHVlIGFzIGEgY29udGVudCBib3ggZGltZW5zaW9uLlxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBvZmZzZXRQcm9wIGluIGVsZW07XG5cdFx0aWYgKCB2YWx1ZUlzQm9yZGVyQm94ICkge1xuXHRcdFx0dmFsID0gZWxlbVsgb2Zmc2V0UHJvcCBdO1xuXHRcdH1cblx0fVxuXG5cdC8vIE5vcm1hbGl6ZSBcIlwiIGFuZCBhdXRvXG5cdHZhbCA9IHBhcnNlRmxvYXQoIHZhbCApIHx8IDA7XG5cblx0Ly8gQWRqdXN0IGZvciB0aGUgZWxlbWVudCdzIGJveCBtb2RlbFxuXHRyZXR1cm4gKCB2YWwgK1xuXHRcdGJveE1vZGVsQWRqdXN0bWVudChcblx0XHRcdGVsZW0sXG5cdFx0XHRkaW1lbnNpb24sXG5cdFx0XHRleHRyYSB8fCAoIGlzQm9yZGVyQm94ID8gXCJib3JkZXJcIiA6IFwiY29udGVudFwiICksXG5cdFx0XHR2YWx1ZUlzQm9yZGVyQm94LFxuXHRcdFx0c3R5bGVzLFxuXG5cdFx0XHQvLyBQcm92aWRlIHRoZSBjdXJyZW50IGNvbXB1dGVkIHNpemUgdG8gcmVxdWVzdCBzY3JvbGwgZ3V0dGVyIGNhbGN1bGF0aW9uIChnaC0zNTg5KVxuXHRcdFx0dmFsXG5cdFx0KVxuXHQpICsgXCJweFwiO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQWRkIGluIHN0eWxlIHByb3BlcnR5IGhvb2tzIGZvciBvdmVycmlkaW5nIHRoZSBkZWZhdWx0XG5cdC8vIGJlaGF2aW9yIG9mIGdldHRpbmcgYW5kIHNldHRpbmcgYSBzdHlsZSBwcm9wZXJ0eVxuXHRjc3NIb29rczoge1xuXHRcdG9wYWNpdHk6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0XHRcdFx0Ly8gV2Ugc2hvdWxkIGFsd2F5cyBnZXQgYSBudW1iZXIgYmFjayBmcm9tIG9wYWNpdHlcblx0XHRcdFx0XHR2YXIgcmV0ID0gY3VyQ1NTKCBlbGVtLCBcIm9wYWNpdHlcIiApO1xuXHRcdFx0XHRcdHJldHVybiByZXQgPT09IFwiXCIgPyBcIjFcIiA6IHJldDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHQvLyBEb24ndCBhdXRvbWF0aWNhbGx5IGFkZCBcInB4XCIgdG8gdGhlc2UgcG9zc2libHktdW5pdGxlc3MgcHJvcGVydGllc1xuXHRjc3NOdW1iZXI6IHtcblx0XHRcImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50XCI6IHRydWUsXG5cdFx0XCJjb2x1bW5Db3VudFwiOiB0cnVlLFxuXHRcdFwiZmlsbE9wYWNpdHlcIjogdHJ1ZSxcblx0XHRcImZsZXhHcm93XCI6IHRydWUsXG5cdFx0XCJmbGV4U2hyaW5rXCI6IHRydWUsXG5cdFx0XCJmb250V2VpZ2h0XCI6IHRydWUsXG5cdFx0XCJncmlkQXJlYVwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtblwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtbkVuZFwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtblN0YXJ0XCI6IHRydWUsXG5cdFx0XCJncmlkUm93XCI6IHRydWUsXG5cdFx0XCJncmlkUm93RW5kXCI6IHRydWUsXG5cdFx0XCJncmlkUm93U3RhcnRcIjogdHJ1ZSxcblx0XHRcImxpbmVIZWlnaHRcIjogdHJ1ZSxcblx0XHRcIm9wYWNpdHlcIjogdHJ1ZSxcblx0XHRcIm9yZGVyXCI6IHRydWUsXG5cdFx0XCJvcnBoYW5zXCI6IHRydWUsXG5cdFx0XCJ3aWRvd3NcIjogdHJ1ZSxcblx0XHRcInpJbmRleFwiOiB0cnVlLFxuXHRcdFwiem9vbVwiOiB0cnVlXG5cdH0sXG5cblx0Ly8gQWRkIGluIHByb3BlcnRpZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8gZml4IGJlZm9yZVxuXHQvLyBzZXR0aW5nIG9yIGdldHRpbmcgdGhlIHZhbHVlXG5cdGNzc1Byb3BzOiB7fSxcblxuXHQvLyBHZXQgYW5kIHNldCB0aGUgc3R5bGUgcHJvcGVydHkgb24gYSBET00gTm9kZVxuXHRzdHlsZTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlLCBleHRyYSApIHtcblxuXHRcdC8vIERvbid0IHNldCBzdHlsZXMgb24gdGV4dCBhbmQgY29tbWVudCBub2Rlc1xuXHRcdGlmICggIWVsZW0gfHwgZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4IHx8ICFlbGVtLnN0eWxlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZVxuXHRcdHZhciByZXQsIHR5cGUsIGhvb2tzLFxuXHRcdFx0b3JpZ05hbWUgPSBjYW1lbENhc2UoIG5hbWUgKSxcblx0XHRcdGlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Qcm9wLnRlc3QoIG5hbWUgKSxcblx0XHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3Rcblx0XHQvLyB3YW50IHRvIHF1ZXJ5IHRoZSB2YWx1ZSBpZiBpdCBpcyBhIENTUyBjdXN0b20gcHJvcGVydHlcblx0XHQvLyBzaW5jZSB0aGV5IGFyZSB1c2VyLWRlZmluZWQuXG5cdFx0aWYgKCAhaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0bmFtZSA9IGZpbmFsUHJvcE5hbWUoIG9yaWdOYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gR2V0cyBob29rIGZvciB0aGUgcHJlZml4ZWQgdmVyc2lvbiwgdGhlbiB1bnByZWZpeGVkIHZlcnNpb25cblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTtcblxuXHRcdC8vIENoZWNrIGlmIHdlJ3JlIHNldHRpbmcgYSB2YWx1ZVxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHR5cGUgPSB0eXBlb2YgdmFsdWU7XG5cblx0XHRcdC8vIENvbnZlcnQgXCIrPVwiIG9yIFwiLT1cIiB0byByZWxhdGl2ZSBudW1iZXJzICgjNzM0NSlcblx0XHRcdGlmICggdHlwZSA9PT0gXCJzdHJpbmdcIiAmJiAoIHJldCA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmIHJldFsgMSBdICkge1xuXHRcdFx0XHR2YWx1ZSA9IGFkanVzdENTUyggZWxlbSwgbmFtZSwgcmV0ICk7XG5cblx0XHRcdFx0Ly8gRml4ZXMgYnVnICM5MjM3XG5cdFx0XHRcdHR5cGUgPSBcIm51bWJlclwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCBudWxsIGFuZCBOYU4gdmFsdWVzIGFyZW4ndCBzZXQgKCM3MTE2KVxuXHRcdFx0aWYgKCB2YWx1ZSA9PSBudWxsIHx8IHZhbHVlICE9PSB2YWx1ZSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIG51bWJlciB3YXMgcGFzc2VkIGluLCBhZGQgdGhlIHVuaXQgKGV4Y2VwdCBmb3IgY2VydGFpbiBDU1MgcHJvcGVydGllcylcblx0XHRcdC8vIFRoZSBpc0N1c3RvbVByb3AgY2hlY2sgY2FuIGJlIHJlbW92ZWQgaW4galF1ZXJ5IDQuMCB3aGVuIHdlIG9ubHkgYXV0by1hcHBlbmRcblx0XHRcdC8vIFwicHhcIiB0byBhIGZldyBoYXJkY29kZWQgdmFsdWVzLlxuXHRcdFx0aWYgKCB0eXBlID09PSBcIm51bWJlclwiICYmICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRcdHZhbHVlICs9IHJldCAmJiByZXRbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGJhY2tncm91bmQtKiBwcm9wcyBhZmZlY3Qgb3JpZ2luYWwgY2xvbmUncyB2YWx1ZXNcblx0XHRcdGlmICggIXN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlICYmIHZhbHVlID09PSBcIlwiICYmIG5hbWUuaW5kZXhPZiggXCJiYWNrZ3JvdW5kXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IFwiaW5oZXJpdFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkLCB1c2UgdGhhdCB2YWx1ZSwgb3RoZXJ3aXNlIGp1c3Qgc2V0IHRoZSBzcGVjaWZpZWQgdmFsdWVcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fFxuXHRcdFx0XHQoIHZhbHVlID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0aWYgKCBpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRcdFx0c3R5bGUuc2V0UHJvcGVydHkoIG5hbWUsIHZhbHVlICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgbm9uLWNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcblx0XHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgZmFsc2UsIGV4dHJhICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE90aGVyd2lzZSBqdXN0IGdldCB0aGUgdmFsdWUgZnJvbSB0aGUgc3R5bGUgb2JqZWN0XG5cdFx0XHRyZXR1cm4gc3R5bGVbIG5hbWUgXTtcblx0XHR9XG5cdH0sXG5cblx0Y3NzOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZXh0cmEsIHN0eWxlcyApIHtcblx0XHR2YXIgdmFsLCBudW0sIGhvb2tzLFxuXHRcdFx0b3JpZ05hbWUgPSBjYW1lbENhc2UoIG5hbWUgKSxcblx0XHRcdGlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Qcm9wLnRlc3QoIG5hbWUgKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3Rcblx0XHQvLyB3YW50IHRvIG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgaXMgYSBDU1MgY3VzdG9tIHByb3BlcnR5XG5cdFx0Ly8gc2luY2UgdGhleSBhcmUgdXNlci1kZWZpbmVkLlxuXHRcdGlmICggIWlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdG5hbWUgPSBmaW5hbFByb3BOYW1lKCBvcmlnTmFtZSApO1xuXHRcdH1cblxuXHRcdC8vIFRyeSBwcmVmaXhlZCBuYW1lIGZvbGxvd2VkIGJ5IHRoZSB1bnByZWZpeGVkIG5hbWVcblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTtcblxuXHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICkge1xuXHRcdFx0dmFsID0gaG9va3MuZ2V0KCBlbGVtLCB0cnVlLCBleHRyYSApO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyd2lzZSwgaWYgYSB3YXkgdG8gZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBleGlzdHMsIHVzZSB0aGF0XG5cdFx0aWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHZhbCA9IGN1ckNTUyggZWxlbSwgbmFtZSwgc3R5bGVzICk7XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBcIm5vcm1hbFwiIHRvIGNvbXB1dGVkIHZhbHVlXG5cdFx0aWYgKCB2YWwgPT09IFwibm9ybWFsXCIgJiYgbmFtZSBpbiBjc3NOb3JtYWxUcmFuc2Zvcm0gKSB7XG5cdFx0XHR2YWwgPSBjc3NOb3JtYWxUcmFuc2Zvcm1bIG5hbWUgXTtcblx0XHR9XG5cblx0XHQvLyBNYWtlIG51bWVyaWMgaWYgZm9yY2VkIG9yIGEgcXVhbGlmaWVyIHdhcyBwcm92aWRlZCBhbmQgdmFsIGxvb2tzIG51bWVyaWNcblx0XHRpZiAoIGV4dHJhID09PSBcIlwiIHx8IGV4dHJhICkge1xuXHRcdFx0bnVtID0gcGFyc2VGbG9hdCggdmFsICk7XG5cdFx0XHRyZXR1cm4gZXh0cmEgPT09IHRydWUgfHwgaXNGaW5pdGUoIG51bSApID8gbnVtIHx8IDAgOiB2YWw7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbDtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcImhlaWdodFwiLCBcIndpZHRoXCIgXSwgZnVuY3Rpb24oIF9pLCBkaW1lbnNpb24gKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgZGltZW5zaW9uIF0gPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQsIGV4dHJhICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHQvLyBDZXJ0YWluIGVsZW1lbnRzIGNhbiBoYXZlIGRpbWVuc2lvbiBpbmZvIGlmIHdlIGludmlzaWJseSBzaG93IHRoZW1cblx0XHRcdFx0Ly8gYnV0IGl0IG11c3QgaGF2ZSBhIGN1cnJlbnQgZGlzcGxheSBzdHlsZSB0aGF0IHdvdWxkIGJlbmVmaXRcblx0XHRcdFx0cmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApICkgJiZcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4K1xuXHRcdFx0XHRcdC8vIFRhYmxlIGNvbHVtbnMgaW4gU2FmYXJpIGhhdmUgbm9uLXplcm8gb2Zmc2V0V2lkdGggJiB6ZXJvXG5cdFx0XHRcdFx0Ly8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggdW5sZXNzIGRpc3BsYXkgaXMgY2hhbmdlZC5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHRcdFx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlXG5cdFx0XHRcdFx0Ly8gaW4gSUUgdGhyb3dzIGFuIGVycm9yLlxuXHRcdFx0XHRcdCggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggfHwgIWVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggKSA/XG5cdFx0XHRcdFx0XHRzd2FwKCBlbGVtLCBjc3NTaG93LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKTtcblx0XHRcdFx0XHRcdH0gKSA6XG5cdFx0XHRcdFx0XHRnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBleHRyYSApIHtcblx0XHRcdHZhciBtYXRjaGVzLFxuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcblxuXHRcdFx0XHQvLyBPbmx5IHJlYWQgc3R5bGVzLnBvc2l0aW9uIGlmIHRoZSB0ZXN0IGhhcyBhIGNoYW5jZSB0byBmYWlsXG5cdFx0XHRcdC8vIHRvIGF2b2lkIGZvcmNpbmcgYSByZWZsb3cuXG5cdFx0XHRcdHNjcm9sbGJveFNpemVCdWdneSA9ICFzdXBwb3J0LnNjcm9sbGJveFNpemUoKSAmJlxuXHRcdFx0XHRcdHN0eWxlcy5wb3NpdGlvbiA9PT0gXCJhYnNvbHV0ZVwiLFxuXG5cdFx0XHRcdC8vIFRvIGF2b2lkIGZvcmNpbmcgYSByZWZsb3csIG9ubHkgZmV0Y2ggYm94U2l6aW5nIGlmIHdlIG5lZWQgaXQgKGdoLTM5OTEpXG5cdFx0XHRcdGJveFNpemluZ05lZWRlZCA9IHNjcm9sbGJveFNpemVCdWdneSB8fCBleHRyYSxcblx0XHRcdFx0aXNCb3JkZXJCb3ggPSBib3hTaXppbmdOZWVkZWQgJiZcblx0XHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdFx0XHRzdWJ0cmFjdCA9IGV4dHJhID9cblx0XHRcdFx0XHRib3hNb2RlbEFkanVzdG1lbnQoXG5cdFx0XHRcdFx0XHRlbGVtLFxuXHRcdFx0XHRcdFx0ZGltZW5zaW9uLFxuXHRcdFx0XHRcdFx0ZXh0cmEsXG5cdFx0XHRcdFx0XHRpc0JvcmRlckJveCxcblx0XHRcdFx0XHRcdHN0eWxlc1xuXHRcdFx0XHRcdCkgOlxuXHRcdFx0XHRcdDA7XG5cblx0XHRcdC8vIEFjY291bnQgZm9yIHVucmVsaWFibGUgYm9yZGVyLWJveCBkaW1lbnNpb25zIGJ5IGNvbXBhcmluZyBvZmZzZXQqIHRvIGNvbXB1dGVkIGFuZFxuXHRcdFx0Ly8gZmFraW5nIGEgY29udGVudC1ib3ggdG8gZ2V0IGJvcmRlciBhbmQgcGFkZGluZyAoZ2gtMzY5OSlcblx0XHRcdGlmICggaXNCb3JkZXJCb3ggJiYgc2Nyb2xsYm94U2l6ZUJ1Z2d5ICkge1xuXHRcdFx0XHRzdWJ0cmFjdCAtPSBNYXRoLmNlaWwoXG5cdFx0XHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdFx0XHRwYXJzZUZsb2F0KCBzdHlsZXNbIGRpbWVuc2lvbiBdICkgLVxuXHRcdFx0XHRcdGJveE1vZGVsQWRqdXN0bWVudCggZWxlbSwgZGltZW5zaW9uLCBcImJvcmRlclwiLCBmYWxzZSwgc3R5bGVzICkgLVxuXHRcdFx0XHRcdDAuNVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb252ZXJ0IHRvIHBpeGVscyBpZiB2YWx1ZSBhZGp1c3RtZW50IGlzIG5lZWRlZFxuXHRcdFx0aWYgKCBzdWJ0cmFjdCAmJiAoIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJlxuXHRcdFx0XHQoIG1hdGNoZXNbIDMgXSB8fCBcInB4XCIgKSAhPT0gXCJweFwiICkge1xuXG5cdFx0XHRcdGVsZW0uc3R5bGVbIGRpbWVuc2lvbiBdID0gdmFsdWU7XG5cdFx0XHRcdHZhbHVlID0galF1ZXJ5LmNzcyggZWxlbSwgZGltZW5zaW9uICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICk7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuY3NzSG9va3MubWFyZ2luTGVmdCA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5yZWxpYWJsZU1hcmdpbkxlZnQsXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0cmV0dXJuICggcGFyc2VGbG9hdCggY3VyQ1NTKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiApICkgfHxcblx0XHRcdFx0ZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0IC1cblx0XHRcdFx0XHRzd2FwKCBlbGVtLCB7IG1hcmdpbkxlZnQ6IDAgfSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuXHRcdFx0XHRcdH0gKVxuXHRcdFx0XHQpICsgXCJweFwiO1xuXHRcdH1cblx0fVxuKTtcblxuLy8gVGhlc2UgaG9va3MgYXJlIHVzZWQgYnkgYW5pbWF0ZSB0byBleHBhbmQgcHJvcGVydGllc1xualF1ZXJ5LmVhY2goIHtcblx0bWFyZ2luOiBcIlwiLFxuXHRwYWRkaW5nOiBcIlwiLFxuXHRib3JkZXI6IFwiV2lkdGhcIlxufSwgZnVuY3Rpb24oIHByZWZpeCwgc3VmZml4ICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdID0ge1xuXHRcdGV4cGFuZDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGkgPSAwLFxuXHRcdFx0XHRleHBhbmRlZCA9IHt9LFxuXG5cdFx0XHRcdC8vIEFzc3VtZXMgYSBzaW5nbGUgbnVtYmVyIGlmIG5vdCBhIHN0cmluZ1xuXHRcdFx0XHRwYXJ0cyA9IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiA/IHZhbHVlLnNwbGl0KCBcIiBcIiApIDogWyB2YWx1ZSBdO1xuXG5cdFx0XHRmb3IgKCA7IGkgPCA0OyBpKysgKSB7XG5cdFx0XHRcdGV4cGFuZGVkWyBwcmVmaXggKyBjc3NFeHBhbmRbIGkgXSArIHN1ZmZpeCBdID1cblx0XHRcdFx0XHRwYXJ0c1sgaSBdIHx8IHBhcnRzWyBpIC0gMiBdIHx8IHBhcnRzWyAwIF07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBleHBhbmRlZDtcblx0XHR9XG5cdH07XG5cblx0aWYgKCBwcmVmaXggIT09IFwibWFyZ2luXCIgKSB7XG5cdFx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXS5zZXQgPSBzZXRQb3NpdGl2ZU51bWJlcjtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGNzczogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdHZhciBzdHlsZXMsIGxlbixcblx0XHRcdFx0bWFwID0ge30sXG5cdFx0XHRcdGkgPSAwO1xuXG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIG5hbWUgKSApIHtcblx0XHRcdFx0c3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICk7XG5cdFx0XHRcdGxlbiA9IG5hbWUubGVuZ3RoO1xuXG5cdFx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRcdG1hcFsgbmFtZVsgaSBdIF0gPSBqUXVlcnkuY3NzKCBlbGVtLCBuYW1lWyBpIF0sIGZhbHNlLCBzdHlsZXMgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBtYXA7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lLCB2YWx1ZSApIDpcblx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgbmFtZSApO1xuXHRcdH0sIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9XG59ICk7XG5cblxuZnVuY3Rpb24gVHdlZW4oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICkge1xuXHRyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApO1xufVxualF1ZXJ5LlR3ZWVuID0gVHdlZW47XG5cblR3ZWVuLnByb3RvdHlwZSA9IHtcblx0Y29uc3RydWN0b3I6IFR3ZWVuLFxuXHRpbml0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcsIHVuaXQgKSB7XG5cdFx0dGhpcy5lbGVtID0gZWxlbTtcblx0XHR0aGlzLnByb3AgPSBwcm9wO1xuXHRcdHRoaXMuZWFzaW5nID0gZWFzaW5nIHx8IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHQ7XG5cdFx0dGhpcy5vcHRpb25zID0gb3B0aW9ucztcblx0XHR0aGlzLnN0YXJ0ID0gdGhpcy5ub3cgPSB0aGlzLmN1cigpO1xuXHRcdHRoaXMuZW5kID0gZW5kO1xuXHRcdHRoaXMudW5pdCA9IHVuaXQgfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdH0sXG5cdGN1cjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdHJldHVybiBob29rcyAmJiBob29rcy5nZXQgP1xuXHRcdFx0aG9va3MuZ2V0KCB0aGlzICkgOlxuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LmdldCggdGhpcyApO1xuXHR9LFxuXHRydW46IGZ1bmN0aW9uKCBwZXJjZW50ICkge1xuXHRcdHZhciBlYXNlZCxcblx0XHRcdGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmR1cmF0aW9uICkge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IGpRdWVyeS5lYXNpbmdbIHRoaXMuZWFzaW5nIF0oXG5cdFx0XHRcdHBlcmNlbnQsIHRoaXMub3B0aW9ucy5kdXJhdGlvbiAqIHBlcmNlbnQsIDAsIDEsIHRoaXMub3B0aW9ucy5kdXJhdGlvblxuXHRcdFx0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IHBlcmNlbnQ7XG5cdFx0fVxuXHRcdHRoaXMubm93ID0gKCB0aGlzLmVuZCAtIHRoaXMuc3RhcnQgKSAqIGVhc2VkICsgdGhpcy5zdGFydDtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLnN0ZXAgKSB7XG5cdFx0XHR0aGlzLm9wdGlvbnMuc3RlcC5jYWxsKCB0aGlzLmVsZW0sIHRoaXMubm93LCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBob29rcy5zZXQgKSB7XG5cdFx0XHRob29rcy5zZXQoIHRoaXMgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LnNldCggdGhpcyApO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcztcblx0fVxufTtcblxuVHdlZW4ucHJvdG90eXBlLmluaXQucHJvdG90eXBlID0gVHdlZW4ucHJvdG90eXBlO1xuXG5Ud2Vlbi5wcm9wSG9va3MgPSB7XG5cdF9kZWZhdWx0OiB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0XHR2YXIgcmVzdWx0O1xuXG5cdFx0XHQvLyBVc2UgYSBwcm9wZXJ0eSBvbiB0aGUgZWxlbWVudCBkaXJlY3RseSB3aGVuIGl0IGlzIG5vdCBhIERPTSBlbGVtZW50LFxuXHRcdFx0Ly8gb3Igd2hlbiB0aGVyZSBpcyBubyBtYXRjaGluZyBzdHlsZSBwcm9wZXJ0eSB0aGF0IGV4aXN0cy5cblx0XHRcdGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAhPT0gMSB8fFxuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gIT0gbnVsbCAmJiB0d2Vlbi5lbGVtLnN0eWxlWyB0d2Vlbi5wcm9wIF0gPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUGFzc2luZyBhbiBlbXB0eSBzdHJpbmcgYXMgYSAzcmQgcGFyYW1ldGVyIHRvIC5jc3Mgd2lsbCBhdXRvbWF0aWNhbGx5XG5cdFx0XHQvLyBhdHRlbXB0IGEgcGFyc2VGbG9hdCBhbmQgZmFsbGJhY2sgdG8gYSBzdHJpbmcgaWYgdGhlIHBhcnNlIGZhaWxzLlxuXHRcdFx0Ly8gU2ltcGxlIHZhbHVlcyBzdWNoIGFzIFwiMTBweFwiIGFyZSBwYXJzZWQgdG8gRmxvYXQ7XG5cdFx0XHQvLyBjb21wbGV4IHZhbHVlcyBzdWNoIGFzIFwicm90YXRlKDFyYWQpXCIgYXJlIHJldHVybmVkIGFzLWlzLlxuXHRcdFx0cmVzdWx0ID0galF1ZXJ5LmNzcyggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgXCJcIiApO1xuXG5cdFx0XHQvLyBFbXB0eSBzdHJpbmdzLCBudWxsLCB1bmRlZmluZWQgYW5kIFwiYXV0b1wiIGFyZSBjb252ZXJ0ZWQgdG8gMC5cblx0XHRcdHJldHVybiAhcmVzdWx0IHx8IHJlc3VsdCA9PT0gXCJhdXRvXCIgPyAwIDogcmVzdWx0O1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cblx0XHRcdC8vIFVzZSBzdGVwIGhvb2sgZm9yIGJhY2sgY29tcGF0LlxuXHRcdFx0Ly8gVXNlIGNzc0hvb2sgaWYgaXRzIHRoZXJlLlxuXHRcdFx0Ly8gVXNlIC5zdHlsZSBpZiBhdmFpbGFibGUgYW5kIHVzZSBwbGFpbiBwcm9wZXJ0aWVzIHdoZXJlIGF2YWlsYWJsZS5cblx0XHRcdGlmICggalF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSApIHtcblx0XHRcdFx0alF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSggdHdlZW4gKTtcblx0XHRcdH0gZWxzZSBpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKFxuXHRcdFx0XHRcdGpRdWVyeS5jc3NIb29rc1sgdHdlZW4ucHJvcCBdIHx8XG5cdFx0XHRcdFx0dHdlZW4uZWxlbS5zdHlsZVsgZmluYWxQcm9wTmFtZSggdHdlZW4ucHJvcCApIF0gIT0gbnVsbCApICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBQYW5pYyBiYXNlZCBhcHByb2FjaCB0byBzZXR0aW5nIHRoaW5ncyBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblR3ZWVuLnByb3BIb29rcy5zY3JvbGxUb3AgPSBUd2Vlbi5wcm9wSG9va3Muc2Nyb2xsTGVmdCA9IHtcblx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICYmIHR3ZWVuLmVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5lYXNpbmcgPSB7XG5cdGxpbmVhcjogZnVuY3Rpb24oIHAgKSB7XG5cdFx0cmV0dXJuIHA7XG5cdH0sXG5cdHN3aW5nOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gMC41IC0gTWF0aC5jb3MoIHAgKiBNYXRoLlBJICkgLyAyO1xuXHR9LFxuXHRfZGVmYXVsdDogXCJzd2luZ1wiXG59O1xuXG5qUXVlcnkuZnggPSBUd2Vlbi5wcm90b3R5cGUuaW5pdDtcblxuLy8gQmFjayBjb21wYXQgPDEuOCBleHRlbnNpb24gcG9pbnRcbmpRdWVyeS5meC5zdGVwID0ge307XG5cblxuXG5cbnZhclxuXHRmeE5vdywgaW5Qcm9ncmVzcyxcblx0cmZ4dHlwZXMgPSAvXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sXG5cdHJydW4gPSAvcXVldWVIb29rcyQvO1xuXG5mdW5jdGlvbiBzY2hlZHVsZSgpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdGlmICggZG9jdW1lbnQuaGlkZGVuID09PSBmYWxzZSAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lICkge1xuXHRcdFx0d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSggc2NoZWR1bGUgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0d2luZG93LnNldFRpbWVvdXQoIHNjaGVkdWxlLCBqUXVlcnkuZnguaW50ZXJ2YWwgKTtcblx0XHR9XG5cblx0XHRqUXVlcnkuZngudGljaygpO1xuXHR9XG59XG5cbi8vIEFuaW1hdGlvbnMgY3JlYXRlZCBzeW5jaHJvbm91c2x5IHdpbGwgcnVuIHN5bmNocm9ub3VzbHlcbmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkge1xuXHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0ZnhOb3cgPSB1bmRlZmluZWQ7XG5cdH0gKTtcblx0cmV0dXJuICggZnhOb3cgPSBEYXRlLm5vdygpICk7XG59XG5cbi8vIEdlbmVyYXRlIHBhcmFtZXRlcnMgdG8gY3JlYXRlIGEgc3RhbmRhcmQgYW5pbWF0aW9uXG5mdW5jdGlvbiBnZW5GeCggdHlwZSwgaW5jbHVkZVdpZHRoICkge1xuXHR2YXIgd2hpY2gsXG5cdFx0aSA9IDAsXG5cdFx0YXR0cnMgPSB7IGhlaWdodDogdHlwZSB9O1xuXG5cdC8vIElmIHdlIGluY2x1ZGUgd2lkdGgsIHN0ZXAgdmFsdWUgaXMgMSB0byBkbyBhbGwgY3NzRXhwYW5kIHZhbHVlcyxcblx0Ly8gb3RoZXJ3aXNlIHN0ZXAgdmFsdWUgaXMgMiB0byBza2lwIG92ZXIgTGVmdCBhbmQgUmlnaHRcblx0aW5jbHVkZVdpZHRoID0gaW5jbHVkZVdpZHRoID8gMSA6IDA7XG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiAtIGluY2x1ZGVXaWR0aCApIHtcblx0XHR3aGljaCA9IGNzc0V4cGFuZFsgaSBdO1xuXHRcdGF0dHJzWyBcIm1hcmdpblwiICsgd2hpY2ggXSA9IGF0dHJzWyBcInBhZGRpbmdcIiArIHdoaWNoIF0gPSB0eXBlO1xuXHR9XG5cblx0aWYgKCBpbmNsdWRlV2lkdGggKSB7XG5cdFx0YXR0cnMub3BhY2l0eSA9IGF0dHJzLndpZHRoID0gdHlwZTtcblx0fVxuXG5cdHJldHVybiBhdHRycztcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHdlZW4oIHZhbHVlLCBwcm9wLCBhbmltYXRpb24gKSB7XG5cdHZhciB0d2Vlbixcblx0XHRjb2xsZWN0aW9uID0gKCBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXSApLmNvbmNhdCggQW5pbWF0aW9uLnR3ZWVuZXJzWyBcIipcIiBdICksXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggKCB0d2VlbiA9IGNvbGxlY3Rpb25bIGluZGV4IF0uY2FsbCggYW5pbWF0aW9uLCBwcm9wLCB2YWx1ZSApICkgKSB7XG5cblx0XHRcdC8vIFdlJ3JlIGRvbmUgd2l0aCB0aGlzIHByb3BlcnR5XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQcmVmaWx0ZXIoIGVsZW0sIHByb3BzLCBvcHRzICkge1xuXHR2YXIgcHJvcCwgdmFsdWUsIHRvZ2dsZSwgaG9va3MsIG9sZGZpcmUsIHByb3BUd2VlbiwgcmVzdG9yZURpc3BsYXksIGRpc3BsYXksXG5cdFx0aXNCb3ggPSBcIndpZHRoXCIgaW4gcHJvcHMgfHwgXCJoZWlnaHRcIiBpbiBwcm9wcyxcblx0XHRhbmltID0gdGhpcyxcblx0XHRvcmlnID0ge30sXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlLFxuXHRcdGhpZGRlbiA9IGVsZW0ubm9kZVR5cGUgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICksXG5cdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZnhzaG93XCIgKTtcblxuXHQvLyBRdWV1ZS1za2lwcGluZyBhbmltYXRpb25zIGhpamFjayB0aGUgZnggaG9va3Ncblx0aWYgKCAhb3B0cy5xdWV1ZSApIHtcblx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgXCJmeFwiICk7XG5cdFx0aWYgKCBob29rcy51bnF1ZXVlZCA9PSBudWxsICkge1xuXHRcdFx0aG9va3MudW5xdWV1ZWQgPSAwO1xuXHRcdFx0b2xkZmlyZSA9IGhvb2tzLmVtcHR5LmZpcmU7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggIWhvb2tzLnVucXVldWVkICkge1xuXHRcdFx0XHRcdG9sZGZpcmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9XG5cdFx0aG9va3MudW5xdWV1ZWQrKztcblxuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRW5zdXJlIHRoZSBjb21wbGV0ZSBoYW5kbGVyIGlzIGNhbGxlZCBiZWZvcmUgdGhpcyBjb21wbGV0ZXNcblx0XHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcblx0XHRcdFx0aWYgKCAhalF1ZXJ5LnF1ZXVlKCBlbGVtLCBcImZ4XCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gRGV0ZWN0IHNob3cvaGlkZSBhbmltYXRpb25zXG5cdGZvciAoIHByb3AgaW4gcHJvcHMgKSB7XG5cdFx0dmFsdWUgPSBwcm9wc1sgcHJvcCBdO1xuXHRcdGlmICggcmZ4dHlwZXMudGVzdCggdmFsdWUgKSApIHtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgcHJvcCBdO1xuXHRcdFx0dG9nZ2xlID0gdG9nZ2xlIHx8IHZhbHVlID09PSBcInRvZ2dsZVwiO1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gKCBoaWRkZW4gPyBcImhpZGVcIiA6IFwic2hvd1wiICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJldGVuZCB0byBiZSBoaWRkZW4gaWYgdGhpcyBpcyBhIFwic2hvd1wiIGFuZFxuXHRcdFx0XHQvLyB0aGVyZSBpcyBzdGlsbCBkYXRhIGZyb20gYSBzdG9wcGVkIHNob3cvaGlkZVxuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcInNob3dcIiAmJiBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gdHJ1ZTtcblxuXHRcdFx0XHQvLyBJZ25vcmUgYWxsIG90aGVyIG5vLW9wIHNob3cvaGlkZSBkYXRhXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG9yaWdbIHByb3AgXSA9IGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gfHwgalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQmFpbCBvdXQgaWYgdGhpcyBpcyBhIG5vLW9wIGxpa2UgLmhpZGUoKS5oaWRlKClcblx0cHJvcFR3ZWVuID0gIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wcyApO1xuXHRpZiAoICFwcm9wVHdlZW4gJiYgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9yaWcgKSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBSZXN0cmljdCBcIm92ZXJmbG93XCIgYW5kIFwiZGlzcGxheVwiIHN0eWxlcyBkdXJpbmcgYm94IGFuaW1hdGlvbnNcblx0aWYgKCBpc0JveCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxuXHRcdC8vIFJlY29yZCBhbGwgMyBvdmVyZmxvdyBhdHRyaWJ1dGVzIGJlY2F1c2UgSUUgZG9lcyBub3QgaW5mZXIgdGhlIHNob3J0aGFuZFxuXHRcdC8vIGZyb20gaWRlbnRpY2FsbHktdmFsdWVkIG92ZXJmbG93WCBhbmQgb3ZlcmZsb3dZIGFuZCBFZGdlIGp1c3QgbWlycm9yc1xuXHRcdC8vIHRoZSBvdmVyZmxvd1ggdmFsdWUgdGhlcmUuXG5cdFx0b3B0cy5vdmVyZmxvdyA9IFsgc3R5bGUub3ZlcmZsb3csIHN0eWxlLm92ZXJmbG93WCwgc3R5bGUub3ZlcmZsb3dZIF07XG5cblx0XHQvLyBJZGVudGlmeSBhIGRpc3BsYXkgdHlwZSwgcHJlZmVycmluZyBvbGQgc2hvdy9oaWRlIGRhdGEgb3ZlciB0aGUgQ1NTIGNhc2NhZGVcblx0XHRyZXN0b3JlRGlzcGxheSA9IGRhdGFTaG93ICYmIGRhdGFTaG93LmRpc3BsYXk7XG5cdFx0aWYgKCByZXN0b3JlRGlzcGxheSA9PSBudWxsICkge1xuXHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0fVxuXHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ICkge1xuXHRcdFx0XHRkaXNwbGF5ID0gcmVzdG9yZURpc3BsYXk7XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEdldCBub25lbXB0eSB2YWx1ZShzKSBieSB0ZW1wb3JhcmlseSBmb3JjaW5nIHZpc2liaWxpdHlcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XG5cdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5IHx8IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQW5pbWF0ZSBpbmxpbmUgZWxlbWVudHMgYXMgaW5saW5lLWJsb2NrXG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcImlubGluZVwiIHx8IGRpc3BsYXkgPT09IFwiaW5saW5lLWJsb2NrXCIgJiYgcmVzdG9yZURpc3BsYXkgIT0gbnVsbCApIHtcblx0XHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJmbG9hdFwiICkgPT09IFwibm9uZVwiICkge1xuXG5cdFx0XHRcdC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIGRpc3BsYXkgdmFsdWUgYXQgdGhlIGVuZCBvZiBwdXJlIHNob3cvaGlkZSBhbmltYXRpb25zXG5cdFx0XHRcdGlmICggIXByb3BUd2VlbiApIHtcblx0XHRcdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRkaXNwbGF5ID0gc3R5bGUuZGlzcGxheTtcblx0XHRcdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZGlzcGxheSA9PT0gXCJub25lXCIgPyBcIlwiIDogZGlzcGxheTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IFwiaW5saW5lLWJsb2NrXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBvcHRzLm92ZXJmbG93ICkge1xuXHRcdHN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cdFx0XHRzdHlsZS5vdmVyZmxvdyA9IG9wdHMub3ZlcmZsb3dbIDAgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WSA9IG9wdHMub3ZlcmZsb3dbIDIgXTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBJbXBsZW1lbnQgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0cHJvcFR3ZWVuID0gZmFsc2U7XG5cdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblxuXHRcdC8vIEdlbmVyYWwgc2hvdy9oaWRlIHNldHVwIGZvciB0aGlzIGVsZW1lbnQgYW5pbWF0aW9uXG5cdFx0aWYgKCAhcHJvcFR3ZWVuICkge1xuXHRcdFx0aWYgKCBkYXRhU2hvdyApIHtcblx0XHRcdFx0aWYgKCBcImhpZGRlblwiIGluIGRhdGFTaG93ICkge1xuXHRcdFx0XHRcdGhpZGRlbiA9IGRhdGFTaG93LmhpZGRlbjtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIFwiZnhzaG93XCIsIHsgZGlzcGxheTogcmVzdG9yZURpc3BsYXkgfSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdG9yZSBoaWRkZW4vdmlzaWJsZSBmb3IgdG9nZ2xlIHNvIGAuc3RvcCgpLnRvZ2dsZSgpYCBcInJldmVyc2VzXCJcblx0XHRcdGlmICggdG9nZ2xlICkge1xuXHRcdFx0XHRkYXRhU2hvdy5oaWRkZW4gPSAhaGlkZGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTaG93IGVsZW1lbnRzIGJlZm9yZSBhbmltYXRpbmcgdGhlbVxuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSwgdHJ1ZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1sb29wLWZ1bmMgKi9cblxuXHRcdFx0YW5pbS5kb25lKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1sb29wLWZ1bmMgKi9cblxuXHRcdFx0XHQvLyBUaGUgZmluYWwgc3RlcCBvZiBhIFwiaGlkZVwiIGFuaW1hdGlvbiBpcyBhY3R1YWxseSBoaWRpbmcgdGhlIGVsZW1lbnRcblx0XHRcdFx0aWYgKCAhaGlkZGVuICkge1xuXHRcdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgXCJmeHNob3dcIiApO1xuXHRcdFx0XHRmb3IgKCBwcm9wIGluIG9yaWcgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBvcmlnWyBwcm9wIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdC8vIFBlci1wcm9wZXJ0eSBzZXR1cFxuXHRcdHByb3BUd2VlbiA9IGNyZWF0ZVR3ZWVuKCBoaWRkZW4gPyBkYXRhU2hvd1sgcHJvcCBdIDogMCwgcHJvcCwgYW5pbSApO1xuXHRcdGlmICggISggcHJvcCBpbiBkYXRhU2hvdyApICkge1xuXHRcdFx0ZGF0YVNob3dbIHByb3AgXSA9IHByb3BUd2Vlbi5zdGFydDtcblx0XHRcdGlmICggaGlkZGVuICkge1xuXHRcdFx0XHRwcm9wVHdlZW4uZW5kID0gcHJvcFR3ZWVuLnN0YXJ0O1xuXHRcdFx0XHRwcm9wVHdlZW4uc3RhcnQgPSAwO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBwcm9wRmlsdGVyKCBwcm9wcywgc3BlY2lhbEVhc2luZyApIHtcblx0dmFyIGluZGV4LCBuYW1lLCBlYXNpbmcsIHZhbHVlLCBob29rcztcblxuXHQvLyBjYW1lbENhc2UsIHNwZWNpYWxFYXNpbmcgYW5kIGV4cGFuZCBjc3NIb29rIHBhc3Ncblx0Zm9yICggaW5kZXggaW4gcHJvcHMgKSB7XG5cdFx0bmFtZSA9IGNhbWVsQ2FzZSggaW5kZXggKTtcblx0XHRlYXNpbmcgPSBzcGVjaWFsRWFzaW5nWyBuYW1lIF07XG5cdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRlYXNpbmcgPSB2YWx1ZVsgMSBdO1xuXHRcdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyAwIF07XG5cdFx0fVxuXG5cdFx0aWYgKCBpbmRleCAhPT0gbmFtZSApIHtcblx0XHRcdHByb3BzWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgaW5kZXggXTtcblx0XHR9XG5cblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdO1xuXHRcdGlmICggaG9va3MgJiYgXCJleHBhbmRcIiBpbiBob29rcyApIHtcblx0XHRcdHZhbHVlID0gaG9va3MuZXhwYW5kKCB2YWx1ZSApO1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBuYW1lIF07XG5cblx0XHRcdC8vIE5vdCBxdWl0ZSAkLmV4dGVuZCwgdGhpcyB3b24ndCBvdmVyd3JpdGUgZXhpc3Rpbmcga2V5cy5cblx0XHRcdC8vIFJldXNpbmcgJ2luZGV4JyBiZWNhdXNlIHdlIGhhdmUgdGhlIGNvcnJlY3QgXCJuYW1lXCJcblx0XHRcdGZvciAoIGluZGV4IGluIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICEoIGluZGV4IGluIHByb3BzICkgKSB7XG5cdFx0XHRcdFx0cHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgaW5kZXggXTtcblx0XHRcdFx0XHRzcGVjaWFsRWFzaW5nWyBpbmRleCBdID0gZWFzaW5nO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHNwZWNpYWxFYXNpbmdbIG5hbWUgXSA9IGVhc2luZztcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gQW5pbWF0aW9uKCBlbGVtLCBwcm9wZXJ0aWVzLCBvcHRpb25zICkge1xuXHR2YXIgcmVzdWx0LFxuXHRcdHN0b3BwZWQsXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzLmxlbmd0aCxcblx0XHRkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIERvbid0IG1hdGNoIGVsZW0gaW4gdGhlIDphbmltYXRlZCBzZWxlY3RvclxuXHRcdFx0ZGVsZXRlIHRpY2suZWxlbTtcblx0XHR9ICksXG5cdFx0dGljayA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBzdG9wcGVkICkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHR2YXIgY3VycmVudFRpbWUgPSBmeE5vdyB8fCBjcmVhdGVGeE5vdygpLFxuXHRcdFx0XHRyZW1haW5pbmcgPSBNYXRoLm1heCggMCwgYW5pbWF0aW9uLnN0YXJ0VGltZSArIGFuaW1hdGlvbi5kdXJhdGlvbiAtIGN1cnJlbnRUaW1lICksXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCAyLjMgb25seVxuXHRcdFx0XHQvLyBBcmNoYWljIGNyYXNoIGJ1ZyB3b24ndCBhbGxvdyB1cyB0byB1c2UgYDEgLSAoIDAuNSB8fCAwIClgICgjMTI0OTcpXG5cdFx0XHRcdHRlbXAgPSByZW1haW5pbmcgLyBhbmltYXRpb24uZHVyYXRpb24gfHwgMCxcblx0XHRcdFx0cGVyY2VudCA9IDEgLSB0ZW1wLFxuXHRcdFx0XHRpbmRleCA9IDAsXG5cdFx0XHRcdGxlbmd0aCA9IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoO1xuXG5cdFx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggcGVyY2VudCApO1xuXHRcdFx0fVxuXG5cdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgcGVyY2VudCwgcmVtYWluaW5nIF0gKTtcblxuXHRcdFx0Ly8gSWYgdGhlcmUncyBtb3JlIHRvIGRvLCB5aWVsZFxuXHRcdFx0aWYgKCBwZXJjZW50IDwgMSAmJiBsZW5ndGggKSB7XG5cdFx0XHRcdHJldHVybiByZW1haW5pbmc7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHRoaXMgd2FzIGFuIGVtcHR5IGFuaW1hdGlvbiwgc3ludGhlc2l6ZSBhIGZpbmFsIHByb2dyZXNzIG5vdGlmaWNhdGlvblxuXHRcdFx0aWYgKCAhbGVuZ3RoICkge1xuXHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgMSwgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlc29sdmUgdGhlIGFuaW1hdGlvbiBhbmQgcmVwb3J0IGl0cyBjb25jbHVzaW9uXG5cdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24gXSApO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cdFx0YW5pbWF0aW9uID0gZGVmZXJyZWQucHJvbWlzZSgge1xuXHRcdFx0ZWxlbTogZWxlbSxcblx0XHRcdHByb3BzOiBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcGVydGllcyApLFxuXHRcdFx0b3B0czogalF1ZXJ5LmV4dGVuZCggdHJ1ZSwge1xuXHRcdFx0XHRzcGVjaWFsRWFzaW5nOiB7fSxcblx0XHRcdFx0ZWFzaW5nOiBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0XG5cdFx0XHR9LCBvcHRpb25zICksXG5cdFx0XHRvcmlnaW5hbFByb3BlcnRpZXM6IHByb3BlcnRpZXMsXG5cdFx0XHRvcmlnaW5hbE9wdGlvbnM6IG9wdGlvbnMsXG5cdFx0XHRzdGFydFRpbWU6IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXG5cdFx0XHRkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbixcblx0XHRcdHR3ZWVuczogW10sXG5cdFx0XHRjcmVhdGVUd2VlbjogZnVuY3Rpb24oIHByb3AsIGVuZCApIHtcblx0XHRcdFx0dmFyIHR3ZWVuID0galF1ZXJ5LlR3ZWVuKCBlbGVtLCBhbmltYXRpb24ub3B0cywgcHJvcCwgZW5kLFxuXHRcdFx0XHRcdFx0YW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1hdGlvbi5vcHRzLmVhc2luZyApO1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zLnB1c2goIHR3ZWVuICk7XG5cdFx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHRcdH0sXG5cdFx0XHRzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHtcblx0XHRcdFx0dmFyIGluZGV4ID0gMCxcblxuXHRcdFx0XHRcdC8vIElmIHdlIGFyZSBnb2luZyB0byB0aGUgZW5kLCB3ZSB3YW50IHRvIHJ1biBhbGwgdGhlIHR3ZWVuc1xuXHRcdFx0XHRcdC8vIG90aGVyd2lzZSB3ZSBza2lwIHRoaXMgcGFydFxuXHRcdFx0XHRcdGxlbmd0aCA9IGdvdG9FbmQgPyBhbmltYXRpb24udHdlZW5zLmxlbmd0aCA6IDA7XG5cdFx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0XHRzdG9wcGVkID0gdHJ1ZTtcblx0XHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3Rcblx0XHRcdFx0aWYgKCBnb3RvRW5kICkge1xuXHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblx0XHR9ICksXG5cdFx0cHJvcHMgPSBhbmltYXRpb24ucHJvcHM7XG5cblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdHJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XG5cdFx0aWYgKCByZXN1bHQgKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHJlc3VsdC5zdG9wICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggYW5pbWF0aW9uLmVsZW0sIGFuaW1hdGlvbi5vcHRzLnF1ZXVlICkuc3RvcCA9XG5cdFx0XHRcdFx0cmVzdWx0LnN0b3AuYmluZCggcmVzdWx0ICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdH1cblx0fVxuXG5cdGpRdWVyeS5tYXAoIHByb3BzLCBjcmVhdGVUd2VlbiwgYW5pbWF0aW9uICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkge1xuXHRcdGFuaW1hdGlvbi5vcHRzLnN0YXJ0LmNhbGwoIGVsZW0sIGFuaW1hdGlvbiApO1xuXHR9XG5cblx0Ly8gQXR0YWNoIGNhbGxiYWNrcyBmcm9tIG9wdGlvbnNcblx0YW5pbWF0aW9uXG5cdFx0LnByb2dyZXNzKCBhbmltYXRpb24ub3B0cy5wcm9ncmVzcyApXG5cdFx0LmRvbmUoIGFuaW1hdGlvbi5vcHRzLmRvbmUsIGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlIClcblx0XHQuZmFpbCggYW5pbWF0aW9uLm9wdHMuZmFpbCApXG5cdFx0LmFsd2F5cyggYW5pbWF0aW9uLm9wdHMuYWx3YXlzICk7XG5cblx0alF1ZXJ5LmZ4LnRpbWVyKFxuXHRcdGpRdWVyeS5leHRlbmQoIHRpY2ssIHtcblx0XHRcdGVsZW06IGVsZW0sXG5cdFx0XHRhbmltOiBhbmltYXRpb24sXG5cdFx0XHRxdWV1ZTogYW5pbWF0aW9uLm9wdHMucXVldWVcblx0XHR9IClcblx0KTtcblxuXHRyZXR1cm4gYW5pbWF0aW9uO1xufVxuXG5qUXVlcnkuQW5pbWF0aW9uID0galF1ZXJ5LmV4dGVuZCggQW5pbWF0aW9uLCB7XG5cblx0dHdlZW5lcnM6IHtcblx0XHRcIipcIjogWyBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApO1xuXHRcdFx0YWRqdXN0Q1NTKCB0d2Vlbi5lbGVtLCBwcm9wLCByY3NzTnVtLmV4ZWMoIHZhbHVlICksIHR3ZWVuICk7XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fSBdXG5cdH0sXG5cblx0dHdlZW5lcjogZnVuY3Rpb24oIHByb3BzLCBjYWxsYmFjayApIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIHByb3BzICkgKSB7XG5cdFx0XHRjYWxsYmFjayA9IHByb3BzO1xuXHRcdFx0cHJvcHMgPSBbIFwiKlwiIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHByb3BzID0gcHJvcHMubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblx0XHR9XG5cblx0XHR2YXIgcHJvcCxcblx0XHRcdGluZGV4ID0gMCxcblx0XHRcdGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRwcm9wID0gcHJvcHNbIGluZGV4IF07XG5cdFx0XHRBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSA9IEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdO1xuXHRcdFx0QW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0udW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH0sXG5cblx0cHJlZmlsdGVyczogWyBkZWZhdWx0UHJlZmlsdGVyIF0sXG5cblx0cHJlZmlsdGVyOiBmdW5jdGlvbiggY2FsbGJhY2ssIHByZXBlbmQgKSB7XG5cdFx0aWYgKCBwcmVwZW5kICkge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMudW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMucHVzaCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LnNwZWVkID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGZuICkge1xuXHR2YXIgb3B0ID0gc3BlZWQgJiYgdHlwZW9mIHNwZWVkID09PSBcIm9iamVjdFwiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7XG5cdFx0Y29tcGxldGU6IGZuIHx8ICFmbiAmJiBlYXNpbmcgfHxcblx0XHRcdGlzRnVuY3Rpb24oIHNwZWVkICkgJiYgc3BlZWQsXG5cdFx0ZHVyYXRpb246IHNwZWVkLFxuXHRcdGVhc2luZzogZm4gJiYgZWFzaW5nIHx8IGVhc2luZyAmJiAhaXNGdW5jdGlvbiggZWFzaW5nICkgJiYgZWFzaW5nXG5cdH07XG5cblx0Ly8gR28gdG8gdGhlIGVuZCBzdGF0ZSBpZiBmeCBhcmUgb2ZmXG5cdGlmICggalF1ZXJ5LmZ4Lm9mZiApIHtcblx0XHRvcHQuZHVyYXRpb24gPSAwO1xuXG5cdH0gZWxzZSB7XG5cdFx0aWYgKCB0eXBlb2Ygb3B0LmR1cmF0aW9uICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0aWYgKCBvcHQuZHVyYXRpb24gaW4galF1ZXJ5LmZ4LnNwZWVkcyApIHtcblx0XHRcdFx0b3B0LmR1cmF0aW9uID0galF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5zcGVlZHMuX2RlZmF1bHQ7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIG9wdC5xdWV1ZSAtIHRydWUvdW5kZWZpbmVkL251bGwgLT4gXCJmeFwiXG5cdGlmICggb3B0LnF1ZXVlID09IG51bGwgfHwgb3B0LnF1ZXVlID09PSB0cnVlICkge1xuXHRcdG9wdC5xdWV1ZSA9IFwiZnhcIjtcblx0fVxuXG5cdC8vIFF1ZXVlaW5nXG5cdG9wdC5vbGQgPSBvcHQuY29tcGxldGU7XG5cblx0b3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHQub2xkICkgKSB7XG5cdFx0XHRvcHQub2xkLmNhbGwoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdC5xdWV1ZSApIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCBvcHQucXVldWUgKTtcblx0XHR9XG5cdH07XG5cblx0cmV0dXJuIG9wdDtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmFkZVRvOiBmdW5jdGlvbiggc3BlZWQsIHRvLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXG5cdFx0Ly8gU2hvdyBhbnkgaGlkZGVuIGVsZW1lbnRzIGFmdGVyIHNldHRpbmcgb3BhY2l0eSB0byAwXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBpc0hpZGRlbldpdGhpblRyZWUgKS5jc3MoIFwib3BhY2l0eVwiLCAwICkuc2hvdygpXG5cblx0XHRcdC8vIEFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZFxuXHRcdFx0LmVuZCgpLmFuaW1hdGUoIHsgb3BhY2l0eTogdG8gfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fSxcblx0YW5pbWF0ZTogZnVuY3Rpb24oIHByb3AsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHZhciBlbXB0eSA9IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wICksXG5cdFx0XHRvcHRhbGwgPSBqUXVlcnkuc3BlZWQoIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICksXG5cdFx0XHRkb0FuaW1hdGlvbiA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIE9wZXJhdGUgb24gYSBjb3B5IG9mIHByb3Agc28gcGVyLXByb3BlcnR5IGVhc2luZyB3b24ndCBiZSBsb3N0XG5cdFx0XHRcdHZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTtcblxuXHRcdFx0XHQvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHlcblx0XHRcdFx0aWYgKCBlbXB0eSB8fCBkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZmluaXNoXCIgKSApIHtcblx0XHRcdFx0XHRhbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHRcdGRvQW5pbWF0aW9uLmZpbmlzaCA9IGRvQW5pbWF0aW9uO1xuXG5cdFx0cmV0dXJuIGVtcHR5IHx8IG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0dGhpcy5lYWNoKCBkb0FuaW1hdGlvbiApIDpcblx0XHRcdHRoaXMucXVldWUoIG9wdGFsbC5xdWV1ZSwgZG9BbmltYXRpb24gKTtcblx0fSxcblx0c3RvcDogZnVuY3Rpb24oIHR5cGUsIGNsZWFyUXVldWUsIGdvdG9FbmQgKSB7XG5cdFx0dmFyIHN0b3BRdWV1ZSA9IGZ1bmN0aW9uKCBob29rcyApIHtcblx0XHRcdHZhciBzdG9wID0gaG9va3Muc3RvcDtcblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0c3RvcCggZ290b0VuZCApO1xuXHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Z290b0VuZCA9IGNsZWFyUXVldWU7XG5cdFx0XHRjbGVhclF1ZXVlID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggY2xlYXJRdWV1ZSApIHtcblx0XHRcdHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGRlcXVldWUgPSB0cnVlLFxuXHRcdFx0XHRpbmRleCA9IHR5cGUgIT0gbnVsbCAmJiB0eXBlICsgXCJxdWV1ZUhvb2tzXCIsXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKTtcblxuXHRcdFx0aWYgKCBpbmRleCApIHtcblx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCApIHtcblx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggaW5kZXggaW4gZGF0YSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICYmIHJydW4udGVzdCggaW5kZXggKSApIHtcblx0XHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmXG5cdFx0XHRcdFx0KCB0eXBlID09IG51bGwgfHwgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkgKSB7XG5cblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCBnb3RvRW5kICk7XG5cdFx0XHRcdFx0ZGVxdWV1ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhcnQgdGhlIG5leHQgaW4gdGhlIHF1ZXVlIGlmIHRoZSBsYXN0IHN0ZXAgd2Fzbid0IGZvcmNlZC5cblx0XHRcdC8vIFRpbWVycyBjdXJyZW50bHkgd2lsbCBjYWxsIHRoZWlyIGNvbXBsZXRlIGNhbGxiYWNrcywgd2hpY2hcblx0XHRcdC8vIHdpbGwgZGVxdWV1ZSBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZC5cblx0XHRcdGlmICggZGVxdWV1ZSB8fCAhZ290b0VuZCApIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cdGZpbmlzaDogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0aWYgKCB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaW5kZXgsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKSxcblx0XHRcdFx0cXVldWUgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZVwiIF0sXG5cdFx0XHRcdGhvb2tzID0gZGF0YVsgdHlwZSArIFwicXVldWVIb29rc1wiIF0sXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGxlbmd0aCA9IHF1ZXVlID8gcXVldWUubGVuZ3RoIDogMDtcblxuXHRcdFx0Ly8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YVxuXHRcdFx0ZGF0YS5maW5pc2ggPSB0cnVlO1xuXG5cdFx0XHQvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3Rcblx0XHRcdGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgW10gKTtcblxuXHRcdFx0aWYgKCBob29rcyAmJiBob29rcy5zdG9wICkge1xuXHRcdFx0XHRob29rcy5zdG9wLmNhbGwoIHRoaXMsIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFjdGl2ZSBhbmltYXRpb25zLCBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkge1xuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhbmltYXRpb25zIGluIHRoZSBvbGQgcXVldWUgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRpZiAoIHF1ZXVlWyBpbmRleCBdICYmIHF1ZXVlWyBpbmRleCBdLmZpbmlzaCApIHtcblx0XHRcdFx0XHRxdWV1ZVsgaW5kZXggXS5maW5pc2guY2FsbCggdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFR1cm4gb2ZmIGZpbmlzaGluZyBmbGFnXG5cdFx0XHRkZWxldGUgZGF0YS5maW5pc2g7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwidG9nZ2xlXCIsIFwic2hvd1wiLCBcImhpZGVcIiBdLCBmdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cdHZhciBjc3NGbiA9IGpRdWVyeS5mblsgbmFtZSBdO1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gc3BlZWQgPT0gbnVsbCB8fCB0eXBlb2Ygc3BlZWQgPT09IFwiYm9vbGVhblwiID9cblx0XHRcdGNzc0ZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSA6XG5cdFx0XHR0aGlzLmFuaW1hdGUoIGdlbkZ4KCBuYW1lLCB0cnVlICksIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbi8vIEdlbmVyYXRlIHNob3J0Y3V0cyBmb3IgY3VzdG9tIGFuaW1hdGlvbnNcbmpRdWVyeS5lYWNoKCB7XG5cdHNsaWRlRG93bjogZ2VuRngoIFwic2hvd1wiICksXG5cdHNsaWRlVXA6IGdlbkZ4KCBcImhpZGVcIiApLFxuXHRzbGlkZVRvZ2dsZTogZ2VuRngoIFwidG9nZ2xlXCIgKSxcblx0ZmFkZUluOiB7IG9wYWNpdHk6IFwic2hvd1wiIH0sXG5cdGZhZGVPdXQ6IHsgb3BhY2l0eTogXCJoaWRlXCIgfSxcblx0ZmFkZVRvZ2dsZTogeyBvcGFjaXR5OiBcInRvZ2dsZVwiIH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBwcm9wcyApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYW5pbWF0ZSggcHJvcHMsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS50aW1lcnMgPSBbXTtcbmpRdWVyeS5meC50aWNrID0gZnVuY3Rpb24oKSB7XG5cdHZhciB0aW1lcixcblx0XHRpID0gMCxcblx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzO1xuXG5cdGZ4Tm93ID0gRGF0ZS5ub3coKTtcblxuXHRmb3IgKCA7IGkgPCB0aW1lcnMubGVuZ3RoOyBpKysgKSB7XG5cdFx0dGltZXIgPSB0aW1lcnNbIGkgXTtcblxuXHRcdC8vIFJ1biB0aGUgdGltZXIgYW5kIHNhZmVseSByZW1vdmUgaXQgd2hlbiBkb25lIChhbGxvd2luZyBmb3IgZXh0ZXJuYWwgcmVtb3ZhbClcblx0XHRpZiAoICF0aW1lcigpICYmIHRpbWVyc1sgaSBdID09PSB0aW1lciApIHtcblx0XHRcdHRpbWVycy5zcGxpY2UoIGktLSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdGlmICggIXRpbWVycy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5LmZ4LnN0b3AoKTtcblx0fVxuXHRmeE5vdyA9IHVuZGVmaW5lZDtcbn07XG5cbmpRdWVyeS5meC50aW1lciA9IGZ1bmN0aW9uKCB0aW1lciApIHtcblx0alF1ZXJ5LnRpbWVycy5wdXNoKCB0aW1lciApO1xuXHRqUXVlcnkuZnguc3RhcnQoKTtcbn07XG5cbmpRdWVyeS5meC5pbnRlcnZhbCA9IDEzO1xualF1ZXJ5LmZ4LnN0YXJ0ID0gZnVuY3Rpb24oKSB7XG5cdGlmICggaW5Qcm9ncmVzcyApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRpblByb2dyZXNzID0gdHJ1ZTtcblx0c2NoZWR1bGUoKTtcbn07XG5cbmpRdWVyeS5meC5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdGluUHJvZ3Jlc3MgPSBudWxsO1xufTtcblxualF1ZXJ5LmZ4LnNwZWVkcyA9IHtcblx0c2xvdzogNjAwLFxuXHRmYXN0OiAyMDAsXG5cblx0Ly8gRGVmYXVsdCBzcGVlZFxuXHRfZGVmYXVsdDogNDAwXG59O1xuXG5cbi8vIEJhc2VkIG9mZiBvZiB0aGUgcGx1Z2luIGJ5IENsaW50IEhlbGZlcnMsIHdpdGggcGVybWlzc2lvbi5cbi8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDEwMDMyNDAxNDc0Ny9odHRwOi8vYmxpbmRzaWduYWxzLmNvbS9pbmRleC5waHAvMjAwOS8wNy9qcXVlcnktZGVsYXkvXG5qUXVlcnkuZm4uZGVsYXkgPSBmdW5jdGlvbiggdGltZSwgdHlwZSApIHtcblx0dGltZSA9IGpRdWVyeS5meCA/IGpRdWVyeS5meC5zcGVlZHNbIHRpbWUgXSB8fCB0aW1lIDogdGltZTtcblx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdHJldHVybiB0aGlzLnF1ZXVlKCB0eXBlLCBmdW5jdGlvbiggbmV4dCwgaG9va3MgKSB7XG5cdFx0dmFyIHRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dCggbmV4dCwgdGltZSApO1xuXHRcdGhvb2tzLnN0b3AgPSBmdW5jdGlvbigpIHtcblx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQoIHRpbWVvdXQgKTtcblx0XHR9O1xuXHR9ICk7XG59O1xuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApLFxuXHRcdHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwic2VsZWN0XCIgKSxcblx0XHRvcHQgPSBzZWxlY3QuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwib3B0aW9uXCIgKSApO1xuXG5cdGlucHV0LnR5cGUgPSBcImNoZWNrYm94XCI7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMyBvbmx5XG5cdC8vIERlZmF1bHQgdmFsdWUgZm9yIGEgY2hlY2tib3ggc2hvdWxkIGJlIFwib25cIlxuXHRzdXBwb3J0LmNoZWNrT24gPSBpbnB1dC52YWx1ZSAhPT0gXCJcIjtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gTXVzdCBhY2Nlc3Mgc2VsZWN0ZWRJbmRleCB0byBtYWtlIGRlZmF1bHQgb3B0aW9ucyBzZWxlY3Rcblx0c3VwcG9ydC5vcHRTZWxlY3RlZCA9IG9wdC5zZWxlY3RlZDtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gQW4gaW5wdXQgbG9zZXMgaXRzIHZhbHVlIGFmdGVyIGJlY29taW5nIGEgcmFkaW9cblx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0aW5wdXQudmFsdWUgPSBcInRcIjtcblx0aW5wdXQudHlwZSA9IFwicmFkaW9cIjtcblx0c3VwcG9ydC5yYWRpb1ZhbHVlID0gaW5wdXQudmFsdWUgPT09IFwidFwiO1xufSApKCk7XG5cblxudmFyIGJvb2xIb29rLFxuXHRhdHRySGFuZGxlID0galF1ZXJ5LmV4cHIuYXR0ckhhbmRsZTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRhdHRyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgalF1ZXJ5LmF0dHIsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9LFxuXG5cdHJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBuYW1lICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIHRoaXMsIG5hbWUgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHRhdHRyOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0dmFyIHJldCwgaG9va3MsXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0XHQvLyBEb24ndCBnZXQvc2V0IGF0dHJpYnV0ZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBGYWxsYmFjayB0byBwcm9wIHdoZW4gYXR0cmlidXRlcyBhcmUgbm90IHN1cHBvcnRlZFxuXHRcdGlmICggdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlID09PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5wcm9wKCBlbGVtLCBuYW1lLCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdC8vIEF0dHJpYnV0ZSBob29rcyBhcmUgZGV0ZXJtaW5lZCBieSB0aGUgbG93ZXJjYXNlIHZlcnNpb25cblx0XHQvLyBHcmFiIG5lY2Vzc2FyeSBob29rIGlmIG9uZSBpcyBkZWZpbmVkXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5hdHRySG9va3NbIG5hbWUudG9Mb3dlckNhc2UoKSBdIHx8XG5cdFx0XHRcdCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC50ZXN0KCBuYW1lICkgPyBib29sSG9vayA6IHVuZGVmaW5lZCApO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdmFsdWUgPT09IG51bGwgKSB7XG5cdFx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBob29rcyAmJiBcInNldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIHZhbHVlICsgXCJcIiApO1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdC8vIE5vbi1leGlzdGVudCBhdHRyaWJ1dGVzIHJldHVybiBudWxsLCB3ZSBub3JtYWxpemUgdG8gdW5kZWZpbmVkXG5cdFx0cmV0dXJuIHJldCA9PSBudWxsID8gdW5kZWZpbmVkIDogcmV0O1xuXHR9LFxuXG5cdGF0dHJIb29rczoge1xuXHRcdHR5cGU6IHtcblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICFzdXBwb3J0LnJhZGlvVmFsdWUgJiYgdmFsdWUgPT09IFwicmFkaW9cIiAmJlxuXHRcdFx0XHRcdG5vZGVOYW1lKCBlbGVtLCBcImlucHV0XCIgKSApIHtcblx0XHRcdFx0XHR2YXIgdmFsID0gZWxlbS52YWx1ZTtcblx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIHZhbHVlICk7XG5cdFx0XHRcdFx0aWYgKCB2YWwgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnZhbHVlID0gdmFsO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdHZhciBuYW1lLFxuXHRcdFx0aSA9IDAsXG5cblx0XHRcdC8vIEF0dHJpYnV0ZSBuYW1lcyBjYW4gY29udGFpbiBub24tSFRNTCB3aGl0ZXNwYWNlIGNoYXJhY3RlcnNcblx0XHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3N5bnRheC5odG1sI2F0dHJpYnV0ZXMtMlxuXHRcdFx0YXR0ck5hbWVzID0gdmFsdWUgJiYgdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblxuXHRcdGlmICggYXR0ck5hbWVzICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHR3aGlsZSAoICggbmFtZSA9IGF0dHJOYW1lc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIG5hbWUgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gSG9va3MgZm9yIGJvb2xlYW4gYXR0cmlidXRlc1xuYm9vbEhvb2sgPSB7XG5cdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkge1xuXHRcdGlmICggdmFsdWUgPT09IGZhbHNlICkge1xuXG5cdFx0XHQvLyBSZW1vdmUgYm9vbGVhbiBhdHRyaWJ1dGVzIHdoZW4gc2V0IHRvIGZhbHNlXG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgbmFtZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gbmFtZTtcblx0fVxufTtcblxualF1ZXJ5LmVhY2goIGpRdWVyeS5leHByLm1hdGNoLmJvb2wuc291cmNlLm1hdGNoKCAvXFx3Ky9nICksIGZ1bmN0aW9uKCBfaSwgbmFtZSApIHtcblx0dmFyIGdldHRlciA9IGF0dHJIYW5kbGVbIG5hbWUgXSB8fCBqUXVlcnkuZmluZC5hdHRyO1xuXG5cdGF0dHJIYW5kbGVbIG5hbWUgXSA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHR2YXIgcmV0LCBoYW5kbGUsXG5cdFx0XHRsb3dlcmNhc2VOYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cblx0XHRcdC8vIEF2b2lkIGFuIGluZmluaXRlIGxvb3AgYnkgdGVtcG9yYXJpbHkgcmVtb3ZpbmcgdGhpcyBmdW5jdGlvbiBmcm9tIHRoZSBnZXR0ZXJcblx0XHRcdGhhbmRsZSA9IGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXTtcblx0XHRcdGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXSA9IHJldDtcblx0XHRcdHJldCA9IGdldHRlciggZWxlbSwgbmFtZSwgaXNYTUwgKSAhPSBudWxsID9cblx0XHRcdFx0bG93ZXJjYXNlTmFtZSA6XG5cdFx0XHRcdG51bGw7XG5cdFx0XHRhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF0gPSBoYW5kbGU7XG5cdFx0fVxuXHRcdHJldHVybiByZXQ7XG5cdH07XG59ICk7XG5cblxuXG5cbnZhciByZm9jdXNhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxcblx0cmNsaWNrYWJsZSA9IC9eKD86YXxhcmVhKSQvaTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRwcm9wOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgalF1ZXJ5LnByb3AsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9LFxuXG5cdHJlbW92ZVByb3A6IGZ1bmN0aW9uKCBuYW1lICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0ZGVsZXRlIHRoaXNbIGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZSBdO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHByb3A6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgcHJvcGVydGllcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXG5cdFx0XHQvLyBGaXggbmFtZSBhbmQgYXR0YWNoIGhvb2tzXG5cdFx0XHRuYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xuXHRcdFx0aG9va3MgPSBqUXVlcnkucHJvcEhvb2tzWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCBob29rcyAmJiBcInNldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuICggZWxlbVsgbmFtZSBdID0gdmFsdWUgKTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiYgKCByZXQgPSBob29rcy5nZXQoIGVsZW0sIG5hbWUgKSApICE9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cblx0XHRyZXR1cm4gZWxlbVsgbmFtZSBdO1xuXHR9LFxuXG5cdHByb3BIb29rczoge1xuXHRcdHRhYkluZGV4OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHRcdFx0Ly8gZWxlbS50YWJJbmRleCBkb2Vzbid0IGFsd2F5cyByZXR1cm4gdGhlXG5cdFx0XHRcdC8vIGNvcnJlY3QgdmFsdWUgd2hlbiBpdCBoYXNuJ3QgYmVlbiBleHBsaWNpdGx5IHNldFxuXHRcdFx0XHQvLyBodHRwczovL3dlYi5hcmNoaXZlLm9yZy93ZWIvMjAxNDExMTYyMzMzNDcvaHR0cDovL2ZsdWlkcHJvamVjdC5vcmcvYmxvZy8yMDA4LzAxLzA5L2dldHRpbmctc2V0dGluZy1hbmQtcmVtb3ZpbmctdGFiaW5kZXgtdmFsdWVzLXdpdGgtamF2YXNjcmlwdC9cblx0XHRcdFx0Ly8gVXNlIHByb3BlciBhdHRyaWJ1dGUgcmV0cmlldmFsKCMxMjA3Milcblx0XHRcdFx0dmFyIHRhYmluZGV4ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ0YWJpbmRleFwiICk7XG5cblx0XHRcdFx0aWYgKCB0YWJpbmRleCApIHtcblx0XHRcdFx0XHRyZXR1cm4gcGFyc2VJbnQoIHRhYmluZGV4LCAxMCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHJmb2N1c2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApIHx8XG5cdFx0XHRcdFx0cmNsaWNrYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiZcblx0XHRcdFx0XHRlbGVtLmhyZWZcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdHByb3BGaXg6IHtcblx0XHRcImZvclwiOiBcImh0bWxGb3JcIixcblx0XHRcImNsYXNzXCI6IFwiY2xhc3NOYW1lXCJcblx0fVxufSApO1xuXG4vLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcbi8vIEFjY2Vzc2luZyB0aGUgc2VsZWN0ZWRJbmRleCBwcm9wZXJ0eVxuLy8gZm9yY2VzIHRoZSBicm93c2VyIHRvIHJlc3BlY3Qgc2V0dGluZyBzZWxlY3RlZFxuLy8gb24gdGhlIG9wdGlvblxuLy8gVGhlIGdldHRlciBlbnN1cmVzIGEgZGVmYXVsdCBvcHRpb24gaXMgc2VsZWN0ZWRcbi8vIHdoZW4gaW4gYW4gb3B0Z3JvdXBcbi8vIGVzbGludCBydWxlIFwibm8tdW51c2VkLWV4cHJlc3Npb25zXCIgaXMgZGlzYWJsZWQgZm9yIHRoaXMgY29kZVxuLy8gc2luY2UgaXQgY29uc2lkZXJzIHN1Y2ggYWNjZXNzaW9ucyBub29wXG5pZiAoICFzdXBwb3J0Lm9wdFNlbGVjdGVkICkge1xuXHRqUXVlcnkucHJvcEhvb2tzLnNlbGVjdGVkID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6IFwib2ZmXCIgKi9cblxuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICYmIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvKiBlc2xpbnQgbm8tdW51c2VkLWV4cHJlc3Npb25zOiBcIm9mZlwiICovXG5cblx0XHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRpZiAoIHBhcmVudCApIHtcblx0XHRcdFx0cGFyZW50LnNlbGVjdGVkSW5kZXg7XG5cblx0XHRcdFx0aWYgKCBwYXJlbnQucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG5qUXVlcnkuZWFjaCggW1xuXHRcInRhYkluZGV4XCIsXG5cdFwicmVhZE9ubHlcIixcblx0XCJtYXhMZW5ndGhcIixcblx0XCJjZWxsU3BhY2luZ1wiLFxuXHRcImNlbGxQYWRkaW5nXCIsXG5cdFwicm93U3BhblwiLFxuXHRcImNvbFNwYW5cIixcblx0XCJ1c2VNYXBcIixcblx0XCJmcmFtZUJvcmRlclwiLFxuXHRcImNvbnRlbnRFZGl0YWJsZVwiXG5dLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnByb3BGaXhbIHRoaXMudG9Mb3dlckNhc2UoKSBdID0gdGhpcztcbn0gKTtcblxuXG5cblxuXHQvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZSBhY2NvcmRpbmcgdG8gSFRNTCBzcGVjXG5cdC8vIGh0dHBzOi8vaW5mcmEuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2UtYXNjaWktd2hpdGVzcGFjZVxuXHRmdW5jdGlvbiBzdHJpcEFuZENvbGxhcHNlKCB2YWx1ZSApIHtcblx0XHR2YXIgdG9rZW5zID0gdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblx0XHRyZXR1cm4gdG9rZW5zLmpvaW4oIFwiIFwiICk7XG5cdH1cblxuXG5mdW5jdGlvbiBnZXRDbGFzcyggZWxlbSApIHtcblx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlICYmIGVsZW0uZ2V0QXR0cmlidXRlKCBcImNsYXNzXCIgKSB8fCBcIlwiO1xufVxuXG5mdW5jdGlvbiBjbGFzc2VzVG9BcnJheSggdmFsdWUgKSB7XG5cdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRyZXR1cm4gdmFsdWU7XG5cdH1cblx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cdH1cblx0cmV0dXJuIFtdO1xufVxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGFkZENsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaiApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuYWRkQ2xhc3MoIHZhbHVlLmNhbGwoIHRoaXMsIGosIGdldENsYXNzKCB0aGlzICkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdGNsYXNzZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggY2xhc3Nlcy5sZW5ndGggKSB7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoIFwiIFwiICsgc3RyaXBBbmRDb2xsYXBzZSggY3VyVmFsdWUgKSArIFwiIFwiICk7XG5cblx0XHRcdFx0aWYgKCBjdXIgKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcblx0XHRcdFx0XHRcdGlmICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApIDwgMCApIHtcblx0XHRcdFx0XHRcdFx0Y3VyICs9IGNsYXp6ICsgXCIgXCI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0gc3RyaXBBbmRDb2xsYXBzZSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRyZW1vdmVDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc2VzLCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGogKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnJlbW92ZUNsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuYXR0ciggXCJjbGFzc1wiLCBcIlwiICk7XG5cdFx0fVxuXG5cdFx0Y2xhc3NlcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCBjbGFzc2VzLmxlbmd0aCApIHtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0Y3VyVmFsdWUgPSBnZXRDbGFzcyggZWxlbSApO1xuXG5cdFx0XHRcdC8vIFRoaXMgZXhwcmVzc2lvbiBpcyBoZXJlIGZvciBiZXR0ZXIgY29tcHJlc3NpYmlsaXR5IChzZWUgYWRkQ2xhc3MpXG5cdFx0XHRcdGN1ciA9IGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSAqYWxsKiBpbnN0YW5jZXNcblx0XHRcdFx0XHRcdHdoaWxlICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciA9IGN1ci5yZXBsYWNlKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIsIFwiIFwiICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0gc3RyaXBBbmRDb2xsYXBzZSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR0b2dnbGVDbGFzczogZnVuY3Rpb24oIHZhbHVlLCBzdGF0ZVZhbCApIHtcblx0XHR2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZSxcblx0XHRcdGlzVmFsaWRWYWx1ZSA9IHR5cGUgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggdHlwZW9mIHN0YXRlVmFsID09PSBcImJvb2xlYW5cIiAmJiBpc1ZhbGlkVmFsdWUgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGVWYWwgPyB0aGlzLmFkZENsYXNzKCB2YWx1ZSApIDogdGhpcy5yZW1vdmVDbGFzcyggdmFsdWUgKTtcblx0XHR9XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkudG9nZ2xlQ2xhc3MoXG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggdGhpcywgaSwgZ2V0Q2xhc3MoIHRoaXMgKSwgc3RhdGVWYWwgKSxcblx0XHRcdFx0XHRzdGF0ZVZhbFxuXHRcdFx0XHQpO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGNsYXNzTmFtZSwgaSwgc2VsZiwgY2xhc3NOYW1lcztcblxuXHRcdFx0aWYgKCBpc1ZhbGlkVmFsdWUgKSB7XG5cblx0XHRcdFx0Ly8gVG9nZ2xlIGluZGl2aWR1YWwgY2xhc3MgbmFtZXNcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdHNlbGYgPSBqUXVlcnkoIHRoaXMgKTtcblx0XHRcdFx0Y2xhc3NOYW1lcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0XHRcdHdoaWxlICggKCBjbGFzc05hbWUgPSBjbGFzc05hbWVzWyBpKysgXSApICkge1xuXG5cdFx0XHRcdFx0Ly8gQ2hlY2sgZWFjaCBjbGFzc05hbWUgZ2l2ZW4sIHNwYWNlIHNlcGFyYXRlZCBsaXN0XG5cdFx0XHRcdFx0aWYgKCBzZWxmLmhhc0NsYXNzKCBjbGFzc05hbWUgKSApIHtcblx0XHRcdFx0XHRcdHNlbGYucmVtb3ZlQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRzZWxmLmFkZENsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gVG9nZ2xlIHdob2xlIGNsYXNzIG5hbWVcblx0XHRcdH0gZWxzZSBpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgfHwgdHlwZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRcdGNsYXNzTmFtZSA9IGdldENsYXNzKCB0aGlzICk7XG5cdFx0XHRcdGlmICggY2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0Ly8gU3RvcmUgY2xhc3NOYW1lIGlmIHNldFxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIsIGNsYXNzTmFtZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSWYgdGhlIGVsZW1lbnQgaGFzIGEgY2xhc3MgbmFtZSBvciBpZiB3ZSdyZSBwYXNzZWQgYGZhbHNlYCxcblx0XHRcdFx0Ly8gdGhlbiByZW1vdmUgdGhlIHdob2xlIGNsYXNzbmFtZSAoaWYgdGhlcmUgd2FzIG9uZSwgdGhlIGFib3ZlIHNhdmVkIGl0KS5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGJyaW5nIGJhY2sgd2hhdGV2ZXIgd2FzIHByZXZpb3VzbHkgc2F2ZWQgKGlmIGFueXRoaW5nKSxcblx0XHRcdFx0Ly8gZmFsbGluZyBiYWNrIHRvIHRoZSBlbXB0eSBzdHJpbmcgaWYgbm90aGluZyB3YXMgc3RvcmVkLlxuXHRcdFx0XHRpZiAoIHRoaXMuc2V0QXR0cmlidXRlICkge1xuXHRcdFx0XHRcdHRoaXMuc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsXG5cdFx0XHRcdFx0XHRjbGFzc05hbWUgfHwgdmFsdWUgPT09IGZhbHNlID9cblx0XHRcdFx0XHRcdFwiXCIgOlxuXHRcdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCB0aGlzLCBcIl9fY2xhc3NOYW1lX19cIiApIHx8IFwiXCJcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGhhc0NsYXNzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGNsYXNzTmFtZSwgZWxlbSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Y2xhc3NOYW1lID0gXCIgXCIgKyBzZWxlY3RvciArIFwiIFwiO1xuXHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcblx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHQoIFwiIFwiICsgc3RyaXBBbmRDb2xsYXBzZSggZ2V0Q2xhc3MoIGVsZW0gKSApICsgXCIgXCIgKS5pbmRleE9mKCBjbGFzc05hbWUgKSA+IC0xICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufSApO1xuXG5cblxuXG52YXIgcnJldHVybiA9IC9cXHIvZztcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHR2YWw6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgaG9va3MsIHJldCwgdmFsdWVJc0Z1bmN0aW9uLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcblxuXHRcdGlmICggIWFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRcdGhvb2tzID0galF1ZXJ5LnZhbEhvb2tzWyBlbGVtLnR5cGUgXSB8fFxuXHRcdFx0XHRcdGpRdWVyeS52YWxIb29rc1sgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07XG5cblx0XHRcdFx0aWYgKCBob29rcyAmJlxuXHRcdFx0XHRcdFwiZ2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0XHQoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgXCJ2YWx1ZVwiICkgKSAhPT0gdW5kZWZpbmVkXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXQgPSBlbGVtLnZhbHVlO1xuXG5cdFx0XHRcdC8vIEhhbmRsZSBtb3N0IGNvbW1vbiBzdHJpbmcgY2FzZXNcblx0XHRcdFx0aWYgKCB0eXBlb2YgcmV0ID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0XHRcdHJldHVybiByZXQucmVwbGFjZSggcnJldHVybiwgXCJcIiApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSGFuZGxlIGNhc2VzIHdoZXJlIHZhbHVlIGlzIG51bGwvdW5kZWYgb3IgbnVtYmVyXG5cdFx0XHRcdHJldHVybiByZXQgPT0gbnVsbCA/IFwiXCIgOiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR2YWx1ZUlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHR2YXIgdmFsO1xuXG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgIT09IDEgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB2YWx1ZUlzRnVuY3Rpb24gKSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlLmNhbGwoIHRoaXMsIGksIGpRdWVyeSggdGhpcyApLnZhbCgpICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR2YWwgPSB2YWx1ZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVHJlYXQgbnVsbC91bmRlZmluZWQgYXMgXCJcIjsgY29udmVydCBudW1iZXJzIHRvIHN0cmluZ1xuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcblx0XHRcdFx0dmFsID0gXCJcIjtcblxuXHRcdFx0fSBlbHNlIGlmICggdHlwZW9mIHZhbCA9PT0gXCJudW1iZXJcIiApIHtcblx0XHRcdFx0dmFsICs9IFwiXCI7XG5cblx0XHRcdH0gZWxzZSBpZiAoIEFycmF5LmlzQXJyYXkoIHZhbCApICkge1xuXHRcdFx0XHR2YWwgPSBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSArIFwiXCI7XG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblxuXHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIHRoaXMudHlwZSBdIHx8IGpRdWVyeS52YWxIb29rc1sgdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07XG5cblx0XHRcdC8vIElmIHNldCByZXR1cm5zIHVuZGVmaW5lZCwgZmFsbCBiYWNrIHRvIG5vcm1hbCBzZXR0aW5nXG5cdFx0XHRpZiAoICFob29rcyB8fCAhKCBcInNldFwiIGluIGhvb2tzICkgfHwgaG9va3Muc2V0KCB0aGlzLCB2YWwsIFwidmFsdWVcIiApID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHRoaXMudmFsdWUgPSB2YWw7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0dmFsSG9va3M6IHtcblx0XHRvcHRpb246IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdFx0dmFyIHZhbCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidmFsdWVcIiApO1xuXHRcdFx0XHRyZXR1cm4gdmFsICE9IG51bGwgP1xuXHRcdFx0XHRcdHZhbCA6XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTEwIC0gMTEgb25seVxuXHRcdFx0XHRcdC8vIG9wdGlvbi50ZXh0IHRocm93cyBleGNlcHRpb25zICgjMTQ2ODYsICMxNDg1OClcblx0XHRcdFx0XHQvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZVxuXHRcdFx0XHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI3N0cmlwLWFuZC1jb2xsYXBzZS13aGl0ZXNwYWNlXG5cdFx0XHRcdFx0c3RyaXBBbmRDb2xsYXBzZSggalF1ZXJ5LnRleHQoIGVsZW0gKSApO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0c2VsZWN0OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgdmFsdWUsIG9wdGlvbiwgaSxcblx0XHRcdFx0XHRvcHRpb25zID0gZWxlbS5vcHRpb25zLFxuXHRcdFx0XHRcdGluZGV4ID0gZWxlbS5zZWxlY3RlZEluZGV4LFxuXHRcdFx0XHRcdG9uZSA9IGVsZW0udHlwZSA9PT0gXCJzZWxlY3Qtb25lXCIsXG5cdFx0XHRcdFx0dmFsdWVzID0gb25lID8gbnVsbCA6IFtdLFxuXHRcdFx0XHRcdG1heCA9IG9uZSA/IGluZGV4ICsgMSA6IG9wdGlvbnMubGVuZ3RoO1xuXG5cdFx0XHRcdGlmICggaW5kZXggPCAwICkge1xuXHRcdFx0XHRcdGkgPSBtYXg7XG5cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRpID0gb25lID8gaW5kZXggOiAwO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gTG9vcCB0aHJvdWdoIGFsbCB0aGUgc2VsZWN0ZWQgb3B0aW9uc1xuXHRcdFx0XHRmb3IgKCA7IGkgPCBtYXg7IGkrKyApIHtcblx0XHRcdFx0XHRvcHRpb24gPSBvcHRpb25zWyBpIF07XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdC8vIElFOC05IGRvZXNuJ3QgdXBkYXRlIHNlbGVjdGVkIGFmdGVyIGZvcm0gcmVzZXQgKCMyNTUxKVxuXHRcdFx0XHRcdGlmICggKCBvcHRpb24uc2VsZWN0ZWQgfHwgaSA9PT0gaW5kZXggKSAmJlxuXG5cdFx0XHRcdFx0XHRcdC8vIERvbid0IHJldHVybiBvcHRpb25zIHRoYXQgYXJlIGRpc2FibGVkIG9yIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcblx0XHRcdFx0XHRcdFx0IW9wdGlvbi5kaXNhYmxlZCAmJlxuXHRcdFx0XHRcdFx0XHQoICFvcHRpb24ucGFyZW50Tm9kZS5kaXNhYmxlZCB8fFxuXHRcdFx0XHRcdFx0XHRcdCFub2RlTmFtZSggb3B0aW9uLnBhcmVudE5vZGUsIFwib3B0Z3JvdXBcIiApICkgKSB7XG5cblx0XHRcdFx0XHRcdC8vIEdldCB0aGUgc3BlY2lmaWMgdmFsdWUgZm9yIHRoZSBvcHRpb25cblx0XHRcdFx0XHRcdHZhbHVlID0galF1ZXJ5KCBvcHRpb24gKS52YWwoKTtcblxuXHRcdFx0XHRcdFx0Ly8gV2UgZG9uJ3QgbmVlZCBhbiBhcnJheSBmb3Igb25lIHNlbGVjdHNcblx0XHRcdFx0XHRcdGlmICggb25lICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIE11bHRpLVNlbGVjdHMgcmV0dXJuIGFuIGFycmF5XG5cdFx0XHRcdFx0XHR2YWx1ZXMucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWVzO1xuXHRcdFx0fSxcblxuXHRcdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBvcHRpb25TZXQsIG9wdGlvbixcblx0XHRcdFx0XHRvcHRpb25zID0gZWxlbS5vcHRpb25zLFxuXHRcdFx0XHRcdHZhbHVlcyA9IGpRdWVyeS5tYWtlQXJyYXkoIHZhbHVlICksXG5cdFx0XHRcdFx0aSA9IG9wdGlvbnMubGVuZ3RoO1xuXG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcblxuXHRcdFx0XHRcdC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbmQtYXNzaWduICovXG5cblx0XHRcdFx0XHRpZiAoIG9wdGlvbi5zZWxlY3RlZCA9XG5cdFx0XHRcdFx0XHRqUXVlcnkuaW5BcnJheSggalF1ZXJ5LnZhbEhvb2tzLm9wdGlvbi5nZXQoIG9wdGlvbiApLCB2YWx1ZXMgKSA+IC0xXG5cdFx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0XHRvcHRpb25TZXQgPSB0cnVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8qIGVzbGludC1lbmFibGUgbm8tY29uZC1hc3NpZ24gKi9cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEZvcmNlIGJyb3dzZXJzIHRvIGJlaGF2ZSBjb25zaXN0ZW50bHkgd2hlbiBub24tbWF0Y2hpbmcgdmFsdWUgaXMgc2V0XG5cdFx0XHRcdGlmICggIW9wdGlvblNldCApIHtcblx0XHRcdFx0XHRlbGVtLnNlbGVjdGVkSW5kZXggPSAtMTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdmFsdWVzO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBSYWRpb3MgYW5kIGNoZWNrYm94ZXMgZ2V0dGVyL3NldHRlclxualF1ZXJ5LmVhY2goIFsgXCJyYWRpb1wiLCBcImNoZWNrYm94XCIgXSwgZnVuY3Rpb24oKSB7XG5cdGpRdWVyeS52YWxIb29rc1sgdGhpcyBdID0ge1xuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdFx0XHRyZXR1cm4gKCBlbGVtLmNoZWNrZWQgPSBqUXVlcnkuaW5BcnJheSggalF1ZXJ5KCBlbGVtICkudmFsKCksIHZhbHVlICkgPiAtMSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0aWYgKCAhc3VwcG9ydC5jaGVja09uICkge1xuXHRcdGpRdWVyeS52YWxIb29rc1sgdGhpcyBdLmdldCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gbnVsbCA/IFwib25cIiA6IGVsZW0udmFsdWU7XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG4vLyBSZXR1cm4galF1ZXJ5IGZvciBhdHRyaWJ1dGVzLW9ubHkgaW5jbHVzaW9uXG5cblxuc3VwcG9ydC5mb2N1c2luID0gXCJvbmZvY3VzaW5cIiBpbiB3aW5kb3c7XG5cblxudmFyIHJmb2N1c01vcnBoID0gL14oPzpmb2N1c2luZm9jdXN8Zm9jdXNvdXRibHVyKSQvLFxuXHRzdG9wUHJvcGFnYXRpb25DYWxsYmFjayA9IGZ1bmN0aW9uKCBlICkge1xuXHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdH07XG5cbmpRdWVyeS5leHRlbmQoIGpRdWVyeS5ldmVudCwge1xuXG5cdHRyaWdnZXI6IGZ1bmN0aW9uKCBldmVudCwgZGF0YSwgZWxlbSwgb25seUhhbmRsZXJzICkge1xuXG5cdFx0dmFyIGksIGN1ciwgdG1wLCBidWJibGVUeXBlLCBvbnR5cGUsIGhhbmRsZSwgc3BlY2lhbCwgbGFzdEVsZW1lbnQsXG5cdFx0XHRldmVudFBhdGggPSBbIGVsZW0gfHwgZG9jdW1lbnQgXSxcblx0XHRcdHR5cGUgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwidHlwZVwiICkgPyBldmVudC50eXBlIDogZXZlbnQsXG5cdFx0XHRuYW1lc3BhY2VzID0gaGFzT3duLmNhbGwoIGV2ZW50LCBcIm5hbWVzcGFjZVwiICkgPyBldmVudC5uYW1lc3BhY2Uuc3BsaXQoIFwiLlwiICkgOiBbXTtcblxuXHRcdGN1ciA9IGxhc3RFbGVtZW50ID0gdG1wID0gZWxlbSA9IGVsZW0gfHwgZG9jdW1lbnQ7XG5cblx0XHQvLyBEb24ndCBkbyBldmVudHMgb24gdGV4dCBhbmQgY29tbWVudCBub2Rlc1xuXHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIGZvY3VzL2JsdXIgbW9ycGhzIHRvIGZvY3VzaW4vb3V0OyBlbnN1cmUgd2UncmUgbm90IGZpcmluZyB0aGVtIHJpZ2h0IG5vd1xuXHRcdGlmICggcmZvY3VzTW9ycGgudGVzdCggdHlwZSArIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIHR5cGUuaW5kZXhPZiggXCIuXCIgKSA+IC0xICkge1xuXG5cdFx0XHQvLyBOYW1lc3BhY2VkIHRyaWdnZXI7IGNyZWF0ZSBhIHJlZ2V4cCB0byBtYXRjaCBldmVudCB0eXBlIGluIGhhbmRsZSgpXG5cdFx0XHRuYW1lc3BhY2VzID0gdHlwZS5zcGxpdCggXCIuXCIgKTtcblx0XHRcdHR5cGUgPSBuYW1lc3BhY2VzLnNoaWZ0KCk7XG5cdFx0XHRuYW1lc3BhY2VzLnNvcnQoKTtcblx0XHR9XG5cdFx0b250eXBlID0gdHlwZS5pbmRleE9mKCBcIjpcIiApIDwgMCAmJiBcIm9uXCIgKyB0eXBlO1xuXG5cdFx0Ly8gQ2FsbGVyIGNhbiBwYXNzIGluIGEgalF1ZXJ5LkV2ZW50IG9iamVjdCwgT2JqZWN0LCBvciBqdXN0IGFuIGV2ZW50IHR5cGUgc3RyaW5nXG5cdFx0ZXZlbnQgPSBldmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/XG5cdFx0XHRldmVudCA6XG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCB0eXBlLCB0eXBlb2YgZXZlbnQgPT09IFwib2JqZWN0XCIgJiYgZXZlbnQgKTtcblxuXHRcdC8vIFRyaWdnZXIgYml0bWFzazogJiAxIGZvciBuYXRpdmUgaGFuZGxlcnM7ICYgMiBmb3IgalF1ZXJ5IChhbHdheXMgdHJ1ZSlcblx0XHRldmVudC5pc1RyaWdnZXIgPSBvbmx5SGFuZGxlcnMgPyAyIDogMztcblx0XHRldmVudC5uYW1lc3BhY2UgPSBuYW1lc3BhY2VzLmpvaW4oIFwiLlwiICk7XG5cdFx0ZXZlbnQucm5hbWVzcGFjZSA9IGV2ZW50Lm5hbWVzcGFjZSA/XG5cdFx0XHRuZXcgUmVnRXhwKCBcIihefFxcXFwuKVwiICsgbmFtZXNwYWNlcy5qb2luKCBcIlxcXFwuKD86LipcXFxcLnwpXCIgKSArIFwiKFxcXFwufCQpXCIgKSA6XG5cdFx0XHRudWxsO1xuXG5cdFx0Ly8gQ2xlYW4gdXAgdGhlIGV2ZW50IGluIGNhc2UgaXQgaXMgYmVpbmcgcmV1c2VkXG5cdFx0ZXZlbnQucmVzdWx0ID0gdW5kZWZpbmVkO1xuXHRcdGlmICggIWV2ZW50LnRhcmdldCApIHtcblx0XHRcdGV2ZW50LnRhcmdldCA9IGVsZW07XG5cdFx0fVxuXG5cdFx0Ly8gQ2xvbmUgYW55IGluY29taW5nIGRhdGEgYW5kIHByZXBlbmQgdGhlIGV2ZW50LCBjcmVhdGluZyB0aGUgaGFuZGxlciBhcmcgbGlzdFxuXHRcdGRhdGEgPSBkYXRhID09IG51bGwgP1xuXHRcdFx0WyBldmVudCBdIDpcblx0XHRcdGpRdWVyeS5tYWtlQXJyYXkoIGRhdGEsIFsgZXZlbnQgXSApO1xuXG5cdFx0Ly8gQWxsb3cgc3BlY2lhbCBldmVudHMgdG8gZHJhdyBvdXRzaWRlIHRoZSBsaW5lc1xuXHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiBzcGVjaWFsLnRyaWdnZXIgJiYgc3BlY2lhbC50cmlnZ2VyLmFwcGx5KCBlbGVtLCBkYXRhICkgPT09IGZhbHNlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIERldGVybWluZSBldmVudCBwcm9wYWdhdGlvbiBwYXRoIGluIGFkdmFuY2UsIHBlciBXM0MgZXZlbnRzIHNwZWMgKCM5OTUxKVxuXHRcdC8vIEJ1YmJsZSB1cCB0byBkb2N1bWVudCwgdGhlbiB0byB3aW5kb3c7IHdhdGNoIGZvciBhIGdsb2JhbCBvd25lckRvY3VtZW50IHZhciAoIzk3MjQpXG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFzcGVjaWFsLm5vQnViYmxlICYmICFpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRidWJibGVUeXBlID0gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgfHwgdHlwZTtcblx0XHRcdGlmICggIXJmb2N1c01vcnBoLnRlc3QoIGJ1YmJsZVR5cGUgKyB0eXBlICkgKSB7XG5cdFx0XHRcdGN1ciA9IGN1ci5wYXJlbnROb2RlO1xuXHRcdFx0fVxuXHRcdFx0Zm9yICggOyBjdXI7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRldmVudFBhdGgucHVzaCggY3VyICk7XG5cdFx0XHRcdHRtcCA9IGN1cjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT25seSBhZGQgd2luZG93IGlmIHdlIGdvdCB0byBkb2N1bWVudCAoZS5nLiwgbm90IHBsYWluIG9iaiBvciBkZXRhY2hlZCBET00pXG5cdFx0XHRpZiAoIHRtcCA9PT0gKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQgKSApIHtcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIHRtcC5kZWZhdWx0VmlldyB8fCB0bXAucGFyZW50V2luZG93IHx8IHdpbmRvdyApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZpcmUgaGFuZGxlcnMgb24gdGhlIGV2ZW50IHBhdGhcblx0XHRpID0gMDtcblx0XHR3aGlsZSAoICggY3VyID0gZXZlbnRQYXRoWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0bGFzdEVsZW1lbnQgPSBjdXI7XG5cdFx0XHRldmVudC50eXBlID0gaSA+IDEgP1xuXHRcdFx0XHRidWJibGVUeXBlIDpcblx0XHRcdFx0c3BlY2lhbC5iaW5kVHlwZSB8fCB0eXBlO1xuXG5cdFx0XHQvLyBqUXVlcnkgaGFuZGxlclxuXHRcdFx0aGFuZGxlID0gKFxuXHRcdFx0XHRcdGRhdGFQcml2LmdldCggY3VyLCBcImV2ZW50c1wiICkgfHwgT2JqZWN0LmNyZWF0ZSggbnVsbCApXG5cdFx0XHRcdClbIGV2ZW50LnR5cGUgXSAmJlxuXHRcdFx0XHRkYXRhUHJpdi5nZXQoIGN1ciwgXCJoYW5kbGVcIiApO1xuXHRcdFx0aWYgKCBoYW5kbGUgKSB7XG5cdFx0XHRcdGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE5hdGl2ZSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSBvbnR5cGUgJiYgY3VyWyBvbnR5cGUgXTtcblx0XHRcdGlmICggaGFuZGxlICYmIGhhbmRsZS5hcHBseSAmJiBhY2NlcHREYXRhKCBjdXIgKSApIHtcblx0XHRcdFx0ZXZlbnQucmVzdWx0ID0gaGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcblx0XHRcdFx0aWYgKCBldmVudC5yZXN1bHQgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZXZlbnQudHlwZSA9IHR5cGU7XG5cblx0XHQvLyBJZiBub2JvZHkgcHJldmVudGVkIHRoZSBkZWZhdWx0IGFjdGlvbiwgZG8gaXQgbm93XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSApIHtcblxuXHRcdFx0aWYgKCAoICFzcGVjaWFsLl9kZWZhdWx0IHx8XG5cdFx0XHRcdHNwZWNpYWwuX2RlZmF1bHQuYXBwbHkoIGV2ZW50UGF0aC5wb3AoKSwgZGF0YSApID09PSBmYWxzZSApICYmXG5cdFx0XHRcdGFjY2VwdERhdGEoIGVsZW0gKSApIHtcblxuXHRcdFx0XHQvLyBDYWxsIGEgbmF0aXZlIERPTSBtZXRob2Qgb24gdGhlIHRhcmdldCB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgdGhlIGV2ZW50LlxuXHRcdFx0XHQvLyBEb24ndCBkbyBkZWZhdWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAoIzYxNzApXG5cdFx0XHRcdGlmICggb250eXBlICYmIGlzRnVuY3Rpb24oIGVsZW1bIHR5cGUgXSApICYmICFpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gRG9uJ3QgcmUtdHJpZ2dlciBhbiBvbkZPTyBldmVudCB3aGVuIHdlIGNhbGwgaXRzIEZPTygpIG1ldGhvZFxuXHRcdFx0XHRcdHRtcCA9IGVsZW1bIG9udHlwZSBdO1xuXG5cdFx0XHRcdFx0aWYgKCB0bXAgKSB7XG5cdFx0XHRcdFx0XHRlbGVtWyBvbnR5cGUgXSA9IG51bGw7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJldmVudCByZS10cmlnZ2VyaW5nIG9mIHRoZSBzYW1lIGV2ZW50LCBzaW5jZSB3ZSBhbHJlYWR5IGJ1YmJsZWQgaXQgYWJvdmVcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdHlwZTtcblxuXHRcdFx0XHRcdGlmICggZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdFx0XHRcdGxhc3RFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZWxlbVsgdHlwZSBdKCk7XG5cblx0XHRcdFx0XHRpZiAoIGV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRcdFx0XHRsYXN0RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCB0eXBlLCBzdG9wUHJvcGFnYXRpb25DYWxsYmFjayApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gdG1wO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0Ly8gUGlnZ3liYWNrIG9uIGEgZG9ub3IgZXZlbnQgdG8gc2ltdWxhdGUgYSBkaWZmZXJlbnQgb25lXG5cdC8vIFVzZWQgb25seSBmb3IgYGZvY3VzKGluIHwgb3V0KWAgZXZlbnRzXG5cdHNpbXVsYXRlOiBmdW5jdGlvbiggdHlwZSwgZWxlbSwgZXZlbnQgKSB7XG5cdFx0dmFyIGUgPSBqUXVlcnkuZXh0ZW5kKFxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCgpLFxuXHRcdFx0ZXZlbnQsXG5cdFx0XHR7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdGlzU2ltdWxhdGVkOiB0cnVlXG5cdFx0XHR9XG5cdFx0KTtcblxuXHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBlLCBudWxsLCBlbGVtICk7XG5cdH1cblxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgdGhpcyApO1xuXHRcdH0gKTtcblx0fSxcblx0dHJpZ2dlckhhbmRsZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBlbGVtID0gdGhpc1sgMCBdO1xuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApO1xuXHRcdH1cblx0fVxufSApO1xuXG5cbi8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00NFxuLy8gRmlyZWZveCBkb2Vzbid0IGhhdmUgZm9jdXMoaW4gfCBvdXQpIGV2ZW50c1xuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02ODc3ODdcbi8vXG4vLyBTdXBwb3J0OiBDaHJvbWUgPD00OCAtIDQ5LCBTYWZhcmkgPD05LjAgLSA5LjFcbi8vIGZvY3VzKGluIHwgb3V0KSBldmVudHMgZmlyZSBhZnRlciBmb2N1cyAmIGJsdXIgZXZlbnRzLFxuLy8gd2hpY2ggaXMgc3BlYyB2aW9sYXRpb24gLSBodHRwOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50cy1mb2N1c2V2ZW50LWV2ZW50LW9yZGVyXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ0OTg1N1xuaWYgKCAhc3VwcG9ydC5mb2N1c2luICkge1xuXHRqUXVlcnkuZWFjaCggeyBmb2N1czogXCJmb2N1c2luXCIsIGJsdXI6IFwiZm9jdXNvdXRcIiB9LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXG5cdFx0Ly8gQXR0YWNoIGEgc2luZ2xlIGNhcHR1cmluZyBoYW5kbGVyIG9uIHRoZSBkb2N1bWVudCB3aGlsZSBzb21lb25lIHdhbnRzIGZvY3VzaW4vZm9jdXNvdXRcblx0XHR2YXIgaGFuZGxlciA9IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpRdWVyeS5ldmVudC5maXgoIGV2ZW50ICkgKTtcblx0XHR9O1xuXG5cdFx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGZpeCBdID0ge1xuXHRcdFx0c2V0dXA6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIEhhbmRsZTogcmVndWxhciBub2RlcyAodmlhIGB0aGlzLm93bmVyRG9jdW1lbnRgKSwgd2luZG93XG5cdFx0XHRcdC8vICh2aWEgYHRoaXMuZG9jdW1lbnRgKSAmIGRvY3VtZW50ICh2aWEgYHRoaXNgKS5cblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLmRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICk7XG5cblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XG5cdFx0XHRcdFx0ZG9jLmFkZEV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4LCAoIGF0dGFjaGVzIHx8IDAgKSArIDEgKTtcblx0XHRcdH0sXG5cdFx0XHR0ZWFyZG93bjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcy5kb2N1bWVudCB8fCB0aGlzLFxuXHRcdFx0XHRcdGF0dGFjaGVzID0gZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCApIC0gMTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZG9jLCBmaXggKTtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXgsIGF0dGFjaGVzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9ICk7XG59XG52YXIgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb247XG5cbnZhciBub25jZSA9IHsgZ3VpZDogRGF0ZS5ub3coKSB9O1xuXG52YXIgcnF1ZXJ5ID0gKCAvXFw/LyApO1xuXG5cblxuLy8gQ3Jvc3MtYnJvd3NlciB4bWwgcGFyc2luZ1xualF1ZXJ5LnBhcnNlWE1MID0gZnVuY3Rpb24oIGRhdGEgKSB7XG5cdHZhciB4bWw7XG5cdGlmICggIWRhdGEgfHwgdHlwZW9mIGRhdGEgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seVxuXHQvLyBJRSB0aHJvd3Mgb24gcGFyc2VGcm9tU3RyaW5nIHdpdGggaW52YWxpZCBpbnB1dC5cblx0dHJ5IHtcblx0XHR4bWwgPSAoIG5ldyB3aW5kb3cuRE9NUGFyc2VyKCkgKS5wYXJzZUZyb21TdHJpbmcoIGRhdGEsIFwidGV4dC94bWxcIiApO1xuXHR9IGNhdGNoICggZSApIHtcblx0XHR4bWwgPSB1bmRlZmluZWQ7XG5cdH1cblxuXHRpZiAoICF4bWwgfHwgeG1sLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcInBhcnNlcmVycm9yXCIgKS5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5LmVycm9yKCBcIkludmFsaWQgWE1MOiBcIiArIGRhdGEgKTtcblx0fVxuXHRyZXR1cm4geG1sO1xufTtcblxuXG52YXJcblx0cmJyYWNrZXQgPSAvXFxbXFxdJC8sXG5cdHJDUkxGID0gL1xccj9cXG4vZyxcblx0cnN1Ym1pdHRlclR5cGVzID0gL14oPzpzdWJtaXR8YnV0dG9ufGltYWdlfHJlc2V0fGZpbGUpJC9pLFxuXHRyc3VibWl0dGFibGUgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxrZXlnZW4pL2k7XG5cbmZ1bmN0aW9uIGJ1aWxkUGFyYW1zKCBwcmVmaXgsIG9iaiwgdHJhZGl0aW9uYWwsIGFkZCApIHtcblx0dmFyIG5hbWU7XG5cblx0aWYgKCBBcnJheS5pc0FycmF5KCBvYmogKSApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBhcnJheSBpdGVtLlxuXHRcdGpRdWVyeS5lYWNoKCBvYmosIGZ1bmN0aW9uKCBpLCB2ICkge1xuXHRcdFx0aWYgKCB0cmFkaXRpb25hbCB8fCByYnJhY2tldC50ZXN0KCBwcmVmaXggKSApIHtcblxuXHRcdFx0XHQvLyBUcmVhdCBlYWNoIGFycmF5IGl0ZW0gYXMgYSBzY2FsYXIuXG5cdFx0XHRcdGFkZCggcHJlZml4LCB2ICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gSXRlbSBpcyBub24tc2NhbGFyIChhcnJheSBvciBvYmplY3QpLCBlbmNvZGUgaXRzIG51bWVyaWMgaW5kZXguXG5cdFx0XHRcdGJ1aWxkUGFyYW1zKFxuXHRcdFx0XHRcdHByZWZpeCArIFwiW1wiICsgKCB0eXBlb2YgdiA9PT0gXCJvYmplY3RcIiAmJiB2ICE9IG51bGwgPyBpIDogXCJcIiApICsgXCJdXCIsXG5cdFx0XHRcdFx0dixcblx0XHRcdFx0XHR0cmFkaXRpb25hbCxcblx0XHRcdFx0XHRhZGRcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9ICk7XG5cblx0fSBlbHNlIGlmICggIXRyYWRpdGlvbmFsICYmIHRvVHlwZSggb2JqICkgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgb2JqZWN0IGl0ZW0uXG5cdFx0Zm9yICggbmFtZSBpbiBvYmogKSB7XG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4ICsgXCJbXCIgKyBuYW1lICsgXCJdXCIsIG9ialsgbmFtZSBdLCB0cmFkaXRpb25hbCwgYWRkICk7XG5cdFx0fVxuXG5cdH0gZWxzZSB7XG5cblx0XHQvLyBTZXJpYWxpemUgc2NhbGFyIGl0ZW0uXG5cdFx0YWRkKCBwcmVmaXgsIG9iaiApO1xuXHR9XG59XG5cbi8vIFNlcmlhbGl6ZSBhbiBhcnJheSBvZiBmb3JtIGVsZW1lbnRzIG9yIGEgc2V0IG9mXG4vLyBrZXkvdmFsdWVzIGludG8gYSBxdWVyeSBzdHJpbmdcbmpRdWVyeS5wYXJhbSA9IGZ1bmN0aW9uKCBhLCB0cmFkaXRpb25hbCApIHtcblx0dmFyIHByZWZpeCxcblx0XHRzID0gW10sXG5cdFx0YWRkID0gZnVuY3Rpb24oIGtleSwgdmFsdWVPckZ1bmN0aW9uICkge1xuXG5cdFx0XHQvLyBJZiB2YWx1ZSBpcyBhIGZ1bmN0aW9uLCBpbnZva2UgaXQgYW5kIHVzZSBpdHMgcmV0dXJuIHZhbHVlXG5cdFx0XHR2YXIgdmFsdWUgPSBpc0Z1bmN0aW9uKCB2YWx1ZU9yRnVuY3Rpb24gKSA/XG5cdFx0XHRcdHZhbHVlT3JGdW5jdGlvbigpIDpcblx0XHRcdFx0dmFsdWVPckZ1bmN0aW9uO1xuXG5cdFx0XHRzWyBzLmxlbmd0aCBdID0gZW5jb2RlVVJJQ29tcG9uZW50KCBrZXkgKSArIFwiPVwiICtcblx0XHRcdFx0ZW5jb2RlVVJJQ29tcG9uZW50KCB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICk7XG5cdFx0fTtcblxuXHRpZiAoIGEgPT0gbnVsbCApIHtcblx0XHRyZXR1cm4gXCJcIjtcblx0fVxuXG5cdC8vIElmIGFuIGFycmF5IHdhcyBwYXNzZWQgaW4sIGFzc3VtZSB0aGF0IGl0IGlzIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMuXG5cdGlmICggQXJyYXkuaXNBcnJheSggYSApIHx8ICggYS5qcXVlcnkgJiYgIWpRdWVyeS5pc1BsYWluT2JqZWN0KCBhICkgKSApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSB0aGUgZm9ybSBlbGVtZW50c1xuXHRcdGpRdWVyeS5lYWNoKCBhLCBmdW5jdGlvbigpIHtcblx0XHRcdGFkZCggdGhpcy5uYW1lLCB0aGlzLnZhbHVlICk7XG5cdFx0fSApO1xuXG5cdH0gZWxzZSB7XG5cblx0XHQvLyBJZiB0cmFkaXRpb25hbCwgZW5jb2RlIHRoZSBcIm9sZFwiIHdheSAodGhlIHdheSAxLjMuMiBvciBvbGRlclxuXHRcdC8vIGRpZCBpdCksIG90aGVyd2lzZSBlbmNvZGUgcGFyYW1zIHJlY3Vyc2l2ZWx5LlxuXHRcdGZvciAoIHByZWZpeCBpbiBhICkge1xuXHRcdFx0YnVpbGRQYXJhbXMoIHByZWZpeCwgYVsgcHJlZml4IF0sIHRyYWRpdGlvbmFsLCBhZGQgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIHJlc3VsdGluZyBzZXJpYWxpemF0aW9uXG5cdHJldHVybiBzLmpvaW4oIFwiJlwiICk7XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHNlcmlhbGl6ZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5wYXJhbSggdGhpcy5zZXJpYWxpemVBcnJheSgpICk7XG5cdH0sXG5cdHNlcmlhbGl6ZUFycmF5OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBDYW4gYWRkIHByb3BIb29rIGZvciBcImVsZW1lbnRzXCIgdG8gZmlsdGVyIG9yIGFkZCBmb3JtIGVsZW1lbnRzXG5cdFx0XHR2YXIgZWxlbWVudHMgPSBqUXVlcnkucHJvcCggdGhpcywgXCJlbGVtZW50c1wiICk7XG5cdFx0XHRyZXR1cm4gZWxlbWVudHMgPyBqUXVlcnkubWFrZUFycmF5KCBlbGVtZW50cyApIDogdGhpcztcblx0XHR9IClcblx0XHQuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB0eXBlID0gdGhpcy50eXBlO1xuXG5cdFx0XHQvLyBVc2UgLmlzKCBcIjpkaXNhYmxlZFwiICkgc28gdGhhdCBmaWVsZHNldFtkaXNhYmxlZF0gd29ya3Ncblx0XHRcdHJldHVybiB0aGlzLm5hbWUgJiYgIWpRdWVyeSggdGhpcyApLmlzKCBcIjpkaXNhYmxlZFwiICkgJiZcblx0XHRcdFx0cnN1Ym1pdHRhYmxlLnRlc3QoIHRoaXMubm9kZU5hbWUgKSAmJiAhcnN1Ym1pdHRlclR5cGVzLnRlc3QoIHR5cGUgKSAmJlxuXHRcdFx0XHQoIHRoaXMuY2hlY2tlZCB8fCAhcmNoZWNrYWJsZVR5cGUudGVzdCggdHlwZSApICk7XG5cdFx0fSApXG5cdFx0Lm1hcCggZnVuY3Rpb24oIF9pLCBlbGVtICkge1xuXHRcdFx0dmFyIHZhbCA9IGpRdWVyeSggdGhpcyApLnZhbCgpO1xuXG5cdFx0XHRpZiAoIHZhbCA9PSBudWxsICkge1xuXHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWwgKSApIHtcblx0XHRcdFx0cmV0dXJuIGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbCApIHtcblx0XHRcdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB7IG5hbWU6IGVsZW0ubmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgXCJcXHJcXG5cIiApIH07XG5cdFx0fSApLmdldCgpO1xuXHR9XG59ICk7XG5cblxudmFyXG5cdHIyMCA9IC8lMjAvZyxcblx0cmhhc2ggPSAvIy4qJC8sXG5cdHJhbnRpQ2FjaGUgPSAvKFs/Jl0pXz1bXiZdKi8sXG5cdHJoZWFkZXJzID0gL14oLio/KTpbIFxcdF0qKFteXFxyXFxuXSopJC9tZyxcblxuXHQvLyAjNzY1MywgIzgxMjUsICM4MTUyOiBsb2NhbCBwcm90b2NvbCBkZXRlY3Rpb25cblx0cmxvY2FsUHJvdG9jb2wgPSAvXig/OmFib3V0fGFwcHxhcHAtc3RvcmFnZXwuKy1leHRlbnNpb258ZmlsZXxyZXN8d2lkZ2V0KTokLyxcblx0cm5vQ29udGVudCA9IC9eKD86R0VUfEhFQUQpJC8sXG5cdHJwcm90b2NvbCA9IC9eXFwvXFwvLyxcblxuXHQvKiBQcmVmaWx0ZXJzXG5cdCAqIDEpIFRoZXkgYXJlIHVzZWZ1bCB0byBpbnRyb2R1Y2UgY3VzdG9tIGRhdGFUeXBlcyAoc2VlIGFqYXgvanNvbnAuanMgZm9yIGFuIGV4YW1wbGUpXG5cdCAqIDIpIFRoZXNlIGFyZSBjYWxsZWQ6XG5cdCAqICAgIC0gQkVGT1JFIGFza2luZyBmb3IgYSB0cmFuc3BvcnRcblx0ICogICAgLSBBRlRFUiBwYXJhbSBzZXJpYWxpemF0aW9uIChzLmRhdGEgaXMgYSBzdHJpbmcgaWYgcy5wcm9jZXNzRGF0YSBpcyB0cnVlKVxuXHQgKiAzKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDQpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogNSkgZXhlY3V0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gY29udGludWUgZG93biB0byBcIipcIiBpZiBuZWVkZWRcblx0ICovXG5cdHByZWZpbHRlcnMgPSB7fSxcblxuXHQvKiBUcmFuc3BvcnRzIGJpbmRpbmdzXG5cdCAqIDEpIGtleSBpcyB0aGUgZGF0YVR5cGVcblx0ICogMikgdGhlIGNhdGNoYWxsIHN5bWJvbCBcIipcIiBjYW4gYmUgdXNlZFxuXHQgKiAzKSBzZWxlY3Rpb24gd2lsbCBzdGFydCB3aXRoIHRyYW5zcG9ydCBkYXRhVHlwZSBhbmQgVEhFTiBnbyB0byBcIipcIiBpZiBuZWVkZWRcblx0ICovXG5cdHRyYW5zcG9ydHMgPSB7fSxcblxuXHQvLyBBdm9pZCBjb21tZW50LXByb2xvZyBjaGFyIHNlcXVlbmNlICgjMTAwOTgpOyBtdXN0IGFwcGVhc2UgbGludCBhbmQgZXZhZGUgY29tcHJlc3Npb25cblx0YWxsVHlwZXMgPSBcIiovXCIuY29uY2F0KCBcIipcIiApLFxuXG5cdC8vIEFuY2hvciB0YWcgZm9yIHBhcnNpbmcgdGhlIGRvY3VtZW50IG9yaWdpblxuXHRvcmlnaW5BbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImFcIiApO1xuXHRvcmlnaW5BbmNob3IuaHJlZiA9IGxvY2F0aW9uLmhyZWY7XG5cbi8vIEJhc2UgXCJjb25zdHJ1Y3RvclwiIGZvciBqUXVlcnkuYWpheFByZWZpbHRlciBhbmQgalF1ZXJ5LmFqYXhUcmFuc3BvcnRcbmZ1bmN0aW9uIGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggc3RydWN0dXJlICkge1xuXG5cdC8vIGRhdGFUeXBlRXhwcmVzc2lvbiBpcyBvcHRpb25hbCBhbmQgZGVmYXVsdHMgdG8gXCIqXCJcblx0cmV0dXJuIGZ1bmN0aW9uKCBkYXRhVHlwZUV4cHJlc3Npb24sIGZ1bmMgKSB7XG5cblx0XHRpZiAoIHR5cGVvZiBkYXRhVHlwZUV4cHJlc3Npb24gIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRmdW5jID0gZGF0YVR5cGVFeHByZXNzaW9uO1xuXHRcdFx0ZGF0YVR5cGVFeHByZXNzaW9uID0gXCIqXCI7XG5cdFx0fVxuXG5cdFx0dmFyIGRhdGFUeXBlLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRkYXRhVHlwZXMgPSBkYXRhVHlwZUV4cHJlc3Npb24udG9Mb3dlckNhc2UoKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdO1xuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBmdW5jICkgKSB7XG5cblx0XHRcdC8vIEZvciBlYWNoIGRhdGFUeXBlIGluIHRoZSBkYXRhVHlwZUV4cHJlc3Npb25cblx0XHRcdHdoaWxlICggKCBkYXRhVHlwZSA9IGRhdGFUeXBlc1sgaSsrIF0gKSApIHtcblxuXHRcdFx0XHQvLyBQcmVwZW5kIGlmIHJlcXVlc3RlZFxuXHRcdFx0XHRpZiAoIGRhdGFUeXBlWyAwIF0gPT09IFwiK1wiICkge1xuXHRcdFx0XHRcdGRhdGFUeXBlID0gZGF0YVR5cGUuc2xpY2UoIDEgKSB8fCBcIipcIjtcblx0XHRcdFx0XHQoIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSApLnVuc2hpZnQoIGZ1bmMgKTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UgYXBwZW5kXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS5wdXNoKCBmdW5jICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbi8vIEJhc2UgaW5zcGVjdGlvbiBmdW5jdGlvbiBmb3IgcHJlZmlsdGVycyBhbmQgdHJhbnNwb3J0c1xuZnVuY3Rpb24gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSwgb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApIHtcblxuXHR2YXIgaW5zcGVjdGVkID0ge30sXG5cdFx0c2Vla2luZ1RyYW5zcG9ydCA9ICggc3RydWN0dXJlID09PSB0cmFuc3BvcnRzICk7XG5cblx0ZnVuY3Rpb24gaW5zcGVjdCggZGF0YVR5cGUgKSB7XG5cdFx0dmFyIHNlbGVjdGVkO1xuXHRcdGluc3BlY3RlZFsgZGF0YVR5cGUgXSA9IHRydWU7XG5cdFx0alF1ZXJ5LmVhY2goIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSwgZnVuY3Rpb24oIF8sIHByZWZpbHRlck9yRmFjdG9yeSApIHtcblx0XHRcdHZhciBkYXRhVHlwZU9yVHJhbnNwb3J0ID0gcHJlZmlsdGVyT3JGYWN0b3J5KCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSICk7XG5cdFx0XHRpZiAoIHR5cGVvZiBkYXRhVHlwZU9yVHJhbnNwb3J0ID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCFzZWVraW5nVHJhbnNwb3J0ICYmICFpbnNwZWN0ZWRbIGRhdGFUeXBlT3JUcmFuc3BvcnQgXSApIHtcblxuXHRcdFx0XHRvcHRpb25zLmRhdGFUeXBlcy51bnNoaWZ0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdGluc3BlY3QoIGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fSBlbHNlIGlmICggc2Vla2luZ1RyYW5zcG9ydCApIHtcblx0XHRcdFx0cmV0dXJuICEoIHNlbGVjdGVkID0gZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0XHRyZXR1cm4gc2VsZWN0ZWQ7XG5cdH1cblxuXHRyZXR1cm4gaW5zcGVjdCggb3B0aW9ucy5kYXRhVHlwZXNbIDAgXSApIHx8ICFpbnNwZWN0ZWRbIFwiKlwiIF0gJiYgaW5zcGVjdCggXCIqXCIgKTtcbn1cblxuLy8gQSBzcGVjaWFsIGV4dGVuZCBmb3IgYWpheCBvcHRpb25zXG4vLyB0aGF0IHRha2VzIFwiZmxhdFwiIG9wdGlvbnMgKG5vdCB0byBiZSBkZWVwIGV4dGVuZGVkKVxuLy8gRml4ZXMgIzk4ODdcbmZ1bmN0aW9uIGFqYXhFeHRlbmQoIHRhcmdldCwgc3JjICkge1xuXHR2YXIga2V5LCBkZWVwLFxuXHRcdGZsYXRPcHRpb25zID0galF1ZXJ5LmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9ucyB8fCB7fTtcblxuXHRmb3IgKCBrZXkgaW4gc3JjICkge1xuXHRcdGlmICggc3JjWyBrZXkgXSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0KCBmbGF0T3B0aW9uc1sga2V5IF0gPyB0YXJnZXQgOiAoIGRlZXAgfHwgKCBkZWVwID0ge30gKSApIClbIGtleSBdID0gc3JjWyBrZXkgXTtcblx0XHR9XG5cdH1cblx0aWYgKCBkZWVwICkge1xuXHRcdGpRdWVyeS5leHRlbmQoIHRydWUsIHRhcmdldCwgZGVlcCApO1xuXHR9XG5cblx0cmV0dXJuIHRhcmdldDtcbn1cblxuLyogSGFuZGxlcyByZXNwb25zZXMgdG8gYW4gYWpheCByZXF1ZXN0OlxuICogLSBmaW5kcyB0aGUgcmlnaHQgZGF0YVR5cGUgKG1lZGlhdGVzIGJldHdlZW4gY29udGVudC10eXBlIGFuZCBleHBlY3RlZCBkYXRhVHlwZSlcbiAqIC0gcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyByZXNwb25zZVxuICovXG5mdW5jdGlvbiBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICkge1xuXG5cdHZhciBjdCwgdHlwZSwgZmluYWxEYXRhVHlwZSwgZmlyc3REYXRhVHlwZSxcblx0XHRjb250ZW50cyA9IHMuY29udGVudHMsXG5cdFx0ZGF0YVR5cGVzID0gcy5kYXRhVHlwZXM7XG5cblx0Ly8gUmVtb3ZlIGF1dG8gZGF0YVR5cGUgYW5kIGdldCBjb250ZW50LXR5cGUgaW4gdGhlIHByb2Nlc3Ncblx0d2hpbGUgKCBkYXRhVHlwZXNbIDAgXSA9PT0gXCIqXCIgKSB7XG5cdFx0ZGF0YVR5cGVzLnNoaWZ0KCk7XG5cdFx0aWYgKCBjdCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0Y3QgPSBzLm1pbWVUeXBlIHx8IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkNvbnRlbnQtVHlwZVwiICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ2hlY2sgaWYgd2UncmUgZGVhbGluZyB3aXRoIGEga25vd24gY29udGVudC10eXBlXG5cdGlmICggY3QgKSB7XG5cdFx0Zm9yICggdHlwZSBpbiBjb250ZW50cyApIHtcblx0XHRcdGlmICggY29udGVudHNbIHR5cGUgXSAmJiBjb250ZW50c1sgdHlwZSBdLnRlc3QoIGN0ICkgKSB7XG5cdFx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCB0eXBlICk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIHRvIHNlZSBpZiB3ZSBoYXZlIGEgcmVzcG9uc2UgZm9yIHRoZSBleHBlY3RlZCBkYXRhVHlwZVxuXHRpZiAoIGRhdGFUeXBlc1sgMCBdIGluIHJlc3BvbnNlcyApIHtcblx0XHRmaW5hbERhdGFUeXBlID0gZGF0YVR5cGVzWyAwIF07XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBUcnkgY29udmVydGlibGUgZGF0YVR5cGVzXG5cdFx0Zm9yICggdHlwZSBpbiByZXNwb25zZXMgKSB7XG5cdFx0XHRpZiAoICFkYXRhVHlwZXNbIDAgXSB8fCBzLmNvbnZlcnRlcnNbIHR5cGUgKyBcIiBcIiArIGRhdGFUeXBlc1sgMCBdIF0gKSB7XG5cdFx0XHRcdGZpbmFsRGF0YVR5cGUgPSB0eXBlO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGlmICggIWZpcnN0RGF0YVR5cGUgKSB7XG5cdFx0XHRcdGZpcnN0RGF0YVR5cGUgPSB0eXBlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIE9yIGp1c3QgdXNlIGZpcnN0IG9uZVxuXHRcdGZpbmFsRGF0YVR5cGUgPSBmaW5hbERhdGFUeXBlIHx8IGZpcnN0RGF0YVR5cGU7XG5cdH1cblxuXHQvLyBJZiB3ZSBmb3VuZCBhIGRhdGFUeXBlXG5cdC8vIFdlIGFkZCB0aGUgZGF0YVR5cGUgdG8gdGhlIGxpc3QgaWYgbmVlZGVkXG5cdC8vIGFuZCByZXR1cm4gdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2Vcblx0aWYgKCBmaW5hbERhdGFUeXBlICkge1xuXHRcdGlmICggZmluYWxEYXRhVHlwZSAhPT0gZGF0YVR5cGVzWyAwIF0gKSB7XG5cdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggZmluYWxEYXRhVHlwZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gcmVzcG9uc2VzWyBmaW5hbERhdGFUeXBlIF07XG5cdH1cbn1cblxuLyogQ2hhaW4gY29udmVyc2lvbnMgZ2l2ZW4gdGhlIHJlcXVlc3QgYW5kIHRoZSBvcmlnaW5hbCByZXNwb25zZVxuICogQWxzbyBzZXRzIHRoZSByZXNwb25zZVhYWCBmaWVsZHMgb24gdGhlIGpxWEhSIGluc3RhbmNlXG4gKi9cbmZ1bmN0aW9uIGFqYXhDb252ZXJ0KCBzLCByZXNwb25zZSwganFYSFIsIGlzU3VjY2VzcyApIHtcblx0dmFyIGNvbnYyLCBjdXJyZW50LCBjb252LCB0bXAsIHByZXYsXG5cdFx0Y29udmVydGVycyA9IHt9LFxuXG5cdFx0Ly8gV29yayB3aXRoIGEgY29weSBvZiBkYXRhVHlwZXMgaW4gY2FzZSB3ZSBuZWVkIHRvIG1vZGlmeSBpdCBmb3IgY29udmVyc2lvblxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzLnNsaWNlKCk7XG5cblx0Ly8gQ3JlYXRlIGNvbnZlcnRlcnMgbWFwIHdpdGggbG93ZXJjYXNlZCBrZXlzXG5cdGlmICggZGF0YVR5cGVzWyAxIF0gKSB7XG5cdFx0Zm9yICggY29udiBpbiBzLmNvbnZlcnRlcnMgKSB7XG5cdFx0XHRjb252ZXJ0ZXJzWyBjb252LnRvTG93ZXJDYXNlKCkgXSA9IHMuY29udmVydGVyc1sgY29udiBdO1xuXHRcdH1cblx0fVxuXG5cdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHQvLyBDb252ZXJ0IHRvIGVhY2ggc2VxdWVudGlhbCBkYXRhVHlwZVxuXHR3aGlsZSAoIGN1cnJlbnQgKSB7XG5cblx0XHRpZiAoIHMucmVzcG9uc2VGaWVsZHNbIGN1cnJlbnQgXSApIHtcblx0XHRcdGpxWEhSWyBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gXSA9IHJlc3BvbnNlO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHRoZSBkYXRhRmlsdGVyIGlmIHByb3ZpZGVkXG5cdFx0aWYgKCAhcHJldiAmJiBpc1N1Y2Nlc3MgJiYgcy5kYXRhRmlsdGVyICkge1xuXHRcdFx0cmVzcG9uc2UgPSBzLmRhdGFGaWx0ZXIoIHJlc3BvbnNlLCBzLmRhdGFUeXBlICk7XG5cdFx0fVxuXG5cdFx0cHJldiA9IGN1cnJlbnQ7XG5cdFx0Y3VycmVudCA9IGRhdGFUeXBlcy5zaGlmdCgpO1xuXG5cdFx0aWYgKCBjdXJyZW50ICkge1xuXG5cdFx0XHQvLyBUaGVyZSdzIG9ubHkgd29yayB0byBkbyBpZiBjdXJyZW50IGRhdGFUeXBlIGlzIG5vbi1hdXRvXG5cdFx0XHRpZiAoIGN1cnJlbnQgPT09IFwiKlwiICkge1xuXG5cdFx0XHRcdGN1cnJlbnQgPSBwcmV2O1xuXG5cdFx0XHQvLyBDb252ZXJ0IHJlc3BvbnNlIGlmIHByZXYgZGF0YVR5cGUgaXMgbm9uLWF1dG8gYW5kIGRpZmZlcnMgZnJvbSBjdXJyZW50XG5cdFx0XHR9IGVsc2UgaWYgKCBwcmV2ICE9PSBcIipcIiAmJiBwcmV2ICE9PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdC8vIFNlZWsgYSBkaXJlY3QgY29udmVydGVyXG5cdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBwcmV2ICsgXCIgXCIgKyBjdXJyZW50IF0gfHwgY29udmVydGVyc1sgXCIqIFwiICsgY3VycmVudCBdO1xuXG5cdFx0XHRcdC8vIElmIG5vbmUgZm91bmQsIHNlZWsgYSBwYWlyXG5cdFx0XHRcdGlmICggIWNvbnYgKSB7XG5cdFx0XHRcdFx0Zm9yICggY29udjIgaW4gY29udmVydGVycyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSWYgY29udjIgb3V0cHV0cyBjdXJyZW50XG5cdFx0XHRcdFx0XHR0bXAgPSBjb252Mi5zcGxpdCggXCIgXCIgKTtcblx0XHRcdFx0XHRcdGlmICggdG1wWyAxIF0gPT09IGN1cnJlbnQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gSWYgcHJldiBjYW4gYmUgY29udmVydGVkIHRvIGFjY2VwdGVkIGlucHV0XG5cdFx0XHRcdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBwcmV2ICsgXCIgXCIgKyB0bXBbIDAgXSBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0Y29udmVydGVyc1sgXCIqIFwiICsgdG1wWyAwIF0gXTtcblx0XHRcdFx0XHRcdFx0aWYgKCBjb252ICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQ29uZGVuc2UgZXF1aXZhbGVuY2UgY29udmVydGVyc1xuXHRcdFx0XHRcdFx0XHRcdGlmICggY29udiA9PT0gdHJ1ZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBjb252MiBdO1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCBpbnNlcnQgdGhlIGludGVybWVkaWF0ZSBkYXRhVHlwZVxuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIGNvbnZlcnRlcnNbIGNvbnYyIF0gIT09IHRydWUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjdXJyZW50ID0gdG1wWyAwIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdG1wWyAxIF0gKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBcHBseSBjb252ZXJ0ZXIgKGlmIG5vdCBhbiBlcXVpdmFsZW5jZSlcblx0XHRcdFx0aWYgKCBjb252ICE9PSB0cnVlICkge1xuXG5cdFx0XHRcdFx0Ly8gVW5sZXNzIGVycm9ycyBhcmUgYWxsb3dlZCB0byBidWJibGUsIGNhdGNoIGFuZCByZXR1cm4gdGhlbVxuXHRcdFx0XHRcdGlmICggY29udiAmJiBzLnRocm93cyApIHtcblx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHRcdFx0c3RhdGU6IFwicGFyc2VyZXJyb3JcIixcblx0XHRcdFx0XHRcdFx0XHRlcnJvcjogY29udiA/IGUgOiBcIk5vIGNvbnZlcnNpb24gZnJvbSBcIiArIHByZXYgKyBcIiB0byBcIiArIGN1cnJlbnRcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4geyBzdGF0ZTogXCJzdWNjZXNzXCIsIGRhdGE6IHJlc3BvbnNlIH07XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBDb3VudGVyIGZvciBob2xkaW5nIHRoZSBudW1iZXIgb2YgYWN0aXZlIHF1ZXJpZXNcblx0YWN0aXZlOiAwLFxuXG5cdC8vIExhc3QtTW9kaWZpZWQgaGVhZGVyIGNhY2hlIGZvciBuZXh0IHJlcXVlc3Rcblx0bGFzdE1vZGlmaWVkOiB7fSxcblx0ZXRhZzoge30sXG5cblx0YWpheFNldHRpbmdzOiB7XG5cdFx0dXJsOiBsb2NhdGlvbi5ocmVmLFxuXHRcdHR5cGU6IFwiR0VUXCIsXG5cdFx0aXNMb2NhbDogcmxvY2FsUHJvdG9jb2wudGVzdCggbG9jYXRpb24ucHJvdG9jb2wgKSxcblx0XHRnbG9iYWw6IHRydWUsXG5cdFx0cHJvY2Vzc0RhdGE6IHRydWUsXG5cdFx0YXN5bmM6IHRydWUsXG5cdFx0Y29udGVudFR5cGU6IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIsXG5cblx0XHQvKlxuXHRcdHRpbWVvdXQ6IDAsXG5cdFx0ZGF0YTogbnVsbCxcblx0XHRkYXRhVHlwZTogbnVsbCxcblx0XHR1c2VybmFtZTogbnVsbCxcblx0XHRwYXNzd29yZDogbnVsbCxcblx0XHRjYWNoZTogbnVsbCxcblx0XHR0aHJvd3M6IGZhbHNlLFxuXHRcdHRyYWRpdGlvbmFsOiBmYWxzZSxcblx0XHRoZWFkZXJzOiB7fSxcblx0XHQqL1xuXG5cdFx0YWNjZXB0czoge1xuXHRcdFx0XCIqXCI6IGFsbFR5cGVzLFxuXHRcdFx0dGV4dDogXCJ0ZXh0L3BsYWluXCIsXG5cdFx0XHRodG1sOiBcInRleHQvaHRtbFwiLFxuXHRcdFx0eG1sOiBcImFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWxcIixcblx0XHRcdGpzb246IFwiYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0XCJcblx0XHR9LFxuXG5cdFx0Y29udGVudHM6IHtcblx0XHRcdHhtbDogL1xcYnhtbFxcYi8sXG5cdFx0XHRodG1sOiAvXFxiaHRtbC8sXG5cdFx0XHRqc29uOiAvXFxianNvblxcYi9cblx0XHR9LFxuXG5cdFx0cmVzcG9uc2VGaWVsZHM6IHtcblx0XHRcdHhtbDogXCJyZXNwb25zZVhNTFwiLFxuXHRcdFx0dGV4dDogXCJyZXNwb25zZVRleHRcIixcblx0XHRcdGpzb246IFwicmVzcG9uc2VKU09OXCJcblx0XHR9LFxuXG5cdFx0Ly8gRGF0YSBjb252ZXJ0ZXJzXG5cdFx0Ly8gS2V5cyBzZXBhcmF0ZSBzb3VyY2UgKG9yIGNhdGNoYWxsIFwiKlwiKSBhbmQgZGVzdGluYXRpb24gdHlwZXMgd2l0aCBhIHNpbmdsZSBzcGFjZVxuXHRcdGNvbnZlcnRlcnM6IHtcblxuXHRcdFx0Ly8gQ29udmVydCBhbnl0aGluZyB0byB0ZXh0XG5cdFx0XHRcIiogdGV4dFwiOiBTdHJpbmcsXG5cblx0XHRcdC8vIFRleHQgdG8gaHRtbCAodHJ1ZSA9IG5vIHRyYW5zZm9ybWF0aW9uKVxuXHRcdFx0XCJ0ZXh0IGh0bWxcIjogdHJ1ZSxcblxuXHRcdFx0Ly8gRXZhbHVhdGUgdGV4dCBhcyBhIGpzb24gZXhwcmVzc2lvblxuXHRcdFx0XCJ0ZXh0IGpzb25cIjogSlNPTi5wYXJzZSxcblxuXHRcdFx0Ly8gUGFyc2UgdGV4dCBhcyB4bWxcblx0XHRcdFwidGV4dCB4bWxcIjogalF1ZXJ5LnBhcnNlWE1MXG5cdFx0fSxcblxuXHRcdC8vIEZvciBvcHRpb25zIHRoYXQgc2hvdWxkbid0IGJlIGRlZXAgZXh0ZW5kZWQ6XG5cdFx0Ly8geW91IGNhbiBhZGQgeW91ciBvd24gY3VzdG9tIG9wdGlvbnMgaGVyZSBpZlxuXHRcdC8vIGFuZCB3aGVuIHlvdSBjcmVhdGUgb25lIHRoYXQgc2hvdWxkbid0IGJlXG5cdFx0Ly8gZGVlcCBleHRlbmRlZCAoc2VlIGFqYXhFeHRlbmQpXG5cdFx0ZmxhdE9wdGlvbnM6IHtcblx0XHRcdHVybDogdHJ1ZSxcblx0XHRcdGNvbnRleHQ6IHRydWVcblx0XHR9XG5cdH0sXG5cblx0Ly8gQ3JlYXRlcyBhIGZ1bGwgZmxlZGdlZCBzZXR0aW5ncyBvYmplY3QgaW50byB0YXJnZXRcblx0Ly8gd2l0aCBib3RoIGFqYXhTZXR0aW5ncyBhbmQgc2V0dGluZ3MgZmllbGRzLlxuXHQvLyBJZiB0YXJnZXQgaXMgb21pdHRlZCwgd3JpdGVzIGludG8gYWpheFNldHRpbmdzLlxuXHRhamF4U2V0dXA6IGZ1bmN0aW9uKCB0YXJnZXQsIHNldHRpbmdzICkge1xuXHRcdHJldHVybiBzZXR0aW5ncyA/XG5cblx0XHRcdC8vIEJ1aWxkaW5nIGEgc2V0dGluZ3Mgb2JqZWN0XG5cdFx0XHRhamF4RXh0ZW5kKCBhamF4RXh0ZW5kKCB0YXJnZXQsIGpRdWVyeS5hamF4U2V0dGluZ3MgKSwgc2V0dGluZ3MgKSA6XG5cblx0XHRcdC8vIEV4dGVuZGluZyBhamF4U2V0dGluZ3Ncblx0XHRcdGFqYXhFeHRlbmQoIGpRdWVyeS5hamF4U2V0dGluZ3MsIHRhcmdldCApO1xuXHR9LFxuXG5cdGFqYXhQcmVmaWx0ZXI6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycyApLFxuXHRhamF4VHJhbnNwb3J0OiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMgKSxcblxuXHQvLyBNYWluIG1ldGhvZFxuXHRhamF4OiBmdW5jdGlvbiggdXJsLCBvcHRpb25zICkge1xuXG5cdFx0Ly8gSWYgdXJsIGlzIGFuIG9iamVjdCwgc2ltdWxhdGUgcHJlLTEuNSBzaWduYXR1cmVcblx0XHRpZiAoIHR5cGVvZiB1cmwgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRvcHRpb25zID0gdXJsO1xuXHRcdFx0dXJsID0gdW5kZWZpbmVkO1xuXHRcdH1cblxuXHRcdC8vIEZvcmNlIG9wdGlvbnMgdG8gYmUgYW4gb2JqZWN0XG5cdFx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0XHR2YXIgdHJhbnNwb3J0LFxuXG5cdFx0XHQvLyBVUkwgd2l0aG91dCBhbnRpLWNhY2hlIHBhcmFtXG5cdFx0XHRjYWNoZVVSTCxcblxuXHRcdFx0Ly8gUmVzcG9uc2UgaGVhZGVyc1xuXHRcdFx0cmVzcG9uc2VIZWFkZXJzU3RyaW5nLFxuXHRcdFx0cmVzcG9uc2VIZWFkZXJzLFxuXG5cdFx0XHQvLyB0aW1lb3V0IGhhbmRsZVxuXHRcdFx0dGltZW91dFRpbWVyLFxuXG5cdFx0XHQvLyBVcmwgY2xlYW51cCB2YXJcblx0XHRcdHVybEFuY2hvcixcblxuXHRcdFx0Ly8gUmVxdWVzdCBzdGF0ZSAoYmVjb21lcyBmYWxzZSB1cG9uIHNlbmQgYW5kIHRydWUgdXBvbiBjb21wbGV0aW9uKVxuXHRcdFx0Y29tcGxldGVkLFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIGdsb2JhbCBldmVudHMgYXJlIHRvIGJlIGRpc3BhdGNoZWRcblx0XHRcdGZpcmVHbG9iYWxzLFxuXG5cdFx0XHQvLyBMb29wIHZhcmlhYmxlXG5cdFx0XHRpLFxuXG5cdFx0XHQvLyB1bmNhY2hlZCBwYXJ0IG9mIHRoZSB1cmxcblx0XHRcdHVuY2FjaGVkLFxuXG5cdFx0XHQvLyBDcmVhdGUgdGhlIGZpbmFsIG9wdGlvbnMgb2JqZWN0XG5cdFx0XHRzID0galF1ZXJ5LmFqYXhTZXR1cCgge30sIG9wdGlvbnMgKSxcblxuXHRcdFx0Ly8gQ2FsbGJhY2tzIGNvbnRleHRcblx0XHRcdGNhbGxiYWNrQ29udGV4dCA9IHMuY29udGV4dCB8fCBzLFxuXG5cdFx0XHQvLyBDb250ZXh0IGZvciBnbG9iYWwgZXZlbnRzIGlzIGNhbGxiYWNrQ29udGV4dCBpZiBpdCBpcyBhIERPTSBub2RlIG9yIGpRdWVyeSBjb2xsZWN0aW9uXG5cdFx0XHRnbG9iYWxFdmVudENvbnRleHQgPSBzLmNvbnRleHQgJiZcblx0XHRcdFx0KCBjYWxsYmFja0NvbnRleHQubm9kZVR5cGUgfHwgY2FsbGJhY2tDb250ZXh0LmpxdWVyeSApID9cblx0XHRcdFx0XHRqUXVlcnkoIGNhbGxiYWNrQ29udGV4dCApIDpcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQsXG5cblx0XHRcdC8vIERlZmVycmVkc1xuXHRcdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQgPSBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcblxuXHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdHN0YXR1c0NvZGUgPSBzLnN0YXR1c0NvZGUgfHwge30sXG5cblx0XHRcdC8vIEhlYWRlcnMgKHRoZXkgYXJlIHNlbnQgYWxsIGF0IG9uY2UpXG5cdFx0XHRyZXF1ZXN0SGVhZGVycyA9IHt9LFxuXHRcdFx0cmVxdWVzdEhlYWRlcnNOYW1lcyA9IHt9LFxuXG5cdFx0XHQvLyBEZWZhdWx0IGFib3J0IG1lc3NhZ2Vcblx0XHRcdHN0ckFib3J0ID0gXCJjYW5jZWxlZFwiLFxuXG5cdFx0XHQvLyBGYWtlIHhoclxuXHRcdFx0anFYSFIgPSB7XG5cdFx0XHRcdHJlYWR5U3RhdGU6IDAsXG5cblx0XHRcdFx0Ly8gQnVpbGRzIGhlYWRlcnMgaGFzaHRhYmxlIGlmIG5lZWRlZFxuXHRcdFx0XHRnZXRSZXNwb25zZUhlYWRlcjogZnVuY3Rpb24oIGtleSApIHtcblx0XHRcdFx0XHR2YXIgbWF0Y2g7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0XHRpZiAoICFyZXNwb25zZUhlYWRlcnMgKSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVycyA9IHt9O1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoICggbWF0Y2ggPSByaGVhZGVycy5leGVjKCByZXNwb25zZUhlYWRlcnNTdHJpbmcgKSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVyc1sgbWF0Y2hbIDEgXS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXSA9XG5cdFx0XHRcdFx0XHRcdFx0XHQoIHJlc3BvbnNlSGVhZGVyc1sgbWF0Y2hbIDEgXS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXSB8fCBbXSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5jb25jYXQoIG1hdGNoWyAyIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0bWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoID09IG51bGwgPyBudWxsIDogbWF0Y2guam9pbiggXCIsIFwiICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gUmF3IHN0cmluZ1xuXHRcdFx0XHRnZXRBbGxSZXNwb25zZUhlYWRlcnM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBjb21wbGV0ZWQgPyByZXNwb25zZUhlYWRlcnNTdHJpbmcgOiBudWxsO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIENhY2hlcyB0aGUgaGVhZGVyXG5cdFx0XHRcdHNldFJlcXVlc3RIZWFkZXI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCA9PSBudWxsICkge1xuXHRcdFx0XHRcdFx0bmFtZSA9IHJlcXVlc3RIZWFkZXJzTmFtZXNbIG5hbWUudG9Mb3dlckNhc2UoKSBdID1cblx0XHRcdFx0XHRcdFx0cmVxdWVzdEhlYWRlcnNOYW1lc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHwgbmFtZTtcblx0XHRcdFx0XHRcdHJlcXVlc3RIZWFkZXJzWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gT3ZlcnJpZGVzIHJlc3BvbnNlIGNvbnRlbnQtdHlwZSBoZWFkZXJcblx0XHRcdFx0b3ZlcnJpZGVNaW1lVHlwZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdHMubWltZVR5cGUgPSB0eXBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0XHRzdGF0dXNDb2RlOiBmdW5jdGlvbiggbWFwICkge1xuXHRcdFx0XHRcdHZhciBjb2RlO1xuXHRcdFx0XHRcdGlmICggbWFwICkge1xuXHRcdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gRXhlY3V0ZSB0aGUgYXBwcm9wcmlhdGUgY2FsbGJhY2tzXG5cdFx0XHRcdFx0XHRcdGpxWEhSLmFsd2F5cyggbWFwWyBqcVhIUi5zdGF0dXMgXSApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBMYXp5LWFkZCB0aGUgbmV3IGNhbGxiYWNrcyBpbiBhIHdheSB0aGF0IHByZXNlcnZlcyBvbGQgb25lc1xuXHRcdFx0XHRcdFx0XHRmb3IgKCBjb2RlIGluIG1hcCApIHtcblx0XHRcdFx0XHRcdFx0XHRzdGF0dXNDb2RlWyBjb2RlIF0gPSBbIHN0YXR1c0NvZGVbIGNvZGUgXSwgbWFwWyBjb2RlIF0gXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBDYW5jZWwgdGhlIHJlcXVlc3Rcblx0XHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCBzdGF0dXNUZXh0ICkge1xuXHRcdFx0XHRcdHZhciBmaW5hbFRleHQgPSBzdGF0dXNUZXh0IHx8IHN0ckFib3J0O1xuXHRcdFx0XHRcdGlmICggdHJhbnNwb3J0ICkge1xuXHRcdFx0XHRcdFx0dHJhbnNwb3J0LmFib3J0KCBmaW5hbFRleHQgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZG9uZSggMCwgZmluYWxUZXh0ICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHQvLyBBdHRhY2ggZGVmZXJyZWRzXG5cdFx0ZGVmZXJyZWQucHJvbWlzZSgganFYSFIgKTtcblxuXHRcdC8vIEFkZCBwcm90b2NvbCBpZiBub3QgcHJvdmlkZWQgKHByZWZpbHRlcnMgbWlnaHQgZXhwZWN0IGl0KVxuXHRcdC8vIEhhbmRsZSBmYWxzeSB1cmwgaW4gdGhlIHNldHRpbmdzIG9iamVjdCAoIzEwMDkzOiBjb25zaXN0ZW5jeSB3aXRoIG9sZCBzaWduYXR1cmUpXG5cdFx0Ly8gV2UgYWxzbyB1c2UgdGhlIHVybCBwYXJhbWV0ZXIgaWYgYXZhaWxhYmxlXG5cdFx0cy51cmwgPSAoICggdXJsIHx8IHMudXJsIHx8IGxvY2F0aW9uLmhyZWYgKSArIFwiXCIgKVxuXHRcdFx0LnJlcGxhY2UoIHJwcm90b2NvbCwgbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKTtcblxuXHRcdC8vIEFsaWFzIG1ldGhvZCBvcHRpb24gdG8gdHlwZSBhcyBwZXIgdGlja2V0ICMxMjAwNFxuXHRcdHMudHlwZSA9IG9wdGlvbnMubWV0aG9kIHx8IG9wdGlvbnMudHlwZSB8fCBzLm1ldGhvZCB8fCBzLnR5cGU7XG5cblx0XHQvLyBFeHRyYWN0IGRhdGFUeXBlcyBsaXN0XG5cdFx0cy5kYXRhVHlwZXMgPSAoIHMuZGF0YVR5cGUgfHwgXCIqXCIgKS50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XG5cblx0XHQvLyBBIGNyb3NzLWRvbWFpbiByZXF1ZXN0IGlzIGluIG9yZGVyIHdoZW4gdGhlIG9yaWdpbiBkb2Vzbid0IG1hdGNoIHRoZSBjdXJyZW50IG9yaWdpbi5cblx0XHRpZiAoIHMuY3Jvc3NEb21haW4gPT0gbnVsbCApIHtcblx0XHRcdHVybEFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiYVwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCAtIDExLCBFZGdlIDEyIC0gMTVcblx0XHRcdC8vIElFIHRocm93cyBleGNlcHRpb24gb24gYWNjZXNzaW5nIHRoZSBocmVmIHByb3BlcnR5IGlmIHVybCBpcyBtYWxmb3JtZWQsXG5cdFx0XHQvLyBlLmcuIGh0dHA6Ly9leGFtcGxlLmNvbTo4MHgvXG5cdFx0XHR0cnkge1xuXHRcdFx0XHR1cmxBbmNob3IuaHJlZiA9IHMudXJsO1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCAtIDExIG9ubHlcblx0XHRcdFx0Ly8gQW5jaG9yJ3MgaG9zdCBwcm9wZXJ0eSBpc24ndCBjb3JyZWN0bHkgc2V0IHdoZW4gcy51cmwgaXMgcmVsYXRpdmVcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSB1cmxBbmNob3IuaHJlZjtcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IG9yaWdpbkFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIG9yaWdpbkFuY2hvci5ob3N0ICE9PVxuXHRcdFx0XHRcdHVybEFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIHVybEFuY2hvci5ob3N0O1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0Ly8gSWYgdGhlcmUgaXMgYW4gZXJyb3IgcGFyc2luZyB0aGUgVVJMLCBhc3N1bWUgaXQgaXMgY3Jvc3NEb21haW4sXG5cdFx0XHRcdC8vIGl0IGNhbiBiZSByZWplY3RlZCBieSB0aGUgdHJhbnNwb3J0IGlmIGl0IGlzIGludmFsaWRcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBkYXRhIGlmIG5vdCBhbHJlYWR5IGEgc3RyaW5nXG5cdFx0aWYgKCBzLmRhdGEgJiYgcy5wcm9jZXNzRGF0YSAmJiB0eXBlb2Ygcy5kYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cy5kYXRhID0galF1ZXJ5LnBhcmFtKCBzLmRhdGEsIHMudHJhZGl0aW9uYWwgKTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSBwcmVmaWx0ZXJzXG5cdFx0aW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhIHByZWZpbHRlciwgc3RvcCB0aGVyZVxuXHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0cmV0dXJuIGpxWEhSO1xuXHRcdH1cblxuXHRcdC8vIFdlIGNhbiBmaXJlIGdsb2JhbCBldmVudHMgYXMgb2Ygbm93IGlmIGFza2VkIHRvXG5cdFx0Ly8gRG9uJ3QgZmlyZSBldmVudHMgaWYgalF1ZXJ5LmV2ZW50IGlzIHVuZGVmaW5lZCBpbiBhbiBBTUQtdXNhZ2Ugc2NlbmFyaW8gKCMxNTExOClcblx0XHRmaXJlR2xvYmFscyA9IGpRdWVyeS5ldmVudCAmJiBzLmdsb2JhbDtcblxuXHRcdC8vIFdhdGNoIGZvciBhIG5ldyBzZXQgb2YgcmVxdWVzdHNcblx0XHRpZiAoIGZpcmVHbG9iYWxzICYmIGpRdWVyeS5hY3RpdmUrKyA9PT0gMCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdGFydFwiICk7XG5cdFx0fVxuXG5cdFx0Ly8gVXBwZXJjYXNlIHRoZSB0eXBlXG5cdFx0cy50eXBlID0gcy50eXBlLnRvVXBwZXJDYXNlKCk7XG5cblx0XHQvLyBEZXRlcm1pbmUgaWYgcmVxdWVzdCBoYXMgY29udGVudFxuXHRcdHMuaGFzQ29udGVudCA9ICFybm9Db250ZW50LnRlc3QoIHMudHlwZSApO1xuXG5cdFx0Ly8gU2F2ZSB0aGUgVVJMIGluIGNhc2Ugd2UncmUgdG95aW5nIHdpdGggdGhlIElmLU1vZGlmaWVkLVNpbmNlXG5cdFx0Ly8gYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyIGxhdGVyIG9uXG5cdFx0Ly8gUmVtb3ZlIGhhc2ggdG8gc2ltcGxpZnkgdXJsIG1hbmlwdWxhdGlvblxuXHRcdGNhY2hlVVJMID0gcy51cmwucmVwbGFjZSggcmhhc2gsIFwiXCIgKTtcblxuXHRcdC8vIE1vcmUgb3B0aW9ucyBoYW5kbGluZyBmb3IgcmVxdWVzdHMgd2l0aCBubyBjb250ZW50XG5cdFx0aWYgKCAhcy5oYXNDb250ZW50ICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgaGFzaCBzbyB3ZSBjYW4gcHV0IGl0IGJhY2tcblx0XHRcdHVuY2FjaGVkID0gcy51cmwuc2xpY2UoIGNhY2hlVVJMLmxlbmd0aCApO1xuXG5cdFx0XHQvLyBJZiBkYXRhIGlzIGF2YWlsYWJsZSBhbmQgc2hvdWxkIGJlIHByb2Nlc3NlZCwgYXBwZW5kIGRhdGEgdG8gdXJsXG5cdFx0XHRpZiAoIHMuZGF0YSAmJiAoIHMucHJvY2Vzc0RhdGEgfHwgdHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiApICkge1xuXHRcdFx0XHRjYWNoZVVSTCArPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgcy5kYXRhO1xuXG5cdFx0XHRcdC8vICM5NjgyOiByZW1vdmUgZGF0YSBzbyB0aGF0IGl0J3Mgbm90IHVzZWQgaW4gYW4gZXZlbnR1YWwgcmV0cnlcblx0XHRcdFx0ZGVsZXRlIHMuZGF0YTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIG9yIHVwZGF0ZSBhbnRpLWNhY2hlIHBhcmFtIGlmIG5lZWRlZFxuXHRcdFx0aWYgKCBzLmNhY2hlID09PSBmYWxzZSApIHtcblx0XHRcdFx0Y2FjaGVVUkwgPSBjYWNoZVVSTC5yZXBsYWNlKCByYW50aUNhY2hlLCBcIiQxXCIgKTtcblx0XHRcdFx0dW5jYWNoZWQgPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgXCJfPVwiICsgKCBub25jZS5ndWlkKysgKSArXG5cdFx0XHRcdFx0dW5jYWNoZWQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFB1dCBoYXNoIGFuZCBhbnRpLWNhY2hlIG9uIHRoZSBVUkwgdGhhdCB3aWxsIGJlIHJlcXVlc3RlZCAoZ2gtMTczMilcblx0XHRcdHMudXJsID0gY2FjaGVVUkwgKyB1bmNhY2hlZDtcblxuXHRcdC8vIENoYW5nZSAnJTIwJyB0byAnKycgaWYgdGhpcyBpcyBlbmNvZGVkIGZvcm0gYm9keSBjb250ZW50IChnaC0yNjU4KVxuXHRcdH0gZWxzZSBpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmXG5cdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApLmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCApIHtcblx0XHRcdHMuZGF0YSA9IHMuZGF0YS5yZXBsYWNlKCByMjAsIFwiK1wiICk7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS5cblx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdGlmICggalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHtcblx0XHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJJZi1Nb2RpZmllZC1TaW5jZVwiLCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU5vbmUtTWF0Y2hcIiwgalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnRcblx0XHRpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIsIHMuY29udGVudFR5cGUgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlXG5cdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlcihcblx0XHRcdFwiQWNjZXB0XCIsXG5cdFx0XHRzLmRhdGFUeXBlc1sgMCBdICYmIHMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbIDAgXSBdID9cblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gK1xuXHRcdFx0XHRcdCggcy5kYXRhVHlwZXNbIDAgXSAhPT0gXCIqXCIgPyBcIiwgXCIgKyBhbGxUeXBlcyArIFwiOyBxPTAuMDFcIiA6IFwiXCIgKSA6XG5cdFx0XHRcdHMuYWNjZXB0c1sgXCIqXCIgXVxuXHRcdCk7XG5cblx0XHQvLyBDaGVjayBmb3IgaGVhZGVycyBvcHRpb25cblx0XHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydFxuXHRcdGlmICggcy5iZWZvcmVTZW5kICYmXG5cdFx0XHQoIHMuYmVmb3JlU2VuZC5jYWxsKCBjYWxsYmFja0NvbnRleHQsIGpxWEhSLCBzICkgPT09IGZhbHNlIHx8IGNvbXBsZXRlZCApICkge1xuXG5cdFx0XHQvLyBBYm9ydCBpZiBub3QgZG9uZSBhbHJlYWR5IGFuZCByZXR1cm5cblx0XHRcdHJldHVybiBqcVhIUi5hYm9ydCgpO1xuXHRcdH1cblxuXHRcdC8vIEFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvblxuXHRcdHN0ckFib3J0ID0gXCJhYm9ydFwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzXG5cdFx0Y29tcGxldGVEZWZlcnJlZC5hZGQoIHMuY29tcGxldGUgKTtcblx0XHRqcVhIUi5kb25lKCBzLnN1Y2Nlc3MgKTtcblx0XHRqcVhIUi5mYWlsKCBzLmVycm9yICk7XG5cblx0XHQvLyBHZXQgdHJhbnNwb3J0XG5cdFx0dHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiBubyB0cmFuc3BvcnQsIHdlIGF1dG8tYWJvcnRcblx0XHRpZiAoICF0cmFuc3BvcnQgKSB7XG5cdFx0XHRkb25lKCAtMSwgXCJObyBUcmFuc3BvcnRcIiApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gMTtcblxuXHRcdFx0Ly8gU2VuZCBnbG9iYWwgZXZlbnRcblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhTZW5kXCIsIFsganFYSFIsIHMgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZVxuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybiBqcVhIUjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGltZW91dFxuXHRcdFx0aWYgKCBzLmFzeW5jICYmIHMudGltZW91dCA+IDAgKSB7XG5cdFx0XHRcdHRpbWVvdXRUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRqcVhIUi5hYm9ydCggXCJ0aW1lb3V0XCIgKTtcblx0XHRcdFx0fSwgcy50aW1lb3V0ICk7XG5cdFx0XHR9XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbXBsZXRlZCA9IGZhbHNlO1xuXHRcdFx0XHR0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRlcnMsIGRvbmUgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIFJldGhyb3cgcG9zdC1jb21wbGV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFByb3BhZ2F0ZSBvdGhlcnMgYXMgcmVzdWx0c1xuXHRcdFx0XHRkb25lKCAtMSwgZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGxiYWNrIGZvciB3aGVuIGV2ZXJ5dGhpbmcgaXMgZG9uZVxuXHRcdGZ1bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJzICkge1xuXHRcdFx0dmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCxcblx0XHRcdFx0c3RhdHVzVGV4dCA9IG5hdGl2ZVN0YXR1c1RleHQ7XG5cblx0XHRcdC8vIElnbm9yZSByZXBlYXQgaW52b2NhdGlvbnNcblx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGNvbXBsZXRlZCA9IHRydWU7XG5cblx0XHRcdC8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzXG5cdFx0XHRpZiAoIHRpbWVvdXRUaW1lciApIHtcblx0XHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXG5cdFx0XHQvLyAobm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqcVhIUiBvYmplY3Qgd2lsbCBiZSB1c2VkKVxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xuXG5cdFx0XHQvLyBDYWNoZSByZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XG5cblx0XHRcdC8vIFNldCByZWFkeVN0YXRlXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xuXG5cdFx0XHQvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bFxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XG5cblx0XHRcdC8vIEdldCByZXNwb25zZSBkYXRhXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFVzZSBhIG5vb3AgY29udmVydGVyIGZvciBtaXNzaW5nIHNjcmlwdFxuXHRcdFx0aWYgKCAhaXNTdWNjZXNzICYmIGpRdWVyeS5pbkFycmF5KCBcInNjcmlwdFwiLCBzLmRhdGFUeXBlcyApID4gLTEgKSB7XG5cdFx0XHRcdHMuY29udmVydGVyc1sgXCJ0ZXh0IHNjcmlwdFwiIF0gPSBmdW5jdGlvbigpIHt9O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb252ZXJ0IG5vIG1hdHRlciB3aGF0ICh0aGF0IHdheSByZXNwb25zZVhYWCBmaWVsZHMgYXJlIGFsd2F5cyBzZXQpXG5cdFx0XHRyZXNwb25zZSA9IGFqYXhDb252ZXJ0KCBzLCByZXNwb25zZSwganFYSFIsIGlzU3VjY2VzcyApO1xuXG5cdFx0XHQvLyBJZiBzdWNjZXNzZnVsLCBoYW5kbGUgdHlwZSBjaGFpbmluZ1xuXHRcdFx0aWYgKCBpc1N1Y2Nlc3MgKSB7XG5cblx0XHRcdFx0Ly8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS5cblx0XHRcdFx0aWYgKCBzLmlmTW9kaWZpZWQgKSB7XG5cdFx0XHRcdFx0bW9kaWZpZWQgPSBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJMYXN0LU1vZGlmaWVkXCIgKTtcblx0XHRcdFx0XHRpZiAoIG1vZGlmaWVkICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSA9IG1vZGlmaWVkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcImV0YWdcIiApO1xuXHRcdFx0XHRcdGlmICggbW9kaWZpZWQgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkuZXRhZ1sgY2FjaGVVUkwgXSA9IG1vZGlmaWVkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIGlmIG5vIGNvbnRlbnRcblx0XHRcdFx0aWYgKCBzdGF0dXMgPT09IDIwNCB8fCBzLnR5cGUgPT09IFwiSEVBRFwiICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcIm5vY29udGVudFwiO1xuXG5cdFx0XHRcdC8vIGlmIG5vdCBtb2RpZmllZFxuXHRcdFx0XHR9IGVsc2UgaWYgKCBzdGF0dXMgPT09IDMwNCApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJub3Rtb2RpZmllZFwiO1xuXG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgZGF0YSwgbGV0J3MgY29udmVydCBpdFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSByZXNwb25zZS5zdGF0ZTtcblx0XHRcdFx0XHRzdWNjZXNzID0gcmVzcG9uc2UuZGF0YTtcblx0XHRcdFx0XHRlcnJvciA9IHJlc3BvbnNlLmVycm9yO1xuXHRcdFx0XHRcdGlzU3VjY2VzcyA9ICFlcnJvcjtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQvLyBFeHRyYWN0IGVycm9yIGZyb20gc3RhdHVzVGV4dCBhbmQgbm9ybWFsaXplIGZvciBub24tYWJvcnRzXG5cdFx0XHRcdGVycm9yID0gc3RhdHVzVGV4dDtcblx0XHRcdFx0aWYgKCBzdGF0dXMgfHwgIXN0YXR1c1RleHQgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwiZXJyb3JcIjtcblx0XHRcdFx0XHRpZiAoIHN0YXR1cyA8IDAgKSB7XG5cdFx0XHRcdFx0XHRzdGF0dXMgPSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZXQgZGF0YSBmb3IgdGhlIGZha2UgeGhyIG9iamVjdFxuXHRcdFx0anFYSFIuc3RhdHVzID0gc3RhdHVzO1xuXHRcdFx0anFYSFIuc3RhdHVzVGV4dCA9ICggbmF0aXZlU3RhdHVzVGV4dCB8fCBzdGF0dXNUZXh0ICkgKyBcIlwiO1xuXG5cdFx0XHQvLyBTdWNjZXNzL0Vycm9yXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcblx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBzdWNjZXNzLCBzdGF0dXNUZXh0LCBqcVhIUiBdICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsganFYSFIsIHN0YXR1c1RleHQsIGVycm9yIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdGpxWEhSLnN0YXR1c0NvZGUoIHN0YXR1c0NvZGUgKTtcblx0XHRcdHN0YXR1c0NvZGUgPSB1bmRlZmluZWQ7XG5cblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBpc1N1Y2Nlc3MgPyBcImFqYXhTdWNjZXNzXCIgOiBcImFqYXhFcnJvclwiLFxuXHRcdFx0XHRcdFsganFYSFIsIHMsIGlzU3VjY2VzcyA/IHN1Y2Nlc3MgOiBlcnJvciBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbXBsZXRlXG5cdFx0XHRjb21wbGV0ZURlZmVycmVkLmZpcmVXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsganFYSFIsIHN0YXR1c1RleHQgXSApO1xuXG5cdFx0XHRpZiAoIGZpcmVHbG9iYWxzICkge1xuXHRcdFx0XHRnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggXCJhamF4Q29tcGxldGVcIiwgWyBqcVhIUiwgcyBdICk7XG5cblx0XHRcdFx0Ly8gSGFuZGxlIHRoZSBnbG9iYWwgQUpBWCBjb3VudGVyXG5cdFx0XHRcdGlmICggISggLS1qUXVlcnkuYWN0aXZlICkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIFwiYWpheFN0b3BcIiApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpxWEhSO1xuXHR9LFxuXG5cdGdldEpTT046IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ2V0KCB1cmwsIGRhdGEsIGNhbGxiYWNrLCBcImpzb25cIiApO1xuXHR9LFxuXG5cdGdldFNjcmlwdDogZnVuY3Rpb24oIHVybCwgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgdW5kZWZpbmVkLCBjYWxsYmFjaywgXCJzY3JpcHRcIiApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwiZ2V0XCIsIFwicG9zdFwiIF0sIGZ1bmN0aW9uKCBfaSwgbWV0aG9kICkge1xuXHRqUXVlcnlbIG1ldGhvZCBdID0gZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2ssIHR5cGUgKSB7XG5cblx0XHQvLyBTaGlmdCBhcmd1bWVudHMgaWYgZGF0YSBhcmd1bWVudCB3YXMgb21pdHRlZFxuXHRcdGlmICggaXNGdW5jdGlvbiggZGF0YSApICkge1xuXHRcdFx0dHlwZSA9IHR5cGUgfHwgY2FsbGJhY2s7XG5cdFx0XHRjYWxsYmFjayA9IGRhdGE7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH1cblxuXHRcdC8vIFRoZSB1cmwgY2FuIGJlIGFuIG9wdGlvbnMgb2JqZWN0ICh3aGljaCB0aGVuIG11c3QgaGF2ZSAudXJsKVxuXHRcdHJldHVybiBqUXVlcnkuYWpheCggalF1ZXJ5LmV4dGVuZCgge1xuXHRcdFx0dXJsOiB1cmwsXG5cdFx0XHR0eXBlOiBtZXRob2QsXG5cdFx0XHRkYXRhVHlwZTogdHlwZSxcblx0XHRcdGRhdGE6IGRhdGEsXG5cdFx0XHRzdWNjZXNzOiBjYWxsYmFja1xuXHRcdH0sIGpRdWVyeS5pc1BsYWluT2JqZWN0KCB1cmwgKSAmJiB1cmwgKSApO1xuXHR9O1xufSApO1xuXG5qUXVlcnkuYWpheFByZWZpbHRlciggZnVuY3Rpb24oIHMgKSB7XG5cdHZhciBpO1xuXHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcblx0XHRpZiAoIGkudG9Mb3dlckNhc2UoKSA9PT0gXCJjb250ZW50LXR5cGVcIiApIHtcblx0XHRcdHMuY29udGVudFR5cGUgPSBzLmhlYWRlcnNbIGkgXSB8fCBcIlwiO1xuXHRcdH1cblx0fVxufSApO1xuXG5cbmpRdWVyeS5fZXZhbFVybCA9IGZ1bmN0aW9uKCB1cmwsIG9wdGlvbnMsIGRvYyApIHtcblx0cmV0dXJuIGpRdWVyeS5hamF4KCB7XG5cdFx0dXJsOiB1cmwsXG5cblx0XHQvLyBNYWtlIHRoaXMgZXhwbGljaXQsIHNpbmNlIHVzZXIgY2FuIG92ZXJyaWRlIHRoaXMgdGhyb3VnaCBhamF4U2V0dXAgKCMxMTI2NClcblx0XHR0eXBlOiBcIkdFVFwiLFxuXHRcdGRhdGFUeXBlOiBcInNjcmlwdFwiLFxuXHRcdGNhY2hlOiB0cnVlLFxuXHRcdGFzeW5jOiBmYWxzZSxcblx0XHRnbG9iYWw6IGZhbHNlLFxuXG5cdFx0Ly8gT25seSBldmFsdWF0ZSB0aGUgcmVzcG9uc2UgaWYgaXQgaXMgc3VjY2Vzc2Z1bCAoZ2gtNDEyNilcblx0XHQvLyBkYXRhRmlsdGVyIGlzIG5vdCBpbnZva2VkIGZvciBmYWlsdXJlIHJlc3BvbnNlcywgc28gdXNpbmcgaXQgaW5zdGVhZFxuXHRcdC8vIG9mIHRoZSBkZWZhdWx0IGNvbnZlcnRlciBpcyBrbHVkZ3kgYnV0IGl0IHdvcmtzLlxuXHRcdGNvbnZlcnRlcnM6IHtcblx0XHRcdFwidGV4dCBzY3JpcHRcIjogZnVuY3Rpb24oKSB7fVxuXHRcdH0sXG5cdFx0ZGF0YUZpbHRlcjogZnVuY3Rpb24oIHJlc3BvbnNlICkge1xuXHRcdFx0alF1ZXJ5Lmdsb2JhbEV2YWwoIHJlc3BvbnNlLCBvcHRpb25zLCBkb2MgKTtcblx0XHR9XG5cdH0gKTtcbn07XG5cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHR3cmFwQWxsOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHR2YXIgd3JhcDtcblxuXHRcdGlmICggdGhpc1sgMCBdICkge1xuXHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRcdGh0bWwgPSBodG1sLmNhbGwoIHRoaXNbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUaGUgZWxlbWVudHMgdG8gd3JhcCB0aGUgdGFyZ2V0IGFyb3VuZFxuXHRcdFx0d3JhcCA9IGpRdWVyeSggaHRtbCwgdGhpc1sgMCBdLm93bmVyRG9jdW1lbnQgKS5lcSggMCApLmNsb25lKCB0cnVlICk7XG5cblx0XHRcdGlmICggdGhpc1sgMCBdLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHdyYXAuaW5zZXJ0QmVmb3JlKCB0aGlzWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0d3JhcC5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgZWxlbSA9IHRoaXM7XG5cblx0XHRcdFx0d2hpbGUgKCBlbGVtLmZpcnN0RWxlbWVudENoaWxkICkge1xuXHRcdFx0XHRcdGVsZW0gPSBlbGVtLmZpcnN0RWxlbWVudENoaWxkO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIGVsZW07XG5cdFx0XHR9ICkuYXBwZW5kKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0d3JhcElubmVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIGh0bWwgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS53cmFwSW5uZXIoIGh0bWwuY2FsbCggdGhpcywgaSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IGpRdWVyeSggdGhpcyApLFxuXHRcdFx0XHRjb250ZW50cyA9IHNlbGYuY29udGVudHMoKTtcblxuXHRcdFx0aWYgKCBjb250ZW50cy5sZW5ndGggKSB7XG5cdFx0XHRcdGNvbnRlbnRzLndyYXBBbGwoIGh0bWwgKTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0c2VsZi5hcHBlbmQoIGh0bWwgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0d3JhcDogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0dmFyIGh0bWxJc0Z1bmN0aW9uID0gaXNGdW5jdGlvbiggaHRtbCApO1xuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRqUXVlcnkoIHRoaXMgKS53cmFwQWxsKCBodG1sSXNGdW5jdGlvbiA/IGh0bWwuY2FsbCggdGhpcywgaSApIDogaHRtbCApO1xuXHRcdH0gKTtcblx0fSxcblxuXHR1bndyYXA6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR0aGlzLnBhcmVudCggc2VsZWN0b3IgKS5ub3QoIFwiYm9keVwiICkuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkoIHRoaXMgKS5yZXBsYWNlV2l0aCggdGhpcy5jaGlsZE5vZGVzICk7XG5cdFx0fSApO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9XG59ICk7XG5cblxualF1ZXJ5LmV4cHIucHNldWRvcy5oaWRkZW4gPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuICFqUXVlcnkuZXhwci5wc2V1ZG9zLnZpc2libGUoIGVsZW0gKTtcbn07XG5qUXVlcnkuZXhwci5wc2V1ZG9zLnZpc2libGUgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuICEhKCBlbGVtLm9mZnNldFdpZHRoIHx8IGVsZW0ub2Zmc2V0SGVpZ2h0IHx8IGVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKTtcbn07XG5cblxuXG5cbmpRdWVyeS5hamF4U2V0dGluZ3MueGhyID0gZnVuY3Rpb24oKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIG5ldyB3aW5kb3cuWE1MSHR0cFJlcXVlc3QoKTtcblx0fSBjYXRjaCAoIGUgKSB7fVxufTtcblxudmFyIHhoclN1Y2Nlc3NTdGF0dXMgPSB7XG5cblx0XHQvLyBGaWxlIHByb3RvY29sIGFsd2F5cyB5aWVsZHMgc3RhdHVzIGNvZGUgMCwgYXNzdW1lIDIwMFxuXHRcdDA6IDIwMCxcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0Ly8gIzE0NTA6IHNvbWV0aW1lcyBJRSByZXR1cm5zIDEyMjMgd2hlbiBpdCBzaG91bGQgYmUgMjA0XG5cdFx0MTIyMzogMjA0XG5cdH0sXG5cdHhoclN1cHBvcnRlZCA9IGpRdWVyeS5hamF4U2V0dGluZ3MueGhyKCk7XG5cbnN1cHBvcnQuY29ycyA9ICEheGhyU3VwcG9ydGVkICYmICggXCJ3aXRoQ3JlZGVudGlhbHNcIiBpbiB4aHJTdXBwb3J0ZWQgKTtcbnN1cHBvcnQuYWpheCA9IHhoclN1cHBvcnRlZCA9ICEheGhyU3VwcG9ydGVkO1xuXG5qUXVlcnkuYWpheFRyYW5zcG9ydCggZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cdHZhciBjYWxsYmFjaywgZXJyb3JDYWxsYmFjaztcblxuXHQvLyBDcm9zcyBkb21haW4gb25seSBhbGxvd2VkIGlmIHN1cHBvcnRlZCB0aHJvdWdoIFhNTEh0dHBSZXF1ZXN0XG5cdGlmICggc3VwcG9ydC5jb3JzIHx8IHhoclN1cHBvcnRlZCAmJiAhb3B0aW9ucy5jcm9zc0RvbWFpbiApIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0c2VuZDogZnVuY3Rpb24oIGhlYWRlcnMsIGNvbXBsZXRlICkge1xuXHRcdFx0XHR2YXIgaSxcblx0XHRcdFx0XHR4aHIgPSBvcHRpb25zLnhocigpO1xuXG5cdFx0XHRcdHhoci5vcGVuKFxuXHRcdFx0XHRcdG9wdGlvbnMudHlwZSxcblx0XHRcdFx0XHRvcHRpb25zLnVybCxcblx0XHRcdFx0XHRvcHRpb25zLmFzeW5jLFxuXHRcdFx0XHRcdG9wdGlvbnMudXNlcm5hbWUsXG5cdFx0XHRcdFx0b3B0aW9ucy5wYXNzd29yZFxuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdC8vIEFwcGx5IGN1c3RvbSBmaWVsZHMgaWYgcHJvdmlkZWRcblx0XHRcdFx0aWYgKCBvcHRpb25zLnhockZpZWxkcyApIHtcblx0XHRcdFx0XHRmb3IgKCBpIGluIG9wdGlvbnMueGhyRmllbGRzICkge1xuXHRcdFx0XHRcdFx0eGhyWyBpIF0gPSBvcHRpb25zLnhockZpZWxkc1sgaSBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIE92ZXJyaWRlIG1pbWUgdHlwZSBpZiBuZWVkZWRcblx0XHRcdFx0aWYgKCBvcHRpb25zLm1pbWVUeXBlICYmIHhoci5vdmVycmlkZU1pbWVUeXBlICkge1xuXHRcdFx0XHRcdHhoci5vdmVycmlkZU1pbWVUeXBlKCBvcHRpb25zLm1pbWVUeXBlICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBYLVJlcXVlc3RlZC1XaXRoIGhlYWRlclxuXHRcdFx0XHQvLyBGb3IgY3Jvc3MtZG9tYWluIHJlcXVlc3RzLCBzZWVpbmcgYXMgY29uZGl0aW9ucyBmb3IgYSBwcmVmbGlnaHQgYXJlXG5cdFx0XHRcdC8vIGFraW4gdG8gYSBqaWdzYXcgcHV6emxlLCB3ZSBzaW1wbHkgbmV2ZXIgc2V0IGl0IHRvIGJlIHN1cmUuXG5cdFx0XHRcdC8vIChpdCBjYW4gYWx3YXlzIGJlIHNldCBvbiBhIHBlci1yZXF1ZXN0IGJhc2lzIG9yIGV2ZW4gdXNpbmcgYWpheFNldHVwKVxuXHRcdFx0XHQvLyBGb3Igc2FtZS1kb21haW4gcmVxdWVzdHMsIHdvbid0IGNoYW5nZSBoZWFkZXIgaWYgYWxyZWFkeSBwcm92aWRlZC5cblx0XHRcdFx0aWYgKCAhb3B0aW9ucy5jcm9zc0RvbWFpbiAmJiAhaGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSApIHtcblx0XHRcdFx0XHRoZWFkZXJzWyBcIlgtUmVxdWVzdGVkLVdpdGhcIiBdID0gXCJYTUxIdHRwUmVxdWVzdFwiO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU2V0IGhlYWRlcnNcblx0XHRcdFx0Zm9yICggaSBpbiBoZWFkZXJzICkge1xuXHRcdFx0XHRcdHhoci5zZXRSZXF1ZXN0SGVhZGVyKCBpLCBoZWFkZXJzWyBpIF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIENhbGxiYWNrXG5cdFx0XHRcdGNhbGxiYWNrID0gZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBlcnJvckNhbGxiYWNrID0geGhyLm9ubG9hZCA9XG5cdFx0XHRcdFx0XHRcdFx0eGhyLm9uZXJyb3IgPSB4aHIub25hYm9ydCA9IHhoci5vbnRpbWVvdXQgPVxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG51bGw7XG5cblx0XHRcdFx0XHRcdFx0aWYgKCB0eXBlID09PSBcImFib3J0XCIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0eGhyLmFib3J0KCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIHR5cGUgPT09IFwiZXJyb3JcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0Ly8gT24gYSBtYW51YWwgbmF0aXZlIGFib3J0LCBJRTkgdGhyb3dzXG5cdFx0XHRcdFx0XHRcdFx0Ly8gZXJyb3JzIG9uIGFueSBwcm9wZXJ0eSBhY2Nlc3MgdGhhdCBpcyBub3QgcmVhZHlTdGF0ZVxuXHRcdFx0XHRcdFx0XHRcdGlmICggdHlwZW9mIHhoci5zdGF0dXMgIT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZSggMCwgXCJlcnJvclwiICk7XG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKFxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIEZpbGU6IHByb3RvY29sIGFsd2F5cyB5aWVsZHMgc3RhdHVzIDA7IHNlZSAjODYwNSwgIzE0MjA3XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXMsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXNUZXh0XG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZShcblx0XHRcdFx0XHRcdFx0XHRcdHhoclN1Y2Nlc3NTdGF0dXNbIHhoci5zdGF0dXMgXSB8fCB4aHIuc3RhdHVzLFxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1c1RleHQsXG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBJRTkgaGFzIG5vIFhIUjIgYnV0IHRocm93cyBvbiBiaW5hcnkgKHRyYWMtMTE0MjYpXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBGb3IgWEhSMiBub24tdGV4dCwgbGV0IHRoZSBjYWxsZXIgaGFuZGxlIGl0IChnaC0yNDk4KVxuXHRcdFx0XHRcdFx0XHRcdFx0KCB4aHIucmVzcG9uc2VUeXBlIHx8IFwidGV4dFwiICkgIT09IFwidGV4dFwiICB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0dHlwZW9mIHhoci5yZXNwb25zZVRleHQgIT09IFwic3RyaW5nXCIgP1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR7IGJpbmFyeTogeGhyLnJlc3BvbnNlIH0gOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHR7IHRleHQ6IHhoci5yZXNwb25zZVRleHQgfSxcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKVxuXHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdC8vIExpc3RlbiB0byBldmVudHNcblx0XHRcdFx0eGhyLm9ubG9hZCA9IGNhbGxiYWNrKCk7XG5cdFx0XHRcdGVycm9yQ2FsbGJhY2sgPSB4aHIub25lcnJvciA9IHhoci5vbnRpbWVvdXQgPSBjYWxsYmFjayggXCJlcnJvclwiICk7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgOSBvbmx5XG5cdFx0XHRcdC8vIFVzZSBvbnJlYWR5c3RhdGVjaGFuZ2UgdG8gcmVwbGFjZSBvbmFib3J0XG5cdFx0XHRcdC8vIHRvIGhhbmRsZSB1bmNhdWdodCBhYm9ydHNcblx0XHRcdFx0aWYgKCB4aHIub25hYm9ydCAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHhoci5vbmFib3J0ID0gZXJyb3JDYWxsYmFjaztcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRcdC8vIENoZWNrIHJlYWR5U3RhdGUgYmVmb3JlIHRpbWVvdXQgYXMgaXQgY2hhbmdlc1xuXHRcdFx0XHRcdFx0aWYgKCB4aHIucmVhZHlTdGF0ZSA9PT0gNCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBBbGxvdyBvbmVycm9yIHRvIGJlIGNhbGxlZCBmaXJzdCxcblx0XHRcdFx0XHRcdFx0Ly8gYnV0IHRoYXQgd2lsbCBub3QgaGFuZGxlIGEgbmF0aXZlIGFib3J0XG5cdFx0XHRcdFx0XHRcdC8vIEFsc28sIHNhdmUgZXJyb3JDYWxsYmFjayB0byBhIHZhcmlhYmxlXG5cdFx0XHRcdFx0XHRcdC8vIGFzIHhoci5vbmVycm9yIGNhbm5vdCBiZSBhY2Nlc3NlZFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGVycm9yQ2FsbGJhY2soKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQ3JlYXRlIHRoZSBhYm9ydCBjYWxsYmFja1xuXHRcdFx0XHRjYWxsYmFjayA9IGNhbGxiYWNrKCBcImFib3J0XCIgKTtcblxuXHRcdFx0XHR0cnkge1xuXG5cdFx0XHRcdFx0Ly8gRG8gc2VuZCB0aGUgcmVxdWVzdCAodGhpcyBtYXkgcmFpc2UgYW4gZXhjZXB0aW9uKVxuXHRcdFx0XHRcdHhoci5zZW5kKCBvcHRpb25zLmhhc0NvbnRlbnQgJiYgb3B0aW9ucy5kYXRhIHx8IG51bGwgKTtcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0XHQvLyAjMTQ2ODM6IE9ubHkgcmV0aHJvdyBpZiB0aGlzIGhhc24ndCBiZWVuIG5vdGlmaWVkIGFzIGFuIGVycm9yIHlldFxuXHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHR0aHJvdyBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFByZXZlbnQgYXV0by1leGVjdXRpb24gb2Ygc2NyaXB0cyB3aGVuIG5vIGV4cGxpY2l0IGRhdGFUeXBlIHdhcyBwcm92aWRlZCAoU2VlIGdoLTI0MzIpXG5qUXVlcnkuYWpheFByZWZpbHRlciggZnVuY3Rpb24oIHMgKSB7XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLmNvbnRlbnRzLnNjcmlwdCA9IGZhbHNlO1xuXHR9XG59ICk7XG5cbi8vIEluc3RhbGwgc2NyaXB0IGRhdGFUeXBlXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGFjY2VwdHM6IHtcblx0XHRzY3JpcHQ6IFwidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBcIiArXG5cdFx0XHRcImFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdFwiXG5cdH0sXG5cdGNvbnRlbnRzOiB7XG5cdFx0c2NyaXB0OiAvXFxiKD86amF2YXxlY21hKXNjcmlwdFxcYi9cblx0fSxcblx0Y29udmVydGVyczoge1xuXHRcdFwidGV4dCBzY3JpcHRcIjogZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggdGV4dCApO1xuXHRcdFx0cmV0dXJuIHRleHQ7XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIEhhbmRsZSBjYWNoZSdzIHNwZWNpYWwgY2FzZSBhbmQgY3Jvc3NEb21haW5cbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0cy5jYWNoZSA9IGZhbHNlO1xuXHR9XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLnR5cGUgPSBcIkdFVFwiO1xuXHR9XG59ICk7XG5cbi8vIEJpbmQgc2NyaXB0IHRhZyBoYWNrIHRyYW5zcG9ydFxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIFwic2NyaXB0XCIsIGZ1bmN0aW9uKCBzICkge1xuXG5cdC8vIFRoaXMgdHJhbnNwb3J0IG9ubHkgZGVhbHMgd2l0aCBjcm9zcyBkb21haW4gb3IgZm9yY2VkLWJ5LWF0dHJzIHJlcXVlc3RzXG5cdGlmICggcy5jcm9zc0RvbWFpbiB8fCBzLnNjcmlwdEF0dHJzICkge1xuXHRcdHZhciBzY3JpcHQsIGNhbGxiYWNrO1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggXywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHNjcmlwdCA9IGpRdWVyeSggXCI8c2NyaXB0PlwiIClcblx0XHRcdFx0XHQuYXR0ciggcy5zY3JpcHRBdHRycyB8fCB7fSApXG5cdFx0XHRcdFx0LnByb3AoIHsgY2hhcnNldDogcy5zY3JpcHRDaGFyc2V0LCBzcmM6IHMudXJsIH0gKVxuXHRcdFx0XHRcdC5vbiggXCJsb2FkIGVycm9yXCIsIGNhbGxiYWNrID0gZnVuY3Rpb24oIGV2dCApIHtcblx0XHRcdFx0XHRcdHNjcmlwdC5yZW1vdmUoKTtcblx0XHRcdFx0XHRcdGNhbGxiYWNrID0gbnVsbDtcblx0XHRcdFx0XHRcdGlmICggZXZ0ICkge1xuXHRcdFx0XHRcdFx0XHRjb21wbGV0ZSggZXZ0LnR5cGUgPT09IFwiZXJyb3JcIiA/IDQwNCA6IDIwMCwgZXZ0LnR5cGUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9ICk7XG5cblx0XHRcdFx0Ly8gVXNlIG5hdGl2ZSBET00gbWFuaXB1bGF0aW9uIHRvIGF2b2lkIG91ciBkb21NYW5pcCBBSkFYIHRyaWNrZXJ5XG5cdFx0XHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoIHNjcmlwdFsgMCBdICk7XG5cdFx0XHR9LFxuXHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbnZhciBvbGRDYWxsYmFja3MgPSBbXSxcblx0cmpzb25wID0gLyg9KVxcPyg/PSZ8JCl8XFw/XFw/LztcblxuLy8gRGVmYXVsdCBqc29ucCBzZXR0aW5nc1xualF1ZXJ5LmFqYXhTZXR1cCgge1xuXHRqc29ucDogXCJjYWxsYmFja1wiLFxuXHRqc29ucENhbGxiYWNrOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgY2FsbGJhY2sgPSBvbGRDYWxsYmFja3MucG9wKCkgfHwgKCBqUXVlcnkuZXhwYW5kbyArIFwiX1wiICsgKCBub25jZS5ndWlkKysgKSApO1xuXHRcdHRoaXNbIGNhbGxiYWNrIF0gPSB0cnVlO1xuXHRcdHJldHVybiBjYWxsYmFjaztcblx0fVxufSApO1xuXG4vLyBEZXRlY3QsIG5vcm1hbGl6ZSBvcHRpb25zIGFuZCBpbnN0YWxsIGNhbGxiYWNrcyBmb3IganNvbnAgcmVxdWVzdHNcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcImpzb24ganNvbnBcIiwgZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkge1xuXG5cdHZhciBjYWxsYmFja05hbWUsIG92ZXJ3cml0dGVuLCByZXNwb25zZUNvbnRhaW5lcixcblx0XHRqc29uUHJvcCA9IHMuanNvbnAgIT09IGZhbHNlICYmICggcmpzb25wLnRlc3QoIHMudXJsICkgP1xuXHRcdFx0XCJ1cmxcIiA6XG5cdFx0XHR0eXBlb2Ygcy5kYXRhID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiIClcblx0XHRcdFx0XHQuaW5kZXhPZiggXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiApID09PSAwICYmXG5cdFx0XHRcdHJqc29ucC50ZXN0KCBzLmRhdGEgKSAmJiBcImRhdGFcIlxuXHRcdCk7XG5cblx0Ly8gSGFuZGxlIGlmZiB0aGUgZXhwZWN0ZWQgZGF0YSB0eXBlIGlzIFwianNvbnBcIiBvciB3ZSBoYXZlIGEgcGFyYW1ldGVyIHRvIHNldFxuXHRpZiAoIGpzb25Qcm9wIHx8IHMuZGF0YVR5cGVzWyAwIF0gPT09IFwianNvbnBcIiApIHtcblxuXHRcdC8vIEdldCBjYWxsYmFjayBuYW1lLCByZW1lbWJlcmluZyBwcmVleGlzdGluZyB2YWx1ZSBhc3NvY2lhdGVkIHdpdGggaXRcblx0XHRjYWxsYmFja05hbWUgPSBzLmpzb25wQ2FsbGJhY2sgPSBpc0Z1bmN0aW9uKCBzLmpzb25wQ2FsbGJhY2sgKSA/XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2soKSA6XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2s7XG5cblx0XHQvLyBJbnNlcnQgY2FsbGJhY2sgaW50byB1cmwgb3IgZm9ybSBkYXRhXG5cdFx0aWYgKCBqc29uUHJvcCApIHtcblx0XHRcdHNbIGpzb25Qcm9wIF0gPSBzWyBqc29uUHJvcCBdLnJlcGxhY2UoIHJqc29ucCwgXCIkMVwiICsgY2FsbGJhY2tOYW1lICk7XG5cdFx0fSBlbHNlIGlmICggcy5qc29ucCAhPT0gZmFsc2UgKSB7XG5cdFx0XHRzLnVybCArPSAoIHJxdWVyeS50ZXN0KCBzLnVybCApID8gXCImXCIgOiBcIj9cIiApICsgcy5qc29ucCArIFwiPVwiICsgY2FsbGJhY2tOYW1lO1xuXHRcdH1cblxuXHRcdC8vIFVzZSBkYXRhIGNvbnZlcnRlciB0byByZXRyaWV2ZSBqc29uIGFmdGVyIHNjcmlwdCBleGVjdXRpb25cblx0XHRzLmNvbnZlcnRlcnNbIFwic2NyaXB0IGpzb25cIiBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoICFyZXNwb25zZUNvbnRhaW5lciApIHtcblx0XHRcdFx0alF1ZXJ5LmVycm9yKCBjYWxsYmFja05hbWUgKyBcIiB3YXMgbm90IGNhbGxlZFwiICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzcG9uc2VDb250YWluZXJbIDAgXTtcblx0XHR9O1xuXG5cdFx0Ly8gRm9yY2UganNvbiBkYXRhVHlwZVxuXHRcdHMuZGF0YVR5cGVzWyAwIF0gPSBcImpzb25cIjtcblxuXHRcdC8vIEluc3RhbGwgY2FsbGJhY2tcblx0XHRvdmVyd3JpdHRlbiA9IHdpbmRvd1sgY2FsbGJhY2tOYW1lIF07XG5cdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBhcmd1bWVudHM7XG5cdFx0fTtcblxuXHRcdC8vIENsZWFuLXVwIGZ1bmN0aW9uIChmaXJlcyBhZnRlciBjb252ZXJ0ZXJzKVxuXHRcdGpxWEhSLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIElmIHByZXZpb3VzIHZhbHVlIGRpZG4ndCBleGlzdCAtIHJlbW92ZSBpdFxuXHRcdFx0aWYgKCBvdmVyd3JpdHRlbiA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRqUXVlcnkoIHdpbmRvdyApLnJlbW92ZVByb3AoIGNhbGxiYWNrTmFtZSApO1xuXG5cdFx0XHQvLyBPdGhlcndpc2UgcmVzdG9yZSBwcmVleGlzdGluZyB2YWx1ZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IG92ZXJ3cml0dGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTYXZlIGJhY2sgYXMgZnJlZVxuXHRcdFx0aWYgKCBzWyBjYWxsYmFja05hbWUgXSApIHtcblxuXHRcdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCByZS11c2luZyB0aGUgb3B0aW9ucyBkb2Vzbid0IHNjcmV3IHRoaW5ncyBhcm91bmRcblx0XHRcdFx0cy5qc29ucENhbGxiYWNrID0gb3JpZ2luYWxTZXR0aW5ncy5qc29ucENhbGxiYWNrO1xuXG5cdFx0XHRcdC8vIFNhdmUgdGhlIGNhbGxiYWNrIG5hbWUgZm9yIGZ1dHVyZSB1c2Vcblx0XHRcdFx0b2xkQ2FsbGJhY2tzLnB1c2goIGNhbGxiYWNrTmFtZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDYWxsIGlmIGl0IHdhcyBhIGZ1bmN0aW9uIGFuZCB3ZSBoYXZlIGEgcmVzcG9uc2Vcblx0XHRcdGlmICggcmVzcG9uc2VDb250YWluZXIgJiYgaXNGdW5jdGlvbiggb3ZlcndyaXR0ZW4gKSApIHtcblx0XHRcdFx0b3ZlcndyaXR0ZW4oIHJlc3BvbnNlQ29udGFpbmVyWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBvdmVyd3JpdHRlbiA9IHVuZGVmaW5lZDtcblx0XHR9ICk7XG5cblx0XHQvLyBEZWxlZ2F0ZSB0byBzY3JpcHRcblx0XHRyZXR1cm4gXCJzY3JpcHRcIjtcblx0fVxufSApO1xuXG5cblxuXG4vLyBTdXBwb3J0OiBTYWZhcmkgOCBvbmx5XG4vLyBJbiBTYWZhcmkgOCBkb2N1bWVudHMgY3JlYXRlZCB2aWEgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50XG4vLyBjb2xsYXBzZSBzaWJsaW5nIGZvcm1zOiB0aGUgc2Vjb25kIG9uZSBiZWNvbWVzIGEgY2hpbGQgb2YgdGhlIGZpcnN0IG9uZS5cbi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhpcyBzZWN1cml0eSBtZWFzdXJlIGhhcyB0byBiZSBkaXNhYmxlZCBpbiBTYWZhcmkgOC5cbi8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzczMzdcbnN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ID0gKCBmdW5jdGlvbigpIHtcblx0dmFyIGJvZHkgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKS5ib2R5O1xuXHRib2R5LmlubmVySFRNTCA9IFwiPGZvcm0+PC9mb3JtPjxmb3JtPjwvZm9ybT5cIjtcblx0cmV0dXJuIGJvZHkuY2hpbGROb2Rlcy5sZW5ndGggPT09IDI7XG59ICkoKTtcblxuXG4vLyBBcmd1bWVudCBcImRhdGFcIiBzaG91bGQgYmUgc3RyaW5nIG9mIGh0bWxcbi8vIGNvbnRleHQgKG9wdGlvbmFsKTogSWYgc3BlY2lmaWVkLCB0aGUgZnJhZ21lbnQgd2lsbCBiZSBjcmVhdGVkIGluIHRoaXMgY29udGV4dCxcbi8vIGRlZmF1bHRzIHRvIGRvY3VtZW50XG4vLyBrZWVwU2NyaXB0cyAob3B0aW9uYWwpOiBJZiB0cnVlLCB3aWxsIGluY2x1ZGUgc2NyaXB0cyBwYXNzZWQgaW4gdGhlIGh0bWwgc3RyaW5nXG5qUXVlcnkucGFyc2VIVE1MID0gZnVuY3Rpb24oIGRhdGEsIGNvbnRleHQsIGtlZXBTY3JpcHRzICkge1xuXHRpZiAoIHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBbXTtcblx0fVxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XG5cdFx0Y29udGV4dCA9IGZhbHNlO1xuXHR9XG5cblx0dmFyIGJhc2UsIHBhcnNlZCwgc2NyaXB0cztcblxuXHRpZiAoICFjb250ZXh0ICkge1xuXG5cdFx0Ly8gU3RvcCBzY3JpcHRzIG9yIGlubGluZSBldmVudCBoYW5kbGVycyBmcm9tIGJlaW5nIGV4ZWN1dGVkIGltbWVkaWF0ZWx5XG5cdFx0Ly8gYnkgdXNpbmcgZG9jdW1lbnQuaW1wbGVtZW50YXRpb25cblx0XHRpZiAoIHN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ICkge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggXCJcIiApO1xuXG5cdFx0XHQvLyBTZXQgdGhlIGJhc2UgaHJlZiBmb3IgdGhlIGNyZWF0ZWQgZG9jdW1lbnRcblx0XHRcdC8vIHNvIGFueSBwYXJzZWQgZWxlbWVudHMgd2l0aCBVUkxzXG5cdFx0XHQvLyBhcmUgYmFzZWQgb24gdGhlIGRvY3VtZW50J3MgVVJMIChnaC0yOTY1KVxuXHRcdFx0YmFzZSA9IGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJiYXNlXCIgKTtcblx0XHRcdGJhc2UuaHJlZiA9IGRvY3VtZW50LmxvY2F0aW9uLmhyZWY7XG5cdFx0XHRjb250ZXh0LmhlYWQuYXBwZW5kQ2hpbGQoIGJhc2UgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50O1xuXHRcdH1cblx0fVxuXG5cdHBhcnNlZCA9IHJzaW5nbGVUYWcuZXhlYyggZGF0YSApO1xuXHRzY3JpcHRzID0gIWtlZXBTY3JpcHRzICYmIFtdO1xuXG5cdC8vIFNpbmdsZSB0YWdcblx0aWYgKCBwYXJzZWQgKSB7XG5cdFx0cmV0dXJuIFsgY29udGV4dC5jcmVhdGVFbGVtZW50KCBwYXJzZWRbIDEgXSApIF07XG5cdH1cblxuXHRwYXJzZWQgPSBidWlsZEZyYWdtZW50KCBbIGRhdGEgXSwgY29udGV4dCwgc2NyaXB0cyApO1xuXG5cdGlmICggc2NyaXB0cyAmJiBzY3JpcHRzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkoIHNjcmlwdHMgKS5yZW1vdmUoKTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkubWVyZ2UoIFtdLCBwYXJzZWQuY2hpbGROb2RlcyApO1xufTtcblxuXG4vKipcbiAqIExvYWQgYSB1cmwgaW50byBhIHBhZ2VcbiAqL1xualF1ZXJ5LmZuLmxvYWQgPSBmdW5jdGlvbiggdXJsLCBwYXJhbXMsIGNhbGxiYWNrICkge1xuXHR2YXIgc2VsZWN0b3IsIHR5cGUsIHJlc3BvbnNlLFxuXHRcdHNlbGYgPSB0aGlzLFxuXHRcdG9mZiA9IHVybC5pbmRleE9mKCBcIiBcIiApO1xuXG5cdGlmICggb2ZmID4gLTEgKSB7XG5cdFx0c2VsZWN0b3IgPSBzdHJpcEFuZENvbGxhcHNlKCB1cmwuc2xpY2UoIG9mZiApICk7XG5cdFx0dXJsID0gdXJsLnNsaWNlKCAwLCBvZmYgKTtcblx0fVxuXG5cdC8vIElmIGl0J3MgYSBmdW5jdGlvblxuXHRpZiAoIGlzRnVuY3Rpb24oIHBhcmFtcyApICkge1xuXG5cdFx0Ly8gV2UgYXNzdW1lIHRoYXQgaXQncyB0aGUgY2FsbGJhY2tcblx0XHRjYWxsYmFjayA9IHBhcmFtcztcblx0XHRwYXJhbXMgPSB1bmRlZmluZWQ7XG5cblx0Ly8gT3RoZXJ3aXNlLCBidWlsZCBhIHBhcmFtIHN0cmluZ1xuXHR9IGVsc2UgaWYgKCBwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gXCJvYmplY3RcIiApIHtcblx0XHR0eXBlID0gXCJQT1NUXCI7XG5cdH1cblxuXHQvLyBJZiB3ZSBoYXZlIGVsZW1lbnRzIHRvIG1vZGlmeSwgbWFrZSB0aGUgcmVxdWVzdFxuXHRpZiAoIHNlbGYubGVuZ3RoID4gMCApIHtcblx0XHRqUXVlcnkuYWpheCgge1xuXHRcdFx0dXJsOiB1cmwsXG5cblx0XHRcdC8vIElmIFwidHlwZVwiIHZhcmlhYmxlIGlzIHVuZGVmaW5lZCwgdGhlbiBcIkdFVFwiIG1ldGhvZCB3aWxsIGJlIHVzZWQuXG5cdFx0XHQvLyBNYWtlIHZhbHVlIG9mIHRoaXMgZmllbGQgZXhwbGljaXQgc2luY2Vcblx0XHRcdC8vIHVzZXIgY2FuIG92ZXJyaWRlIGl0IHRocm91Z2ggYWpheFNldHVwIG1ldGhvZFxuXHRcdFx0dHlwZTogdHlwZSB8fCBcIkdFVFwiLFxuXHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxuXHRcdFx0ZGF0YTogcGFyYW1zXG5cdFx0fSApLmRvbmUoIGZ1bmN0aW9uKCByZXNwb25zZVRleHQgKSB7XG5cblx0XHRcdC8vIFNhdmUgcmVzcG9uc2UgZm9yIHVzZSBpbiBjb21wbGV0ZSBjYWxsYmFja1xuXHRcdFx0cmVzcG9uc2UgPSBhcmd1bWVudHM7XG5cblx0XHRcdHNlbGYuaHRtbCggc2VsZWN0b3IgP1xuXG5cdFx0XHRcdC8vIElmIGEgc2VsZWN0b3Igd2FzIHNwZWNpZmllZCwgbG9jYXRlIHRoZSByaWdodCBlbGVtZW50cyBpbiBhIGR1bW15IGRpdlxuXHRcdFx0XHQvLyBFeGNsdWRlIHNjcmlwdHMgdG8gYXZvaWQgSUUgJ1Blcm1pc3Npb24gRGVuaWVkJyBlcnJvcnNcblx0XHRcdFx0alF1ZXJ5KCBcIjxkaXY+XCIgKS5hcHBlbmQoIGpRdWVyeS5wYXJzZUhUTUwoIHJlc3BvbnNlVGV4dCApICkuZmluZCggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHVzZSB0aGUgZnVsbCByZXN1bHRcblx0XHRcdFx0cmVzcG9uc2VUZXh0ICk7XG5cblx0XHQvLyBJZiB0aGUgcmVxdWVzdCBzdWNjZWVkcywgdGhpcyBmdW5jdGlvbiBnZXRzIFwiZGF0YVwiLCBcInN0YXR1c1wiLCBcImpxWEhSXCJcblx0XHQvLyBidXQgdGhleSBhcmUgaWdub3JlZCBiZWNhdXNlIHJlc3BvbnNlIHdhcyBzZXQgYWJvdmUuXG5cdFx0Ly8gSWYgaXQgZmFpbHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImpxWEhSXCIsIFwic3RhdHVzXCIsIFwiZXJyb3JcIlxuXHRcdH0gKS5hbHdheXMoIGNhbGxiYWNrICYmIGZ1bmN0aW9uKCBqcVhIUiwgc3RhdHVzICkge1xuXHRcdFx0c2VsZi5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Y2FsbGJhY2suYXBwbHkoIHRoaXMsIHJlc3BvbnNlIHx8IFsganFYSFIucmVzcG9uc2VUZXh0LCBzdGF0dXMsIGpxWEhSIF0gKTtcblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cblxuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuIGpRdWVyeS5ncmVwKCBqUXVlcnkudGltZXJzLCBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIGVsZW0gPT09IGZuLmVsZW07XG5cdH0gKS5sZW5ndGg7XG59O1xuXG5cblxuXG5qUXVlcnkub2Zmc2V0ID0ge1xuXHRzZXRPZmZzZXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBpICkge1xuXHRcdHZhciBjdXJQb3NpdGlvbiwgY3VyTGVmdCwgY3VyQ1NTVG9wLCBjdXJUb3AsIGN1ck9mZnNldCwgY3VyQ1NTTGVmdCwgY2FsY3VsYXRlUG9zaXRpb24sXG5cdFx0XHRwb3NpdGlvbiA9IGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApLFxuXHRcdFx0Y3VyRWxlbSA9IGpRdWVyeSggZWxlbSApLFxuXHRcdFx0cHJvcHMgPSB7fTtcblxuXHRcdC8vIFNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW1cblx0XHRpZiAoIHBvc2l0aW9uID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0ZWxlbS5zdHlsZS5wb3NpdGlvbiA9IFwicmVsYXRpdmVcIjtcblx0XHR9XG5cblx0XHRjdXJPZmZzZXQgPSBjdXJFbGVtLm9mZnNldCgpO1xuXHRcdGN1ckNTU1RvcCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwidG9wXCIgKTtcblx0XHRjdXJDU1NMZWZ0ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJsZWZ0XCIgKTtcblx0XHRjYWxjdWxhdGVQb3NpdGlvbiA9ICggcG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIiB8fCBwb3NpdGlvbiA9PT0gXCJmaXhlZFwiICkgJiZcblx0XHRcdCggY3VyQ1NTVG9wICsgY3VyQ1NTTGVmdCApLmluZGV4T2YoIFwiYXV0b1wiICkgPiAtMTtcblxuXHRcdC8vIE5lZWQgdG8gYmUgYWJsZSB0byBjYWxjdWxhdGUgcG9zaXRpb24gaWYgZWl0aGVyXG5cdFx0Ly8gdG9wIG9yIGxlZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZpeGVkXG5cdFx0aWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHtcblx0XHRcdGN1clBvc2l0aW9uID0gY3VyRWxlbS5wb3NpdGlvbigpO1xuXHRcdFx0Y3VyVG9wID0gY3VyUG9zaXRpb24udG9wO1xuXHRcdFx0Y3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyVG9wID0gcGFyc2VGbG9hdCggY3VyQ1NTVG9wICkgfHwgMDtcblx0XHRcdGN1ckxlZnQgPSBwYXJzZUZsb2F0KCBjdXJDU1NMZWZ0ICkgfHwgMDtcblx0XHR9XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIG9wdGlvbnMgKSApIHtcblxuXHRcdFx0Ly8gVXNlIGpRdWVyeS5leHRlbmQgaGVyZSB0byBhbGxvdyBtb2RpZmljYXRpb24gb2YgY29vcmRpbmF0ZXMgYXJndW1lbnQgKGdoLTE4NDgpXG5cdFx0XHRvcHRpb25zID0gb3B0aW9ucy5jYWxsKCBlbGVtLCBpLCBqUXVlcnkuZXh0ZW5kKCB7fSwgY3VyT2Zmc2V0ICkgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdGlvbnMudG9wICE9IG51bGwgKSB7XG5cdFx0XHRwcm9wcy50b3AgPSAoIG9wdGlvbnMudG9wIC0gY3VyT2Zmc2V0LnRvcCApICsgY3VyVG9wO1xuXHRcdH1cblx0XHRpZiAoIG9wdGlvbnMubGVmdCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMubGVmdCA9ICggb3B0aW9ucy5sZWZ0IC0gY3VyT2Zmc2V0LmxlZnQgKSArIGN1ckxlZnQ7XG5cdFx0fVxuXG5cdFx0aWYgKCBcInVzaW5nXCIgaW4gb3B0aW9ucyApIHtcblx0XHRcdG9wdGlvbnMudXNpbmcuY2FsbCggZWxlbSwgcHJvcHMgKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBwcm9wcy50b3AgPT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdHByb3BzLnRvcCArPSBcInB4XCI7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIHR5cGVvZiBwcm9wcy5sZWZ0ID09PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHRwcm9wcy5sZWZ0ICs9IFwicHhcIjtcblx0XHRcdH1cblx0XHRcdGN1ckVsZW0uY3NzKCBwcm9wcyApO1xuXHRcdH1cblx0fVxufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXG5cdC8vIG9mZnNldCgpIHJlbGF0ZXMgYW4gZWxlbWVudCdzIGJvcmRlciBib3ggdG8gdGhlIGRvY3VtZW50IG9yaWdpblxuXHRvZmZzZXQ6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXG5cdFx0Ly8gUHJlc2VydmUgY2hhaW5pbmcgZm9yIHNldHRlclxuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiBvcHRpb25zID09PSB1bmRlZmluZWQgP1xuXHRcdFx0XHR0aGlzIDpcblx0XHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0XHRqUXVlcnkub2Zmc2V0LnNldE9mZnNldCggdGhpcywgb3B0aW9ucywgaSApO1xuXHRcdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0dmFyIHJlY3QsIHdpbixcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF07XG5cblx0XHRpZiAoICFlbGVtICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIFJldHVybiB6ZXJvcyBmb3IgZGlzY29ubmVjdGVkIGFuZCBoaWRkZW4gKGRpc3BsYXk6IG5vbmUpIGVsZW1lbnRzIChnaC0yMzEwKVxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHRcdC8vIFJ1bm5pbmcgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IG9uIGFcblx0XHQvLyBkaXNjb25uZWN0ZWQgbm9kZSBpbiBJRSB0aHJvd3MgYW4gZXJyb3Jcblx0XHRpZiAoICFlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIHsgdG9wOiAwLCBsZWZ0OiAwIH07XG5cdFx0fVxuXG5cdFx0Ly8gR2V0IGRvY3VtZW50LXJlbGF0aXZlIHBvc2l0aW9uIGJ5IGFkZGluZyB2aWV3cG9ydCBzY3JvbGwgdG8gdmlld3BvcnQtcmVsYXRpdmUgZ0JDUlxuXHRcdHJlY3QgPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXHRcdHdpbiA9IGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldztcblx0XHRyZXR1cm4ge1xuXHRcdFx0dG9wOiByZWN0LnRvcCArIHdpbi5wYWdlWU9mZnNldCxcblx0XHRcdGxlZnQ6IHJlY3QubGVmdCArIHdpbi5wYWdlWE9mZnNldFxuXHRcdH07XG5cdH0sXG5cblx0Ly8gcG9zaXRpb24oKSByZWxhdGVzIGFuIGVsZW1lbnQncyBtYXJnaW4gYm94IHRvIGl0cyBvZmZzZXQgcGFyZW50J3MgcGFkZGluZyBib3hcblx0Ly8gVGhpcyBjb3JyZXNwb25kcyB0byB0aGUgYmVoYXZpb3Igb2YgQ1NTIGFic29sdXRlIHBvc2l0aW9uaW5nXG5cdHBvc2l0aW9uOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoICF0aGlzWyAwIF0gKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dmFyIG9mZnNldFBhcmVudCwgb2Zmc2V0LCBkb2MsXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdLFxuXHRcdFx0cGFyZW50T2Zmc2V0ID0geyB0b3A6IDAsIGxlZnQ6IDAgfTtcblxuXHRcdC8vIHBvc2l0aW9uOmZpeGVkIGVsZW1lbnRzIGFyZSBvZmZzZXQgZnJvbSB0aGUgdmlld3BvcnQsIHdoaWNoIGl0c2VsZiBhbHdheXMgaGFzIHplcm8gb2Zmc2V0XG5cdFx0aWYgKCBqUXVlcnkuY3NzKCBlbGVtLCBcInBvc2l0aW9uXCIgKSA9PT0gXCJmaXhlZFwiICkge1xuXG5cdFx0XHQvLyBBc3N1bWUgcG9zaXRpb246Zml4ZWQgaW1wbGllcyBhdmFpbGFiaWxpdHkgb2YgZ2V0Qm91bmRpbmdDbGllbnRSZWN0XG5cdFx0XHRvZmZzZXQgPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdG9mZnNldCA9IHRoaXMub2Zmc2V0KCk7XG5cblx0XHRcdC8vIEFjY291bnQgZm9yIHRoZSAqcmVhbCogb2Zmc2V0IHBhcmVudCwgd2hpY2ggY2FuIGJlIHRoZSBkb2N1bWVudCBvciBpdHMgcm9vdCBlbGVtZW50XG5cdFx0XHQvLyB3aGVuIGEgc3RhdGljYWxseSBwb3NpdGlvbmVkIGVsZW1lbnQgaXMgaWRlbnRpZmllZFxuXHRcdFx0ZG9jID0gZWxlbS5vd25lckRvY3VtZW50O1xuXHRcdFx0b2Zmc2V0UGFyZW50ID0gZWxlbS5vZmZzZXRQYXJlbnQgfHwgZG9jLmRvY3VtZW50RWxlbWVudDtcblx0XHRcdHdoaWxlICggb2Zmc2V0UGFyZW50ICYmXG5cdFx0XHRcdCggb2Zmc2V0UGFyZW50ID09PSBkb2MuYm9keSB8fCBvZmZzZXRQYXJlbnQgPT09IGRvYy5kb2N1bWVudEVsZW1lbnQgKSAmJlxuXHRcdFx0XHRqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkge1xuXG5cdFx0XHRcdG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5wYXJlbnROb2RlO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCBvZmZzZXRQYXJlbnQgJiYgb2Zmc2V0UGFyZW50ICE9PSBlbGVtICYmIG9mZnNldFBhcmVudC5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHQvLyBJbmNvcnBvcmF0ZSBib3JkZXJzIGludG8gaXRzIG9mZnNldCwgc2luY2UgdGhleSBhcmUgb3V0c2lkZSBpdHMgY29udGVudCBvcmlnaW5cblx0XHRcdFx0cGFyZW50T2Zmc2V0ID0galF1ZXJ5KCBvZmZzZXRQYXJlbnQgKS5vZmZzZXQoKTtcblx0XHRcdFx0cGFyZW50T2Zmc2V0LnRvcCArPSBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwiYm9yZGVyVG9wV2lkdGhcIiwgdHJ1ZSApO1xuXHRcdFx0XHRwYXJlbnRPZmZzZXQubGVmdCArPSBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwiYm9yZGVyTGVmdFdpZHRoXCIsIHRydWUgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTdWJ0cmFjdCBwYXJlbnQgb2Zmc2V0cyBhbmQgZWxlbWVudCBtYXJnaW5zXG5cdFx0cmV0dXJuIHtcblx0XHRcdHRvcDogb2Zmc2V0LnRvcCAtIHBhcmVudE9mZnNldC50b3AgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpblRvcFwiLCB0cnVlICksXG5cdFx0XHRsZWZ0OiBvZmZzZXQubGVmdCAtIHBhcmVudE9mZnNldC5sZWZ0IC0galF1ZXJ5LmNzcyggZWxlbSwgXCJtYXJnaW5MZWZ0XCIsIHRydWUgKVxuXHRcdH07XG5cdH0sXG5cblx0Ly8gVGhpcyBtZXRob2Qgd2lsbCByZXR1cm4gZG9jdW1lbnRFbGVtZW50IGluIHRoZSBmb2xsb3dpbmcgY2FzZXM6XG5cdC8vIDEpIEZvciB0aGUgZWxlbWVudCBpbnNpZGUgdGhlIGlmcmFtZSB3aXRob3V0IG9mZnNldFBhcmVudCwgdGhpcyBtZXRob2Qgd2lsbCByZXR1cm5cblx0Ly8gICAgZG9jdW1lbnRFbGVtZW50IG9mIHRoZSBwYXJlbnQgd2luZG93XG5cdC8vIDIpIEZvciB0aGUgaGlkZGVuIG9yIGRldGFjaGVkIGVsZW1lbnRcblx0Ly8gMykgRm9yIGJvZHkgb3IgaHRtbCBlbGVtZW50LCBpLmUuIGluIGNhc2Ugb2YgdGhlIGh0bWwgbm9kZSAtIGl0IHdpbGwgcmV0dXJuIGl0c2VsZlxuXHQvL1xuXHQvLyBidXQgdGhvc2UgZXhjZXB0aW9ucyB3ZXJlIG5ldmVyIHByZXNlbnRlZCBhcyBhIHJlYWwgbGlmZSB1c2UtY2FzZXNcblx0Ly8gYW5kIG1pZ2h0IGJlIGNvbnNpZGVyZWQgYXMgbW9yZSBwcmVmZXJhYmxlIHJlc3VsdHMuXG5cdC8vXG5cdC8vIFRoaXMgbG9naWMsIGhvd2V2ZXIsIGlzIG5vdCBndWFyYW50ZWVkIGFuZCBjYW4gY2hhbmdlIGF0IGFueSBwb2ludCBpbiB0aGUgZnV0dXJlXG5cdG9mZnNldFBhcmVudDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBvZmZzZXRQYXJlbnQgPSB0aGlzLm9mZnNldFBhcmVudDtcblxuXHRcdFx0d2hpbGUgKCBvZmZzZXRQYXJlbnQgJiYgalF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcInBvc2l0aW9uXCIgKSA9PT0gXCJzdGF0aWNcIiApIHtcblx0XHRcdFx0b2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50Lm9mZnNldFBhcmVudDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG9mZnNldFBhcmVudCB8fCBkb2N1bWVudEVsZW1lbnQ7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbi8vIENyZWF0ZSBzY3JvbGxMZWZ0IGFuZCBzY3JvbGxUb3AgbWV0aG9kc1xualF1ZXJ5LmVhY2goIHsgc2Nyb2xsTGVmdDogXCJwYWdlWE9mZnNldFwiLCBzY3JvbGxUb3A6IFwicGFnZVlPZmZzZXRcIiB9LCBmdW5jdGlvbiggbWV0aG9kLCBwcm9wICkge1xuXHR2YXIgdG9wID0gXCJwYWdlWU9mZnNldFwiID09PSBwcm9wO1xuXG5cdGpRdWVyeS5mblsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdmFsICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBtZXRob2QsIHZhbCApIHtcblxuXHRcdFx0Ly8gQ29hbGVzY2UgZG9jdW1lbnRzIGFuZCB3aW5kb3dzXG5cdFx0XHR2YXIgd2luO1xuXHRcdFx0aWYgKCBpc1dpbmRvdyggZWxlbSApICkge1xuXHRcdFx0XHR3aW4gPSBlbGVtO1xuXHRcdFx0fSBlbHNlIGlmICggZWxlbS5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0d2luID0gZWxlbS5kZWZhdWx0Vmlldztcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHdpbiA/IHdpblsgcHJvcCBdIDogZWxlbVsgbWV0aG9kIF07XG5cdFx0XHR9XG5cblx0XHRcdGlmICggd2luICkge1xuXHRcdFx0XHR3aW4uc2Nyb2xsVG8oXG5cdFx0XHRcdFx0IXRvcCA/IHZhbCA6IHdpbi5wYWdlWE9mZnNldCxcblx0XHRcdFx0XHR0b3AgPyB2YWwgOiB3aW4ucGFnZVlPZmZzZXRcblx0XHRcdFx0KTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbVsgbWV0aG9kIF0gPSB2YWw7XG5cdFx0XHR9XG5cdFx0fSwgbWV0aG9kLCB2YWwsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fTtcbn0gKTtcblxuLy8gU3VwcG9ydDogU2FmYXJpIDw9NyAtIDkuMSwgQ2hyb21lIDw9MzcgLSA0OVxuLy8gQWRkIHRoZSB0b3AvbGVmdCBjc3NIb29rcyB1c2luZyBqUXVlcnkuZm4ucG9zaXRpb25cbi8vIFdlYmtpdCBidWc6IGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0yOTA4NFxuLy8gQmxpbmsgYnVnOiBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD01ODkzNDdcbi8vIGdldENvbXB1dGVkU3R5bGUgcmV0dXJucyBwZXJjZW50IHdoZW4gc3BlY2lmaWVkIGZvciB0b3AvbGVmdC9ib3R0b20vcmlnaHQ7XG4vLyByYXRoZXIgdGhhbiBtYWtlIHRoZSBjc3MgbW9kdWxlIGRlcGVuZCBvbiB0aGUgb2Zmc2V0IG1vZHVsZSwganVzdCBjaGVjayBmb3IgaXQgaGVyZVxualF1ZXJ5LmVhY2goIFsgXCJ0b3BcIiwgXCJsZWZ0XCIgXSwgZnVuY3Rpb24oIF9pLCBwcm9wICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByb3AgXSA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5waXhlbFBvc2l0aW9uLFxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0XHRcdGNvbXB1dGVkID0gY3VyQ1NTKCBlbGVtLCBwcm9wICk7XG5cblx0XHRcdFx0Ly8gSWYgY3VyQ1NTIHJldHVybnMgcGVyY2VudGFnZSwgZmFsbGJhY2sgdG8gb2Zmc2V0XG5cdFx0XHRcdHJldHVybiBybnVtbm9ucHgudGVzdCggY29tcHV0ZWQgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBlbGVtICkucG9zaXRpb24oKVsgcHJvcCBdICsgXCJweFwiIDpcblx0XHRcdFx0XHRjb21wdXRlZDtcblx0XHRcdH1cblx0XHR9XG5cdCk7XG59ICk7XG5cblxuLy8gQ3JlYXRlIGlubmVySGVpZ2h0LCBpbm5lcldpZHRoLCBoZWlnaHQsIHdpZHRoLCBvdXRlckhlaWdodCBhbmQgb3V0ZXJXaWR0aCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBIZWlnaHQ6IFwiaGVpZ2h0XCIsIFdpZHRoOiBcIndpZHRoXCIgfSwgZnVuY3Rpb24oIG5hbWUsIHR5cGUgKSB7XG5cdGpRdWVyeS5lYWNoKCB7IHBhZGRpbmc6IFwiaW5uZXJcIiArIG5hbWUsIGNvbnRlbnQ6IHR5cGUsIFwiXCI6IFwib3V0ZXJcIiArIG5hbWUgfSxcblx0XHRmdW5jdGlvbiggZGVmYXVsdEV4dHJhLCBmdW5jTmFtZSApIHtcblxuXHRcdC8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aFxuXHRcdGpRdWVyeS5mblsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkge1xuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcblx0XHRcdFx0ZXh0cmEgPSBkZWZhdWx0RXh0cmEgfHwgKCBtYXJnaW4gPT09IHRydWUgfHwgdmFsdWUgPT09IHRydWUgPyBcIm1hcmdpblwiIDogXCJib3JkZXJcIiApO1xuXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBkb2M7XG5cblx0XHRcdFx0aWYgKCBpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gJCggd2luZG93ICkub3V0ZXJXaWR0aC9IZWlnaHQgcmV0dXJuIHcvaCBpbmNsdWRpbmcgc2Nyb2xsYmFycyAoZ2gtMTcyOSlcblx0XHRcdFx0XHRyZXR1cm4gZnVuY05hbWUuaW5kZXhPZiggXCJvdXRlclwiICkgPT09IDAgP1xuXHRcdFx0XHRcdFx0ZWxlbVsgXCJpbm5lclwiICsgbmFtZSBdIDpcblx0XHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyBcImNsaWVudFwiICsgbmFtZSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gR2V0IGRvY3VtZW50IHdpZHRoIG9yIGhlaWdodFxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0ZG9jID0gZWxlbS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXG5cdFx0XHRcdFx0Ly8gd2hpY2hldmVyIGlzIGdyZWF0ZXN0XG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwib2Zmc2V0XCIgKyBuYW1lIF0sIGRvY1sgXCJvZmZzZXRcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XG5cblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcblx0XHRcdH0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlICk7XG5cdFx0fTtcblx0fSApO1xufSApO1xuXG5cbmpRdWVyeS5lYWNoKCBbXG5cdFwiYWpheFN0YXJ0XCIsXG5cdFwiYWpheFN0b3BcIixcblx0XCJhamF4Q29tcGxldGVcIixcblx0XCJhamF4RXJyb3JcIixcblx0XCJhamF4U3VjY2Vzc1wiLFxuXHRcImFqYXhTZW5kXCJcbl0sIGZ1bmN0aW9uKCBfaSwgdHlwZSApIHtcblx0alF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGUsIGZuICk7XG5cdH07XG59ICk7XG5cblxuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRiaW5kOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgbnVsbCwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7XG5cdH0sXG5cblx0ZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkge1xuXG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID9cblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxuXHRcdFx0dGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuICk7XG5cdH0sXG5cblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCAoIFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgXCIgK1xuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIF9pLCBuYW1lICkge1xuXG5cdFx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcblx0XHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBkYXRhLCBmbiApIHtcblx0XHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMCA/XG5cdFx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxuXHRcdFx0XHR0aGlzLnRyaWdnZXIoIG5hbWUgKTtcblx0XHR9O1xuXHR9ICk7XG5cblxuXG5cbi8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seVxuLy8gTWFrZSBzdXJlIHdlIHRyaW0gQk9NIGFuZCBOQlNQXG52YXIgcnRyaW0gPSAvXltcXHNcXHVGRUZGXFx4QTBdK3xbXFxzXFx1RkVGRlxceEEwXSskL2c7XG5cbi8vIEJpbmQgYSBmdW5jdGlvbiB0byBhIGNvbnRleHQsIG9wdGlvbmFsbHkgcGFydGlhbGx5IGFwcGx5aW5nIGFueVxuLy8gYXJndW1lbnRzLlxuLy8galF1ZXJ5LnByb3h5IGlzIGRlcHJlY2F0ZWQgdG8gcHJvbW90ZSBzdGFuZGFyZHMgKHNwZWNpZmljYWxseSBGdW5jdGlvbiNiaW5kKVxuLy8gSG93ZXZlciwgaXQgaXMgbm90IHNsYXRlZCBmb3IgcmVtb3ZhbCBhbnkgdGltZSBzb29uXG5qUXVlcnkucHJveHkgPSBmdW5jdGlvbiggZm4sIGNvbnRleHQgKSB7XG5cdHZhciB0bXAsIGFyZ3MsIHByb3h5O1xuXG5cdGlmICggdHlwZW9mIGNvbnRleHQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0dG1wID0gZm5bIGNvbnRleHQgXTtcblx0XHRjb250ZXh0ID0gZm47XG5cdFx0Zm4gPSB0bXA7XG5cdH1cblxuXHQvLyBRdWljayBjaGVjayB0byBkZXRlcm1pbmUgaWYgdGFyZ2V0IGlzIGNhbGxhYmxlLCBpbiB0aGUgc3BlY1xuXHQvLyB0aGlzIHRocm93cyBhIFR5cGVFcnJvciwgYnV0IHdlIHdpbGwganVzdCByZXR1cm4gdW5kZWZpbmVkLlxuXHRpZiAoICFpc0Z1bmN0aW9uKCBmbiApICkge1xuXHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdH1cblxuXHQvLyBTaW11bGF0ZWQgYmluZFxuXHRhcmdzID0gc2xpY2UuY2FsbCggYXJndW1lbnRzLCAyICk7XG5cdHByb3h5ID0gZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGZuLmFwcGx5KCBjb250ZXh0IHx8IHRoaXMsIGFyZ3MuY29uY2F0KCBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSApICk7XG5cdH07XG5cblx0Ly8gU2V0IHRoZSBndWlkIG9mIHVuaXF1ZSBoYW5kbGVyIHRvIHRoZSBzYW1lIG9mIG9yaWdpbmFsIGhhbmRsZXIsIHNvIGl0IGNhbiBiZSByZW1vdmVkXG5cdHByb3h5Lmd1aWQgPSBmbi5ndWlkID0gZm4uZ3VpZCB8fCBqUXVlcnkuZ3VpZCsrO1xuXG5cdHJldHVybiBwcm94eTtcbn07XG5cbmpRdWVyeS5ob2xkUmVhZHkgPSBmdW5jdGlvbiggaG9sZCApIHtcblx0aWYgKCBob2xkICkge1xuXHRcdGpRdWVyeS5yZWFkeVdhaXQrKztcblx0fSBlbHNlIHtcblx0XHRqUXVlcnkucmVhZHkoIHRydWUgKTtcblx0fVxufTtcbmpRdWVyeS5pc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbmpRdWVyeS5wYXJzZUpTT04gPSBKU09OLnBhcnNlO1xualF1ZXJ5Lm5vZGVOYW1lID0gbm9kZU5hbWU7XG5qUXVlcnkuaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb247XG5qUXVlcnkuaXNXaW5kb3cgPSBpc1dpbmRvdztcbmpRdWVyeS5jYW1lbENhc2UgPSBjYW1lbENhc2U7XG5qUXVlcnkudHlwZSA9IHRvVHlwZTtcblxualF1ZXJ5Lm5vdyA9IERhdGUubm93O1xuXG5qUXVlcnkuaXNOdW1lcmljID0gZnVuY3Rpb24oIG9iaiApIHtcblxuXHQvLyBBcyBvZiBqUXVlcnkgMy4wLCBpc051bWVyaWMgaXMgbGltaXRlZCB0b1xuXHQvLyBzdHJpbmdzIGFuZCBudW1iZXJzIChwcmltaXRpdmVzIG9yIG9iamVjdHMpXG5cdC8vIHRoYXQgY2FuIGJlIGNvZXJjZWQgdG8gZmluaXRlIG51bWJlcnMgKGdoLTI2NjIpXG5cdHZhciB0eXBlID0galF1ZXJ5LnR5cGUoIG9iaiApO1xuXHRyZXR1cm4gKCB0eXBlID09PSBcIm51bWJlclwiIHx8IHR5cGUgPT09IFwic3RyaW5nXCIgKSAmJlxuXG5cdFx0Ly8gcGFyc2VGbG9hdCBOYU5zIG51bWVyaWMtY2FzdCBmYWxzZSBwb3NpdGl2ZXMgKFwiXCIpXG5cdFx0Ly8gLi4uYnV0IG1pc2ludGVycHJldHMgbGVhZGluZy1udW1iZXIgc3RyaW5ncywgcGFydGljdWxhcmx5IGhleCBsaXRlcmFscyAoXCIweC4uLlwiKVxuXHRcdC8vIHN1YnRyYWN0aW9uIGZvcmNlcyBpbmZpbml0aWVzIHRvIE5hTlxuXHRcdCFpc05hTiggb2JqIC0gcGFyc2VGbG9hdCggb2JqICkgKTtcbn07XG5cbmpRdWVyeS50cmltID0gZnVuY3Rpb24oIHRleHQgKSB7XG5cdHJldHVybiB0ZXh0ID09IG51bGwgP1xuXHRcdFwiXCIgOlxuXHRcdCggdGV4dCArIFwiXCIgKS5yZXBsYWNlKCBydHJpbSwgXCJcIiApO1xufTtcblxuXG5cbi8vIFJlZ2lzdGVyIGFzIGEgbmFtZWQgQU1EIG1vZHVsZSwgc2luY2UgalF1ZXJ5IGNhbiBiZSBjb25jYXRlbmF0ZWQgd2l0aCBvdGhlclxuLy8gZmlsZXMgdGhhdCBtYXkgdXNlIGRlZmluZSwgYnV0IG5vdCB2aWEgYSBwcm9wZXIgY29uY2F0ZW5hdGlvbiBzY3JpcHQgdGhhdFxuLy8gdW5kZXJzdGFuZHMgYW5vbnltb3VzIEFNRCBtb2R1bGVzLiBBIG5hbWVkIEFNRCBpcyBzYWZlc3QgYW5kIG1vc3Qgcm9idXN0XG4vLyB3YXkgdG8gcmVnaXN0ZXIuIExvd2VyY2FzZSBqcXVlcnkgaXMgdXNlZCBiZWNhdXNlIEFNRCBtb2R1bGUgbmFtZXMgYXJlXG4vLyBkZXJpdmVkIGZyb20gZmlsZSBuYW1lcywgYW5kIGpRdWVyeSBpcyBub3JtYWxseSBkZWxpdmVyZWQgaW4gYSBsb3dlcmNhc2Vcbi8vIGZpbGUgbmFtZS4gRG8gdGhpcyBhZnRlciBjcmVhdGluZyB0aGUgZ2xvYmFsIHNvIHRoYXQgaWYgYW4gQU1EIG1vZHVsZSB3YW50c1xuLy8gdG8gY2FsbCBub0NvbmZsaWN0IHRvIGhpZGUgdGhpcyB2ZXJzaW9uIG9mIGpRdWVyeSwgaXQgd2lsbCB3b3JrLlxuXG4vLyBOb3RlIHRoYXQgZm9yIG1heGltdW0gcG9ydGFiaWxpdHksIGxpYnJhcmllcyB0aGF0IGFyZSBub3QgalF1ZXJ5IHNob3VsZFxuLy8gZGVjbGFyZSB0aGVtc2VsdmVzIGFzIGFub255bW91cyBtb2R1bGVzLCBhbmQgYXZvaWQgc2V0dGluZyBhIGdsb2JhbCBpZiBhblxuLy8gQU1EIGxvYWRlciBpcyBwcmVzZW50LiBqUXVlcnkgaXMgYSBzcGVjaWFsIGNhc2UuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWVcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9qcmJ1cmtlL3JlcXVpcmVqcy93aWtpL1VwZGF0aW5nLWV4aXN0aW5nLWxpYnJhcmllcyN3aWtpLWFub25cblxuaWYgKCB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCApIHtcblx0ZGVmaW5lKCBcImpxdWVyeVwiLCBbXSwgZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGpRdWVyeTtcblx0fSApO1xufVxuXG5cblxuXG52YXJcblxuXHQvLyBNYXAgb3ZlciBqUXVlcnkgaW4gY2FzZSBvZiBvdmVyd3JpdGVcblx0X2pRdWVyeSA9IHdpbmRvdy5qUXVlcnksXG5cblx0Ly8gTWFwIG92ZXIgdGhlICQgaW4gY2FzZSBvZiBvdmVyd3JpdGVcblx0XyQgPSB3aW5kb3cuJDtcblxualF1ZXJ5Lm5vQ29uZmxpY3QgPSBmdW5jdGlvbiggZGVlcCApIHtcblx0aWYgKCB3aW5kb3cuJCA9PT0galF1ZXJ5ICkge1xuXHRcdHdpbmRvdy4kID0gXyQ7XG5cdH1cblxuXHRpZiAoIGRlZXAgJiYgd2luZG93LmpRdWVyeSA9PT0galF1ZXJ5ICkge1xuXHRcdHdpbmRvdy5qUXVlcnkgPSBfalF1ZXJ5O1xuXHR9XG5cblx0cmV0dXJuIGpRdWVyeTtcbn07XG5cbi8vIEV4cG9zZSBqUXVlcnkgYW5kICQgaWRlbnRpZmllcnMsIGV2ZW4gaW4gQU1EXG4vLyAoIzcxMDIjY29tbWVudDoxMCwgaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9qcXVlcnkvcHVsbC81NTcpXG4vLyBhbmQgQ29tbW9uSlMgZm9yIGJyb3dzZXIgZW11bGF0b3JzICgjMTM1NjYpXG5pZiAoIHR5cGVvZiBub0dsb2JhbCA9PT0gXCJ1bmRlZmluZWRcIiApIHtcblx0d2luZG93LmpRdWVyeSA9IHdpbmRvdy4kID0galF1ZXJ5O1xufVxuXG5cblxuXG5yZXR1cm4galF1ZXJ5O1xufSApO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBtYXBfZ2VuZXJhdG9yXzEgPSByZXF1aXJlKFwiLi9tYXAtZ2VuZXJhdG9yXCIpO1xuY2xhc3MgTWFwYm94RXhwb3J0Q29udHJvbCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMub25Eb2N1bWVudENsaWNrID0gdGhpcy5vbkRvY3VtZW50Q2xpY2suYmluZCh0aGlzKTtcbiAgICB9XG4gICAgZ2V0RGVmYXVsdFBvc2l0aW9uKCkge1xuICAgICAgICBjb25zdCBkZWZhdWx0UG9zaXRpb24gPSBcInRvcC1yaWdodFwiO1xuICAgICAgICByZXR1cm4gZGVmYXVsdFBvc2l0aW9uO1xuICAgIH1cbiAgICBvbkFkZChtYXApIHtcbiAgICAgICAgdGhpcy5tYXAgPSBtYXA7XG4gICAgICAgIHRoaXMuY29udHJvbENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHRoaXMuY29udHJvbENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwibWFwYm94Z2wtY3RybFwiKTtcbiAgICAgICAgdGhpcy5jb250cm9sQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJtYXBib3hnbC1jdHJsLWdyb3VwXCIpO1xuICAgICAgICB0aGlzLmV4cG9ydENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHRoaXMuZXhwb3J0Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJtYXBib3hnbC1leHBvcnQtbGlzdFwiKTtcbiAgICAgICAgdGhpcy5leHBvcnRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICB0aGlzLmV4cG9ydEJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwibWFwYm94Z2wtY3RybC1pY29uXCIpO1xuICAgICAgICB0aGlzLmV4cG9ydEJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwibWFwYm94Z2wtZXhwb3J0LWNvbnRyb2xcIik7XG4gICAgICAgIHRoaXMuZXhwb3J0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmV4cG9ydEJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICB0aGlzLmV4cG9ydENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICB9KTtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMub25Eb2N1bWVudENsaWNrKTtcbiAgICAgICAgdGhpcy5jb250cm9sQ29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuZXhwb3J0QnV0dG9uKTtcbiAgICAgICAgdGhpcy5jb250cm9sQ29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuZXhwb3J0Q29udGFpbmVyKTtcbiAgICAgICAgdmFyIHRhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnVEFCTEUnKTtcbiAgICAgICAgdGFibGUuY2xhc3NOYW1lID0gJ3ByaW50LXRhYmxlJztcbiAgICAgICAgbGV0IGxhYmVsUGFnZVNpemUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICBsYWJlbFBhZ2VTaXplLnRleHRDb250ZW50ID0gJ1BhZ2UgU2l6ZSc7XG4gICAgICAgIGNvbnN0IHBhZ2VTaXplID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtcbiAgICAgICAgcGFnZVNpemUuc3R5bGUud2lkdGggPSBcIjEwMCVcIjtcbiAgICAgICAgY29uc3Qgb3B0aW9uQTRfTGFuZHNjYXBlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgICAgIG9wdGlvbkE0X0xhbmRzY2FwZS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBKU09OLnN0cmluZ2lmeShtYXBfZ2VuZXJhdG9yXzEuU2l6ZS5BNF9sYW5kc2NhcGUpKTtcbiAgICAgICAgb3B0aW9uQTRfTGFuZHNjYXBlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiQTQgTGFuZHNjYXBlXCIpKTtcbiAgICAgICAgY29uc3Qgb3B0aW9uQTRfUG9ydHJhaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICAgICAgb3B0aW9uQTRfUG9ydHJhaXQuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgSlNPTi5zdHJpbmdpZnkobWFwX2dlbmVyYXRvcl8xLlNpemUuQTRfcG9ydHJhaXQpKTtcbiAgICAgICAgb3B0aW9uQTRfUG9ydHJhaXQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJBNCBQb3J0cmFpdFwiKSk7XG4gICAgICAgIHBhZ2VTaXplLnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJwYWdlLXNpemVcIik7XG4gICAgICAgIHBhZ2VTaXplLmFwcGVuZENoaWxkKG9wdGlvbkE0X0xhbmRzY2FwZSk7XG4gICAgICAgIHBhZ2VTaXplLmFwcGVuZENoaWxkKG9wdGlvbkE0X1BvcnRyYWl0KTtcbiAgICAgICAgdmFyIHRyMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ1RSJyk7XG4gICAgICAgIHZhciB0ZDFfMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ1REJyk7XG4gICAgICAgIHZhciB0ZDFfMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ1REJyk7XG4gICAgICAgIHRkMV8xLmFwcGVuZENoaWxkKGxhYmVsUGFnZVNpemUpO1xuICAgICAgICB0ZDFfMi5hcHBlbmRDaGlsZChwYWdlU2l6ZSk7XG4gICAgICAgIHRyMS5hcHBlbmRDaGlsZCh0ZDFfMSk7XG4gICAgICAgIHRyMS5hcHBlbmRDaGlsZCh0ZDFfMik7XG4gICAgICAgIHRhYmxlLmFwcGVuZENoaWxkKHRyMSk7XG4gICAgICAgIGxldCBsYWJlbEZvcm1hdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgIGxhYmVsRm9ybWF0LnRleHRDb250ZW50ID0gJ0Zvcm1hdCc7XG4gICAgICAgIGNvbnN0IGZvcm1hdFR5cGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xuICAgICAgICBmb3JtYXRUeXBlLnN0eWxlLndpZHRoID0gXCIxMDAlXCI7XG4gICAgICAgIGNvbnN0IG9wdGlvblBkZiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICAgICAgICBvcHRpb25QZGYuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgbWFwX2dlbmVyYXRvcl8xLkZvcm1hdC5QREYpO1xuICAgICAgICBvcHRpb25QZGYuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJQREZcIikpO1xuICAgICAgICBjb25zdCBvcHRpb25QbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICAgICAgb3B0aW9uUG5nLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIG1hcF9nZW5lcmF0b3JfMS5Gb3JtYXQuUE5HKTtcbiAgICAgICAgb3B0aW9uUG5nLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiUE5HXCIpKTtcbiAgICAgICAgZm9ybWF0VHlwZS5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwiZm9ybWF0LXR5cGVcIik7XG4gICAgICAgIGZvcm1hdFR5cGUuYXBwZW5kQ2hpbGQob3B0aW9uUGRmKTtcbiAgICAgICAgZm9ybWF0VHlwZS5hcHBlbmRDaGlsZChvcHRpb25QbmcpO1xuICAgICAgICB2YXIgdHIyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnVFInKTtcbiAgICAgICAgdmFyIHRkMl8xID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnVEQnKTtcbiAgICAgICAgdmFyIHRkMl8yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnVEQnKTtcbiAgICAgICAgdGQyXzEuYXBwZW5kQ2hpbGQobGFiZWxGb3JtYXQpO1xuICAgICAgICB0ZDJfMi5hcHBlbmRDaGlsZChmb3JtYXRUeXBlKTtcbiAgICAgICAgdHIyLmFwcGVuZENoaWxkKHRkMl8xKTtcbiAgICAgICAgdHIyLmFwcGVuZENoaWxkKHRkMl8yKTtcbiAgICAgICAgdGFibGUuYXBwZW5kQ2hpbGQodHIyKTtcbiAgICAgICAgdGhpcy5leHBvcnRDb250YWluZXIuYXBwZW5kQ2hpbGQodGFibGUpO1xuICAgICAgICBjb25zdCBnZW5lcmF0ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGdlbmVyYXRlQnV0dG9uLnRleHRDb250ZW50ID0gJ0dlbmVyYXRlJztcbiAgICAgICAgZ2VuZXJhdGVCdXR0b24uY2xhc3NMaXN0LmFkZCgnZ2VuZXJhdGUtYnV0dG9uJyk7XG4gICAgICAgIGdlbmVyYXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhwYWdlU2l6ZS52YWx1ZSk7XG4gICAgICAgICAgICBjb25zdCBtYXBHZW5lcmF0b3IgPSBuZXcgbWFwX2dlbmVyYXRvcl8xLmRlZmF1bHQobWFwLCBKU09OLnBhcnNlKHBhZ2VTaXplLnZhbHVlKSwgMzAwLCBmb3JtYXRUeXBlLnZhbHVlKTtcbiAgICAgICAgICAgIG1hcEdlbmVyYXRvci5nZW5lcmF0ZSgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5leHBvcnRDb250YWluZXIuYXBwZW5kQ2hpbGQoZ2VuZXJhdGVCdXR0b24pO1xuICAgICAgICByZXR1cm4gdGhpcy5jb250cm9sQ29udGFpbmVyO1xuICAgIH1cbiAgICBvblJlbW92ZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNvbnRyb2xDb250YWluZXIgfHwgIXRoaXMuY29udHJvbENvbnRhaW5lci5wYXJlbnROb2RlIHx8ICF0aGlzLm1hcCB8fCAhdGhpcy5leHBvcnRCdXR0b24pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmV4cG9ydEJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5vbkRvY3VtZW50Q2xpY2spO1xuICAgICAgICB0aGlzLmNvbnRyb2xDb250YWluZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmNvbnRyb2xDb250YWluZXIpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5vbkRvY3VtZW50Q2xpY2spO1xuICAgICAgICB0aGlzLm1hcCA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgb25Eb2N1bWVudENsaWNrKGV2ZW50KSB7XG4gICAgICAgIGlmICh0aGlzLmNvbnRyb2xDb250YWluZXIgJiYgIXRoaXMuY29udHJvbENvbnRhaW5lci5jb250YWlucyhldmVudC50YXJnZXQpICYmIHRoaXMuZXhwb3J0Q29udGFpbmVyICYmIHRoaXMuZXhwb3J0QnV0dG9uKSB7XG4gICAgICAgICAgICB0aGlzLmV4cG9ydENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICB0aGlzLmV4cG9ydEJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTWFwYm94RXhwb3J0Q29udHJvbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCIsImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgbWFwYm94Z2wgZnJvbSAnbWFwYm94LWdsJztcbmltcG9ydCBNYXBib3hFeHBvcnRDb250cm9sIGZyb20gJy4uL2Rpc3QvaW5kZXgnO1xuaW1wb3J0ICcuLi9jc3Mvc3R5bGVzLmNzcyc7XG5cbiQoZnVuY3Rpb24oKXtcbiAgICAvLyBtYXBib3hnbC5hY2Nlc3NUb2tlbj0neW91ciBtYXBib3ggYWNjZXNzIHRva2VuJ1xuICAgIGNvbnN0IG1hcCA9IG5ldyBtYXBib3hnbC5NYXAoe1xuICAgICAgICBjb250YWluZXI6ICdtYXAnLFxuICAgICAgICAvLyBzdHlsZTogJ21hcGJveDovL3N0eWxlcy9tYXBib3gvc3RyZWV0cy12MTEnLFxuICAgICAgICBzdHlsZTonaHR0cHM6Ly9uYXJ3YXNzY28uZ2l0aHViLmlvL21hcGJveC1zdHlsZWZpbGVzL3VudnQvc3R5bGUuanNvbicsXG4gICAgICAgIGNlbnRlcjogWzM1Ljg3MDYzLCAtMS4wODU1MV0sXG4gICAgICAgIHpvb206IDEyLFxuICAgICAgICBoYXNoOnRydWUsXG4gICAgfSk7XG4gICAgbWFwLmFkZENvbnRyb2wobmV3IG1hcGJveGdsLk5hdmlnYXRpb25Db250cm9sKCksICd0b3AtcmlnaHQnKTtcbiAgICBtYXAuYWRkQ29udHJvbChuZXcgTWFwYm94RXhwb3J0Q29udHJvbCgpLCAndG9wLXJpZ2h0Jyk7XG59KSIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TaXplID0gZXhwb3J0cy5Vbml0ID0gZXhwb3J0cy5Gb3JtYXQgPSB2b2lkIDA7XG5jb25zdCBqc1BERiA9IHJlcXVpcmUoXCJqc3BkZlwiKTtcbmNvbnN0IGZpbGVfc2F2ZXJfMSA9IHJlcXVpcmUoXCJmaWxlLXNhdmVyXCIpO1xuY29uc3QgbWFwYm94X2dsXzEgPSByZXF1aXJlKFwibWFwYm94LWdsXCIpO1xuZXhwb3J0cy5Gb3JtYXQgPSB7XG4gICAgUE5HOiAncG5nJyxcbiAgICBQREY6ICdwZGYnLFxufTtcbmV4cG9ydHMuVW5pdCA9IHtcbiAgICBpbjogJ2luJyxcbiAgICBtbTogJ21tJyxcbn07XG5leHBvcnRzLlNpemUgPSB7XG4gICAgQTRfbGFuZHNjYXBlOiBbMjk3LCAyMTBdLFxuICAgIEE0X3BvcnRyYWl0OiBbMjEwLCAyOTddLFxufTtcbmNsYXNzIE1hcEdlbmVyYXRvciB7XG4gICAgY29uc3RydWN0b3IobWFwLCBzaXplID0gZXhwb3J0cy5TaXplLkE0X2xhbmRzY2FwZSwgZHBpID0gMzAwLCBmb3JtYXQgPSBleHBvcnRzLkZvcm1hdC5QTkcudG9TdHJpbmcoKSwgdW5pdCA9IGV4cG9ydHMuVW5pdC5tbSkge1xuICAgICAgICB0aGlzLm1hcCA9IG1hcDtcbiAgICAgICAgdGhpcy53aWR0aCA9IHNpemVbMF07XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gc2l6ZVsxXTtcbiAgICAgICAgdGhpcy5kcGkgPSBkcGk7XG4gICAgICAgIHRoaXMuZm9ybWF0ID0gZm9ybWF0O1xuICAgICAgICB0aGlzLnVuaXQgPSB1bml0O1xuICAgIH1cbiAgICBnZW5lcmF0ZSgpIHtcbiAgICAgICAgY29uc3QgdGhpc18gPSB0aGlzO1xuICAgICAgICB2YXIgYWN0dWFsUGl4ZWxSYXRpbyA9IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCAnZGV2aWNlUGl4ZWxSYXRpbycsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpc18uZHBpIC8gOTY7IH1cbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBoaWRkZW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgaGlkZGVuLmNsYXNzTmFtZSA9ICdoaWRkZW4tbWFwJztcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChoaWRkZW4pO1xuICAgICAgICB2YXIgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGNvbnRhaW5lci5zdHlsZS53aWR0aCA9IHRoaXMudG9QaXhlbHModGhpcy53aWR0aCk7XG4gICAgICAgIGNvbnRhaW5lci5zdHlsZS5oZWlnaHQgPSB0aGlzLnRvUGl4ZWxzKHRoaXMuaGVpZ2h0KTtcbiAgICAgICAgaGlkZGVuLmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gICAgICAgIHZhciByZW5kZXJNYXAgPSBuZXcgbWFwYm94X2dsXzEuTWFwKHtcbiAgICAgICAgICAgIGNvbnRhaW5lcjogY29udGFpbmVyLFxuICAgICAgICAgICAgY2VudGVyOiB0aGlzLm1hcC5nZXRDZW50ZXIoKSxcbiAgICAgICAgICAgIHpvb206IHRoaXMubWFwLmdldFpvb20oKSxcbiAgICAgICAgICAgIHN0eWxlOiB0aGlzLm1hcC5nZXRTdHlsZSgpLFxuICAgICAgICAgICAgYmVhcmluZzogdGhpcy5tYXAuZ2V0QmVhcmluZygpLFxuICAgICAgICAgICAgcGl0Y2g6IHRoaXMubWFwLmdldFBpdGNoKCksXG4gICAgICAgICAgICBpbnRlcmFjdGl2ZTogZmFsc2UsXG4gICAgICAgICAgICBwcmVzZXJ2ZURyYXdpbmdCdWZmZXI6IHRydWUsXG4gICAgICAgICAgICBmYWRlRHVyYXRpb246IDAsXG4gICAgICAgICAgICBhdHRyaWJ1dGlvbkNvbnRyb2w6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICByZW5kZXJNYXAub25jZSgnaWRsZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGlmICh0aGlzXy5mb3JtYXQgPT0gZXhwb3J0cy5Gb3JtYXQuUE5HKSB7XG4gICAgICAgICAgICAgICAgcmVuZGVyTWFwLmdldENhbnZhcygpLnRvQmxvYihmdW5jdGlvbiAoYmxvYikge1xuICAgICAgICAgICAgICAgICAgICBmaWxlX3NhdmVyXzEuc2F2ZUFzKGJsb2IsICdtYXAucG5nJyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgcGRmID0gbmV3IGpzUERGKHtcbiAgICAgICAgICAgICAgICAgICAgb3JpZW50YXRpb246IHRoaXNfLndpZHRoID4gdGhpc18uaGVpZ2h0ID8gJ2wnIDogJ3AnLFxuICAgICAgICAgICAgICAgICAgICB1bml0OiB0aGlzXy51bml0LFxuICAgICAgICAgICAgICAgICAgICBjb21wcmVzczogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHBkZi5hZGRJbWFnZShyZW5kZXJNYXAuZ2V0Q2FudmFzKCkudG9EYXRhVVJMKCdpbWFnZS9wbmcnKSwgJ3BuZycsIDAsIDAsIHRoaXNfLndpZHRoLCB0aGlzXy5oZWlnaHQsIG51bGwsICdGQVNUJyk7XG4gICAgICAgICAgICAgICAgdmFyIHsgbG5nLCBsYXQgfSA9IHJlbmRlck1hcC5nZXRDZW50ZXIoKTtcbiAgICAgICAgICAgICAgICBwZGYuc2V0UHJvcGVydGllcyh7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiByZW5kZXJNYXAuZ2V0U3R5bGUoKS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBzdWJqZWN0OiBgY2VudGVyOiBbJHtsbmd9LCAke2xhdH1dLCB6b29tOiAke3JlbmRlck1hcC5nZXRab29tKCl9YCxcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRvcjogJ01hcGJveCBHTCBQcmludCBQbHVnaW4nLFxuICAgICAgICAgICAgICAgICAgICBhdXRob3I6ICcoYylNYXBib3gsIChjKU9wZW5TdHJlZXRNYXAnXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcGRmLnNhdmUoJ21hcC5wZGYnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlbmRlck1hcC5yZW1vdmUoKTtcbiAgICAgICAgICAgIChfYSA9IGhpZGRlbi5wYXJlbnROb2RlKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucmVtb3ZlQ2hpbGQoaGlkZGVuKTtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdkZXZpY2VQaXhlbFJhdGlvJywge1xuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWN0dWFsUGl4ZWxSYXRpbzsgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB0b1BpeGVscyhsZW5ndGgpIHtcbiAgICAgICAgdmFyIGNvbnZlcnNpb25GYWN0b3IgPSA5NjtcbiAgICAgICAgaWYgKHRoaXMudW5pdCA9PSBleHBvcnRzLlVuaXQubW0pIHtcbiAgICAgICAgICAgIGNvbnZlcnNpb25GYWN0b3IgLz0gMjUuNDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY29udmVyc2lvbkZhY3RvciAqIGxlbmd0aCArICdweCc7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTWFwR2VuZXJhdG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWFwLWdlbmVyYXRvci5qcy5tYXAiLCIhZnVuY3Rpb24odCl7XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZSh0KTp0KCl9KGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7XG4vKiogQGxpY2Vuc2VcbiAgICoganNQREYgLSBQREYgRG9jdW1lbnQgY3JlYXRpb24gZnJvbSBKYXZhU2NyaXB0XG4gICAqIFZlcnNpb24gMS41LjMgQnVpbHQgb24gMjAxOC0xMi0yN1QxNDoxMTo0Mi42OTZaXG4gICAqICAgICAgICAgICAgICAgICAgICAgIENvbW1pdElEIGQ5M2QyOGRiMTRcbiAgICpcbiAgICogQ29weXJpZ2h0IChjKSAyMDEwLTIwMTYgSmFtZXMgSGFsbCA8amFtZXNAcGFyYWxsLmF4PiwgaHR0cHM6Ly9naXRodWIuY29tL01yUmlvL2pzUERGXG4gICAqICAgICAgICAgICAgICAgMjAxMCBBYXJvbiBTcGlrZSwgaHR0cHM6Ly9naXRodWIuY29tL2Fjc3Bpa2VcbiAgICogICAgICAgICAgICAgICAyMDEyIFdpbGxvdyBTeXN0ZW1zIENvcnBvcmF0aW9uLCB3aWxsb3ctc3lzdGVtcy5jb21cbiAgICogICAgICAgICAgICAgICAyMDEyIFBhYmxvIEhlc3MsIGh0dHBzOi8vZ2l0aHViLmNvbS9wYWJsb2hlc3NcbiAgICogICAgICAgICAgICAgICAyMDEyIEZsb3JpYW4gSmVuZXR0LCBodHRwczovL2dpdGh1Yi5jb20vZmplbmV0dFxuICAgKiAgICAgICAgICAgICAgIDIwMTMgV2FycmVuIFdlY2tlc3NlciwgaHR0cHM6Ly9naXRodWIuY29tL3dhcnJlbndlY2tlc3NlclxuICAgKiAgICAgICAgICAgICAgIDIwMTMgWW91c3NlZiBCZWRkYWQsIGh0dHBzOi8vZ2l0aHViLmNvbS9saWZvZlxuICAgKiAgICAgICAgICAgICAgIDIwMTMgTGVlIERyaXNjb2xsLCBodHRwczovL2dpdGh1Yi5jb20vbHNkcmlzY29sbFxuICAgKiAgICAgICAgICAgICAgIDIwMTMgU3RlZmFuIFNsb25ldnNraXksIGh0dHBzOi8vZ2l0aHViLmNvbS9zdGVmc2xvblxuICAgKiAgICAgICAgICAgICAgIDIwMTMgSmVyZW15IE1vcmVsLCBodHRwczovL2dpdGh1Yi5jb20vam1vcmVsXG4gICAqICAgICAgICAgICAgICAgMjAxMyBDaHJpc3RvcGggSGFydG1hbm4sIGh0dHBzOi8vZ2l0aHViLmNvbS9jaHJpcy1yb2NrXG4gICAqICAgICAgICAgICAgICAgMjAxNCBKdWFuIFBhYmxvIEdhdmlyaWEsIGh0dHBzOi8vZ2l0aHViLmNvbS9qdWFucGdhdmlyaWFcbiAgICogICAgICAgICAgICAgICAyMDE0IEphbWVzIE1ha2VzLCBodHRwczovL2dpdGh1Yi5jb20vZG9sbGFydXdcbiAgICogICAgICAgICAgICAgICAyMDE0IERpZWdvIENhc29ycmFuLCBodHRwczovL2dpdGh1Yi5jb20vZGllZ29jclxuICAgKiAgICAgICAgICAgICAgIDIwMTQgU3RldmVuIFNwdW5naW4sIGh0dHBzOi8vZ2l0aHViLmNvbS9GbGFtZW5jb1xuICAgKiAgICAgICAgICAgICAgIDIwMTQgS2VubmV0aCBHbGFzc2V5LCBodHRwczovL2dpdGh1Yi5jb20vR2F2dmVyc1xuICAgKlxuICAgKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2VcbiAgICpcbiAgICogQ29udHJpYnV0b3Iocyk6XG4gICAqICAgIHNpZWZrZW5qLCBhaHdvbGYsIHJpY2t5Z3UsIE1pZG5pdGgsIHNhaW50Y2xhaXIsIGVhcGFyYW5nbyxcbiAgICogICAga2ltM2VyLCBtZm8sIGFsbm9ydGgsIEZsYW1lbmNvXG4gICAqL2Z1bmN0aW9uIHNlKHQpe3JldHVybihzZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiB0fSkodCl9IWZ1bmN0aW9uKHQpe2lmKFwib2JqZWN0XCIhPT1zZSh0LmNvbnNvbGUpKXt0LmNvbnNvbGU9e307Zm9yKHZhciBlLG4scj10LmNvbnNvbGUsaT1mdW5jdGlvbigpe30sbz1bXCJtZW1vcnlcIl0sYT1cImFzc2VydCxjbGVhcixjb3VudCxkZWJ1ZyxkaXIsZGlyeG1sLGVycm9yLGV4Y2VwdGlvbixncm91cCxncm91cENvbGxhcHNlZCxncm91cEVuZCxpbmZvLGxvZyxtYXJrVGltZWxpbmUscHJvZmlsZSxwcm9maWxlcyxwcm9maWxlRW5kLHNob3csdGFibGUsdGltZSx0aW1lRW5kLHRpbWVsaW5lLHRpbWVsaW5lRW5kLHRpbWVTdGFtcCx0cmFjZSx3YXJuXCIuc3BsaXQoXCIsXCIpO2U9by5wb3AoKTspcltlXXx8KHJbZV09e30pO2Zvcig7bj1hLnBvcCgpOylyW25dfHwocltuXT1pKX12YXIgcyxsLGgsdSxjPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz1cIjt2b2lkIDA9PT10LmJ0b2EmJih0LmJ0b2E9ZnVuY3Rpb24odCl7dmFyIGUsbixyLGksbyxhPTAscz0wLGw9XCJcIixoPVtdO2lmKCF0KXJldHVybiB0O2Zvcig7ZT0obz10LmNoYXJDb2RlQXQoYSsrKTw8MTZ8dC5jaGFyQ29kZUF0KGErKyk8PDh8dC5jaGFyQ29kZUF0KGErKykpPj4xOCY2MyxuPW8+PjEyJjYzLHI9bz4+NiY2MyxpPTYzJm8saFtzKytdPWMuY2hhckF0KGUpK2MuY2hhckF0KG4pK2MuY2hhckF0KHIpK2MuY2hhckF0KGkpLGE8dC5sZW5ndGg7KTtsPWguam9pbihcIlwiKTt2YXIgdT10Lmxlbmd0aCUzO3JldHVybih1P2wuc2xpY2UoMCx1LTMpOmwpK1wiPT09XCIuc2xpY2UodXx8Myl9KSx2b2lkIDA9PT10LmF0b2ImJih0LmF0b2I9ZnVuY3Rpb24odCl7dmFyIGUsbixyLGksbyxhLHM9MCxsPTAsaD1bXTtpZighdClyZXR1cm4gdDtmb3IodCs9XCJcIjtlPShhPWMuaW5kZXhPZih0LmNoYXJBdChzKyspKTw8MTh8Yy5pbmRleE9mKHQuY2hhckF0KHMrKykpPDwxMnwoaT1jLmluZGV4T2YodC5jaGFyQXQocysrKSkpPDw2fChvPWMuaW5kZXhPZih0LmNoYXJBdChzKyspKSkpPj4xNiYyNTUsbj1hPj44JjI1NSxyPTI1NSZhLGhbbCsrXT02ND09aT9TdHJpbmcuZnJvbUNoYXJDb2RlKGUpOjY0PT1vP1N0cmluZy5mcm9tQ2hhckNvZGUoZSxuKTpTdHJpbmcuZnJvbUNoYXJDb2RlKGUsbixyKSxzPHQubGVuZ3RoOyk7cmV0dXJuIGguam9pbihcIlwiKX0pLEFycmF5LnByb3RvdHlwZS5tYXB8fChBcnJheS5wcm90b3R5cGUubWFwPWZ1bmN0aW9uKHQpe2lmKG51bGw9PXRoaXN8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcjtmb3IodmFyIGU9T2JqZWN0KHRoaXMpLG49ZS5sZW5ndGg+Pj4wLHI9bmV3IEFycmF5KG4pLGk9MTxhcmd1bWVudHMubGVuZ3RoP2FyZ3VtZW50c1sxXTp2b2lkIDAsbz0wO288bjtvKyspbyBpbiBlJiYocltvXT10LmNhbGwoaSxlW29dLG8sZSkpO3JldHVybiByfSksQXJyYXkuaXNBcnJheXx8KEFycmF5LmlzQXJyYXk9ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfSksQXJyYXkucHJvdG90eXBlLmZvckVhY2h8fChBcnJheS5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbih0LGUpe2lmKG51bGw9PXRoaXN8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcjtmb3IodmFyIG49T2JqZWN0KHRoaXMpLHI9bi5sZW5ndGg+Pj4wLGk9MDtpPHI7aSsrKWkgaW4gbiYmdC5jYWxsKGUsbltpXSxpLG4pfSksQXJyYXkucHJvdG90eXBlLmZpbmR8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBcnJheS5wcm90b3R5cGUsXCJmaW5kXCIse3ZhbHVlOmZ1bmN0aW9uKHQpe2lmKG51bGw9PXRoaXMpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJ0aGlzXCIgaXMgbnVsbCBvciBub3QgZGVmaW5lZCcpO3ZhciBlPU9iamVjdCh0aGlzKSxuPWUubGVuZ3RoPj4+MDtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJwcmVkaWNhdGUgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO2Zvcih2YXIgcj1hcmd1bWVudHNbMV0saT0wO2k8bjspe3ZhciBvPWVbaV07aWYodC5jYWxsKHIsbyxpLGUpKXJldHVybiBvO2krK319LGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pLE9iamVjdC5rZXlzfHwoT2JqZWN0LmtleXM9KHM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxsPSF7dG9TdHJpbmc6bnVsbH0ucHJvcGVydHlJc0VudW1lcmFibGUoXCJ0b1N0cmluZ1wiKSx1PShoPVtcInRvU3RyaW5nXCIsXCJ0b0xvY2FsZVN0cmluZ1wiLFwidmFsdWVPZlwiLFwiaGFzT3duUHJvcGVydHlcIixcImlzUHJvdG90eXBlT2ZcIixcInByb3BlcnR5SXNFbnVtZXJhYmxlXCIsXCJjb25zdHJ1Y3RvclwiXSkubGVuZ3RoLGZ1bmN0aW9uKHQpe2lmKFwib2JqZWN0XCIhPT1zZSh0KSYmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHR8fG51bGw9PT10KSl0aHJvdyBuZXcgVHlwZUVycm9yO3ZhciBlLG4scj1bXTtmb3IoZSBpbiB0KXMuY2FsbCh0LGUpJiZyLnB1c2goZSk7aWYobClmb3Iobj0wO248dTtuKyspcy5jYWxsKHQsaFtuXSkmJnIucHVzaChoW25dKTtyZXR1cm4gcn0pKSxcImZ1bmN0aW9uXCIhPXR5cGVvZiBPYmplY3QuYXNzaWduJiYoT2JqZWN0LmFzc2lnbj1mdW5jdGlvbih0KXtpZihudWxsPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY29udmVydCB1bmRlZmluZWQgb3IgbnVsbCB0byBvYmplY3RcIik7dD1PYmplY3QodCk7Zm9yKHZhciBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7dmFyIG49YXJndW1lbnRzW2VdO2lmKG51bGwhPW4pZm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJih0W3JdPW5bcl0pfXJldHVybiB0fSksU3RyaW5nLnByb3RvdHlwZS50cmltfHwoU3RyaW5nLnByb3RvdHlwZS50cmltPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVwbGFjZSgvXlxccyt8XFxzKyQvZyxcIlwiKX0pLFN0cmluZy5wcm90b3R5cGUudHJpbUxlZnR8fChTdHJpbmcucHJvdG90eXBlLnRyaW1MZWZ0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVwbGFjZSgvXlxccysvZyxcIlwiKX0pLFN0cmluZy5wcm90b3R5cGUudHJpbVJpZ2h0fHwoU3RyaW5nLnByb3RvdHlwZS50cmltUmlnaHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZXBsYWNlKC9cXHMrJC9nLFwiXCIpfSksTnVtYmVyLmlzSW50ZWdlcj1OdW1iZXIuaXNJbnRlZ2VyfHxmdW5jdGlvbih0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdCYmaXNGaW5pdGUodCkmJk1hdGguZmxvb3IodCk9PT10fX0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGZ8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbCYmZ2xvYmFsfHxGdW5jdGlvbigncmV0dXJuIHR5cGVvZiB0aGlzID09PSBcIm9iamVjdFwiICYmIHRoaXMuY29udGVudCcpKCl8fEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSk7dmFyIHQsZSxuLF8sbCxGLFAscCxkLGssYSxvLHMsaCx1LGMscixpLGYsZyxtLHksdix3LGIseCxJLEMsQixOLEwsQSxTLGosRSxNLE8scSxULFIsRCxVLHosSCxXLFYsRyxZLEosWCxLLFosUSwkLHR0LGV0LG50LHJ0LGl0LG90LGF0LHN0LGx0PWZ1bmN0aW9uKGllKXtmdW5jdGlvbiBvZShvKXtpZihcIm9iamVjdFwiIT09c2UobykpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBDb250ZXh0IHBhc3NlZCB0byBpbml0aWFsaXplIFB1YlN1YiAoanNQREYtbW9kdWxlKVwiKTt2YXIgYT17fTt0aGlzLnN1YnNjcmliZT1mdW5jdGlvbih0LGUsbil7aWYobj1ufHwhMSxcInN0cmluZ1wiIT10eXBlb2YgdHx8XCJmdW5jdGlvblwiIT10eXBlb2YgZXx8XCJib29sZWFuXCIhPXR5cGVvZiBuKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBQdWJTdWIuc3Vic2NyaWJlIChqc1BERi1tb2R1bGUpXCIpO2EuaGFzT3duUHJvcGVydHkodCl8fChhW3RdPXt9KTt2YXIgcj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM1KTtyZXR1cm4gYVt0XVtyXT1bZSwhIW5dLHJ9LHRoaXMudW5zdWJzY3JpYmU9ZnVuY3Rpb24odCl7Zm9yKHZhciBlIGluIGEpaWYoYVtlXVt0XSlyZXR1cm4gZGVsZXRlIGFbZV1bdF0sMD09PU9iamVjdC5rZXlzKGFbZV0pLmxlbmd0aCYmZGVsZXRlIGFbZV0sITA7cmV0dXJuITF9LHRoaXMucHVibGlzaD1mdW5jdGlvbih0KXtpZihhLmhhc093blByb3BlcnR5KHQpKXt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSksbj1bXTtmb3IodmFyIHIgaW4gYVt0XSl7dmFyIGk9YVt0XVtyXTt0cnl7aVswXS5hcHBseShvLGUpfWNhdGNoKHQpe2llLmNvbnNvbGUmJmNvbnNvbGUuZXJyb3IoXCJqc1BERiBQdWJTdWIgRXJyb3JcIix0Lm1lc3NhZ2UsdCl9aVsxXSYmbi5wdXNoKHIpfW4ubGVuZ3RoJiZuLmZvckVhY2godGhpcy51bnN1YnNjcmliZSl9fSx0aGlzLmdldFRvcGljcz1mdW5jdGlvbigpe3JldHVybiBhfX1mdW5jdGlvbiBhZSh0LGUsaSxuKXt2YXIgcj17fSxvPVtdLGE9MTtcIm9iamVjdFwiPT09c2UodCkmJih0PShyPXQpLm9yaWVudGF0aW9uLGU9ci51bml0fHxlLGk9ci5mb3JtYXR8fGksbj1yLmNvbXByZXNzfHxyLmNvbXByZXNzUGRmfHxuLG89ci5maWx0ZXJzfHwoITA9PT1uP1tcIkZsYXRlRW5jb2RlXCJdOm8pLGE9XCJudW1iZXJcIj09dHlwZW9mIHIudXNlclVuaXQ/TWF0aC5hYnMoci51c2VyVW5pdCk6MSksZT1lfHxcIm1tXCIsdD0oXCJcIisodHx8XCJQXCIpKS50b0xvd2VyQ2FzZSgpO3ZhciBzPXIucHV0T25seVVzZWRGb250c3x8ITAsSz17fSxsPXtpbnRlcm5hbDp7fSxfX3ByaXZhdGVfXzp7fX07bC5fX3ByaXZhdGVfXy5QdWJTdWI9b2U7dmFyIGg9XCIxLjNcIix1PWwuX19wcml2YXRlX18uZ2V0UGRmVmVyc2lvbj1mdW5jdGlvbigpe3JldHVybiBofSxjPShsLl9fcHJpdmF0ZV9fLnNldFBkZlZlcnNpb249ZnVuY3Rpb24odCl7aD10fSx7YTA6WzIzODMuOTQsMzM3MC4zOV0sYTE6WzE2ODMuNzgsMjM4My45NF0sYTI6WzExOTAuNTUsMTY4My43OF0sYTM6Wzg0MS44OSwxMTkwLjU1XSxhNDpbNTk1LjI4LDg0MS44OV0sYTU6WzQxOS41Myw1OTUuMjhdLGE2OlsyOTcuNjQsNDE5LjUzXSxhNzpbMjA5Ljc2LDI5Ny42NF0sYTg6WzE0Ny40LDIwOS43Nl0sYTk6WzEwNC44OCwxNDcuNF0sYTEwOls3My43LDEwNC44OF0sYjA6WzI4MzQuNjUsNDAwOC4xOV0sYjE6WzIwMDQuMDksMjgzNC42NV0sYjI6WzE0MTcuMzIsMjAwNC4wOV0sYjM6WzEwMDAuNjMsMTQxNy4zMl0sYjQ6WzcwOC42NiwxMDAwLjYzXSxiNTpbNDk4LjksNzA4LjY2XSxiNjpbMzU0LjMzLDQ5OC45XSxiNzpbMjQ5LjQ1LDM1NC4zM10sYjg6WzE3NS43NSwyNDkuNDVdLGI5OlsxMjQuNzIsMTc1Ljc1XSxiMTA6Wzg3Ljg3LDEyNC43Ml0sYzA6WzI1OTkuMzcsMzY3Ni41NF0sYzE6WzE4MzYuODUsMjU5OS4zN10sYzI6WzEyOTguMjcsMTgzNi44NV0sYzM6WzkxOC40MywxMjk4LjI3XSxjNDpbNjQ5LjEzLDkxOC40M10sYzU6WzQ1OS4yMSw2NDkuMTNdLGM2OlszMjMuMTUsNDU5LjIxXSxjNzpbMjI5LjYxLDMyMy4xNV0sYzg6WzE2MS41NywyMjkuNjFdLGM5OlsxMTMuMzksMTYxLjU3XSxjMTA6Wzc5LjM3LDExMy4zOV0sZGw6WzMxMS44MSw2MjMuNjJdLGxldHRlcjpbNjEyLDc5Ml0sXCJnb3Zlcm5tZW50LWxldHRlclwiOls1NzYsNzU2XSxsZWdhbDpbNjEyLDEwMDhdLFwianVuaW9yLWxlZ2FsXCI6WzU3NiwzNjBdLGxlZGdlcjpbMTIyNCw3OTJdLHRhYmxvaWQ6Wzc5MiwxMjI0XSxcImNyZWRpdC1jYXJkXCI6WzE1MywyNDNdfSksZj0obC5fX3ByaXZhdGVfXy5nZXRQYWdlRm9ybWF0cz1mdW5jdGlvbigpe3JldHVybiBjfSxsLl9fcHJpdmF0ZV9fLmdldFBhZ2VGb3JtYXQ9ZnVuY3Rpb24odCl7cmV0dXJuIGNbdF19KTtcInN0cmluZ1wiPT10eXBlb2YgaSYmKGk9ZihpKSksaT1pfHxmKFwiYTRcIik7dmFyIHAsWj1sLmYyPWwuX19wcml2YXRlX18uZjI9ZnVuY3Rpb24odCl7aWYoaXNOYU4odCkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudCBwYXNzZWQgdG8ganNQREYuZjJcIik7cmV0dXJuIHQudG9GaXhlZCgyKX0sUT1sLl9fcHJpdmF0ZV9fLmYzPWZ1bmN0aW9uKHQpe2lmKGlzTmFOKHQpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnQgcGFzc2VkIHRvIGpzUERGLmYzXCIpO3JldHVybiB0LnRvRml4ZWQoMyl9LGQ9XCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLGc9bC5fX3ByaXZhdGVfXy5nZXRGaWxlSWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZH0sbT1sLl9fcHJpdmF0ZV9fLnNldEZpbGVJZD1mdW5jdGlvbih0KXtyZXR1cm4gdD10fHxcIjEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyXCIuc3BsaXQoXCJcIikubWFwKGZ1bmN0aW9uKCl7cmV0dXJuXCJBQkNERUYwMTIzNDU2Nzg5XCIuY2hhckF0KE1hdGguZmxvb3IoMTYqTWF0aC5yYW5kb20oKSkpfSkuam9pbihcIlwiKSxkPXR9O2wuc2V0RmlsZUlkPWZ1bmN0aW9uKHQpe3JldHVybiBtKHQpLHRoaXN9LGwuZ2V0RmlsZUlkPWZ1bmN0aW9uKCl7cmV0dXJuIGcoKX07dmFyIHk9bC5fX3ByaXZhdGVfXy5jb252ZXJ0RGF0ZVRvUERGRGF0ZT1mdW5jdGlvbih0KXt2YXIgZT10LmdldFRpbWV6b25lT2Zmc2V0KCksbj1lPDA/XCIrXCI6XCItXCIscj1NYXRoLmZsb29yKE1hdGguYWJzKGUvNjApKSxpPU1hdGguYWJzKGUlNjApLG89W24sUChyKSxcIidcIixQKGkpLFwiJ1wiXS5qb2luKFwiXCIpO3JldHVybltcIkQ6XCIsdC5nZXRGdWxsWWVhcigpLFAodC5nZXRNb250aCgpKzEpLFAodC5nZXREYXRlKCkpLFAodC5nZXRIb3VycygpKSxQKHQuZ2V0TWludXRlcygpKSxQKHQuZ2V0U2Vjb25kcygpKSxvXS5qb2luKFwiXCIpfSx2PWwuX19wcml2YXRlX18uY29udmVydFBERkRhdGVUb0RhdGU9ZnVuY3Rpb24odCl7dmFyIGU9cGFyc2VJbnQodC5zdWJzdHIoMiw0KSwxMCksbj1wYXJzZUludCh0LnN1YnN0cig2LDIpLDEwKS0xLHI9cGFyc2VJbnQodC5zdWJzdHIoOCwyKSwxMCksaT1wYXJzZUludCh0LnN1YnN0cigxMCwyKSwxMCksbz1wYXJzZUludCh0LnN1YnN0cigxMiwyKSwxMCksYT1wYXJzZUludCh0LnN1YnN0cigxNCwyKSwxMCk7cGFyc2VJbnQodC5zdWJzdHIoMTYsMiksMTApLHBhcnNlSW50KHQuc3Vic3RyKDIwLDIpLDEwKTtyZXR1cm4gbmV3IERhdGUoZSxuLHIsaSxvLGEsMCl9LHc9bC5fX3ByaXZhdGVfXy5zZXRDcmVhdGlvbkRhdGU9ZnVuY3Rpb24odCl7dmFyIGU7aWYodm9pZCAwPT09dCYmKHQ9bmV3IERhdGUpLFwib2JqZWN0XCI9PT1zZSh0KSYmXCJbb2JqZWN0IERhdGVdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpZT15KHQpO2Vsc2V7aWYoIS9eRDooMjBbMC0yXVswLTldfDIwM1swLTddfDE5WzctOV1bMC05XSkoMFswLTldfDFbMC0yXSkoWzAtMl1bMC05XXwzWzAtMV0pKDBbMC05XXwxWzAtOV18MlswLTNdKSgwWzAtOV18WzEtNV1bMC05XSkoMFswLTldfFsxLTVdWzAtOV0pKFxcKzBbMC05XXxcXCsxWzAtNF18XFwtMFswLTldfFxcLTFbMC0xXSlcXCcoMFswLTldfFsxLTVdWzAtOV0pXFwnPyQvLnRlc3QodCkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudCBwYXNzZWQgdG8ganNQREYuc2V0Q3JlYXRpb25EYXRlXCIpO2U9dH1yZXR1cm4gcD1lfSxiPWwuX19wcml2YXRlX18uZ2V0Q3JlYXRpb25EYXRlPWZ1bmN0aW9uKHQpe3ZhciBlPXA7cmV0dXJuXCJqc0RhdGVcIj09PXQmJihlPXYocCkpLGV9O2wuc2V0Q3JlYXRpb25EYXRlPWZ1bmN0aW9uKHQpe3JldHVybiB3KHQpLHRoaXN9LGwuZ2V0Q3JlYXRpb25EYXRlPWZ1bmN0aW9uKHQpe3JldHVybiBiKHQpfTt2YXIgeCxOLEwsQSxTLCQsXyxGLFA9bC5fX3ByaXZhdGVfXy5wYWRkMj1mdW5jdGlvbih0KXtyZXR1cm4oXCIwXCIrcGFyc2VJbnQodCkpLnNsaWNlKC0yKX0saz0hMSxJPVtdLEM9W10sQj0wLHR0PShsLl9fcHJpdmF0ZV9fLnNldEN1c3RvbU91dHB1dERlc3RpbmF0aW9uPWZ1bmN0aW9uKHQpe049dH0sbC5fX3ByaXZhdGVfXy5yZXNldEN1c3RvbU91dHB1dERlc3RpbmF0aW9uPWZ1bmN0aW9uKHQpe049dm9pZCAwfSxsLl9fcHJpdmF0ZV9fLm91dD1mdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4gdD1cInN0cmluZ1wiPT10eXBlb2YgdD90OnQudG9TdHJpbmcoKSwoZT12b2lkIDA9PT1OP2s/SVt4XTpDOk4pLnB1c2godCksa3x8KEIrPXQubGVuZ3RoKzEpLGV9KSxqPWwuX19wcml2YXRlX18ud3JpdGU9ZnVuY3Rpb24odCl7cmV0dXJuIHR0KDE9PT1hcmd1bWVudHMubGVuZ3RoP3QudG9TdHJpbmcoKTpBcnJheS5wcm90b3R5cGUuam9pbi5jYWxsKGFyZ3VtZW50cyxcIiBcIikpfSxFPWwuX19wcml2YXRlX18uZ2V0QXJyYXlCdWZmZXI9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQubGVuZ3RoLG49bmV3IEFycmF5QnVmZmVyKGUpLHI9bmV3IFVpbnQ4QXJyYXkobik7ZS0tOylyW2VdPXQuY2hhckNvZGVBdChlKTtyZXR1cm4gbn0sTT1bW1wiSGVsdmV0aWNhXCIsXCJoZWx2ZXRpY2FcIixcIm5vcm1hbFwiLFwiV2luQW5zaUVuY29kaW5nXCJdLFtcIkhlbHZldGljYS1Cb2xkXCIsXCJoZWx2ZXRpY2FcIixcImJvbGRcIixcIldpbkFuc2lFbmNvZGluZ1wiXSxbXCJIZWx2ZXRpY2EtT2JsaXF1ZVwiLFwiaGVsdmV0aWNhXCIsXCJpdGFsaWNcIixcIldpbkFuc2lFbmNvZGluZ1wiXSxbXCJIZWx2ZXRpY2EtQm9sZE9ibGlxdWVcIixcImhlbHZldGljYVwiLFwiYm9sZGl0YWxpY1wiLFwiV2luQW5zaUVuY29kaW5nXCJdLFtcIkNvdXJpZXJcIixcImNvdXJpZXJcIixcIm5vcm1hbFwiLFwiV2luQW5zaUVuY29kaW5nXCJdLFtcIkNvdXJpZXItQm9sZFwiLFwiY291cmllclwiLFwiYm9sZFwiLFwiV2luQW5zaUVuY29kaW5nXCJdLFtcIkNvdXJpZXItT2JsaXF1ZVwiLFwiY291cmllclwiLFwiaXRhbGljXCIsXCJXaW5BbnNpRW5jb2RpbmdcIl0sW1wiQ291cmllci1Cb2xkT2JsaXF1ZVwiLFwiY291cmllclwiLFwiYm9sZGl0YWxpY1wiLFwiV2luQW5zaUVuY29kaW5nXCJdLFtcIlRpbWVzLVJvbWFuXCIsXCJ0aW1lc1wiLFwibm9ybWFsXCIsXCJXaW5BbnNpRW5jb2RpbmdcIl0sW1wiVGltZXMtQm9sZFwiLFwidGltZXNcIixcImJvbGRcIixcIldpbkFuc2lFbmNvZGluZ1wiXSxbXCJUaW1lcy1JdGFsaWNcIixcInRpbWVzXCIsXCJpdGFsaWNcIixcIldpbkFuc2lFbmNvZGluZ1wiXSxbXCJUaW1lcy1Cb2xkSXRhbGljXCIsXCJ0aW1lc1wiLFwiYm9sZGl0YWxpY1wiLFwiV2luQW5zaUVuY29kaW5nXCJdLFtcIlphcGZEaW5nYmF0c1wiLFwiemFwZmRpbmdiYXRzXCIsXCJub3JtYWxcIixudWxsXSxbXCJTeW1ib2xcIixcInN5bWJvbFwiLFwibm9ybWFsXCIsbnVsbF1dLGV0PShsLl9fcHJpdmF0ZV9fLmdldFN0YW5kYXJkRm9udHM9ZnVuY3Rpb24odCl7cmV0dXJuIE19LHIuZm9udFNpemV8fDE2KSxPPShsLl9fcHJpdmF0ZV9fLnNldEZvbnRTaXplPWwuc2V0Rm9udFNpemU9ZnVuY3Rpb24odCl7cmV0dXJuIGV0PXQsdGhpc30sbC5fX3ByaXZhdGVfXy5nZXRGb250U2l6ZT1sLmdldEZvbnRTaXplPWZ1bmN0aW9uKCl7cmV0dXJuIGV0fSksbnQ9ci5SMkx8fCExLHE9KGwuX19wcml2YXRlX18uc2V0UjJMPWwuc2V0UjJMPWZ1bmN0aW9uKHQpe3JldHVybiBudD10LHRoaXN9LGwuX19wcml2YXRlX18uZ2V0UjJMPWwuZ2V0UjJMPWZ1bmN0aW9uKHQpe3JldHVybiBudH0sbC5fX3ByaXZhdGVfXy5zZXRab29tTW9kZT1mdW5jdGlvbih0KXt2YXIgZT1bdm9pZCAwLG51bGwsXCJmdWxsd2lkdGhcIixcImZ1bGxoZWlnaHRcIixcImZ1bGxwYWdlXCIsXCJvcmlnaW5hbFwiXTtpZigvXlxcZCpcXC4/XFxkKlxcJSQvLnRlc3QodCkpTD10O2Vsc2UgaWYoaXNOYU4odCkpe2lmKC0xPT09ZS5pbmRleE9mKHQpKXRocm93IG5ldyBFcnJvcignem9vbSBtdXN0IGJlIEludGVnZXIgKGUuZy4gMiksIGEgcGVyY2VudGFnZSBWYWx1ZSAoZS5nLiAzMDAlKSBvciBmdWxsd2lkdGgsIGZ1bGxoZWlnaHQsIGZ1bGxwYWdlLCBvcmlnaW5hbC4gXCInK3QrJ1wiIGlzIG5vdCByZWNvZ25pemVkLicpO0w9dH1lbHNlIEw9cGFyc2VJbnQodCwxMCl9KSxUPShsLl9fcHJpdmF0ZV9fLmdldFpvb21Nb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEx9LGwuX19wcml2YXRlX18uc2V0UGFnZU1vZGU9ZnVuY3Rpb24odCl7aWYoLTE9PVt2b2lkIDAsbnVsbCxcIlVzZU5vbmVcIixcIlVzZU91dGxpbmVzXCIsXCJVc2VUaHVtYnNcIixcIkZ1bGxTY3JlZW5cIl0uaW5kZXhPZih0KSl0aHJvdyBuZXcgRXJyb3IoJ1BhZ2UgbW9kZSBtdXN0IGJlIG9uZSBvZiBVc2VOb25lLCBVc2VPdXRsaW5lcywgVXNlVGh1bWJzLCBvciBGdWxsU2NyZWVuLiBcIicrdCsnXCIgaXMgbm90IHJlY29nbml6ZWQuJyk7QT10fSksUj0obC5fX3ByaXZhdGVfXy5nZXRQYWdlTW9kZT1mdW5jdGlvbigpe3JldHVybiBBfSxsLl9fcHJpdmF0ZV9fLnNldExheW91dE1vZGU9ZnVuY3Rpb24odCl7aWYoLTE9PVt2b2lkIDAsbnVsbCxcImNvbnRpbnVvdXNcIixcInNpbmdsZVwiLFwidHdvbGVmdFwiLFwidHdvcmlnaHRcIixcInR3b1wiXS5pbmRleE9mKHQpKXRocm93IG5ldyBFcnJvcignTGF5b3V0IG1vZGUgbXVzdCBiZSBvbmUgb2YgY29udGludW91cywgc2luZ2xlLCB0d29sZWZ0LCB0d29yaWdodC4gXCInK3QrJ1wiIGlzIG5vdCByZWNvZ25pemVkLicpO1M9dH0pLEQ9KGwuX19wcml2YXRlX18uZ2V0TGF5b3V0TW9kZT1mdW5jdGlvbigpe3JldHVybiBTfSxsLl9fcHJpdmF0ZV9fLnNldERpc3BsYXlNb2RlPWwuc2V0RGlzcGxheU1vZGU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBxKHQpLFIoZSksVChuKSx0aGlzfSx7dGl0bGU6XCJcIixzdWJqZWN0OlwiXCIsYXV0aG9yOlwiXCIsa2V5d29yZHM6XCJcIixjcmVhdG9yOlwiXCJ9KSxVPShsLl9fcHJpdmF0ZV9fLmdldERvY3VtZW50UHJvcGVydHk9ZnVuY3Rpb24odCl7aWYoLTE9PT1PYmplY3Qua2V5cyhEKS5pbmRleE9mKHQpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnQgcGFzc2VkIHRvIGpzUERGLmdldERvY3VtZW50UHJvcGVydHlcIik7cmV0dXJuIERbdF19LGwuX19wcml2YXRlX18uZ2V0RG9jdW1lbnRQcm9wZXJ0aWVzPWZ1bmN0aW9uKHQpe3JldHVybiBEfSxsLl9fcHJpdmF0ZV9fLnNldERvY3VtZW50UHJvcGVydGllcz1sLnNldFByb3BlcnRpZXM9bC5zZXREb2N1bWVudFByb3BlcnRpZXM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlIGluIEQpRC5oYXNPd25Qcm9wZXJ0eShlKSYmdFtlXSYmKERbZV09dFtlXSk7cmV0dXJuIHRoaXN9LGwuX19wcml2YXRlX18uc2V0RG9jdW1lbnRQcm9wZXJ0eT1mdW5jdGlvbih0LGUpe2lmKC0xPT09T2JqZWN0LmtleXMoRCkuaW5kZXhPZih0KSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYuc2V0RG9jdW1lbnRQcm9wZXJ0eVwiKTtyZXR1cm4gRFt0XT1lfSwwKSx6PVtdLHJ0PXt9LEg9e30sVz0wLFY9W10sRz1bXSxpdD1uZXcgb2UobCksWT1yLmhvdGZpeGVzfHxbXSxKPWwuX19wcml2YXRlX18ubmV3T2JqZWN0PWZ1bmN0aW9uKCl7dmFyIHQ9WCgpO3JldHVybiBvdCh0LCEwKSx0fSxYPWwuX19wcml2YXRlX18ubmV3T2JqZWN0RGVmZXJyZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gelsrK1VdPWZ1bmN0aW9uKCl7cmV0dXJuIEJ9LFV9LG90PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU9XCJib29sZWFuXCI9PXR5cGVvZiBlJiZlLHpbdF09QixlJiZ0dCh0K1wiIDAgb2JqXCIpLHR9LGF0PWwuX19wcml2YXRlX18ubmV3QWRkaXRpb25hbE9iamVjdD1mdW5jdGlvbigpe3ZhciB0PXtvYmpJZDpYKCksY29udGVudDpcIlwifTtyZXR1cm4gRy5wdXNoKHQpLHR9LHN0PVgoKSxsdD1YKCksaHQ9bC5fX3ByaXZhdGVfXy5kZWNvZGVDb2xvclN0cmluZz1mdW5jdGlvbih0KXt2YXIgZT10LnNwbGl0KFwiIFwiKTtpZigyPT09ZS5sZW5ndGgmJihcImdcIj09PWVbMV18fFwiR1wiPT09ZVsxXSkpe3ZhciBuPXBhcnNlRmxvYXQoZVswXSk7ZT1bbixuLG4sXCJyXCJdfWZvcih2YXIgcj1cIiNcIixpPTA7aTwzO2krKylyKz0oXCIwXCIrTWF0aC5mbG9vcigyNTUqcGFyc2VGbG9hdChlW2ldKSkudG9TdHJpbmcoMTYpKS5zbGljZSgtMik7cmV0dXJuIHJ9LHV0PWwuX19wcml2YXRlX18uZW5jb2RlQ29sb3JTdHJpbmc9ZnVuY3Rpb24odCl7dmFyIGU7XCJzdHJpbmdcIj09dHlwZW9mIHQmJih0PXtjaDE6dH0pO3ZhciBuPXQuY2gxLHI9dC5jaDIsaT10LmNoMyxvPXQuY2g0LGE9KHQucHJlY2lzaW9uLFwiZHJhd1wiPT09dC5wZGZDb2xvclR5cGU/W1wiR1wiLFwiUkdcIixcIktcIl06W1wiZ1wiLFwicmdcIixcImtcIl0pO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBuJiZcIiNcIiE9PW4uY2hhckF0KDApKXt2YXIgcz1uZXcgUkdCQ29sb3Iobik7aWYocy5vayluPXMudG9IZXgoKTtlbHNlIGlmKCEvXlxcZCpcXC4/XFxkKiQvLnRlc3QobikpdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNvbG9yIFwiJytuKydcIiBwYXNzZWQgdG8ganNQREYuZW5jb2RlQ29sb3JTdHJpbmcuJyl9aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4mJi9eI1swLTlBLUZhLWZdezN9JC8udGVzdChuKSYmKG49XCIjXCIrblsxXStuWzFdK25bMl0rblsyXStuWzNdK25bM10pLFwic3RyaW5nXCI9PXR5cGVvZiBuJiYvXiNbMC05QS1GYS1mXXs2fSQvLnRlc3Qobikpe3ZhciBsPXBhcnNlSW50KG4uc3Vic3RyKDEpLDE2KTtuPWw+PjE2JjI1NSxyPWw+PjgmMjU1LGk9MjU1Jmx9aWYodm9pZCAwPT09cnx8dm9pZCAwPT09byYmbj09PXImJnI9PT1pKWlmKFwic3RyaW5nXCI9PXR5cGVvZiBuKWU9bitcIiBcIithWzBdO2Vsc2Ugc3dpdGNoKHQucHJlY2lzaW9uKXtjYXNlIDI6ZT1aKG4vMjU1KStcIiBcIithWzBdO2JyZWFrO2Nhc2UgMzpkZWZhdWx0OmU9UShuLzI1NSkrXCIgXCIrYVswXX1lbHNlIGlmKHZvaWQgMD09PW98fFwib2JqZWN0XCI9PT1zZShvKSl7aWYobyYmIWlzTmFOKG8uYSkmJjA9PT1vLmEpcmV0dXJuIGU9W1wiMS4wMDBcIixcIjEuMDAwXCIsXCIxLjAwMFwiLGFbMV1dLmpvaW4oXCIgXCIpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBuKWU9W24scixpLGFbMV1dLmpvaW4oXCIgXCIpO2Vsc2Ugc3dpdGNoKHQucHJlY2lzaW9uKXtjYXNlIDI6ZT1bWihuLzI1NSksWihyLzI1NSksWihpLzI1NSksYVsxXV0uam9pbihcIiBcIik7YnJlYWs7ZGVmYXVsdDpjYXNlIDM6ZT1bUShuLzI1NSksUShyLzI1NSksUShpLzI1NSksYVsxXV0uam9pbihcIiBcIil9fWVsc2UgaWYoXCJzdHJpbmdcIj09dHlwZW9mIG4pZT1bbixyLGksbyxhWzJdXS5qb2luKFwiIFwiKTtlbHNlIHN3aXRjaCh0LnByZWNpc2lvbil7Y2FzZSAyOmU9W1oobi8yNTUpLFooci8yNTUpLFooaS8yNTUpLFooby8yNTUpLGFbMl1dLmpvaW4oXCIgXCIpO2JyZWFrO2Nhc2UgMzpkZWZhdWx0OmU9W1Eobi8yNTUpLFEoci8yNTUpLFEoaS8yNTUpLFEoby8yNTUpLGFbMl1dLmpvaW4oXCIgXCIpfXJldHVybiBlfSxjdD1sLl9fcHJpdmF0ZV9fLmdldEZpbHRlcnM9ZnVuY3Rpb24oKXtyZXR1cm4gb30sZnQ9bC5fX3ByaXZhdGVfXy5wdXRTdHJlYW09ZnVuY3Rpb24odCl7dmFyIGU9KHQ9dHx8e30pLmRhdGF8fFwiXCIsbj10LmZpbHRlcnN8fGN0KCkscj10LmFscmVhZHlBcHBsaWVkRmlsdGVyc3x8W10saT10LmFkZExlbmd0aDF8fCExLG89ZS5sZW5ndGgsYT17fTshMD09PW4mJihuPVtcIkZsYXRlRW5jb2RlXCJdKTt2YXIgcz10LmFkZGl0aW9uYWxLZXlWYWx1ZXN8fFtdLGw9KGE9dm9pZCAwIT09YWUuQVBJLnByb2Nlc3NEYXRhQnlGaWx0ZXJzP2FlLkFQSS5wcm9jZXNzRGF0YUJ5RmlsdGVycyhlLG4pOntkYXRhOmUscmV2ZXJzZUNoYWluOltdfSkucmV2ZXJzZUNoYWluKyhBcnJheS5pc0FycmF5KHIpP3Iuam9pbihcIiBcIik6ci50b1N0cmluZygpKTswIT09YS5kYXRhLmxlbmd0aCYmKHMucHVzaCh7a2V5OlwiTGVuZ3RoXCIsdmFsdWU6YS5kYXRhLmxlbmd0aH0pLCEwPT09aSYmcy5wdXNoKHtrZXk6XCJMZW5ndGgxXCIsdmFsdWU6b30pKSwwIT1sLmxlbmd0aCYmKGwuc3BsaXQoXCIvXCIpLmxlbmd0aC0xPT0xP3MucHVzaCh7a2V5OlwiRmlsdGVyXCIsdmFsdWU6bH0pOnMucHVzaCh7a2V5OlwiRmlsdGVyXCIsdmFsdWU6XCJbXCIrbCtcIl1cIn0pKSx0dChcIjw8XCIpO2Zvcih2YXIgaD0wO2g8cy5sZW5ndGg7aCsrKXR0KFwiL1wiK3NbaF0ua2V5K1wiIFwiK3NbaF0udmFsdWUpO3R0KFwiPj5cIiksMCE9PWEuZGF0YS5sZW5ndGgmJih0dChcInN0cmVhbVwiKSx0dChhLmRhdGEpLHR0KFwiZW5kc3RyZWFtXCIpKX0scHQ9bC5fX3ByaXZhdGVfXy5wdXRQYWdlPWZ1bmN0aW9uKHQpe3QubWVkaWFCb3g7dmFyIGU9dC5udW1iZXIsbj10LmRhdGEscj10Lm9iaklkLGk9dC5jb250ZW50c09iaklkO290KHIsITApO1ZbeF0ubWVkaWFCb3gudG9wUmlnaHRYLFZbeF0ubWVkaWFCb3guYm90dG9tTGVmdFgsVlt4XS5tZWRpYUJveC50b3BSaWdodFksVlt4XS5tZWRpYUJveC5ib3R0b21MZWZ0WTt0dChcIjw8L1R5cGUgL1BhZ2VcIiksdHQoXCIvUGFyZW50IFwiK3Qucm9vdERpY3Rpb25hcnlPYmpJZCtcIiAwIFJcIiksdHQoXCIvUmVzb3VyY2VzIFwiK3QucmVzb3VyY2VEaWN0aW9uYXJ5T2JqSWQrXCIgMCBSXCIpLHR0KFwiL01lZGlhQm94IFtcIitwYXJzZUZsb2F0KFoodC5tZWRpYUJveC5ib3R0b21MZWZ0WCkpK1wiIFwiK3BhcnNlRmxvYXQoWih0Lm1lZGlhQm94LmJvdHRvbUxlZnRZKSkrXCIgXCIrWih0Lm1lZGlhQm94LnRvcFJpZ2h0WCkrXCIgXCIrWih0Lm1lZGlhQm94LnRvcFJpZ2h0WSkrXCJdXCIpLG51bGwhPT10LmNyb3BCb3gmJnR0KFwiL0Nyb3BCb3ggW1wiK1oodC5jcm9wQm94LmJvdHRvbUxlZnRYKStcIiBcIitaKHQuY3JvcEJveC5ib3R0b21MZWZ0WSkrXCIgXCIrWih0LmNyb3BCb3gudG9wUmlnaHRYKStcIiBcIitaKHQuY3JvcEJveC50b3BSaWdodFkpK1wiXVwiKSxudWxsIT09dC5ibGVlZEJveCYmdHQoXCIvQmxlZWRCb3ggW1wiK1oodC5ibGVlZEJveC5ib3R0b21MZWZ0WCkrXCIgXCIrWih0LmJsZWVkQm94LmJvdHRvbUxlZnRZKStcIiBcIitaKHQuYmxlZWRCb3gudG9wUmlnaHRYKStcIiBcIitaKHQuYmxlZWRCb3gudG9wUmlnaHRZKStcIl1cIiksbnVsbCE9PXQudHJpbUJveCYmdHQoXCIvVHJpbUJveCBbXCIrWih0LnRyaW1Cb3guYm90dG9tTGVmdFgpK1wiIFwiK1oodC50cmltQm94LmJvdHRvbUxlZnRZKStcIiBcIitaKHQudHJpbUJveC50b3BSaWdodFgpK1wiIFwiK1oodC50cmltQm94LnRvcFJpZ2h0WSkrXCJdXCIpLG51bGwhPT10LmFydEJveCYmdHQoXCIvQXJ0Qm94IFtcIitaKHQuYXJ0Qm94LmJvdHRvbUxlZnRYKStcIiBcIitaKHQuYXJ0Qm94LmJvdHRvbUxlZnRZKStcIiBcIitaKHQuYXJ0Qm94LnRvcFJpZ2h0WCkrXCIgXCIrWih0LmFydEJveC50b3BSaWdodFkpK1wiXVwiKSxcIm51bWJlclwiPT10eXBlb2YgdC51c2VyVW5pdCYmMSE9PXQudXNlclVuaXQmJnR0KFwiL1VzZXJVbml0IFwiK3QudXNlclVuaXQpLGl0LnB1Ymxpc2goXCJwdXRQYWdlXCIse29iaklkOnIscGFnZUNvbnRleHQ6VltlXSxwYWdlTnVtYmVyOmUscGFnZTpufSksdHQoXCIvQ29udGVudHMgXCIraStcIiAwIFJcIiksdHQoXCI+PlwiKSx0dChcImVuZG9ialwiKTt2YXIgbz1uLmpvaW4oXCJcXG5cIik7cmV0dXJuIG90KGksITApLGZ0KHtkYXRhOm8sZmlsdGVyczpjdCgpfSksdHQoXCJlbmRvYmpcIikscn0sZHQ9bC5fX3ByaXZhdGVfXy5wdXRQYWdlcz1mdW5jdGlvbigpe3ZhciB0LGUsbj1bXTtmb3IodD0xO3Q8PVc7dCsrKVZbdF0ub2JqSWQ9WCgpLFZbdF0uY29udGVudHNPYmpJZD1YKCk7Zm9yKHQ9MTt0PD1XO3QrKyluLnB1c2gocHQoe251bWJlcjp0LGRhdGE6SVt0XSxvYmpJZDpWW3RdLm9iaklkLGNvbnRlbnRzT2JqSWQ6Vlt0XS5jb250ZW50c09iaklkLG1lZGlhQm94OlZbdF0ubWVkaWFCb3gsY3JvcEJveDpWW3RdLmNyb3BCb3gsYmxlZWRCb3g6Vlt0XS5ibGVlZEJveCx0cmltQm94OlZbdF0udHJpbUJveCxhcnRCb3g6Vlt0XS5hcnRCb3gsdXNlclVuaXQ6Vlt0XS51c2VyVW5pdCxyb290RGljdGlvbmFyeU9iaklkOnN0LHJlc291cmNlRGljdGlvbmFyeU9iaklkOmx0fSkpO290KHN0LCEwKSx0dChcIjw8L1R5cGUgL1BhZ2VzXCIpO3ZhciByPVwiL0tpZHMgW1wiO2ZvcihlPTA7ZTxXO2UrKylyKz1uW2VdK1wiIDAgUiBcIjt0dChyK1wiXVwiKSx0dChcIi9Db3VudCBcIitXKSx0dChcIj4+XCIpLHR0KFwiZW5kb2JqXCIpLGl0LnB1Ymxpc2goXCJwb3N0UHV0UGFnZXNcIil9LGd0PWZ1bmN0aW9uKCl7IWZ1bmN0aW9uKCl7Zm9yKHZhciB0IGluIHJ0KXJ0Lmhhc093blByb3BlcnR5KHQpJiYoITE9PT1zfHwhMD09PXMmJksuaGFzT3duUHJvcGVydHkodCkpJiYoZT1ydFt0XSxpdC5wdWJsaXNoKFwicHV0Rm9udFwiLHtmb250OmUsb3V0OnR0LG5ld09iamVjdDpKLHB1dFN0cmVhbTpmdH0pLCEwIT09ZS5pc0FscmVhZHlQdXR0ZWQmJihlLm9iamVjdE51bWJlcj1KKCksdHQoXCI8PFwiKSx0dChcIi9UeXBlIC9Gb250XCIpLHR0KFwiL0Jhc2VGb250IC9cIitlLnBvc3RTY3JpcHROYW1lKSx0dChcIi9TdWJ0eXBlIC9UeXBlMVwiKSxcInN0cmluZ1wiPT10eXBlb2YgZS5lbmNvZGluZyYmdHQoXCIvRW5jb2RpbmcgL1wiK2UuZW5jb2RpbmcpLHR0KFwiL0ZpcnN0Q2hhciAzMlwiKSx0dChcIi9MYXN0Q2hhciAyNTVcIiksdHQoXCI+PlwiKSx0dChcImVuZG9ialwiKSkpO3ZhciBlfSgpLGl0LnB1Ymxpc2goXCJwdXRSZXNvdXJjZXNcIiksb3QobHQsITApLHR0KFwiPDxcIiksZnVuY3Rpb24oKXtmb3IodmFyIHQgaW4gdHQoXCIvUHJvY1NldCBbL1BERiAvVGV4dCAvSW1hZ2VCIC9JbWFnZUMgL0ltYWdlSV1cIiksdHQoXCIvRm9udCA8PFwiKSxydClydC5oYXNPd25Qcm9wZXJ0eSh0KSYmKCExPT09c3x8ITA9PT1zJiZLLmhhc093blByb3BlcnR5KHQpKSYmdHQoXCIvXCIrdCtcIiBcIitydFt0XS5vYmplY3ROdW1iZXIrXCIgMCBSXCIpO3R0KFwiPj5cIiksdHQoXCIvWE9iamVjdCA8PFwiKSxpdC5wdWJsaXNoKFwicHV0WG9iamVjdERpY3RcIiksdHQoXCI+PlwiKX0oKSx0dChcIj4+XCIpLHR0KFwiZW5kb2JqXCIpLGl0LnB1Ymxpc2goXCJwb3N0UHV0UmVzb3VyY2VzXCIpfSxtdD1mdW5jdGlvbih0LGUsbil7SC5oYXNPd25Qcm9wZXJ0eShlKXx8KEhbZV09e30pLEhbZV1bbl09dH0seXQ9ZnVuY3Rpb24odCxlLG4scixpKXtpPWl8fCExO3ZhciBvPVwiRlwiKyhPYmplY3Qua2V5cyhydCkubGVuZ3RoKzEpLnRvU3RyaW5nKDEwKSxhPXtpZDpvLHBvc3RTY3JpcHROYW1lOnQsZm9udE5hbWU6ZSxmb250U3R5bGU6bixlbmNvZGluZzpyLGlzU3RhbmRhcmRGb250OmksbWV0YWRhdGE6e319O3JldHVybiBpdC5wdWJsaXNoKFwiYWRkRm9udFwiLHtmb250OmEsaW5zdGFuY2U6dGhpc30pLHZvaWQgMCE9PW8mJihydFtvXT1hLG10KG8sZSxuKSksb30sdnQ9bC5fX3ByaXZhdGVfXy5wZGZFc2NhcGU9bC5wZGZFc2NhcGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24odCxlKXt2YXIgbixyLGksbyxhLHMsbCxoLHU7aWYoaT0oZT1lfHx7fSkuc291cmNlRW5jb2Rpbmd8fFwiVW5pY29kZVwiLGE9ZS5vdXRwdXRFbmNvZGluZywoZS5hdXRvZW5jb2RlfHxhKSYmcnRbJF0ubWV0YWRhdGEmJnJ0WyRdLm1ldGFkYXRhW2ldJiZydFskXS5tZXRhZGF0YVtpXS5lbmNvZGluZyYmKG89cnRbJF0ubWV0YWRhdGFbaV0uZW5jb2RpbmcsIWEmJnJ0WyRdLmVuY29kaW5nJiYoYT1ydFskXS5lbmNvZGluZyksIWEmJm8uY29kZVBhZ2VzJiYoYT1vLmNvZGVQYWdlc1swXSksXCJzdHJpbmdcIj09dHlwZW9mIGEmJihhPW9bYV0pLGEpKXtmb3IobD0hMSxzPVtdLG49MCxyPXQubGVuZ3RoO248cjtuKyspKGg9YVt0LmNoYXJDb2RlQXQobildKT9zLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShoKSk6cy5wdXNoKHRbbl0pLHNbbl0uY2hhckNvZGVBdCgwKT4+OCYmKGw9ITApO3Q9cy5qb2luKFwiXCIpfWZvcihuPXQubGVuZ3RoO3ZvaWQgMD09PWwmJjAhPT1uOyl0LmNoYXJDb2RlQXQobi0xKT4+OCYmKGw9ITApLG4tLTtpZighbClyZXR1cm4gdDtmb3Iocz1lLm5vQk9NP1tdOlsyNTQsMjU1XSxuPTAscj10Lmxlbmd0aDtuPHI7bisrKXtpZigodT0oaD10LmNoYXJDb2RlQXQobikpPj44KT4+OCl0aHJvdyBuZXcgRXJyb3IoXCJDaGFyYWN0ZXIgYXQgcG9zaXRpb24gXCIrbitcIiBvZiBzdHJpbmcgJ1wiK3QrXCInIGV4Y2VlZHMgMTZiaXRzLiBDYW5ub3QgYmUgZW5jb2RlZCBpbnRvIFVDUy0yIEJFXCIpO3MucHVzaCh1KSxzLnB1c2goaC0odTw8OCkpfXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KHZvaWQgMCxzKX0odCxlKS5yZXBsYWNlKC9cXFxcL2csXCJcXFxcXFxcXFwiKS5yZXBsYWNlKC9cXCgvZyxcIlxcXFwoXCIpLnJlcGxhY2UoL1xcKS9nLFwiXFxcXClcIil9LHd0PWwuX19wcml2YXRlX18uYmVnaW5QYWdlPWZ1bmN0aW9uKHQsZSl7dmFyIG4scj1cInN0cmluZ1wiPT10eXBlb2YgZSYmZS50b0xvd2VyQ2FzZSgpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0JiYobj1mKHQudG9Mb3dlckNhc2UoKSkpJiYodD1uWzBdLGU9blsxXSksQXJyYXkuaXNBcnJheSh0KSYmKGU9dFsxXSx0PXRbMF0pLChpc05hTih0KXx8aXNOYU4oZSkpJiYodD1pWzBdLGU9aVsxXSkscil7c3dpdGNoKHIuc3Vic3RyKDAsMSkpe2Nhc2VcImxcIjp0PGUmJihyPVwic1wiKTticmVhaztjYXNlXCJwXCI6ZTx0JiYocj1cInNcIil9XCJzXCI9PT1yJiYobj10LHQ9ZSxlPW4pfSgxNDQwMDx0fHwxNDQwMDxlKSYmKGNvbnNvbGUud2FybihcIkEgcGFnZSBpbiBhIFBERiBjYW4gbm90IGJlIHdpZGVyIG9yIHRhbGxlciB0aGFuIDE0NDAwIHVzZXJVbml0LiBqc1BERiBsaW1pdHMgdGhlIHdpZHRoL2hlaWdodCB0byAxNDQwMFwiKSx0PU1hdGgubWluKDE0NDAwLHQpLGU9TWF0aC5taW4oMTQ0MDAsZSkpLGk9W3QsZV0saz0hMCxJWysrV109W10sVltXXT17b2JqSWQ6MCxjb250ZW50c09iaklkOjAsdXNlclVuaXQ6TnVtYmVyKGEpLGFydEJveDpudWxsLGJsZWVkQm94Om51bGwsY3JvcEJveDpudWxsLHRyaW1Cb3g6bnVsbCxtZWRpYUJveDp7Ym90dG9tTGVmdFg6MCxib3R0b21MZWZ0WTowLHRvcFJpZ2h0WDpOdW1iZXIodCksdG9wUmlnaHRZOk51bWJlcihlKX19LHh0KFcpfSxidD1mdW5jdGlvbigpe3d0LmFwcGx5KHRoaXMsYXJndW1lbnRzKSxEdChSdCksdHQoSnQpLDAhPT10ZSYmdHQodGUrXCIgSlwiKSwwIT09bmUmJnR0KG5lK1wiIGpcIiksaXQucHVibGlzaChcImFkZFBhZ2VcIix7cGFnZU51bWJlcjpXfSl9LHh0PWZ1bmN0aW9uKHQpezA8dCYmdDw9VyYmKHg9dCl9LE50PWwuX19wcml2YXRlX18uZ2V0TnVtYmVyT2ZQYWdlcz1sLmdldE51bWJlck9mUGFnZXM9ZnVuY3Rpb24oKXtyZXR1cm4gSS5sZW5ndGgtMX0sTHQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByLGk9dm9pZCAwO3JldHVybiBuPW58fHt9LHQ9dm9pZCAwIT09dD90OnJ0WyRdLmZvbnROYW1lLGU9dm9pZCAwIT09ZT9lOnJ0WyRdLmZvbnRTdHlsZSxyPXQudG9Mb3dlckNhc2UoKSx2b2lkIDAhPT1IW3JdJiZ2b2lkIDAhPT1IW3JdW2VdP2k9SFtyXVtlXTp2b2lkIDAhPT1IW3RdJiZ2b2lkIDAhPT1IW3RdW2VdP2k9SFt0XVtlXTohMT09PW4uZGlzYWJsZVdhcm5pbmcmJmNvbnNvbGUud2FybihcIlVuYWJsZSB0byBsb29rIHVwIGZvbnQgbGFiZWwgZm9yIGZvbnQgJ1wiK3QrXCInLCAnXCIrZStcIicuIFJlZmVyIHRvIGdldEZvbnRMaXN0KCkgZm9yIGF2YWlsYWJsZSBmb250cy5cIiksaXx8bi5ub0ZhbGxiYWNrfHxudWxsPT0oaT1ILnRpbWVzW2VdKSYmKGk9SC50aW1lcy5ub3JtYWwpLGl9LEF0PWwuX19wcml2YXRlX18ucHV0SW5mbz1mdW5jdGlvbigpe2Zvcih2YXIgdCBpbiBKKCksdHQoXCI8PFwiKSx0dChcIi9Qcm9kdWNlciAoanNQREYgXCIrYWUudmVyc2lvbitcIilcIiksRClELmhhc093blByb3BlcnR5KHQpJiZEW3RdJiZ0dChcIi9cIit0LnN1YnN0cigwLDEpLnRvVXBwZXJDYXNlKCkrdC5zdWJzdHIoMSkrXCIgKFwiK3Z0KERbdF0pK1wiKVwiKTt0dChcIi9DcmVhdGlvbkRhdGUgKFwiK3ArXCIpXCIpLHR0KFwiPj5cIiksdHQoXCJlbmRvYmpcIil9LFN0PWwuX19wcml2YXRlX18ucHV0Q2F0YWxvZz1mdW5jdGlvbih0KXt2YXIgZT0odD10fHx7fSkucm9vdERpY3Rpb25hcnlPYmpJZHx8c3Q7c3dpdGNoKEooKSx0dChcIjw8XCIpLHR0KFwiL1R5cGUgL0NhdGFsb2dcIiksdHQoXCIvUGFnZXMgXCIrZStcIiAwIFJcIiksTHx8KEw9XCJmdWxsd2lkdGhcIiksTCl7Y2FzZVwiZnVsbHdpZHRoXCI6dHQoXCIvT3BlbkFjdGlvbiBbMyAwIFIgL0ZpdEggbnVsbF1cIik7YnJlYWs7Y2FzZVwiZnVsbGhlaWdodFwiOnR0KFwiL09wZW5BY3Rpb24gWzMgMCBSIC9GaXRWIG51bGxdXCIpO2JyZWFrO2Nhc2VcImZ1bGxwYWdlXCI6dHQoXCIvT3BlbkFjdGlvbiBbMyAwIFIgL0ZpdF1cIik7YnJlYWs7Y2FzZVwib3JpZ2luYWxcIjp0dChcIi9PcGVuQWN0aW9uIFszIDAgUiAvWFlaIG51bGwgbnVsbCAxXVwiKTticmVhaztkZWZhdWx0OnZhciBuPVwiXCIrTDtcIiVcIj09PW4uc3Vic3RyKG4ubGVuZ3RoLTEpJiYoTD1wYXJzZUludChMKS8xMDApLFwibnVtYmVyXCI9PXR5cGVvZiBMJiZ0dChcIi9PcGVuQWN0aW9uIFszIDAgUiAvWFlaIG51bGwgbnVsbCBcIitaKEwpK1wiXVwiKX1zd2l0Y2goU3x8KFM9XCJjb250aW51b3VzXCIpLFMpe2Nhc2VcImNvbnRpbnVvdXNcIjp0dChcIi9QYWdlTGF5b3V0IC9PbmVDb2x1bW5cIik7YnJlYWs7Y2FzZVwic2luZ2xlXCI6dHQoXCIvUGFnZUxheW91dCAvU2luZ2xlUGFnZVwiKTticmVhaztjYXNlXCJ0d29cIjpjYXNlXCJ0d29sZWZ0XCI6dHQoXCIvUGFnZUxheW91dCAvVHdvQ29sdW1uTGVmdFwiKTticmVhaztjYXNlXCJ0d29yaWdodFwiOnR0KFwiL1BhZ2VMYXlvdXQgL1R3b0NvbHVtblJpZ2h0XCIpfUEmJnR0KFwiL1BhZ2VNb2RlIC9cIitBKSxpdC5wdWJsaXNoKFwicHV0Q2F0YWxvZ1wiKSx0dChcIj4+XCIpLHR0KFwiZW5kb2JqXCIpfSxfdD1sLl9fcHJpdmF0ZV9fLnB1dFRyYWlsZXI9ZnVuY3Rpb24oKXt0dChcInRyYWlsZXJcIiksdHQoXCI8PFwiKSx0dChcIi9TaXplIFwiKyhVKzEpKSx0dChcIi9Sb290IFwiK1UrXCIgMCBSXCIpLHR0KFwiL0luZm8gXCIrKFUtMSkrXCIgMCBSXCIpLHR0KFwiL0lEIFsgPFwiK2QrXCI+IDxcIitkK1wiPiBdXCIpLHR0KFwiPj5cIil9LEZ0PWwuX19wcml2YXRlX18ucHV0SGVhZGVyPWZ1bmN0aW9uKCl7dHQoXCIlUERGLVwiK2gpLHR0KFwiJcK6w5/CrMOgXCIpfSxQdD1sLl9fcHJpdmF0ZV9fLnB1dFhSZWY9ZnVuY3Rpb24oKXt2YXIgdD0xLGU9XCIwMDAwMDAwMDAwXCI7Zm9yKHR0KFwieHJlZlwiKSx0dChcIjAgXCIrKFUrMSkpLHR0KFwiMDAwMDAwMDAwMCA2NTUzNSBmIFwiKSx0PTE7dDw9VTt0Kyspe1wiZnVuY3Rpb25cIj09dHlwZW9mIHpbdF0/dHQoKGUrelt0XSgpKS5zbGljZSgtMTApK1wiIDAwMDAwIG4gXCIpOnZvaWQgMCE9PXpbdF0/dHQoKGUrelt0XSkuc2xpY2UoLTEwKStcIiAwMDAwMCBuIFwiKTp0dChcIjAwMDAwMDAwMDAgMDAwMDAgbiBcIil9fSxrdD1sLl9fcHJpdmF0ZV9fLmJ1aWxkRG9jdW1lbnQ9ZnVuY3Rpb24oKXtrPSExLEI9VT0wLEM9W10sej1bXSxHPVtdLHN0PVgoKSxsdD1YKCksaXQucHVibGlzaChcImJ1aWxkRG9jdW1lbnRcIiksRnQoKSxkdCgpLGZ1bmN0aW9uKCl7aXQucHVibGlzaChcInB1dEFkZGl0aW9uYWxPYmplY3RzXCIpO2Zvcih2YXIgdD0wO3Q8Ry5sZW5ndGg7dCsrKXt2YXIgZT1HW3RdO290KGUub2JqSWQsITApLHR0KGUuY29udGVudCksdHQoXCJlbmRvYmpcIil9aXQucHVibGlzaChcInBvc3RQdXRBZGRpdGlvbmFsT2JqZWN0c1wiKX0oKSxndCgpLEF0KCksU3QoKTt2YXIgdD1CO3JldHVybiBQdCgpLF90KCksdHQoXCJzdGFydHhyZWZcIiksdHQoXCJcIit0KSx0dChcIiUlRU9GXCIpLGs9ITAsQy5qb2luKFwiXFxuXCIpfSxJdD1sLl9fcHJpdmF0ZV9fLmdldEJsb2I9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBCbG9iKFtFKHQpXSx7dHlwZTpcImFwcGxpY2F0aW9uL3BkZlwifSl9LEN0PWwub3V0cHV0PWwuX19wcml2YXRlX18ub3V0cHV0PSgoRj1mdW5jdGlvbih0LGUpe2U9ZXx8e307dmFyIG49a3QoKTtzd2l0Y2goXCJzdHJpbmdcIj09dHlwZW9mIGU/ZT17ZmlsZW5hbWU6ZX06ZS5maWxlbmFtZT1lLmZpbGVuYW1lfHxcImdlbmVyYXRlZC5wZGZcIix0KXtjYXNlIHZvaWQgMDpyZXR1cm4gbjtjYXNlXCJzYXZlXCI6bC5zYXZlKGUuZmlsZW5hbWUpO2JyZWFrO2Nhc2VcImFycmF5YnVmZmVyXCI6cmV0dXJuIEUobik7Y2FzZVwiYmxvYlwiOnJldHVybiBJdChuKTtjYXNlXCJibG9idXJpXCI6Y2FzZVwiYmxvYnVybFwiOmlmKHZvaWQgMCE9PWllLlVSTCYmXCJmdW5jdGlvblwiPT10eXBlb2YgaWUuVVJMLmNyZWF0ZU9iamVjdFVSTClyZXR1cm4gaWUuVVJMJiZpZS5VUkwuY3JlYXRlT2JqZWN0VVJMKEl0KG4pKXx8dm9pZCAwO2NvbnNvbGUud2FybihcImJsb2J1cmwgaXMgbm90IHN1cHBvcnRlZCBieSB5b3VyIHN5c3RlbSwgYmVjYXVzZSBVUkwuY3JlYXRlT2JqZWN0VVJMIGlzIG5vdCBzdXBwb3J0ZWQgYnkgeW91ciBicm93c2VyLlwiKTticmVhaztjYXNlXCJkYXRhdXJpc3RyaW5nXCI6Y2FzZVwiZGF0YXVybHN0cmluZ1wiOnJldHVyblwiZGF0YTphcHBsaWNhdGlvbi9wZGY7ZmlsZW5hbWU9XCIrZS5maWxlbmFtZStcIjtiYXNlNjQsXCIrYnRvYShuKTtjYXNlXCJkYXRhdXJsbmV3d2luZG93XCI6dmFyIHI9JzxodG1sPjxzdHlsZT5odG1sLCBib2R5IHsgcGFkZGluZzogMDsgbWFyZ2luOiAwOyB9IGlmcmFtZSB7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7IGJvcmRlcjogMDt9ICA8L3N0eWxlPjxib2R5PjxpZnJhbWUgc3JjPVwiJyt0aGlzLm91dHB1dChcImRhdGF1cmlzdHJpbmdcIikrJ1wiPjwvaWZyYW1lPjwvYm9keT48L2h0bWw+JyxpPWllLm9wZW4oKTtpZihudWxsIT09aSYmaS5kb2N1bWVudC53cml0ZShyKSxpfHxcInVuZGVmaW5lZFwiPT10eXBlb2Ygc2FmYXJpKXJldHVybiBpO2Nhc2VcImRhdGF1cmlcIjpjYXNlXCJkYXRhdXJsXCI6cmV0dXJuIGllLmRvY3VtZW50LmxvY2F0aW9uLmhyZWY9XCJkYXRhOmFwcGxpY2F0aW9uL3BkZjtmaWxlbmFtZT1cIitlLmZpbGVuYW1lK1wiO2Jhc2U2NCxcIitidG9hKG4pO2RlZmF1bHQ6cmV0dXJuIG51bGx9fSkuZm9vPWZ1bmN0aW9uKCl7dHJ5e3JldHVybiBGLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaCh0KXt2YXIgZT10LnN0YWNrfHxcIlwiO35lLmluZGV4T2YoXCIgYXQgXCIpJiYoZT1lLnNwbGl0KFwiIGF0IFwiKVsxXSk7dmFyIG49XCJFcnJvciBpbiBmdW5jdGlvbiBcIitlLnNwbGl0KFwiXFxuXCIpWzBdLnNwbGl0KFwiPFwiKVswXStcIjogXCIrdC5tZXNzYWdlO2lmKCFpZS5jb25zb2xlKXRocm93IG5ldyBFcnJvcihuKTtpZS5jb25zb2xlLmVycm9yKG4sdCksaWUuYWxlcnQmJmFsZXJ0KG4pfX0sKEYuZm9vLmJhcj1GKS5mb28pLEJ0PWZ1bmN0aW9uKHQpe3JldHVybiEwPT09QXJyYXkuaXNBcnJheShZKSYmLTE8WS5pbmRleE9mKHQpfTtzd2l0Y2goZSl7Y2FzZVwicHRcIjpfPTE7YnJlYWs7Y2FzZVwibW1cIjpfPTcyLzI1LjQ7YnJlYWs7Y2FzZVwiY21cIjpfPTcyLzIuNTQ7YnJlYWs7Y2FzZVwiaW5cIjpfPTcyO2JyZWFrO2Nhc2VcInB4XCI6Xz0xPT1CdChcInB4X3NjYWxpbmdcIik/Ljc1Ojk2LzcyO2JyZWFrO2Nhc2VcInBjXCI6Y2FzZVwiZW1cIjpfPTEyO2JyZWFrO2Nhc2VcImV4XCI6Xz02O2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB1bml0OiBcIitlKX13KCksbSgpO3ZhciBqdD1sLl9fcHJpdmF0ZV9fLmdldFBhZ2VJbmZvPWZ1bmN0aW9uKHQpe2lmKGlzTmFOKHQpfHx0JTEhPTApdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudCBwYXNzZWQgdG8ganNQREYuZ2V0UGFnZUluZm9cIik7cmV0dXJue29iaklkOlZbdF0ub2JqSWQscGFnZU51bWJlcjp0LHBhZ2VDb250ZXh0OlZbdF19fSxFdD1sLl9fcHJpdmF0ZV9fLmdldFBhZ2VJbmZvQnlPYmpJZD1mdW5jdGlvbih0KXtmb3IodmFyIGUgaW4gVilpZihWW2VdLm9iaklkPT09dClicmVhaztpZihpc05hTih0KXx8dCUxIT0wKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnQgcGFzc2VkIHRvIGpzUERGLmdldFBhZ2VJbmZvQnlPYmpJZFwiKTtyZXR1cm4ganQoZSl9LE10PWwuX19wcml2YXRlX18uZ2V0Q3VycmVudFBhZ2VJbmZvPWZ1bmN0aW9uKCl7cmV0dXJue29iaklkOlZbeF0ub2JqSWQscGFnZU51bWJlcjp4LHBhZ2VDb250ZXh0OlZbeF19fTtsLmFkZFBhZ2U9ZnVuY3Rpb24oKXtyZXR1cm4gYnQuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXN9LGwuc2V0UGFnZT1mdW5jdGlvbigpe3JldHVybiB4dC5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpc30sbC5pbnNlcnRQYWdlPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmFkZFBhZ2UoKSx0aGlzLm1vdmVQYWdlKHgsdCksdGhpc30sbC5tb3ZlUGFnZT1mdW5jdGlvbih0LGUpe2lmKGU8dCl7Zm9yKHZhciBuPUlbdF0scj1WW3RdLGk9dDtlPGk7aS0tKUlbaV09SVtpLTFdLFZbaV09VltpLTFdO0lbZV09bixWW2VdPXIsdGhpcy5zZXRQYWdlKGUpfWVsc2UgaWYodDxlKXtmb3Iobj1JW3RdLHI9Vlt0XSxpPXQ7aTxlO2krKylJW2ldPUlbaSsxXSxWW2ldPVZbaSsxXTtJW2VdPW4sVltlXT1yLHRoaXMuc2V0UGFnZShlKX1yZXR1cm4gdGhpc30sbC5kZWxldGVQYWdlPWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpezA8dCYmdDw9VyYmKEkuc3BsaWNlKHQsMSksLS1XPHgmJih4PVcpLHRoaXMuc2V0UGFnZSh4KSl9LmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzfTtsLl9fcHJpdmF0ZV9fLnRleHQ9bC50ZXh0PWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByO1wibnVtYmVyXCIhPXR5cGVvZiB0fHxcIm51bWJlclwiIT10eXBlb2YgZXx8XCJzdHJpbmdcIiE9dHlwZW9mIG4mJiFBcnJheS5pc0FycmF5KG4pfHwocj1uLG49ZSxlPXQsdD1yKTt2YXIgbz1hcmd1bWVudHNbM10sYT1hcmd1bWVudHNbNF0scz1hcmd1bWVudHNbNV07aWYoXCJvYmplY3RcIj09PXNlKG8pJiZudWxsIT09b3x8KFwic3RyaW5nXCI9PXR5cGVvZiBhJiYocz1hLGE9bnVsbCksXCJzdHJpbmdcIj09dHlwZW9mIG8mJihzPW8sbz1udWxsKSxcIm51bWJlclwiPT10eXBlb2YgbyYmKGE9byxvPW51bGwpLGk9e2ZsYWdzOm8sYW5nbGU6YSxhbGlnbjpzfSksKG89b3x8e30pLm5vQk9NPW8ubm9CT018fCEwLG8uYXV0b2VuY29kZT1vLmF1dG9lbmNvZGV8fCEwLGlzTmFOKGUpfHxpc05hTihuKXx8bnVsbD09dCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYudGV4dFwiKTtpZigwPT09dC5sZW5ndGgpcmV0dXJuIGM7dmFyIGwsaD1cIlwiLHU9XCJudW1iZXJcIj09dHlwZW9mIGkubGluZUhlaWdodEZhY3Rvcj9pLmxpbmVIZWlnaHRGYWN0b3I6VHQsYz1pLnNjb3BlfHx0aGlzO2Z1bmN0aW9uIGYodCl7Zm9yKHZhciBlLG49dC5jb25jYXQoKSxyPVtdLGk9bi5sZW5ndGg7aS0tOylcInN0cmluZ1wiPT10eXBlb2YoZT1uLnNoaWZ0KCkpP3IucHVzaChlKTpBcnJheS5pc0FycmF5KHQpJiYxPT09ZS5sZW5ndGg/ci5wdXNoKGVbMF0pOnIucHVzaChbZVswXSxlWzFdLGVbMl1dKTtyZXR1cm4gcn1mdW5jdGlvbiBwKHQsZSl7dmFyIG47aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpbj1lKHQpWzBdO2Vsc2UgaWYoQXJyYXkuaXNBcnJheSh0KSl7Zm9yKHZhciByLGksbz10LmNvbmNhdCgpLGE9W10scz1vLmxlbmd0aDtzLS07KVwic3RyaW5nXCI9PXR5cGVvZihyPW8uc2hpZnQoKSk/YS5wdXNoKGUocilbMF0pOkFycmF5LmlzQXJyYXkocikmJlwic3RyaW5nXCI9PT1yWzBdJiYoaT1lKHJbMF0sclsxXSxyWzJdKSxhLnB1c2goW2lbMF0saVsxXSxpWzJdXSkpO249YX1yZXR1cm4gbn12YXIgZD0hMSxnPSEwO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KWQ9ITA7ZWxzZSBpZihBcnJheS5pc0FycmF5KHQpKXtmb3IodmFyIG0seT10LmNvbmNhdCgpLHY9W10sdz15Lmxlbmd0aDt3LS07KShcInN0cmluZ1wiIT10eXBlb2YobT15LnNoaWZ0KCkpfHxBcnJheS5pc0FycmF5KG0pJiZcInN0cmluZ1wiIT10eXBlb2YgbVswXSkmJihnPSExKTtkPWd9aWYoITE9PT1kKXRocm93IG5ldyBFcnJvcignVHlwZSBvZiB0ZXh0IG11c3QgYmUgc3RyaW5nIG9yIEFycmF5LiBcIicrdCsnXCIgaXMgbm90IHJlY29nbml6ZWQuJyk7dmFyIGI9cnRbJF0uZW5jb2Rpbmc7XCJXaW5BbnNpRW5jb2RpbmdcIiE9PWImJlwiU3RhbmRhcmRFbmNvZGluZ1wiIT09Ynx8KHQ9cCh0LGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm5bKHI9dCxyPXIuc3BsaXQoXCJcXHRcIikuam9pbihBcnJheShpLlRhYkxlbnx8OSkuam9pbihcIiBcIikpLHZ0KHIsbykpLGUsbl07dmFyIHJ9KSksXCJzdHJpbmdcIj09dHlwZW9mIHQmJih0PXQubWF0Y2goL1tcXHI/XFxuXS8pP3Quc3BsaXQoL1xcclxcbnxcXHJ8XFxuL2cpOlt0XSk7dmFyIHg9ZXQvYy5pbnRlcm5hbC5zY2FsZUZhY3RvcixOPXgqKFR0LTEpO3N3aXRjaChpLmJhc2VsaW5lKXtjYXNlXCJib3R0b21cIjpuLT1OO2JyZWFrO2Nhc2VcInRvcFwiOm4rPXgtTjticmVhaztjYXNlXCJoYW5naW5nXCI6bis9eC0yKk47YnJlYWs7Y2FzZVwibWlkZGxlXCI6bis9eC8yLU59MDwoTz1pLm1heFdpZHRofHwwKSYmKFwic3RyaW5nXCI9PXR5cGVvZiB0P3Q9Yy5zcGxpdFRleHRUb1NpemUodCxPKTpcIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkmJih0PWMuc3BsaXRUZXh0VG9TaXplKHQuam9pbihcIiBcIiksTykpKTt2YXIgTD17dGV4dDp0LHg6ZSx5Om4sb3B0aW9uczppLG11dGV4OntwZGZFc2NhcGU6dnQsYWN0aXZlRm9udEtleTokLGZvbnRzOnJ0LGFjdGl2ZUZvbnRTaXplOmV0fX07aXQucHVibGlzaChcInByZVByb2Nlc3NUZXh0XCIsTCksdD1MLnRleHQ7YT0oaT1MLm9wdGlvbnMpLmFuZ2xlO3ZhciBBPWMuaW50ZXJuYWwuc2NhbGVGYWN0b3IsUz1bXTtpZihhKXthKj1NYXRoLlBJLzE4MDt2YXIgXz1NYXRoLmNvcyhhKSxGPU1hdGguc2luKGEpO1M9W1ooXyksWihGKSxaKC0xKkYpLFooXyldfXZvaWQgMCE9PShNPWkuY2hhclNwYWNlKSYmKGgrPVEoTSpBKStcIiBUY1xcblwiKTtpLmxhbmc7dmFyIFA9LTEsaz12b2lkIDAhPT1pLnJlbmRlcmluZ01vZGU/aS5yZW5kZXJpbmdNb2RlOmkuc3Ryb2tlLEk9Yy5pbnRlcm5hbC5nZXRDdXJyZW50UGFnZUluZm8oKS5wYWdlQ29udGV4dDtzd2l0Y2goayl7Y2FzZSAwOmNhc2UhMTpjYXNlXCJmaWxsXCI6UD0wO2JyZWFrO2Nhc2UgMTpjYXNlITA6Y2FzZVwic3Ryb2tlXCI6UD0xO2JyZWFrO2Nhc2UgMjpjYXNlXCJmaWxsVGhlblN0cm9rZVwiOlA9MjticmVhaztjYXNlIDM6Y2FzZVwiaW52aXNpYmxlXCI6UD0zO2JyZWFrO2Nhc2UgNDpjYXNlXCJmaWxsQW5kQWRkRm9yQ2xpcHBpbmdcIjpQPTQ7YnJlYWs7Y2FzZSA1OmNhc2VcInN0cm9rZUFuZEFkZFBhdGhGb3JDbGlwcGluZ1wiOlA9NTticmVhaztjYXNlIDY6Y2FzZVwiZmlsbFRoZW5TdHJva2VBbmRBZGRUb1BhdGhGb3JDbGlwcGluZ1wiOlA9NjticmVhaztjYXNlIDc6Y2FzZVwiYWRkVG9QYXRoRm9yQ2xpcHBpbmdcIjpQPTd9dmFyIEM9dm9pZCAwIT09SS51c2VkUmVuZGVyaW5nTW9kZT9JLnVzZWRSZW5kZXJpbmdNb2RlOi0xOy0xIT09UD9oKz1QK1wiIFRyXFxuXCI6LTEhPT1DJiYoaCs9XCIwIFRyXFxuXCIpLC0xIT09UCYmKEkudXNlZFJlbmRlcmluZ01vZGU9UCk7cz1pLmFsaWdufHxcImxlZnRcIjt2YXIgQj1ldCp1LGo9Yy5pbnRlcm5hbC5wYWdlU2l6ZS5nZXRXaWR0aCgpLEU9KEE9Yy5pbnRlcm5hbC5zY2FsZUZhY3RvcixydFskXSksTT1pLmNoYXJTcGFjZXx8UXQsTz1pLm1heFdpZHRofHwwLHE9KG89e30sW10pO2lmKFwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSl7dmFyIFQsUjt2PWYodCk7XCJsZWZ0XCIhPT1zJiYoUj12Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gYy5nZXRTdHJpbmdVbml0V2lkdGgodCx7Zm9udDpFLGNoYXJTcGFjZTpNLGZvbnRTaXplOmV0fSkqZXQvQX0pKTt2YXIgRCxVPU1hdGgubWF4LmFwcGx5KE1hdGgsUiksej0wO2lmKFwicmlnaHRcIj09PXMpe2UtPVJbMF0sdD1bXTt2YXIgSD0wO2Zvcih3PXYubGVuZ3RoO0g8dztIKyspVS1SW0hdLFQ9MD09PUg/KEQ9V3QoZSksVnQobikpOihEPSh6LVJbSF0pKkEsLUIpLHQucHVzaChbdltIXSxELFRdKSx6PVJbSF19ZWxzZSBpZihcImNlbnRlclwiPT09cyl7ZS09UlswXS8yLHQ9W107Zm9yKEg9MCx3PXYubGVuZ3RoO0g8dztIKyspKFUtUltIXSkvMixUPTA9PT1IPyhEPVd0KGUpLFZ0KG4pKTooRD0oei1SW0hdKS8yKkEsLUIpLHQucHVzaChbdltIXSxELFRdKSx6PVJbSF19ZWxzZSBpZihcImxlZnRcIj09PXMpe3Q9W107Zm9yKEg9MCx3PXYubGVuZ3RoO0g8dztIKyspVD0wPT09SD9WdChuKTotQixEPTA9PT1IP1d0KGUpOjAsdC5wdXNoKHZbSF0pfWVsc2V7aWYoXCJqdXN0aWZ5XCIhPT1zKXRocm93IG5ldyBFcnJvcignVW5yZWNvZ25pemVkIGFsaWdubWVudCBvcHRpb24sIHVzZSBcImxlZnRcIiwgXCJjZW50ZXJcIiwgXCJyaWdodFwiIG9yIFwianVzdGlmeVwiLicpO3Q9W107Zm9yKE89MCE9PU8/TzpqLEg9MCx3PXYubGVuZ3RoO0g8dztIKyspVD0wPT09SD9WdChuKTotQixEPTA9PT1IP1d0KGUpOjAsSDx3LTEmJnEucHVzaCgoKE8tUltIXSkvKHZbSF0uc3BsaXQoXCIgXCIpLmxlbmd0aC0xKSpBKS50b0ZpeGVkKDIpKSx0LnB1c2goW3ZbSF0sRCxUXSl9fSEwPT09KFwiYm9vbGVhblwiPT10eXBlb2YgaS5SMkw/aS5SMkw6bnQpJiYodD1wKHQsZnVuY3Rpb24odCxlLG4pe3JldHVyblt0LnNwbGl0KFwiXCIpLnJldmVyc2UoKS5qb2luKFwiXCIpLGUsbl19KSk7TD17dGV4dDp0LHg6ZSx5Om4sb3B0aW9uczppLG11dGV4OntwZGZFc2NhcGU6dnQsYWN0aXZlRm9udEtleTokLGZvbnRzOnJ0LGFjdGl2ZUZvbnRTaXplOmV0fX07aXQucHVibGlzaChcInBvc3RQcm9jZXNzVGV4dFwiLEwpLHQ9TC50ZXh0LGw9TC5tdXRleC5pc0hleDt2PWYodCk7dD1bXTt2YXIgVyxWLEcsWT0wLEo9KHc9di5sZW5ndGgsXCJcIik7Zm9yKEg9MDtIPHc7SCsrKUo9XCJcIixBcnJheS5pc0FycmF5KHZbSF0pPyhXPXBhcnNlRmxvYXQodltIXVsxXSksVj1wYXJzZUZsb2F0KHZbSF1bMl0pLEc9KGw/XCI8XCI6XCIoXCIpK3ZbSF1bMF0rKGw/XCI+XCI6XCIpXCIpLFk9MSk6KFc9V3QoZSksVj1WdChuKSxHPShsP1wiPFwiOlwiKFwiKSt2W0hdKyhsP1wiPlwiOlwiKVwiKSksdm9pZCAwIT09cSYmdm9pZCAwIT09cVtIXSYmKEo9cVtIXStcIiBUd1xcblwiKSwwIT09Uy5sZW5ndGgmJjA9PT1IP3QucHVzaChKK1Muam9pbihcIiBcIikrXCIgXCIrVy50b0ZpeGVkKDIpK1wiIFwiK1YudG9GaXhlZCgyKStcIiBUbVxcblwiK0cpOjE9PT1ZfHwwPT09WSYmMD09PUg/dC5wdXNoKEorVy50b0ZpeGVkKDIpK1wiIFwiK1YudG9GaXhlZCgyKStcIiBUZFxcblwiK0cpOnQucHVzaChKK0cpO3Q9MD09PVk/dC5qb2luKFwiIFRqXFxuVCogXCIpOnQuam9pbihcIiBUalxcblwiKSx0Kz1cIiBUalxcblwiO3ZhciBYPVwiQlRcXG4vXCIrJCtcIiBcIitldCtcIiBUZlxcblwiKyhldCp1KS50b0ZpeGVkKDIpK1wiIFRMXFxuXCIrS3QrXCJcXG5cIjtyZXR1cm4gWCs9aCxYKz10LHR0KFgrPVwiRVRcIiksS1skXT0hMCxjfSxsLl9fcHJpdmF0ZV9fLmxzdGV4dD1sLmxzdGV4dD1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gY29uc29sZS53YXJuKFwianNQREYubHN0ZXh0IGlzIGRlcHJlY2F0ZWRcIiksdGhpcy50ZXh0KHQsZSxuLHtjaGFyU3BhY2U6cn0pfSxsLl9fcHJpdmF0ZV9fLmNsaXA9bC5jbGlwPWZ1bmN0aW9uKHQpe3R0KFwiZXZlbm9kZFwiPT09dD9cIlcqXCI6XCJXXCIpLHR0KFwiblwiKX0sbC5fX3ByaXZhdGVfXy5jbGlwX2ZpeGVkPWwuY2xpcF9maXhlZD1mdW5jdGlvbih0KXtjb25zb2xlLmxvZyhcImNsaXBfZml4ZWQgaXMgZGVwcmVjYXRlZFwiKSxsLmNsaXAodCl9O3ZhciBPdD1sLl9fcHJpdmF0ZV9fLmlzVmFsaWRTdHlsZT1mdW5jdGlvbih0KXt2YXIgZT0hMTtyZXR1cm4tMSE9PVt2b2lkIDAsbnVsbCxcIlNcIixcIkZcIixcIkRGXCIsXCJGRFwiLFwiZlwiLFwiZipcIixcIkJcIixcIkIqXCJdLmluZGV4T2YodCkmJihlPSEwKSxlfSxxdD1sLl9fcHJpdmF0ZV9fLmdldFN0eWxlPWZ1bmN0aW9uKHQpe3ZhciBlPVwiU1wiO3JldHVyblwiRlwiPT09dD9lPVwiZlwiOlwiRkRcIj09PXR8fFwiREZcIj09PXQ/ZT1cIkJcIjpcImZcIiE9PXQmJlwiZipcIiE9PXQmJlwiQlwiIT09dCYmXCJCKlwiIT09dHx8KGU9dCksZX07bC5fX3ByaXZhdGVfXy5saW5lPWwubGluZT1mdW5jdGlvbih0LGUsbixyKXtpZihpc05hTih0KXx8aXNOYU4oZSl8fGlzTmFOKG4pfHxpc05hTihyKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYubGluZVwiKTtyZXR1cm4gdGhpcy5saW5lcyhbW24tdCxyLWVdXSx0LGUpfSxsLl9fcHJpdmF0ZV9fLmxpbmVzPWwubGluZXM9ZnVuY3Rpb24odCxlLG4scixpLG8pe3ZhciBhLHMsbCxoLHUsYyxmLHAsZCxnLG0seTtpZihcIm51bWJlclwiPT10eXBlb2YgdCYmKHk9bixuPWUsZT10LHQ9eSkscj1yfHxbMSwxXSxvPW98fCExLGlzTmFOKGUpfHxpc05hTihuKXx8IUFycmF5LmlzQXJyYXkodCl8fCFBcnJheS5pc0FycmF5KHIpfHwhT3QoaSl8fFwiYm9vbGVhblwiIT10eXBlb2Ygbyl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYubGluZXNcIik7Zm9yKHR0KFEoV3QoZSkpK1wiIFwiK1EoVnQobikpK1wiIG0gXCIpLGE9clswXSxzPXJbMV0saD10Lmxlbmd0aCxnPWUsbT1uLGw9MDtsPGg7bCsrKTI9PT0odT10W2xdKS5sZW5ndGg/KGc9dVswXSphK2csbT11WzFdKnMrbSx0dChRKFd0KGcpKStcIiBcIitRKFZ0KG0pKStcIiBsXCIpKTooYz11WzBdKmErZyxmPXVbMV0qcyttLHA9dVsyXSphK2csZD11WzNdKnMrbSxnPXVbNF0qYStnLG09dVs1XSpzK20sdHQoUShXdChjKSkrXCIgXCIrUShWdChmKSkrXCIgXCIrUShXdChwKSkrXCIgXCIrUShWdChkKSkrXCIgXCIrUShXdChnKSkrXCIgXCIrUShWdChtKSkrXCIgY1wiKSk7cmV0dXJuIG8mJnR0KFwiIGhcIiksbnVsbCE9PWkmJnR0KHF0KGkpKSx0aGlzfSxsLl9fcHJpdmF0ZV9fLnJlY3Q9bC5yZWN0PWZ1bmN0aW9uKHQsZSxuLHIsaSl7aWYoaXNOYU4odCl8fGlzTmFOKGUpfHxpc05hTihuKXx8aXNOYU4ocil8fCFPdChpKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYucmVjdFwiKTtyZXR1cm4gdHQoW1ooV3QodCkpLFooVnQoZSkpLFoobipfKSxaKC1yKl8pLFwicmVcIl0uam9pbihcIiBcIikpLG51bGwhPT1pJiZ0dChxdChpKSksdGhpc30sbC5fX3ByaXZhdGVfXy50cmlhbmdsZT1sLnRyaWFuZ2xlPWZ1bmN0aW9uKHQsZSxuLHIsaSxvLGEpe2lmKGlzTmFOKHQpfHxpc05hTihlKXx8aXNOYU4obil8fGlzTmFOKHIpfHxpc05hTihpKXx8aXNOYU4obyl8fCFPdChhKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYudHJpYW5nbGVcIik7cmV0dXJuIHRoaXMubGluZXMoW1tuLXQsci1lXSxbaS1uLG8tcl0sW3QtaSxlLW9dXSx0LGUsWzEsMV0sYSwhMCksdGhpc30sbC5fX3ByaXZhdGVfXy5yb3VuZGVkUmVjdD1sLnJvdW5kZWRSZWN0PWZ1bmN0aW9uKHQsZSxuLHIsaSxvLGEpe2lmKGlzTmFOKHQpfHxpc05hTihlKXx8aXNOYU4obil8fGlzTmFOKHIpfHxpc05hTihpKXx8aXNOYU4obyl8fCFPdChhKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYucm91bmRlZFJlY3RcIik7dmFyIHM9NC8zKihNYXRoLlNRUlQyLTEpO3JldHVybiB0aGlzLmxpbmVzKFtbbi0yKmksMF0sW2kqcywwLGksby1vKnMsaSxvXSxbMCxyLTIqb10sWzAsbypzLC1pKnMsbywtaSxvXSxbMippLW4sMF0sWy1pKnMsMCwtaSwtbypzLC1pLC1vXSxbMCwyKm8tcl0sWzAsLW8qcyxpKnMsLW8saSwtb11dLHQraSxlLFsxLDFdLGEpLHRoaXN9LGwuX19wcml2YXRlX18uZWxsaXBzZT1sLmVsbGlwc2U9ZnVuY3Rpb24odCxlLG4scixpKXtpZihpc05hTih0KXx8aXNOYU4oZSl8fGlzTmFOKG4pfHxpc05hTihyKXx8IU90KGkpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5lbGxpcHNlXCIpO3ZhciBvPTQvMyooTWF0aC5TUVJUMi0xKSpuLGE9NC8zKihNYXRoLlNRUlQyLTEpKnI7cmV0dXJuIHR0KFtaKFd0KHQrbikpLFooVnQoZSkpLFwibVwiLFooV3QodCtuKSksWihWdChlLWEpKSxaKFd0KHQrbykpLFooVnQoZS1yKSksWihXdCh0KSksWihWdChlLXIpKSxcImNcIl0uam9pbihcIiBcIikpLHR0KFtaKFd0KHQtbykpLFooVnQoZS1yKSksWihXdCh0LW4pKSxaKFZ0KGUtYSkpLFooV3QodC1uKSksWihWdChlKSksXCJjXCJdLmpvaW4oXCIgXCIpKSx0dChbWihXdCh0LW4pKSxaKFZ0KGUrYSkpLFooV3QodC1vKSksWihWdChlK3IpKSxaKFd0KHQpKSxaKFZ0KGUrcikpLFwiY1wiXS5qb2luKFwiIFwiKSksdHQoW1ooV3QodCtvKSksWihWdChlK3IpKSxaKFd0KHQrbikpLFooVnQoZSthKSksWihXdCh0K24pKSxaKFZ0KGUpKSxcImNcIl0uam9pbihcIiBcIikpLG51bGwhPT1pJiZ0dChxdChpKSksdGhpc30sbC5fX3ByaXZhdGVfXy5jaXJjbGU9bC5jaXJjbGU9ZnVuY3Rpb24odCxlLG4scil7aWYoaXNOYU4odCl8fGlzTmFOKGUpfHxpc05hTihuKXx8IU90KHIpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5jaXJjbGVcIik7cmV0dXJuIHRoaXMuZWxsaXBzZSh0LGUsbixuLHIpfTtsLnNldEZvbnQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gJD1MdCh0LGUse2Rpc2FibGVXYXJuaW5nOiExfSksdGhpc30sbC5zZXRGb250U3R5bGU9bC5zZXRGb250VHlwZT1mdW5jdGlvbih0KXtyZXR1cm4gJD1MdCh2b2lkIDAsdCksdGhpc307bC5fX3ByaXZhdGVfXy5nZXRGb250TGlzdD1sLmdldEZvbnRMaXN0PWZ1bmN0aW9uKCl7dmFyIHQsZSxuLHI9e307Zm9yKHQgaW4gSClpZihILmhhc093blByb3BlcnR5KHQpKWZvcihlIGluIHJbdF09bj1bXSxIW3RdKUhbdF0uaGFzT3duUHJvcGVydHkoZSkmJm4ucHVzaChlKTtyZXR1cm4gcn07bC5hZGRGb250PWZ1bmN0aW9uKHQsZSxuLHIpe3l0LmNhbGwodGhpcyx0LGUsbixyPXJ8fFwiSWRlbnRpdHktSFwiKX07dmFyIFR0LFJ0PXIubGluZVdpZHRofHwuMjAwMDI1LER0PWwuX19wcml2YXRlX18uc2V0TGluZVdpZHRoPWwuc2V0TGluZVdpZHRoPWZ1bmN0aW9uKHQpe3JldHVybiB0dCgodCpfKS50b0ZpeGVkKDIpK1wiIHdcIiksdGhpc30sVXQ9KGwuX19wcml2YXRlX18uc2V0TGluZURhc2g9YWUuQVBJLnNldExpbmVEYXNoPWZ1bmN0aW9uKHQsZSl7aWYodD10fHxbXSxlPWV8fDAsaXNOYU4oZSl8fCFBcnJheS5pc0FycmF5KHQpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5zZXRMaW5lRGFzaFwiKTtyZXR1cm4gdD10Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4odCpfKS50b0ZpeGVkKDMpfSkuam9pbihcIiBcIiksZT1wYXJzZUZsb2F0KChlKl8pLnRvRml4ZWQoMykpLHR0KFwiW1wiK3QrXCJdIFwiK2UrXCIgZFwiKSx0aGlzfSxsLl9fcHJpdmF0ZV9fLmdldExpbmVIZWlnaHQ9bC5nZXRMaW5lSGVpZ2h0PWZ1bmN0aW9uKCl7cmV0dXJuIGV0KlR0fSksenQ9KFV0PWwuX19wcml2YXRlX18uZ2V0TGluZUhlaWdodD1sLmdldExpbmVIZWlnaHQ9ZnVuY3Rpb24oKXtyZXR1cm4gZXQqVHR9LGwuX19wcml2YXRlX18uc2V0TGluZUhlaWdodEZhY3Rvcj1sLnNldExpbmVIZWlnaHRGYWN0b3I9ZnVuY3Rpb24odCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mKHQ9dHx8MS4xNSkmJihUdD10KSx0aGlzfSksSHQ9bC5fX3ByaXZhdGVfXy5nZXRMaW5lSGVpZ2h0RmFjdG9yPWwuZ2V0TGluZUhlaWdodEZhY3Rvcj1mdW5jdGlvbigpe3JldHVybiBUdH07enQoci5saW5lSGVpZ2h0KTt2YXIgV3Q9bC5fX3ByaXZhdGVfXy5nZXRIb3Jpem9udGFsQ29vcmRpbmF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gdCpffSxWdD1sLl9fcHJpdmF0ZV9fLmdldFZlcnRpY2FsQ29vcmRpbmF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gVlt4XS5tZWRpYUJveC50b3BSaWdodFktVlt4XS5tZWRpYUJveC5ib3R0b21MZWZ0WS10Kl99LEd0PWwuX19wcml2YXRlX18uZ2V0SG9yaXpvbnRhbENvb3JkaW5hdGVTdHJpbmc9ZnVuY3Rpb24odCl7cmV0dXJuIFoodCpfKX0sWXQ9bC5fX3ByaXZhdGVfXy5nZXRWZXJ0aWNhbENvb3JkaW5hdGVTdHJpbmc9ZnVuY3Rpb24odCl7cmV0dXJuIFooVlt4XS5tZWRpYUJveC50b3BSaWdodFktVlt4XS5tZWRpYUJveC5ib3R0b21MZWZ0WS10Kl8pfSxKdD1yLnN0cm9rZUNvbG9yfHxcIjAgR1wiLFh0PShsLl9fcHJpdmF0ZV9fLmdldFN0cm9rZUNvbG9yPWwuZ2V0RHJhd0NvbG9yPWZ1bmN0aW9uKCl7cmV0dXJuIGh0KEp0KX0sbC5fX3ByaXZhdGVfXy5zZXRTdHJva2VDb2xvcj1sLnNldERyYXdDb2xvcj1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gSnQ9dXQoe2NoMTp0LGNoMjplLGNoMzpuLGNoNDpyLHBkZkNvbG9yVHlwZTpcImRyYXdcIixwcmVjaXNpb246Mn0pLHR0KEp0KSx0aGlzfSxyLmZpbGxDb2xvcnx8XCIwIGdcIiksS3Q9KGwuX19wcml2YXRlX18uZ2V0RmlsbENvbG9yPWwuZ2V0RmlsbENvbG9yPWZ1bmN0aW9uKCl7cmV0dXJuIGh0KFh0KX0sbC5fX3ByaXZhdGVfXy5zZXRGaWxsQ29sb3I9bC5zZXRGaWxsQ29sb3I9ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIFh0PXV0KHtjaDE6dCxjaDI6ZSxjaDM6bixjaDQ6cixwZGZDb2xvclR5cGU6XCJmaWxsXCIscHJlY2lzaW9uOjJ9KSx0dChYdCksdGhpc30sci50ZXh0Q29sb3J8fFwiMCBnXCIpLFp0PWwuX19wcml2YXRlX18uZ2V0VGV4dENvbG9yPWwuZ2V0VGV4dENvbG9yPWZ1bmN0aW9uKCl7cmV0dXJuIGh0KEt0KX0sUXQ9KGwuX19wcml2YXRlX18uc2V0VGV4dENvbG9yPWwuc2V0VGV4dENvbG9yPWZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiBLdD11dCh7Y2gxOnQsY2gyOmUsY2gzOm4sY2g0OnIscGRmQ29sb3JUeXBlOlwidGV4dFwiLHByZWNpc2lvbjozfSksdGhpc30sci5jaGFyU3BhY2V8fDApLCR0PWwuX19wcml2YXRlX18uZ2V0Q2hhclNwYWNlPWwuZ2V0Q2hhclNwYWNlPWZ1bmN0aW9uKCl7cmV0dXJuIFF0fSx0ZT0obC5fX3ByaXZhdGVfXy5zZXRDaGFyU3BhY2U9bC5zZXRDaGFyU3BhY2U9ZnVuY3Rpb24odCl7aWYoaXNOYU4odCkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudCBwYXNzZWQgdG8ganNQREYuc2V0Q2hhclNwYWNlXCIpO3JldHVybiBRdD10LHRoaXN9LDApO2wuQ2FwSm9pblN0eWxlcz17MDowLGJ1dHQ6MCxidXQ6MCxtaXRlcjowLDE6MSxyb3VuZDoxLHJvdW5kZWQ6MSxjaXJjbGU6MSwyOjIscHJvamVjdGluZzoyLHByb2plY3Q6MixzcXVhcmU6MixiZXZlbDoyfTtsLl9fcHJpdmF0ZV9fLnNldExpbmVDYXA9bC5zZXRMaW5lQ2FwPWZ1bmN0aW9uKHQpe3ZhciBlPWwuQ2FwSm9pblN0eWxlc1t0XTtpZih2b2lkIDA9PT1lKXRocm93IG5ldyBFcnJvcihcIkxpbmUgY2FwIHN0eWxlIG9mICdcIit0K1wiJyBpcyBub3QgcmVjb2duaXplZC4gU2VlIG9yIGV4dGVuZCAuQ2FwSm9pblN0eWxlcyBwcm9wZXJ0eSBmb3IgdmFsaWQgc3R5bGVzXCIpO3JldHVybiB0dCgodGU9ZSkrXCIgSlwiKSx0aGlzfTt2YXIgZWUsbmU9MDtsLl9fcHJpdmF0ZV9fLnNldExpbmVKb2luPWwuc2V0TGluZUpvaW49ZnVuY3Rpb24odCl7dmFyIGU9bC5DYXBKb2luU3R5bGVzW3RdO2lmKHZvaWQgMD09PWUpdGhyb3cgbmV3IEVycm9yKFwiTGluZSBqb2luIHN0eWxlIG9mICdcIit0K1wiJyBpcyBub3QgcmVjb2duaXplZC4gU2VlIG9yIGV4dGVuZCAuQ2FwSm9pblN0eWxlcyBwcm9wZXJ0eSBmb3IgdmFsaWQgc3R5bGVzXCIpO3JldHVybiB0dCgobmU9ZSkrXCIgalwiKSx0aGlzfSxsLl9fcHJpdmF0ZV9fLnNldE1pdGVyTGltaXQ9bC5zZXRNaXRlckxpbWl0PWZ1bmN0aW9uKHQpe2lmKHQ9dHx8MCxpc05hTih0KSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50IHBhc3NlZCB0byBqc1BERi5zZXRNaXRlckxpbWl0XCIpO3JldHVybiBlZT1wYXJzZUZsb2F0KFoodCpfKSksdHQoZWUrXCIgTVwiKSx0aGlzfTtmb3IodmFyIHJlIGluIGwuc2F2ZT1mdW5jdGlvbihyLHQpe2lmKHI9cnx8XCJnZW5lcmF0ZWQucGRmXCIsKHQ9dHx8e30pLnJldHVyblByb21pc2U9dC5yZXR1cm5Qcm9taXNlfHwhMSwhMSE9PXQucmV0dXJuUHJvbWlzZSlyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24odCxlKXt0cnl7dmFyIG49bGUoSXQoa3QoKSkscik7XCJmdW5jdGlvblwiPT10eXBlb2YgbGUudW5sb2FkJiZpZS5zZXRUaW1lb3V0JiZzZXRUaW1lb3V0KGxlLnVubG9hZCw5MTEpLHQobil9Y2F0Y2godCl7ZSh0Lm1lc3NhZ2UpfX0pO2xlKEl0KGt0KCkpLHIpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGxlLnVubG9hZCYmaWUuc2V0VGltZW91dCYmc2V0VGltZW91dChsZS51bmxvYWQsOTExKX0sYWUuQVBJKWFlLkFQSS5oYXNPd25Qcm9wZXJ0eShyZSkmJihcImV2ZW50c1wiPT09cmUmJmFlLkFQSS5ldmVudHMubGVuZ3RoP2Z1bmN0aW9uKHQsZSl7dmFyIG4scixpO2ZvcihpPWUubGVuZ3RoLTE7LTEhPT1pO2ktLSluPWVbaV1bMF0scj1lW2ldWzFdLHQuc3Vic2NyaWJlLmFwcGx5KHQsW25dLmNvbmNhdChcImZ1bmN0aW9uXCI9PXR5cGVvZiByP1tyXTpyKSl9KGl0LGFlLkFQSS5ldmVudHMpOmxbcmVdPWFlLkFQSVtyZV0pO3JldHVybiBsLmludGVybmFsPXtwZGZFc2NhcGU6dnQsZ2V0U3R5bGU6cXQsZ2V0Rm9udDpmdW5jdGlvbigpe3JldHVybiBydFtMdC5hcHBseShsLGFyZ3VtZW50cyldfSxnZXRGb250U2l6ZTpPLGdldENoYXJTcGFjZTokdCxnZXRUZXh0Q29sb3I6WnQsZ2V0TGluZUhlaWdodDpVdCxnZXRMaW5lSGVpZ2h0RmFjdG9yOkh0LHdyaXRlOmosZ2V0SG9yaXpvbnRhbENvb3JkaW5hdGU6V3QsZ2V0VmVydGljYWxDb29yZGluYXRlOlZ0LGdldENvb3JkaW5hdGVTdHJpbmc6R3QsZ2V0VmVydGljYWxDb29yZGluYXRlU3RyaW5nOll0LGNvbGxlY3Rpb25zOnt9LG5ld09iamVjdDpKLG5ld0FkZGl0aW9uYWxPYmplY3Q6YXQsbmV3T2JqZWN0RGVmZXJyZWQ6WCxuZXdPYmplY3REZWZlcnJlZEJlZ2luOm90LGdldEZpbHRlcnM6Y3QscHV0U3RyZWFtOmZ0LGV2ZW50czppdCxzY2FsZUZhY3RvcjpfLHBhZ2VTaXplOntnZXRXaWR0aDpmdW5jdGlvbigpe3JldHVybihWW3hdLm1lZGlhQm94LnRvcFJpZ2h0WC1WW3hdLm1lZGlhQm94LmJvdHRvbUxlZnRYKS9ffSxzZXRXaWR0aDpmdW5jdGlvbih0KXtWW3hdLm1lZGlhQm94LnRvcFJpZ2h0WD10Kl8rVlt4XS5tZWRpYUJveC5ib3R0b21MZWZ0WH0sZ2V0SGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuKFZbeF0ubWVkaWFCb3gudG9wUmlnaHRZLVZbeF0ubWVkaWFCb3guYm90dG9tTGVmdFkpL199LHNldEhlaWdodDpmdW5jdGlvbih0KXtWW3hdLm1lZGlhQm94LnRvcFJpZ2h0WT10Kl8rVlt4XS5tZWRpYUJveC5ib3R0b21MZWZ0WX19LG91dHB1dDpDdCxnZXROdW1iZXJPZlBhZ2VzOk50LHBhZ2VzOkksb3V0OnR0LGYyOlosZjM6USxnZXRQYWdlSW5mbzpqdCxnZXRQYWdlSW5mb0J5T2JqSWQ6RXQsZ2V0Q3VycmVudFBhZ2VJbmZvOk10LGdldFBERlZlcnNpb246dSxoYXNIb3RmaXg6QnR9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShsLmludGVybmFsLnBhZ2VTaXplLFwid2lkdGhcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuKFZbeF0ubWVkaWFCb3gudG9wUmlnaHRYLVZbeF0ubWVkaWFCb3guYm90dG9tTGVmdFgpL199LHNldDpmdW5jdGlvbih0KXtWW3hdLm1lZGlhQm94LnRvcFJpZ2h0WD10Kl8rVlt4XS5tZWRpYUJveC5ib3R0b21MZWZ0WH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkobC5pbnRlcm5hbC5wYWdlU2l6ZSxcImhlaWdodFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4oVlt4XS5tZWRpYUJveC50b3BSaWdodFktVlt4XS5tZWRpYUJveC5ib3R0b21MZWZ0WSkvX30sc2V0OmZ1bmN0aW9uKHQpe1ZbeF0ubWVkaWFCb3gudG9wUmlnaHRZPXQqXytWW3hdLm1lZGlhQm94LmJvdHRvbUxlZnRZfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49TS5sZW5ndGg7ZTxuO2UrKyl7dmFyIHI9eXQodFtlXVswXSx0W2VdWzFdLHRbZV1bMl0sTVtlXVszXSwhMCk7S1tyXT0hMDt2YXIgaT10W2VdWzBdLnNwbGl0KFwiLVwiKTttdChyLGlbMF0saVsxXXx8XCJcIil9aXQucHVibGlzaChcImFkZEZvbnRzXCIse2ZvbnRzOnJ0LGRpY3Rpb25hcnk6SH0pfShNKSwkPVwiRjFcIixidChpLHQpLGl0LnB1Ymxpc2goXCJpbml0aWFsaXplZFwiKSxsfXJldHVybiBhZS5BUEk9e2V2ZW50czpbXX0sYWUudmVyc2lvbj1cIjEuNS4zXCIsXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcImpzUERGXCIsZnVuY3Rpb24oKXtyZXR1cm4gYWV9KTpcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz8obW9kdWxlLmV4cG9ydHM9YWUsbW9kdWxlLmV4cG9ydHMuanNQREY9YWUpOmllLmpzUERGPWFlLGFlfShcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZiYmc2VsZnx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93fHxcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsJiZnbG9iYWx8fEZ1bmN0aW9uKCdyZXR1cm4gdHlwZW9mIHRoaXMgPT09IFwib2JqZWN0XCIgJiYgdGhpcy5jb250ZW50JykoKXx8RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpKTtcbi8qKlxuICAgKiBAbGljZW5zZVxuICAgKiBDb3B5cmlnaHQgKGMpIDIwMTYgQWxleGFuZGVyIFdlaWR0LFxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vQmlnZ0E5NFxuICAgKiBcbiAgICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2VcbiAgICovXG4oZnVuY3Rpb24odCxlKXt2YXIgQSxuPTEsUz1mdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9cXFxcL2csXCJcXFxcXFxcXFwiKS5yZXBsYWNlKC9cXCgvZyxcIlxcXFwoXCIpLnJlcGxhY2UoL1xcKS9nLFwiXFxcXClcIil9LHk9ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvXFxcXFxcXFwvZyxcIlxcXFxcIikucmVwbGFjZSgvXFxcXFxcKC9nLFwiKFwiKS5yZXBsYWNlKC9cXFxcXFwpL2csXCIpXCIpfSxfPWZ1bmN0aW9uKHQpe2lmKGlzTmFOKHQpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnQgcGFzc2VkIHRvIGpzUERGLmYyXCIpO3JldHVybiB0LnRvRml4ZWQoMil9LHM9ZnVuY3Rpb24odCl7aWYoaXNOYU4odCkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudCBwYXNzZWQgdG8ganNQREYuZjJcIik7cmV0dXJuIHQudG9GaXhlZCg1KX07dC5fX2Fjcm9mb3JtX189e307dmFyIHI9ZnVuY3Rpb24odCxlKXt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlKSx0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10fSx2PWZ1bmN0aW9uKHQpe3JldHVybiB0Km59LHc9ZnVuY3Rpb24odCl7cmV0dXJuIHQvbn0sbD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgaixuPVkuaW50ZXJuYWwuZ2V0SGVpZ2h0KHQpfHwwLHI9WS5pbnRlcm5hbC5nZXRXaWR0aCh0KXx8MDtyZXR1cm4gZS5CQm94PVswLDAsTnVtYmVyKF8ocikpLE51bWJlcihfKG4pKV0sZX0saT10Ll9fYWNyb2Zvcm1fXy5zZXRCaXQ9ZnVuY3Rpb24odCxlKXtpZih0PXR8fDAsZT1lfHwwLGlzTmFOKHQpfHxpc05hTihlKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYuQVBJLl9fYWNyb2Zvcm1fXy5zZXRCaXRcIik7cmV0dXJuIHR8PTE8PGV9LG89dC5fX2Fjcm9mb3JtX18uY2xlYXJCaXQ9ZnVuY3Rpb24odCxlKXtpZih0PXR8fDAsZT1lfHwwLGlzTmFOKHQpfHxpc05hTihlKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYuQVBJLl9fYWNyb2Zvcm1fXy5jbGVhckJpdFwiKTtyZXR1cm4gdCY9figxPDxlKX0sYT10Ll9fYWNyb2Zvcm1fXy5nZXRCaXQ9ZnVuY3Rpb24odCxlKXtpZihpc05hTih0KXx8aXNOYU4oZSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudHMgcGFzc2VkIHRvIGpzUERGLkFQSS5fX2Fjcm9mb3JtX18uZ2V0Qml0XCIpO3JldHVybiAwPT0odCYxPDxlKT8wOjF9LGI9dC5fX2Fjcm9mb3JtX18uZ2V0Qml0Rm9yUGRmPWZ1bmN0aW9uKHQsZSl7aWYoaXNOYU4odCl8fGlzTmFOKGUpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5BUEkuX19hY3JvZm9ybV9fLmdldEJpdEZvclBkZlwiKTtyZXR1cm4gYSh0LGUtMSl9LHg9dC5fX2Fjcm9mb3JtX18uc2V0Qml0Rm9yUGRmPWZ1bmN0aW9uKHQsZSl7aWYoaXNOYU4odCl8fGlzTmFOKGUpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5BUEkuX19hY3JvZm9ybV9fLnNldEJpdEZvclBkZlwiKTtyZXR1cm4gaSh0LGUtMSl9LE49dC5fX2Fjcm9mb3JtX18uY2xlYXJCaXRGb3JQZGY9ZnVuY3Rpb24odCxlLG4pe2lmKGlzTmFOKHQpfHxpc05hTihlKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYuQVBJLl9fYWNyb2Zvcm1fXy5jbGVhckJpdEZvclBkZlwiKTtyZXR1cm4gbyh0LGUtMSl9LGM9dC5fX2Fjcm9mb3JtX18uY2FsY3VsYXRlQ29vcmRpbmF0ZXM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5pbnRlcm5hbC5nZXRIb3Jpem9udGFsQ29vcmRpbmF0ZSxuPXRoaXMuaW50ZXJuYWwuZ2V0VmVydGljYWxDb29yZGluYXRlLHI9dFswXSxpPXRbMV0sbz10WzJdLGE9dFszXSxzPXt9O3JldHVybiBzLmxvd2VyTGVmdF9YPWUocil8fDAscy5sb3dlckxlZnRfWT1uKGkrYSl8fDAscy51cHBlclJpZ2h0X1g9ZShyK28pfHwwLHMudXBwZXJSaWdodF9ZPW4oaSl8fDAsW051bWJlcihfKHMubG93ZXJMZWZ0X1gpKSxOdW1iZXIoXyhzLmxvd2VyTGVmdF9ZKSksTnVtYmVyKF8ocy51cHBlclJpZ2h0X1gpKSxOdW1iZXIoXyhzLnVwcGVyUmlnaHRfWSkpXX0sZj1mdW5jdGlvbih0KXtpZih0LmFwcGVhcmFuY2VTdHJlYW1Db250ZW50KXJldHVybiB0LmFwcGVhcmFuY2VTdHJlYW1Db250ZW50O2lmKHQuVnx8dC5EVil7dmFyIGU9W10sbj10LlZ8fHQuRFYscj1oKHQsbiksaT1BLmludGVybmFsLmdldEZvbnQodC5mb250TmFtZSx0LmZvbnRTdHlsZSkuaWQ7ZS5wdXNoKFwiL1R4IEJNQ1wiKSxlLnB1c2goXCJxXCIpLGUucHVzaChcIkJUXCIpLGUucHVzaChBLl9fcHJpdmF0ZV9fLmVuY29kZUNvbG9yU3RyaW5nKHQuY29sb3IpKSxlLnB1c2goXCIvXCIraStcIiBcIitfKHIuZm9udFNpemUpK1wiIFRmXCIpLGUucHVzaChcIjEgMCAwIDEgMCAwIFRtXCIpLGUucHVzaChyLnRleHQpLGUucHVzaChcIkVUXCIpLGUucHVzaChcIlFcIiksZS5wdXNoKFwiRU1DXCIpO3ZhciBvPW5ldyBsKHQpO3JldHVybiBvLnN0cmVhbT1lLmpvaW4oXCJcXG5cIiksb319LGg9ZnVuY3Rpb24oaSx0KXt2YXIgZT1pLm1heEZvbnRTaXplfHwxMixuPShpLmZvbnROYW1lLHt0ZXh0OlwiXCIsZm9udFNpemU6XCJcIn0pLG89KHQ9XCIpXCI9PSh0PVwiKFwiPT10LnN1YnN0cigwLDEpP3Quc3Vic3RyKDEpOnQpLnN1YnN0cih0Lmxlbmd0aC0xKT90LnN1YnN0cigwLHQubGVuZ3RoLTEpOnQpLnNwbGl0KFwiIFwiKSxyPShBLl9fcHJpdmF0ZV9fLmVuY29kZUNvbG9yU3RyaW5nKGkuY29sb3IpLGUpLGE9WS5pbnRlcm5hbC5nZXRIZWlnaHQoaSl8fDA7YT1hPDA/LWE6YTt2YXIgcz1ZLmludGVybmFsLmdldFdpZHRoKGkpfHwwO3M9czwwPy1zOnM7dmFyIGw9ZnVuY3Rpb24odCxlLG4pe2lmKHQrMTxvLmxlbmd0aCl7dmFyIHI9ZStcIiBcIitvW3QrMV07cmV0dXJuIEYocixpLG4pLndpZHRoPD1zLTR9cmV0dXJuITF9O3IrKzt0OmZvcig7Oyl7dD1cIlwiO3ZhciBoPUYoXCIzXCIsaSwtLXIpLmhlaWdodCx1PWkubXVsdGlsaW5lP2EtcjooYS1oKS8yLGM9LTIsZj11Kz0yLHA9MCxkPTAsZz0wO2lmKHI8PTApe3Q9XCIoLi4uKSBUalxcblwiLHQrPVwiJSBXaWR0aCBvZiBUZXh0OiBcIitGKHQsaSxyPTEyKS53aWR0aCtcIiwgRmllbGRXaWR0aDpcIitzK1wiXFxuXCI7YnJlYWt9Zz1GKG9bMF0rXCIgXCIsaSxyKS53aWR0aDt2YXIgbT1cIlwiLHk9MDtmb3IodmFyIHYgaW4gbylpZihvLmhhc093blByb3BlcnR5KHYpKXttPVwiIFwiPT0obSs9b1t2XStcIiBcIikuc3Vic3RyKG0ubGVuZ3RoLTEpP20uc3Vic3RyKDAsbS5sZW5ndGgtMSk6bTt2YXIgdz1wYXJzZUludCh2KTtnPUYobStcIiBcIixpLHIpLndpZHRoO3ZhciBiPWwodyxtLHIpLHg9dj49by5sZW5ndGgtMTtpZihiJiYheCl7bSs9XCIgXCI7Y29udGludWV9aWYoYnx8eCl7aWYoeClkPXc7ZWxzZSBpZihpLm11bHRpbGluZSYmYTwoaCsyKSooeSsyKSsyKWNvbnRpbnVlIHR9ZWxzZXtpZighaS5tdWx0aWxpbmUpY29udGludWUgdDtpZihhPChoKzIpKih5KzIpKzIpY29udGludWUgdDtkPXd9Zm9yKHZhciBOPVwiXCIsTD1wO0w8PWQ7TCsrKU4rPW9bTF0rXCIgXCI7c3dpdGNoKE49XCIgXCI9PU4uc3Vic3RyKE4ubGVuZ3RoLTEpP04uc3Vic3RyKDAsTi5sZW5ndGgtMSk6TixnPUYoTixpLHIpLndpZHRoLGkudGV4dEFsaWduKXtjYXNlXCJyaWdodFwiOmM9cy1nLTI7YnJlYWs7Y2FzZVwiY2VudGVyXCI6Yz0ocy1nKS8yO2JyZWFrO2Nhc2VcImxlZnRcIjpkZWZhdWx0OmM9Mn10Kz1fKGMpK1wiIFwiK18oZikrXCIgVGRcXG5cIix0Kz1cIihcIitTKE4pK1wiKSBUalxcblwiLHQrPS1fKGMpK1wiIDAgVGRcXG5cIixmPS0ocisyKSxnPTAscD1kKzEseSsrLG09XCJcIn1lbHNlO2JyZWFrfXJldHVybiBuLnRleHQ9dCxuLmZvbnRTaXplPXIsbn0sRj1mdW5jdGlvbih0LGUsbil7dmFyIHI9QS5pbnRlcm5hbC5nZXRGb250KGUuZm9udE5hbWUsZS5mb250U3R5bGUpLGk9QS5nZXRTdHJpbmdVbml0V2lkdGgodCx7Zm9udDpyLGZvbnRTaXplOnBhcnNlRmxvYXQobiksY2hhclNwYWNlOjB9KSpwYXJzZUZsb2F0KG4pO3JldHVybntoZWlnaHQ6QS5nZXRTdHJpbmdVbml0V2lkdGgoXCIzXCIse2ZvbnQ6cixmb250U2l6ZTpwYXJzZUZsb2F0KG4pLGNoYXJTcGFjZTowfSkqcGFyc2VGbG9hdChuKSoxLjUsd2lkdGg6aX19LHU9e2ZpZWxkczpbXSx4Rm9ybXM6W10sYWNyb0Zvcm1EaWN0aW9uYXJ5Um9vdDpudWxsLHByaW50ZWRPdXQ6ITEsaW50ZXJuYWw6bnVsbCxpc0luaXRpYWxpemVkOiExfSxwPWZ1bmN0aW9uKCl7QS5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi5hY3JvRm9ybURpY3Rpb25hcnlSb290Lm9iaklkPXZvaWQgMDt2YXIgdD1BLmludGVybmFsLmFjcm9mb3JtUGx1Z2luLmFjcm9Gb3JtRGljdGlvbmFyeVJvb3QuRmllbGRzO2Zvcih2YXIgZSBpbiB0KWlmKHQuaGFzT3duUHJvcGVydHkoZSkpe3ZhciBuPXRbZV07bi5vYmpJZD12b2lkIDAsbi5oYXNBbm5vdGF0aW9uJiZkLmNhbGwoQSxuKX19LGQ9ZnVuY3Rpb24odCl7dmFyIGU9e3R5cGU6XCJyZWZlcmVuY2VcIixvYmplY3Q6dH07dm9pZCAwPT09QS5pbnRlcm5hbC5nZXRQYWdlSW5mbyh0LnBhZ2UpLnBhZ2VDb250ZXh0LmFubm90YXRpb25zLmZpbmQoZnVuY3Rpb24odCl7cmV0dXJuIHQudHlwZT09PWUudHlwZSYmdC5vYmplY3Q9PT1lLm9iamVjdH0pJiZBLmludGVybmFsLmdldFBhZ2VJbmZvKHQucGFnZSkucGFnZUNvbnRleHQuYW5ub3RhdGlvbnMucHVzaChlKX0sZz1mdW5jdGlvbigpe2lmKHZvaWQgMD09PUEuaW50ZXJuYWwuYWNyb2Zvcm1QbHVnaW4uYWNyb0Zvcm1EaWN0aW9uYXJ5Um9vdCl0aHJvdyBuZXcgRXJyb3IoXCJwdXRDYXRhbG9nQ2FsbGJhY2s6IFJvb3QgbWlzc2luZy5cIik7QS5pbnRlcm5hbC53cml0ZShcIi9BY3JvRm9ybSBcIitBLmludGVybmFsLmFjcm9mb3JtUGx1Z2luLmFjcm9Gb3JtRGljdGlvbmFyeVJvb3Qub2JqSWQrXCIgMCBSXCIpfSxtPWZ1bmN0aW9uKCl7QS5pbnRlcm5hbC5ldmVudHMudW5zdWJzY3JpYmUoQS5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi5hY3JvRm9ybURpY3Rpb25hcnlSb290Ll9ldmVudElEKSxkZWxldGUgQS5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi5hY3JvRm9ybURpY3Rpb25hcnlSb290Ll9ldmVudElELEEuaW50ZXJuYWwuYWNyb2Zvcm1QbHVnaW4ucHJpbnRlZE91dD0hMH0sTD1mdW5jdGlvbih0KXt2YXIgZT0hdDt0fHwoQS5pbnRlcm5hbC5uZXdPYmplY3REZWZlcnJlZEJlZ2luKEEuaW50ZXJuYWwuYWNyb2Zvcm1QbHVnaW4uYWNyb0Zvcm1EaWN0aW9uYXJ5Um9vdC5vYmpJZCwhMCksQS5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi5hY3JvRm9ybURpY3Rpb25hcnlSb290LnB1dFN0cmVhbSgpKTt0PXR8fEEuaW50ZXJuYWwuYWNyb2Zvcm1QbHVnaW4uYWNyb0Zvcm1EaWN0aW9uYXJ5Um9vdC5LaWRzO2Zvcih2YXIgbiBpbiB0KWlmKHQuaGFzT3duUHJvcGVydHkobikpe3ZhciByPXRbbl0saT1bXSxvPXIuUmVjdDtpZihyLlJlY3QmJihyLlJlY3Q9Yy5jYWxsKHRoaXMsci5SZWN0KSksQS5pbnRlcm5hbC5uZXdPYmplY3REZWZlcnJlZEJlZ2luKHIub2JqSWQsITApLHIuREE9WS5jcmVhdGVEZWZhdWx0QXBwZWFyYW5jZVN0cmVhbShyKSxcIm9iamVjdFwiPT09c2UocikmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHIuZ2V0S2V5VmFsdWVMaXN0Rm9yU3RyZWFtJiYoaT1yLmdldEtleVZhbHVlTGlzdEZvclN0cmVhbSgpKSxyLlJlY3Q9byxyLmhhc0FwcGVhcmFuY2VTdHJlYW0mJiFyLmFwcGVhcmFuY2VTdHJlYW1Db250ZW50KXt2YXIgYT1mLmNhbGwodGhpcyxyKTtpLnB1c2goe2tleTpcIkFQXCIsdmFsdWU6XCI8PC9OIFwiK2ErXCI+PlwifSksQS5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi54Rm9ybXMucHVzaChhKX1pZihyLmFwcGVhcmFuY2VTdHJlYW1Db250ZW50KXt2YXIgcz1cIlwiO2Zvcih2YXIgbCBpbiByLmFwcGVhcmFuY2VTdHJlYW1Db250ZW50KWlmKHIuYXBwZWFyYW5jZVN0cmVhbUNvbnRlbnQuaGFzT3duUHJvcGVydHkobCkpe3ZhciBoPXIuYXBwZWFyYW5jZVN0cmVhbUNvbnRlbnRbbF07aWYocys9XCIvXCIrbCtcIiBcIixzKz1cIjw8XCIsMTw9T2JqZWN0LmtleXMoaCkubGVuZ3RofHxBcnJheS5pc0FycmF5KGgpKWZvcih2YXIgbiBpbiBoKXt2YXIgdTtpZihoLmhhc093blByb3BlcnR5KG4pKVwiZnVuY3Rpb25cIj09dHlwZW9mKHU9aFtuXSkmJih1PXUuY2FsbCh0aGlzLHIpKSxzKz1cIi9cIituK1wiIFwiK3UrXCIgXCIsMDw9QS5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi54Rm9ybXMuaW5kZXhPZih1KXx8QS5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi54Rm9ybXMucHVzaCh1KX1lbHNlXCJmdW5jdGlvblwiPT10eXBlb2YodT1oKSYmKHU9dS5jYWxsKHRoaXMscikpLHMrPVwiL1wiK24rXCIgXCIrdSwwPD1BLmludGVybmFsLmFjcm9mb3JtUGx1Z2luLnhGb3Jtcy5pbmRleE9mKHUpfHxBLmludGVybmFsLmFjcm9mb3JtUGx1Z2luLnhGb3Jtcy5wdXNoKHUpO3MrPVwiPj5cIn1pLnB1c2goe2tleTpcIkFQXCIsdmFsdWU6XCI8PFxcblwiK3MrXCI+PlwifSl9QS5pbnRlcm5hbC5wdXRTdHJlYW0oe2FkZGl0aW9uYWxLZXlWYWx1ZXM6aX0pLEEuaW50ZXJuYWwub3V0KFwiZW5kb2JqXCIpfWUmJlAuY2FsbCh0aGlzLEEuaW50ZXJuYWwuYWNyb2Zvcm1QbHVnaW4ueEZvcm1zKX0sUD1mdW5jdGlvbih0KXtmb3IodmFyIGUgaW4gdClpZih0Lmhhc093blByb3BlcnR5KGUpKXt2YXIgbj1lLHI9dFtlXTtBLmludGVybmFsLm5ld09iamVjdERlZmVycmVkQmVnaW4ociYmci5vYmpJZCwhMCksXCJvYmplY3RcIj09PXNlKHIpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLnB1dFN0cmVhbSYmci5wdXRTdHJlYW0oKSxkZWxldGUgdFtuXX19LGs9ZnVuY3Rpb24oKXtpZih2b2lkIDAhPT10aGlzLmludGVybmFsJiYodm9pZCAwPT09dGhpcy5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbnx8ITE9PT10aGlzLmludGVybmFsLmFjcm9mb3JtUGx1Z2luLmlzSW5pdGlhbGl6ZWQpKXtpZihBPXRoaXMsTS5GaWVsZE51bT0wLHRoaXMuaW50ZXJuYWwuYWNyb2Zvcm1QbHVnaW49SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh1KSksdGhpcy5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi5hY3JvRm9ybURpY3Rpb25hcnlSb290KXRocm93IG5ldyBFcnJvcihcIkV4Y2VwdGlvbiB3aGlsZSBjcmVhdGluZyBBY3JvZm9ybURpY3Rpb25hcnlcIik7bj1BLmludGVybmFsLnNjYWxlRmFjdG9yLEEuaW50ZXJuYWwuYWNyb2Zvcm1QbHVnaW4uYWNyb0Zvcm1EaWN0aW9uYXJ5Um9vdD1uZXcgRSxBLmludGVybmFsLmFjcm9mb3JtUGx1Z2luLmFjcm9Gb3JtRGljdGlvbmFyeVJvb3QuX2V2ZW50SUQ9QS5pbnRlcm5hbC5ldmVudHMuc3Vic2NyaWJlKFwicG9zdFB1dFJlc291cmNlc1wiLG0pLEEuaW50ZXJuYWwuZXZlbnRzLnN1YnNjcmliZShcImJ1aWxkRG9jdW1lbnRcIixwKSxBLmludGVybmFsLmV2ZW50cy5zdWJzY3JpYmUoXCJwdXRDYXRhbG9nXCIsZyksQS5pbnRlcm5hbC5ldmVudHMuc3Vic2NyaWJlKFwicG9zdFB1dFBhZ2VzXCIsTCksQS5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi5pc0luaXRpYWxpemVkPSEwfX0sST10Ll9fYWNyb2Zvcm1fXy5hcnJheVRvUGRmQXJyYXk9ZnVuY3Rpb24odCl7aWYoQXJyYXkuaXNBcnJheSh0KSl7Zm9yKHZhciBlPVwiW1wiLG49MDtuPHQubGVuZ3RoO24rKylzd2l0Y2goMCE9PW4mJihlKz1cIiBcIiksc2UodFtuXSkpe2Nhc2VcImJvb2xlYW5cIjpjYXNlXCJudW1iZXJcIjpjYXNlXCJvYmplY3RcIjplKz10W25dLnRvU3RyaW5nKCk7YnJlYWs7Y2FzZVwic3RyaW5nXCI6XCIvXCIhPT10W25dLnN1YnN0cigwLDEpP2UrPVwiKFwiK1ModFtuXS50b1N0cmluZygpKStcIilcIjplKz10W25dLnRvU3RyaW5nKCl9cmV0dXJuIGUrPVwiXVwifXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnQgcGFzc2VkIHRvIGpzUERGLl9fYWNyb2Zvcm1fXy5hcnJheVRvUGRmQXJyYXlcIil9O3ZhciBDPWZ1bmN0aW9uKHQpe3JldHVybih0PXR8fFwiXCIpLnRvU3RyaW5nKCksdD1cIihcIitTKHQpK1wiKVwifSxCPWZ1bmN0aW9uKCl7dmFyIGU7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJvYmpJZFwiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7aWYoZXx8KGU9QS5pbnRlcm5hbC5uZXdPYmplY3REZWZlcnJlZCgpKSwhZSl0aHJvdyBuZXcgRXJyb3IoXCJBY3JvRm9ybVBERk9iamVjdDogQ291bGRuJ3QgY3JlYXRlIE9iamVjdCBJRFwiKTtyZXR1cm4gZX0sc2V0OmZ1bmN0aW9uKHQpe2U9dH19KX07Qi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vYmpJZCtcIiAwIFJcIn0sQi5wcm90b3R5cGUucHV0U3RyZWFtPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRLZXlWYWx1ZUxpc3RGb3JTdHJlYW0oKTtBLmludGVybmFsLnB1dFN0cmVhbSh7ZGF0YTp0aGlzLnN0cmVhbSxhZGRpdGlvbmFsS2V5VmFsdWVzOnR9KSxBLmludGVybmFsLm91dChcImVuZG9ialwiKX0sQi5wcm90b3R5cGUuZ2V0S2V5VmFsdWVMaXN0Rm9yU3RyZWFtPWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPVtdLG49T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModCkuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVyblwiY29udGVudFwiIT10JiZcImFwcGVhcmFuY2VTdHJlYW1Db250ZW50XCIhPXQmJlwiX1wiIT10LnN1YnN0cmluZygwLDEpfSk7Zm9yKHZhciByIGluIG4paWYoITE9PT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsbltyXSkuY29uZmlndXJhYmxlKXt2YXIgaT1uW3JdLG89dFtpXTtvJiYoQXJyYXkuaXNBcnJheShvKT9lLnB1c2goe2tleTppLHZhbHVlOkkobyl9KTpvIGluc3RhbmNlb2YgQj9lLnB1c2goe2tleTppLHZhbHVlOm8ub2JqSWQrXCIgMCBSXCJ9KTpcImZ1bmN0aW9uXCIhPXR5cGVvZiBvJiZlLnB1c2goe2tleTppLHZhbHVlOm99KSl9cmV0dXJuIGV9KHRoaXMpfTt2YXIgaj1mdW5jdGlvbigpe0IuY2FsbCh0aGlzKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIlR5cGVcIix7dmFsdWU6XCIvWE9iamVjdFwiLGNvbmZpZ3VyYWJsZTohMSx3cml0ZWFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIlN1YnR5cGVcIix7dmFsdWU6XCIvRm9ybVwiLGNvbmZpZ3VyYWJsZTohMSx3cml0ZWFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIkZvcm1UeXBlXCIse3ZhbHVlOjEsY29uZmlndXJhYmxlOiExLHdyaXRlYWJsZTohMH0pO3ZhciBlLG49W107T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJCQm94XCIse2NvbmZpZ3VyYWJsZTohMSx3cml0ZWFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG59LHNldDpmdW5jdGlvbih0KXtuPXR9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJSZXNvdXJjZXNcIix7dmFsdWU6XCIyIDAgUlwiLGNvbmZpZ3VyYWJsZTohMSx3cml0ZWFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInN0cmVhbVwiLHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCxzZXQ6ZnVuY3Rpb24odCl7ZT10LnRyaW0oKX0sZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGV8fG51bGx9fSl9O3IoaixCKTt2YXIgRT1mdW5jdGlvbigpe0IuY2FsbCh0aGlzKTt2YXIgZSx0PVtdO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiS2lkc1wiLHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMDx0Lmxlbmd0aD90OnZvaWQgMH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIkZpZWxkc1wiLHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIkRBXCIse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe2lmKGUpcmV0dXJuXCIoXCIrZStcIilcIn0sc2V0OmZ1bmN0aW9uKHQpe2U9dH19KX07cihFLEIpO3ZhciBNPWZ1bmN0aW9uIHQoKXtCLmNhbGwodGhpcyk7dmFyIGU9NDtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIkZcIix7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGV9LHNldDpmdW5jdGlvbih0KXtpZihpc05hTih0KSl0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdmFsdWUgXCInK3QrJ1wiIGZvciBhdHRyaWJ1dGUgRiBzdXBwbGllZC4nKTtlPXR9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJzaG93V2hlblByaW50ZWRcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4oYihlLDMpKX0sc2V0OmZ1bmN0aW9uKHQpeyEwPT09Qm9vbGVhbih0KT90aGlzLkY9eChlLDMpOnRoaXMuRj1OKGUsMyl9fSk7dmFyIG49MDtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIkZmXCIse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiBufSxzZXQ6ZnVuY3Rpb24odCl7aWYoaXNOYU4odCkpdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHZhbHVlIFwiJyt0KydcIiBmb3IgYXR0cmlidXRlIEZmIHN1cHBsaWVkLicpO249dH19KTt2YXIgcj1bXTtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIlJlY3RcIix7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7aWYoMCE9PXIubGVuZ3RoKXJldHVybiByfSxzZXQ6ZnVuY3Rpb24odCl7cj12b2lkIDAhPT10P3Q6W119fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJ4XCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiFyfHxpc05hTihyWzBdKT8wOncoclswXSl9LHNldDpmdW5jdGlvbih0KXtyWzBdPXYodCl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJ5XCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiFyfHxpc05hTihyWzFdKT8wOncoclsxXSl9LHNldDpmdW5jdGlvbih0KXtyWzFdPXYodCl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJ3aWR0aFwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hcnx8aXNOYU4oclsyXSk/MDp3KHJbMl0pfSxzZXQ6ZnVuY3Rpb24odCl7clsyXT12KHQpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiaGVpZ2h0XCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiFyfHxpc05hTihyWzNdKT8wOncoclszXSl9LHNldDpmdW5jdGlvbih0KXtyWzNdPXYodCl9fSk7dmFyIGk9XCJcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIkZUXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiBpfSxzZXQ6ZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2VcIi9CdG5cIjpjYXNlXCIvVHhcIjpjYXNlXCIvQ2hcIjpjYXNlXCIvU2lnXCI6aT10O2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHZhbHVlIFwiJyt0KydcIiBmb3IgYXR0cmlidXRlIEZUIHN1cHBsaWVkLicpfX19KTt2YXIgbz1udWxsO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiVFwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtpZighb3x8by5sZW5ndGg8MSl7aWYodGhpcyBpbnN0YW5jZW9mIEgpcmV0dXJuO289XCJGaWVsZE9iamVjdFwiK3QuRmllbGROdW0rK31yZXR1cm5cIihcIitTKG8pK1wiKVwifSxzZXQ6ZnVuY3Rpb24odCl7bz10LnRvU3RyaW5nKCl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJmaWVsZE5hbWVcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG99LHNldDpmdW5jdGlvbih0KXtvPXR9fSk7dmFyIGE9XCJoZWx2ZXRpY2FcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImZvbnROYW1lXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBhfSxzZXQ6ZnVuY3Rpb24odCl7YT10fX0pO3ZhciBzPVwibm9ybWFsXCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJmb250U3R5bGVcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHN9LHNldDpmdW5jdGlvbih0KXtzPXR9fSk7dmFyIGw9MDtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImZvbnRTaXplXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB3KGwpfSxzZXQ6ZnVuY3Rpb24odCl7bD12KHQpfX0pO3ZhciBoPTUwO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwibWF4Rm9udFNpemVcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHcoaCl9LHNldDpmdW5jdGlvbih0KXtoPXYodCl9fSk7dmFyIHU9XCJibGFja1wiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiY29sb3JcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHV9LHNldDpmdW5jdGlvbih0KXt1PXR9fSk7dmFyIGM9XCIvRjEgMCBUZiAwIGdcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIkRBXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe2lmKCEoIWN8fHRoaXMgaW5zdGFuY2VvZiBIfHx0aGlzIGluc3RhbmNlb2YgVikpcmV0dXJuIEMoYyl9LHNldDpmdW5jdGlvbih0KXt0PXQudG9TdHJpbmcoKSxjPXR9fSk7dmFyIGY9bnVsbDtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIkRWXCIse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe2lmKGYpcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBEPT0hMT9DKGYpOmZ9LHNldDpmdW5jdGlvbih0KXt0PXQudG9TdHJpbmcoKSxmPXRoaXMgaW5zdGFuY2VvZiBEPT0hMT9cIihcIj09PXQuc3Vic3RyKDAsMSk/eSh0LnN1YnN0cigxLHQubGVuZ3RoLTIpKTp5KHQpOnR9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJkZWZhdWx0VmFsdWVcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBEPT0hMD95KGYuc3Vic3RyKDEsZi5sZW5ndGgtMSkpOmZ9LHNldDpmdW5jdGlvbih0KXt0PXQudG9TdHJpbmcoKSxmPXRoaXMgaW5zdGFuY2VvZiBEPT0hMD9cIi9cIit0OnR9fSk7dmFyIHA9bnVsbDtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIlZcIix7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7aWYocClyZXR1cm4gdGhpcyBpbnN0YW5jZW9mIEQ9PSExP0MocCk6cH0sc2V0OmZ1bmN0aW9uKHQpe3Q9dC50b1N0cmluZygpLHA9dGhpcyBpbnN0YW5jZW9mIEQ9PSExP1wiKFwiPT09dC5zdWJzdHIoMCwxKT95KHQuc3Vic3RyKDEsdC5sZW5ndGgtMikpOnkodCk6dH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInZhbHVlXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzIGluc3RhbmNlb2YgRD09ITA/eShwLnN1YnN0cigxLHAubGVuZ3RoLTEpKTpwfSxzZXQ6ZnVuY3Rpb24odCl7dD10LnRvU3RyaW5nKCkscD10aGlzIGluc3RhbmNlb2YgRD09ITA/XCIvXCIrdDp0fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiaGFzQW5ub3RhdGlvblwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5SZWN0fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oYXNBbm5vdGF0aW9uP1wiL0Fubm90XCI6bnVsbH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIlN1YnR5cGVcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaGFzQW5ub3RhdGlvbj9cIi9XaWRnZXRcIjpudWxsfX0pO3ZhciBkLGc9ITE7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJoYXNBcHBlYXJhbmNlU3RyZWFtXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRlYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZ30sc2V0OmZ1bmN0aW9uKHQpe3Q9Qm9vbGVhbih0KSxnPXR9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJwYWdlXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRlYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtpZihkKXJldHVybiBkfSxzZXQ6ZnVuY3Rpb24odCl7ZD10fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwicmVhZE9ubHlcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4oYih0aGlzLkZmLDEpKX0sc2V0OmZ1bmN0aW9uKHQpeyEwPT09Qm9vbGVhbih0KT90aGlzLkZmPXgodGhpcy5GZiwxKTp0aGlzLkZmPU4odGhpcy5GZiwxKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInJlcXVpcmVkXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBCb29sZWFuKGIodGhpcy5GZiwyKSl9LHNldDpmdW5jdGlvbih0KXshMD09PUJvb2xlYW4odCk/dGhpcy5GZj14KHRoaXMuRmYsMik6dGhpcy5GZj1OKHRoaXMuRmYsMil9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJub0V4cG9ydFwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gQm9vbGVhbihiKHRoaXMuRmYsMykpfSxzZXQ6ZnVuY3Rpb24odCl7ITA9PT1Cb29sZWFuKHQpP3RoaXMuRmY9eCh0aGlzLkZmLDMpOnRoaXMuRmY9Tih0aGlzLkZmLDMpfX0pO3ZhciBtPW51bGw7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJRXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe2lmKG51bGwhPT1tKXJldHVybiBtfSxzZXQ6ZnVuY3Rpb24odCl7aWYoLTE9PT1bMCwxLDJdLmluZGV4T2YodCkpdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHZhbHVlIFwiJyt0KydcIiBmb3IgYXR0cmlidXRlIFEgc3VwcGxpZWQuJyk7bT10fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwidGV4dEFsaWduXCIse2dldDpmdW5jdGlvbigpe3ZhciB0PVwibGVmdFwiO3N3aXRjaChtKXtjYXNlIDA6ZGVmYXVsdDp0PVwibGVmdFwiO2JyZWFrO2Nhc2UgMTp0PVwiY2VudGVyXCI7YnJlYWs7Y2FzZSAyOnQ9XCJyaWdodFwifXJldHVybiB0fSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCxzZXQ6ZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2VcInJpZ2h0XCI6Y2FzZSAyOm09MjticmVhaztjYXNlXCJjZW50ZXJcIjpjYXNlIDE6bT0xO2JyZWFrO2Nhc2VcImxlZnRcIjpjYXNlIDA6ZGVmYXVsdDptPTB9fX0pfTtyKE0sQik7dmFyIE89ZnVuY3Rpb24oKXtNLmNhbGwodGhpcyksdGhpcy5GVD1cIi9DaFwiLHRoaXMuVj1cIigpXCIsdGhpcy5mb250TmFtZT1cInphcGZkaW5nYmF0c1wiO3ZhciBlPTA7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJUSVwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZX0sc2V0OmZ1bmN0aW9uKHQpe2U9dH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInRvcEluZGV4XCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlfSxzZXQ6ZnVuY3Rpb24odCl7ZT10fX0pO3ZhciByPVtdO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiT3B0XCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiBJKHIpfSxzZXQ6ZnVuY3Rpb24odCl7dmFyIGUsbjtuPVtdLFwic3RyaW5nXCI9PXR5cGVvZihlPXQpJiYobj1mdW5jdGlvbih0LGUsbil7bnx8KG49MSk7Zm9yKHZhciByLGk9W107cj1lLmV4ZWModCk7KWkucHVzaChyW25dKTtyZXR1cm4gaX0oZSwvXFwoKC4qPylcXCkvZykpLHI9bn19KSx0aGlzLmdldE9wdGlvbnM9ZnVuY3Rpb24oKXtyZXR1cm4gcn0sdGhpcy5zZXRPcHRpb25zPWZ1bmN0aW9uKHQpe3I9dCx0aGlzLnNvcnQmJnIuc29ydCgpfSx0aGlzLmFkZE9wdGlvbj1mdW5jdGlvbih0KXt0PSh0PXR8fFwiXCIpLnRvU3RyaW5nKCksci5wdXNoKHQpLHRoaXMuc29ydCYmci5zb3J0KCl9LHRoaXMucmVtb3ZlT3B0aW9uPWZ1bmN0aW9uKHQsZSl7Zm9yKGU9ZXx8ITEsdD0odD10fHxcIlwiKS50b1N0cmluZygpOy0xIT09ci5pbmRleE9mKHQpJiYoci5zcGxpY2Uoci5pbmRleE9mKHQpLDEpLCExIT09ZSk7KTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiY29tYm9cIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4oYih0aGlzLkZmLDE4KSl9LHNldDpmdW5jdGlvbih0KXshMD09PUJvb2xlYW4odCk/dGhpcy5GZj14KHRoaXMuRmYsMTgpOnRoaXMuRmY9Tih0aGlzLkZmLDE4KX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImVkaXRcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4oYih0aGlzLkZmLDE5KSl9LHNldDpmdW5jdGlvbih0KXshMD09PXRoaXMuY29tYm8mJighMD09PUJvb2xlYW4odCk/dGhpcy5GZj14KHRoaXMuRmYsMTkpOnRoaXMuRmY9Tih0aGlzLkZmLDE5KSl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJzb3J0XCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBCb29sZWFuKGIodGhpcy5GZiwyMCkpfSxzZXQ6ZnVuY3Rpb24odCl7ITA9PT1Cb29sZWFuKHQpPyh0aGlzLkZmPXgodGhpcy5GZiwyMCksci5zb3J0KCkpOnRoaXMuRmY9Tih0aGlzLkZmLDIwKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIm11bHRpU2VsZWN0XCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBCb29sZWFuKGIodGhpcy5GZiwyMikpfSxzZXQ6ZnVuY3Rpb24odCl7ITA9PT1Cb29sZWFuKHQpP3RoaXMuRmY9eCh0aGlzLkZmLDIyKTp0aGlzLkZmPU4odGhpcy5GZiwyMil9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJkb05vdFNwZWxsQ2hlY2tcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4oYih0aGlzLkZmLDIzKSl9LHNldDpmdW5jdGlvbih0KXshMD09PUJvb2xlYW4odCk/dGhpcy5GZj14KHRoaXMuRmYsMjMpOnRoaXMuRmY9Tih0aGlzLkZmLDIzKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImNvbW1pdE9uU2VsQ2hhbmdlXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBCb29sZWFuKGIodGhpcy5GZiwyNykpfSxzZXQ6ZnVuY3Rpb24odCl7ITA9PT1Cb29sZWFuKHQpP3RoaXMuRmY9eCh0aGlzLkZmLDI3KTp0aGlzLkZmPU4odGhpcy5GZiwyNyl9fSksdGhpcy5oYXNBcHBlYXJhbmNlU3RyZWFtPSExfTtyKE8sTSk7dmFyIHE9ZnVuY3Rpb24oKXtPLmNhbGwodGhpcyksdGhpcy5mb250TmFtZT1cImhlbHZldGljYVwiLHRoaXMuY29tYm89ITF9O3IocSxPKTt2YXIgVD1mdW5jdGlvbigpe3EuY2FsbCh0aGlzKSx0aGlzLmNvbWJvPSEwfTtyKFQscSk7dmFyIFI9ZnVuY3Rpb24oKXtULmNhbGwodGhpcyksdGhpcy5lZGl0PSEwfTtyKFIsVCk7dmFyIEQ9ZnVuY3Rpb24oKXtNLmNhbGwodGhpcyksdGhpcy5GVD1cIi9CdG5cIixPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIm5vVG9nZ2xlVG9PZmZcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4oYih0aGlzLkZmLDE1KSl9LHNldDpmdW5jdGlvbih0KXshMD09PUJvb2xlYW4odCk/dGhpcy5GZj14KHRoaXMuRmYsMTUpOnRoaXMuRmY9Tih0aGlzLkZmLDE1KX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInJhZGlvXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBCb29sZWFuKGIodGhpcy5GZiwxNikpfSxzZXQ6ZnVuY3Rpb24odCl7ITA9PT1Cb29sZWFuKHQpP3RoaXMuRmY9eCh0aGlzLkZmLDE2KTp0aGlzLkZmPU4odGhpcy5GZiwxNil9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJwdXNoQnV0dG9uXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBCb29sZWFuKGIodGhpcy5GZiwxNykpfSxzZXQ6ZnVuY3Rpb24odCl7ITA9PT1Cb29sZWFuKHQpP3RoaXMuRmY9eCh0aGlzLkZmLDE3KTp0aGlzLkZmPU4odGhpcy5GZiwxNyl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJyYWRpb0lzVW5pc29uXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBCb29sZWFuKGIodGhpcy5GZiwyNikpfSxzZXQ6ZnVuY3Rpb24odCl7ITA9PT1Cb29sZWFuKHQpP3RoaXMuRmY9eCh0aGlzLkZmLDI2KTp0aGlzLkZmPU4odGhpcy5GZiwyNil9fSk7dmFyIGUsbj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIk1LXCIse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe2lmKDAhPT1PYmplY3Qua2V5cyhuKS5sZW5ndGgpe3ZhciB0LGU9W107Zm9yKHQgaW4gZS5wdXNoKFwiPDxcIiksbillLnB1c2goXCIvXCIrdCtcIiAoXCIrblt0XStcIilcIik7cmV0dXJuIGUucHVzaChcIj4+XCIpLGUuam9pbihcIlxcblwiKX19LHNldDpmdW5jdGlvbih0KXtcIm9iamVjdFwiPT09c2UodCkmJihuPXQpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiY2FwdGlvblwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbi5DQXx8XCJcIn0sc2V0OmZ1bmN0aW9uKHQpe1wic3RyaW5nXCI9PXR5cGVvZiB0JiYobi5DQT10KX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIkFTXCIse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiBlfSxzZXQ6ZnVuY3Rpb24odCl7ZT10fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiYXBwZWFyYW5jZVN0YXRlXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLnN1YnN0cigxLGUubGVuZ3RoLTEpfSxzZXQ6ZnVuY3Rpb24odCl7ZT1cIi9cIit0fX0pfTtyKEQsTSk7dmFyIFU9ZnVuY3Rpb24oKXtELmNhbGwodGhpcyksdGhpcy5wdXNoQnV0dG9uPSEwfTtyKFUsRCk7dmFyIHo9ZnVuY3Rpb24oKXtELmNhbGwodGhpcyksdGhpcy5yYWRpbz0hMCx0aGlzLnB1c2hCdXR0b249ITE7dmFyIGU9W107T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJLaWRzXCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiBlfSxzZXQ6ZnVuY3Rpb24odCl7ZT12b2lkIDAhPT10P3Q6W119fSl9O3IoeixEKTt2YXIgSD1mdW5jdGlvbigpe3ZhciBlLG47TS5jYWxsKHRoaXMpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiUGFyZW50XCIse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiBlfSxzZXQ6ZnVuY3Rpb24odCl7ZT10fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwib3B0aW9uTmFtZVwiLHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbn0sc2V0OmZ1bmN0aW9uKHQpe249dH19KTt2YXIgcixpPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiTUtcIix7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7dmFyIHQsZT1bXTtmb3IodCBpbiBlLnB1c2goXCI8PFwiKSxpKWUucHVzaChcIi9cIit0K1wiIChcIitpW3RdK1wiKVwiKTtyZXR1cm4gZS5wdXNoKFwiPj5cIiksZS5qb2luKFwiXFxuXCIpfSxzZXQ6ZnVuY3Rpb24odCl7XCJvYmplY3RcIj09PXNlKHQpJiYoaT10KX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImNhcHRpb25cIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGkuQ0F8fFwiXCJ9LHNldDpmdW5jdGlvbih0KXtcInN0cmluZ1wiPT10eXBlb2YgdCYmKGkuQ0E9dCl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJBU1wiLHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcn0sc2V0OmZ1bmN0aW9uKHQpe3I9dH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImFwcGVhcmFuY2VTdGF0ZVwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gci5zdWJzdHIoMSxyLmxlbmd0aC0xKX0sc2V0OmZ1bmN0aW9uKHQpe3I9XCIvXCIrdH19KSx0aGlzLm9wdGlvbk5hbWU9bmFtZSx0aGlzLmNhcHRpb249XCJsXCIsdGhpcy5hcHBlYXJhbmNlU3RhdGU9XCJPZmZcIix0aGlzLl9BcHBlYXJhbmNlVHlwZT1ZLlJhZGlvQnV0dG9uLkNpcmNsZSx0aGlzLmFwcGVhcmFuY2VTdHJlYW1Db250ZW50PXRoaXMuX0FwcGVhcmFuY2VUeXBlLmNyZWF0ZUFwcGVhcmFuY2VTdHJlYW0obmFtZSl9O3IoSCxNKSx6LnByb3RvdHlwZS5zZXRBcHBlYXJhbmNlPWZ1bmN0aW9uKHQpe2lmKCEoXCJjcmVhdGVBcHBlYXJhbmNlU3RyZWFtXCJpbiB0JiZcImdldENBXCJpbiB0KSl0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBhc3NpZ24gQXBwZWFyYW5jZSB0byBSYWRpb0J1dHRvbi4gQXBwZWFyYW5jZSB3YXMgSW52YWxpZCFcIik7Zm9yKHZhciBlIGluIHRoaXMuS2lkcylpZih0aGlzLktpZHMuaGFzT3duUHJvcGVydHkoZSkpe3ZhciBuPXRoaXMuS2lkc1tlXTtuLmFwcGVhcmFuY2VTdHJlYW1Db250ZW50PXQuY3JlYXRlQXBwZWFyYW5jZVN0cmVhbShuLm9wdGlvbk5hbWUpLG4uY2FwdGlvbj10LmdldENBKCl9fSx6LnByb3RvdHlwZS5jcmVhdGVPcHRpb249ZnVuY3Rpb24odCl7dGhpcy5LaWRzLmxlbmd0aDt2YXIgZT1uZXcgSDtyZXR1cm4gZS5QYXJlbnQ9dGhpcyxlLm9wdGlvbk5hbWU9dCx0aGlzLktpZHMucHVzaChlKSxKLmNhbGwodGhpcyxlKSxlfTt2YXIgVz1mdW5jdGlvbigpe0QuY2FsbCh0aGlzKSx0aGlzLmZvbnROYW1lPVwiemFwZmRpbmdiYXRzXCIsdGhpcy5jYXB0aW9uPVwiM1wiLHRoaXMuYXBwZWFyYW5jZVN0YXRlPVwiT25cIix0aGlzLnZhbHVlPVwiT25cIix0aGlzLnRleHRBbGlnbj1cImNlbnRlclwiLHRoaXMuYXBwZWFyYW5jZVN0cmVhbUNvbnRlbnQ9WS5DaGVja0JveC5jcmVhdGVBcHBlYXJhbmNlU3RyZWFtKCl9O3IoVyxEKTt2YXIgVj1mdW5jdGlvbigpe00uY2FsbCh0aGlzKSx0aGlzLkZUPVwiL1R4XCIsT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJtdWx0aWxpbmVcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4oYih0aGlzLkZmLDEzKSl9LHNldDpmdW5jdGlvbih0KXshMD09PUJvb2xlYW4odCk/dGhpcy5GZj14KHRoaXMuRmYsMTMpOnRoaXMuRmY9Tih0aGlzLkZmLDEzKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImZpbGVTZWxlY3RcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4oYih0aGlzLkZmLDIxKSl9LHNldDpmdW5jdGlvbih0KXshMD09PUJvb2xlYW4odCk/dGhpcy5GZj14KHRoaXMuRmYsMjEpOnRoaXMuRmY9Tih0aGlzLkZmLDIxKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImRvTm90U3BlbGxDaGVja1wiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gQm9vbGVhbihiKHRoaXMuRmYsMjMpKX0sc2V0OmZ1bmN0aW9uKHQpeyEwPT09Qm9vbGVhbih0KT90aGlzLkZmPXgodGhpcy5GZiwyMyk6dGhpcy5GZj1OKHRoaXMuRmYsMjMpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiZG9Ob3RTY3JvbGxcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4oYih0aGlzLkZmLDI0KSl9LHNldDpmdW5jdGlvbih0KXshMD09PUJvb2xlYW4odCk/dGhpcy5GZj14KHRoaXMuRmYsMjQpOnRoaXMuRmY9Tih0aGlzLkZmLDI0KX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImNvbWJcIix7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4oYih0aGlzLkZmLDI1KSl9LHNldDpmdW5jdGlvbih0KXshMD09PUJvb2xlYW4odCk/dGhpcy5GZj14KHRoaXMuRmYsMjUpOnRoaXMuRmY9Tih0aGlzLkZmLDI1KX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInJpY2hUZXh0XCIse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBCb29sZWFuKGIodGhpcy5GZiwyNikpfSxzZXQ6ZnVuY3Rpb24odCl7ITA9PT1Cb29sZWFuKHQpP3RoaXMuRmY9eCh0aGlzLkZmLDI2KTp0aGlzLkZmPU4odGhpcy5GZiwyNil9fSk7dmFyIGU9bnVsbDtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIk1heExlblwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZX0sc2V0OmZ1bmN0aW9uKHQpe2U9dH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIm1heExlbmd0aFwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZX0sc2V0OmZ1bmN0aW9uKHQpe051bWJlci5pc0ludGVnZXIodCkmJihlPXQpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiaGFzQXBwZWFyYW5jZVN0cmVhbVwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5WfHx0aGlzLkRWfX0pfTtyKFYsTSk7dmFyIEc9ZnVuY3Rpb24oKXtWLmNhbGwodGhpcyksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJwYXNzd29yZFwiLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gQm9vbGVhbihiKHRoaXMuRmYsMTQpKX0sc2V0OmZ1bmN0aW9uKHQpeyEwPT09Qm9vbGVhbih0KT90aGlzLkZmPXgodGhpcy5GZiwxNCk6dGhpcy5GZj1OKHRoaXMuRmYsMTQpfX0pLHRoaXMucGFzc3dvcmQ9ITB9O3IoRyxWKTt2YXIgWT17Q2hlY2tCb3g6e2NyZWF0ZUFwcGVhcmFuY2VTdHJlYW06ZnVuY3Rpb24oKXtyZXR1cm57Tjp7T246WS5DaGVja0JveC5ZZXNOb3JtYWx9LEQ6e09uOlkuQ2hlY2tCb3guWWVzUHVzaERvd24sT2ZmOlkuQ2hlY2tCb3guT2ZmUHVzaERvd259fX0sWWVzUHVzaERvd246ZnVuY3Rpb24odCl7dmFyIGU9bCh0KSxuPVtdLHI9QS5pbnRlcm5hbC5nZXRGb250KHQuZm9udE5hbWUsdC5mb250U3R5bGUpLmlkLGk9QS5fX3ByaXZhdGVfXy5lbmNvZGVDb2xvclN0cmluZyh0LmNvbG9yKSxvPWgodCx0LmNhcHRpb24pO3JldHVybiBuLnB1c2goXCIwLjc0OTAyMyBnXCIpLG4ucHVzaChcIjAgMCBcIitfKFkuaW50ZXJuYWwuZ2V0V2lkdGgodCkpK1wiIFwiK18oWS5pbnRlcm5hbC5nZXRIZWlnaHQodCkpK1wiIHJlXCIpLG4ucHVzaChcImZcIiksbi5wdXNoKFwiQk1DXCIpLG4ucHVzaChcInFcIiksbi5wdXNoKFwiMCAwIDEgcmdcIiksbi5wdXNoKFwiL1wiK3IrXCIgXCIrXyhvLmZvbnRTaXplKStcIiBUZiBcIitpKSxuLnB1c2goXCJCVFwiKSxuLnB1c2goby50ZXh0KSxuLnB1c2goXCJFVFwiKSxuLnB1c2goXCJRXCIpLG4ucHVzaChcIkVNQ1wiKSxlLnN0cmVhbT1uLmpvaW4oXCJcXG5cIiksZX0sWWVzTm9ybWFsOmZ1bmN0aW9uKHQpe3ZhciBlPWwodCksbj1BLmludGVybmFsLmdldEZvbnQodC5mb250TmFtZSx0LmZvbnRTdHlsZSkuaWQscj1BLl9fcHJpdmF0ZV9fLmVuY29kZUNvbG9yU3RyaW5nKHQuY29sb3IpLGk9W10sbz1ZLmludGVybmFsLmdldEhlaWdodCh0KSxhPVkuaW50ZXJuYWwuZ2V0V2lkdGgodCkscz1oKHQsdC5jYXB0aW9uKTtyZXR1cm4gaS5wdXNoKFwiMSBnXCIpLGkucHVzaChcIjAgMCBcIitfKGEpK1wiIFwiK18obykrXCIgcmVcIiksaS5wdXNoKFwiZlwiKSxpLnB1c2goXCJxXCIpLGkucHVzaChcIjAgMCAxIHJnXCIpLGkucHVzaChcIjAgMCBcIitfKGEtMSkrXCIgXCIrXyhvLTEpK1wiIHJlXCIpLGkucHVzaChcIldcIiksaS5wdXNoKFwiblwiKSxpLnB1c2goXCIwIGdcIiksaS5wdXNoKFwiQlRcIiksaS5wdXNoKFwiL1wiK24rXCIgXCIrXyhzLmZvbnRTaXplKStcIiBUZiBcIityKSxpLnB1c2gocy50ZXh0KSxpLnB1c2goXCJFVFwiKSxpLnB1c2goXCJRXCIpLGUuc3RyZWFtPWkuam9pbihcIlxcblwiKSxlfSxPZmZQdXNoRG93bjpmdW5jdGlvbih0KXt2YXIgZT1sKHQpLG49W107cmV0dXJuIG4ucHVzaChcIjAuNzQ5MDIzIGdcIiksbi5wdXNoKFwiMCAwIFwiK18oWS5pbnRlcm5hbC5nZXRXaWR0aCh0KSkrXCIgXCIrXyhZLmludGVybmFsLmdldEhlaWdodCh0KSkrXCIgcmVcIiksbi5wdXNoKFwiZlwiKSxlLnN0cmVhbT1uLmpvaW4oXCJcXG5cIiksZX19LFJhZGlvQnV0dG9uOntDaXJjbGU6e2NyZWF0ZUFwcGVhcmFuY2VTdHJlYW06ZnVuY3Rpb24odCl7dmFyIGU9e0Q6e09mZjpZLlJhZGlvQnV0dG9uLkNpcmNsZS5PZmZQdXNoRG93bn0sTjp7fX07cmV0dXJuIGUuTlt0XT1ZLlJhZGlvQnV0dG9uLkNpcmNsZS5ZZXNOb3JtYWwsZS5EW3RdPVkuUmFkaW9CdXR0b24uQ2lyY2xlLlllc1B1c2hEb3duLGV9LGdldENBOmZ1bmN0aW9uKCl7cmV0dXJuXCJsXCJ9LFllc05vcm1hbDpmdW5jdGlvbih0KXt2YXIgZT1sKHQpLG49W10scj1ZLmludGVybmFsLmdldFdpZHRoKHQpPD1ZLmludGVybmFsLmdldEhlaWdodCh0KT9ZLmludGVybmFsLmdldFdpZHRoKHQpLzQ6WS5pbnRlcm5hbC5nZXRIZWlnaHQodCkvNDtyPU51bWJlcigoLjkqcikudG9GaXhlZCg1KSk7dmFyIGk9WS5pbnRlcm5hbC5CZXppZXJfQyxvPU51bWJlcigocippKS50b0ZpeGVkKDUpKTtyZXR1cm4gbi5wdXNoKFwicVwiKSxuLnB1c2goXCIxIDAgMCAxIFwiK3MoWS5pbnRlcm5hbC5nZXRXaWR0aCh0KS8yKStcIiBcIitzKFkuaW50ZXJuYWwuZ2V0SGVpZ2h0KHQpLzIpK1wiIGNtXCIpLG4ucHVzaChyK1wiIDAgbVwiKSxuLnB1c2gocitcIiBcIitvK1wiIFwiK28rXCIgXCIrcitcIiAwIFwiK3IrXCIgY1wiKSxuLnB1c2goXCItXCIrbytcIiBcIityK1wiIC1cIityK1wiIFwiK28rXCIgLVwiK3IrXCIgMCBjXCIpLG4ucHVzaChcIi1cIityK1wiIC1cIitvK1wiIC1cIitvK1wiIC1cIityK1wiIDAgLVwiK3IrXCIgY1wiKSxuLnB1c2gobytcIiAtXCIrcitcIiBcIityK1wiIC1cIitvK1wiIFwiK3IrXCIgMCBjXCIpLG4ucHVzaChcImZcIiksbi5wdXNoKFwiUVwiKSxlLnN0cmVhbT1uLmpvaW4oXCJcXG5cIiksZX0sWWVzUHVzaERvd246ZnVuY3Rpb24odCl7dmFyIGU9bCh0KSxuPVtdLHI9WS5pbnRlcm5hbC5nZXRXaWR0aCh0KTw9WS5pbnRlcm5hbC5nZXRIZWlnaHQodCk/WS5pbnRlcm5hbC5nZXRXaWR0aCh0KS80OlkuaW50ZXJuYWwuZ2V0SGVpZ2h0KHQpLzQsaT0ocj1OdW1iZXIoKC45KnIpLnRvRml4ZWQoNSkpLE51bWJlcigoMipyKS50b0ZpeGVkKDUpKSksbz1OdW1iZXIoKGkqWS5pbnRlcm5hbC5CZXppZXJfQykudG9GaXhlZCg1KSksYT1OdW1iZXIoKHIqWS5pbnRlcm5hbC5CZXppZXJfQykudG9GaXhlZCg1KSk7cmV0dXJuIG4ucHVzaChcIjAuNzQ5MDIzIGdcIiksbi5wdXNoKFwicVwiKSxuLnB1c2goXCIxIDAgMCAxIFwiK3MoWS5pbnRlcm5hbC5nZXRXaWR0aCh0KS8yKStcIiBcIitzKFkuaW50ZXJuYWwuZ2V0SGVpZ2h0KHQpLzIpK1wiIGNtXCIpLG4ucHVzaChpK1wiIDAgbVwiKSxuLnB1c2goaStcIiBcIitvK1wiIFwiK28rXCIgXCIraStcIiAwIFwiK2krXCIgY1wiKSxuLnB1c2goXCItXCIrbytcIiBcIitpK1wiIC1cIitpK1wiIFwiK28rXCIgLVwiK2krXCIgMCBjXCIpLG4ucHVzaChcIi1cIitpK1wiIC1cIitvK1wiIC1cIitvK1wiIC1cIitpK1wiIDAgLVwiK2krXCIgY1wiKSxuLnB1c2gobytcIiAtXCIraStcIiBcIitpK1wiIC1cIitvK1wiIFwiK2krXCIgMCBjXCIpLG4ucHVzaChcImZcIiksbi5wdXNoKFwiUVwiKSxuLnB1c2goXCIwIGdcIiksbi5wdXNoKFwicVwiKSxuLnB1c2goXCIxIDAgMCAxIFwiK3MoWS5pbnRlcm5hbC5nZXRXaWR0aCh0KS8yKStcIiBcIitzKFkuaW50ZXJuYWwuZ2V0SGVpZ2h0KHQpLzIpK1wiIGNtXCIpLG4ucHVzaChyK1wiIDAgbVwiKSxuLnB1c2gocitcIiBcIithK1wiIFwiK2ErXCIgXCIrcitcIiAwIFwiK3IrXCIgY1wiKSxuLnB1c2goXCItXCIrYStcIiBcIityK1wiIC1cIityK1wiIFwiK2ErXCIgLVwiK3IrXCIgMCBjXCIpLG4ucHVzaChcIi1cIityK1wiIC1cIithK1wiIC1cIithK1wiIC1cIityK1wiIDAgLVwiK3IrXCIgY1wiKSxuLnB1c2goYStcIiAtXCIrcitcIiBcIityK1wiIC1cIithK1wiIFwiK3IrXCIgMCBjXCIpLG4ucHVzaChcImZcIiksbi5wdXNoKFwiUVwiKSxlLnN0cmVhbT1uLmpvaW4oXCJcXG5cIiksZX0sT2ZmUHVzaERvd246ZnVuY3Rpb24odCl7dmFyIGU9bCh0KSxuPVtdLHI9WS5pbnRlcm5hbC5nZXRXaWR0aCh0KTw9WS5pbnRlcm5hbC5nZXRIZWlnaHQodCk/WS5pbnRlcm5hbC5nZXRXaWR0aCh0KS80OlkuaW50ZXJuYWwuZ2V0SGVpZ2h0KHQpLzQsaT0ocj1OdW1iZXIoKC45KnIpLnRvRml4ZWQoNSkpLE51bWJlcigoMipyKS50b0ZpeGVkKDUpKSksbz1OdW1iZXIoKGkqWS5pbnRlcm5hbC5CZXppZXJfQykudG9GaXhlZCg1KSk7cmV0dXJuIG4ucHVzaChcIjAuNzQ5MDIzIGdcIiksbi5wdXNoKFwicVwiKSxuLnB1c2goXCIxIDAgMCAxIFwiK3MoWS5pbnRlcm5hbC5nZXRXaWR0aCh0KS8yKStcIiBcIitzKFkuaW50ZXJuYWwuZ2V0SGVpZ2h0KHQpLzIpK1wiIGNtXCIpLG4ucHVzaChpK1wiIDAgbVwiKSxuLnB1c2goaStcIiBcIitvK1wiIFwiK28rXCIgXCIraStcIiAwIFwiK2krXCIgY1wiKSxuLnB1c2goXCItXCIrbytcIiBcIitpK1wiIC1cIitpK1wiIFwiK28rXCIgLVwiK2krXCIgMCBjXCIpLG4ucHVzaChcIi1cIitpK1wiIC1cIitvK1wiIC1cIitvK1wiIC1cIitpK1wiIDAgLVwiK2krXCIgY1wiKSxuLnB1c2gobytcIiAtXCIraStcIiBcIitpK1wiIC1cIitvK1wiIFwiK2krXCIgMCBjXCIpLG4ucHVzaChcImZcIiksbi5wdXNoKFwiUVwiKSxlLnN0cmVhbT1uLmpvaW4oXCJcXG5cIiksZX19LENyb3NzOntjcmVhdGVBcHBlYXJhbmNlU3RyZWFtOmZ1bmN0aW9uKHQpe3ZhciBlPXtEOntPZmY6WS5SYWRpb0J1dHRvbi5Dcm9zcy5PZmZQdXNoRG93bn0sTjp7fX07cmV0dXJuIGUuTlt0XT1ZLlJhZGlvQnV0dG9uLkNyb3NzLlllc05vcm1hbCxlLkRbdF09WS5SYWRpb0J1dHRvbi5Dcm9zcy5ZZXNQdXNoRG93bixlfSxnZXRDQTpmdW5jdGlvbigpe3JldHVyblwiOFwifSxZZXNOb3JtYWw6ZnVuY3Rpb24odCl7dmFyIGU9bCh0KSxuPVtdLHI9WS5pbnRlcm5hbC5jYWxjdWxhdGVDcm9zcyh0KTtyZXR1cm4gbi5wdXNoKFwicVwiKSxuLnB1c2goXCIxIDEgXCIrXyhZLmludGVybmFsLmdldFdpZHRoKHQpLTIpK1wiIFwiK18oWS5pbnRlcm5hbC5nZXRIZWlnaHQodCktMikrXCIgcmVcIiksbi5wdXNoKFwiV1wiKSxuLnB1c2goXCJuXCIpLG4ucHVzaChfKHIueDEueCkrXCIgXCIrXyhyLngxLnkpK1wiIG1cIiksbi5wdXNoKF8oci54Mi54KStcIiBcIitfKHIueDIueSkrXCIgbFwiKSxuLnB1c2goXyhyLng0LngpK1wiIFwiK18oci54NC55KStcIiBtXCIpLG4ucHVzaChfKHIueDMueCkrXCIgXCIrXyhyLngzLnkpK1wiIGxcIiksbi5wdXNoKFwic1wiKSxuLnB1c2goXCJRXCIpLGUuc3RyZWFtPW4uam9pbihcIlxcblwiKSxlfSxZZXNQdXNoRG93bjpmdW5jdGlvbih0KXt2YXIgZT1sKHQpLG49WS5pbnRlcm5hbC5jYWxjdWxhdGVDcm9zcyh0KSxyPVtdO3JldHVybiByLnB1c2goXCIwLjc0OTAyMyBnXCIpLHIucHVzaChcIjAgMCBcIitfKFkuaW50ZXJuYWwuZ2V0V2lkdGgodCkpK1wiIFwiK18oWS5pbnRlcm5hbC5nZXRIZWlnaHQodCkpK1wiIHJlXCIpLHIucHVzaChcImZcIiksci5wdXNoKFwicVwiKSxyLnB1c2goXCIxIDEgXCIrXyhZLmludGVybmFsLmdldFdpZHRoKHQpLTIpK1wiIFwiK18oWS5pbnRlcm5hbC5nZXRIZWlnaHQodCktMikrXCIgcmVcIiksci5wdXNoKFwiV1wiKSxyLnB1c2goXCJuXCIpLHIucHVzaChfKG4ueDEueCkrXCIgXCIrXyhuLngxLnkpK1wiIG1cIiksci5wdXNoKF8obi54Mi54KStcIiBcIitfKG4ueDIueSkrXCIgbFwiKSxyLnB1c2goXyhuLng0LngpK1wiIFwiK18obi54NC55KStcIiBtXCIpLHIucHVzaChfKG4ueDMueCkrXCIgXCIrXyhuLngzLnkpK1wiIGxcIiksci5wdXNoKFwic1wiKSxyLnB1c2goXCJRXCIpLGUuc3RyZWFtPXIuam9pbihcIlxcblwiKSxlfSxPZmZQdXNoRG93bjpmdW5jdGlvbih0KXt2YXIgZT1sKHQpLG49W107cmV0dXJuIG4ucHVzaChcIjAuNzQ5MDIzIGdcIiksbi5wdXNoKFwiMCAwIFwiK18oWS5pbnRlcm5hbC5nZXRXaWR0aCh0KSkrXCIgXCIrXyhZLmludGVybmFsLmdldEhlaWdodCh0KSkrXCIgcmVcIiksbi5wdXNoKFwiZlwiKSxlLnN0cmVhbT1uLmpvaW4oXCJcXG5cIiksZX19fSxjcmVhdGVEZWZhdWx0QXBwZWFyYW5jZVN0cmVhbTpmdW5jdGlvbih0KXt2YXIgZT1BLmludGVybmFsLmdldEZvbnQodC5mb250TmFtZSx0LmZvbnRTdHlsZSkuaWQsbj1BLl9fcHJpdmF0ZV9fLmVuY29kZUNvbG9yU3RyaW5nKHQuY29sb3IpO3JldHVyblwiL1wiK2UrXCIgXCIrdC5mb250U2l6ZStcIiBUZiBcIitufX07WS5pbnRlcm5hbD17QmV6aWVyX0M6LjU1MTkxNTAyNDQ5NCxjYWxjdWxhdGVDcm9zczpmdW5jdGlvbih0KXt2YXIgZT1ZLmludGVybmFsLmdldFdpZHRoKHQpLG49WS5pbnRlcm5hbC5nZXRIZWlnaHQodCkscj1NYXRoLm1pbihlLG4pO3JldHVybnt4MTp7eDooZS1yKS8yLHk6KG4tcikvMityfSx4Mjp7eDooZS1yKS8yK3IseToobi1yKS8yfSx4Mzp7eDooZS1yKS8yLHk6KG4tcikvMn0seDQ6e3g6KGUtcikvMityLHk6KG4tcikvMityfX19fSxZLmludGVybmFsLmdldFdpZHRoPWZ1bmN0aW9uKHQpe3ZhciBlPTA7cmV0dXJuXCJvYmplY3RcIj09PXNlKHQpJiYoZT12KHQuUmVjdFsyXSkpLGV9LFkuaW50ZXJuYWwuZ2V0SGVpZ2h0PWZ1bmN0aW9uKHQpe3ZhciBlPTA7cmV0dXJuXCJvYmplY3RcIj09PXNlKHQpJiYoZT12KHQuUmVjdFszXSkpLGV9O3ZhciBKPXQuYWRkRmllbGQ9ZnVuY3Rpb24odCl7aWYoay5jYWxsKHRoaXMpLCEodCBpbnN0YW5jZW9mIE0pKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnQgcGFzc2VkIHRvIGpzUERGLmFkZEZpZWxkLlwiKTtyZXR1cm4gZnVuY3Rpb24odCl7QS5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi5wcmludGVkT3V0JiYoQS5pbnRlcm5hbC5hY3JvZm9ybVBsdWdpbi5wcmludGVkT3V0PSExLEEuaW50ZXJuYWwuYWNyb2Zvcm1QbHVnaW4uYWNyb0Zvcm1EaWN0aW9uYXJ5Um9vdD1udWxsKSxBLmludGVybmFsLmFjcm9mb3JtUGx1Z2luLmFjcm9Gb3JtRGljdGlvbmFyeVJvb3R8fGsuY2FsbChBKSxBLmludGVybmFsLmFjcm9mb3JtUGx1Z2luLmFjcm9Gb3JtRGljdGlvbmFyeVJvb3QuRmllbGRzLnB1c2godCl9LmNhbGwodGhpcyx0KSx0LnBhZ2U9QS5pbnRlcm5hbC5nZXRDdXJyZW50UGFnZUluZm8oKS5wYWdlTnVtYmVyLHRoaXN9O3QuYWRkQnV0dG9uPWZ1bmN0aW9uKHQpe2lmKHQgaW5zdGFuY2VvZiBEPT0hMSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50IHBhc3NlZCB0byBqc1BERi5hZGRCdXR0b24uXCIpO3JldHVybiBKLmNhbGwodGhpcyx0KX0sdC5hZGRUZXh0RmllbGQ9ZnVuY3Rpb24odCl7aWYodCBpbnN0YW5jZW9mIFY9PSExKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnQgcGFzc2VkIHRvIGpzUERGLmFkZFRleHRGaWVsZC5cIik7cmV0dXJuIEouY2FsbCh0aGlzLHQpfSx0LmFkZENob2ljZUZpZWxkPWZ1bmN0aW9uKHQpe2lmKHQgaW5zdGFuY2VvZiBPPT0hMSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50IHBhc3NlZCB0byBqc1BERi5hZGRDaG9pY2VGaWVsZC5cIik7cmV0dXJuIEouY2FsbCh0aGlzLHQpfTtcIm9iamVjdFwiPT1zZShlKSYmdm9pZCAwPT09ZS5DaG9pY2VGaWVsZCYmdm9pZCAwPT09ZS5MaXN0Qm94JiZ2b2lkIDA9PT1lLkNvbWJvQm94JiZ2b2lkIDA9PT1lLkVkaXRCb3gmJnZvaWQgMD09PWUuQnV0dG9uJiZ2b2lkIDA9PT1lLlB1c2hCdXR0b24mJnZvaWQgMD09PWUuUmFkaW9CdXR0b24mJnZvaWQgMD09PWUuQ2hlY2tCb3gmJnZvaWQgMD09PWUuVGV4dEZpZWxkJiZ2b2lkIDA9PT1lLlBhc3N3b3JkRmllbGQ/KGUuQ2hvaWNlRmllbGQ9TyxlLkxpc3RCb3g9cSxlLkNvbWJvQm94PVQsZS5FZGl0Qm94PVIsZS5CdXR0b249RCxlLlB1c2hCdXR0b249VSxlLlJhZGlvQnV0dG9uPXosZS5DaGVja0JveD1XLGUuVGV4dEZpZWxkPVYsZS5QYXNzd29yZEZpZWxkPUcsZS5BY3JvRm9ybT17QXBwZWFyYW5jZTpZfSk6Y29uc29sZS53YXJuKFwiQWNyb0Zvcm0tQ2xhc3NlcyBhcmUgbm90IHBvcHVsYXRlZCBpbnRvIGdsb2JhbC1uYW1lc3BhY2UsIGJlY2F1c2UgdGhlIGNsYXNzLU5hbWVzIGV4aXN0IGFscmVhZHkuXCIpLHQuQWNyb0Zvcm1DaG9pY2VGaWVsZD1PLHQuQWNyb0Zvcm1MaXN0Qm94PXEsdC5BY3JvRm9ybUNvbWJvQm94PVQsdC5BY3JvRm9ybUVkaXRCb3g9Uix0LkFjcm9Gb3JtQnV0dG9uPUQsdC5BY3JvRm9ybVB1c2hCdXR0b249VSx0LkFjcm9Gb3JtUmFkaW9CdXR0b249eix0LkFjcm9Gb3JtQ2hlY2tCb3g9Vyx0LkFjcm9Gb3JtVGV4dEZpZWxkPVYsdC5BY3JvRm9ybVBhc3N3b3JkRmllbGQ9Ryx0LkFjcm9Gb3JtQXBwZWFyYW5jZT1ZLHQuQWNyb0Zvcm09e0Nob2ljZUZpZWxkOk8sTGlzdEJveDpxLENvbWJvQm94OlQsRWRpdEJveDpSLEJ1dHRvbjpELFB1c2hCdXR0b246VSxSYWRpb0J1dHRvbjp6LENoZWNrQm94OlcsVGV4dEZpZWxkOlYsUGFzc3dvcmRGaWVsZDpHLEFwcGVhcmFuY2U6WX19KSgod2luZG93LnRtcD1sdCkuQVBJLFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbCYmZ2xvYmFsKSxcbi8qKiBAbGljZW5zZVxuICAgKiBqc1BERiBhZGRJbWFnZSBwbHVnaW5cbiAgICogQ29weXJpZ2h0IChjKSAyMDEyIEphc29uIFNpZWZrZW4sIGh0dHBzOi8vZ2l0aHViLmNvbS9zaWVma2Vuai9cbiAgICogICAgICAgICAgICAgICAyMDEzIENocmlzIERvd2xpbmcsIGh0dHBzOi8vZ2l0aHViLmNvbS9naW5nZXJjaHJpc1xuICAgKiAgICAgICAgICAgICAgIDIwMTMgVHJpbmggSG8sIGh0dHBzOi8vZ2l0aHViLmNvbS9pbmVlZGZhdFxuICAgKiAgICAgICAgICAgICAgIDIwMTMgRWR3aW4gQWxlamFuZHJvIFBlcmV6LCBodHRwczovL2dpdGh1Yi5jb20vZWFwYXJhbmdvXG4gICAqICAgICAgICAgICAgICAgMjAxMyBOb3JhaCBTbWl0aCwgaHR0cHM6Ly9naXRodWIuY29tL2J1cm5idXJucm9ja2V0XG4gICAqICAgICAgICAgICAgICAgMjAxNCBEaWVnbyBDYXNvcnJhbiwgaHR0cHM6Ly9naXRodWIuY29tL2RpZWdvY3JcbiAgICogICAgICAgICAgICAgICAyMDE0IEphbWVzIFJvYmIsIGh0dHBzOi8vZ2l0aHViLmNvbS9qYW1lc2Jyb2JiXG4gICAqXG4gICAqIFxuICAgKi9cbmZ1bmN0aW9uKHgpe3ZhciBOPVwiYWRkSW1hZ2VfXCIsbD17UE5HOltbMTM3LDgwLDc4LDcxXV0sVElGRjpbWzc3LDc3LDAsNDJdLFs3Myw3Myw0MiwwXV0sSlBFRzpbWzI1NSwyMTYsMjU1LDIyNCx2b2lkIDAsdm9pZCAwLDc0LDcwLDczLDcwLDBdLFsyNTUsMjE2LDI1NSwyMjUsdm9pZCAwLHZvaWQgMCw2OSwxMjAsMTA1LDEwMiwwLDBdXSxKUEVHMjAwMDpbWzAsMCwwLDEyLDEwNiw4MCwzMiwzMl1dLEdJRjg3YTpbWzcxLDczLDcwLDU2LDU1LDk3XV0sR0lGODlhOltbNzEsNzMsNzAsNTYsNTcsOTddXSxCTVA6W1s2Niw3N10sWzY2LDY1XSxbNjcsNzNdLFs2Nyw4MF0sWzczLDY3XSxbODAsODRdXX0saD14LmdldEltYWdlRmlsZVR5cGVCeUltYWdlRGF0YT1mdW5jdGlvbih0LGUpe3ZhciBuLHI7ZT1lfHxcIlVOS05PV05cIjt2YXIgaSxvLGEscz1cIlVOS05PV05cIjtmb3IoYSBpbiB4LmlzQXJyYXlCdWZmZXJWaWV3KHQpJiYodD14LmFycmF5QnVmZmVyVG9CaW5hcnlTdHJpbmcodCkpLGwpZm9yKGk9bFthXSxuPTA7bjxpLmxlbmd0aDtuKz0xKXtmb3Iobz0hMCxyPTA7cjxpW25dLmxlbmd0aDtyKz0xKWlmKHZvaWQgMCE9PWlbbl1bcl0mJmlbbl1bcl0hPT10LmNoYXJDb2RlQXQocikpe289ITE7YnJlYWt9aWYoITA9PT1vKXtzPWE7YnJlYWt9fXJldHVyblwiVU5LTk9XTlwiPT09cyYmXCJVTktOT1dOXCIhPT1lJiYoY29uc29sZS53YXJuKCdGaWxlVHlwZSBvZiBJbWFnZSBub3QgcmVjb2duaXplZC4gUHJvY2Vzc2luZyBpbWFnZSBhcyBcIicrZSsnXCIuJykscz1lKSxzfSxuPWZ1bmN0aW9uIHQoZSl7Zm9yKHZhciBuPXRoaXMuaW50ZXJuYWwubmV3T2JqZWN0KCkscj10aGlzLmludGVybmFsLndyaXRlLGk9dGhpcy5pbnRlcm5hbC5wdXRTdHJlYW0sbz0oMCx0aGlzLmludGVybmFsLmdldEZpbHRlcnMpKCk7LTEhPT1vLmluZGV4T2YoXCJGbGF0ZUVuY29kZVwiKTspby5zcGxpY2Uoby5pbmRleE9mKFwiRmxhdGVFbmNvZGVcIiksMSk7ZS5uPW47dmFyIGE9W107aWYoYS5wdXNoKHtrZXk6XCJUeXBlXCIsdmFsdWU6XCIvWE9iamVjdFwifSksYS5wdXNoKHtrZXk6XCJTdWJ0eXBlXCIsdmFsdWU6XCIvSW1hZ2VcIn0pLGEucHVzaCh7a2V5OlwiV2lkdGhcIix2YWx1ZTplLnd9KSxhLnB1c2goe2tleTpcIkhlaWdodFwiLHZhbHVlOmUuaH0pLGUuY3M9PT10aGlzLmNvbG9yX3NwYWNlcy5JTkRFWEVEP2EucHVzaCh7a2V5OlwiQ29sb3JTcGFjZVwiLHZhbHVlOlwiWy9JbmRleGVkIC9EZXZpY2VSR0IgXCIrKGUucGFsLmxlbmd0aC8zLTEpK1wiIFwiKyhcInNtYXNrXCJpbiBlP24rMjpuKzEpK1wiIDAgUl1cIn0pOihhLnB1c2goe2tleTpcIkNvbG9yU3BhY2VcIix2YWx1ZTpcIi9cIitlLmNzfSksZS5jcz09PXRoaXMuY29sb3Jfc3BhY2VzLkRFVklDRV9DTVlLJiZhLnB1c2goe2tleTpcIkRlY29kZVwiLHZhbHVlOlwiWzEgMCAxIDAgMSAwIDEgMF1cIn0pKSxhLnB1c2goe2tleTpcIkJpdHNQZXJDb21wb25lbnRcIix2YWx1ZTplLmJwY30pLFwiZHBcImluIGUmJmEucHVzaCh7a2V5OlwiRGVjb2RlUGFybXNcIix2YWx1ZTpcIjw8XCIrZS5kcCtcIj4+XCJ9KSxcInRybnNcImluIGUmJmUudHJucy5jb25zdHJ1Y3Rvcj09QXJyYXkpe2Zvcih2YXIgcz1cIlwiLGw9MCxoPWUudHJucy5sZW5ndGg7bDxoO2wrKylzKz1lLnRybnNbbF0rXCIgXCIrZS50cm5zW2xdK1wiIFwiO2EucHVzaCh7a2V5OlwiTWFza1wiLHZhbHVlOlwiW1wiK3MrXCJdXCJ9KX1cInNtYXNrXCJpbiBlJiZhLnB1c2goe2tleTpcIlNNYXNrXCIsdmFsdWU6bisxK1wiIDAgUlwifSk7dmFyIHU9dm9pZCAwIT09ZS5mP1tcIi9cIitlLmZdOnZvaWQgMDtpZihpKHtkYXRhOmUuZGF0YSxhZGRpdGlvbmFsS2V5VmFsdWVzOmEsYWxyZWFkeUFwcGxpZWRGaWx0ZXJzOnV9KSxyKFwiZW5kb2JqXCIpLFwic21hc2tcImluIGUpe3ZhciBjPVwiL1ByZWRpY3RvciBcIitlLnArXCIgL0NvbG9ycyAxIC9CaXRzUGVyQ29tcG9uZW50IFwiK2UuYnBjK1wiIC9Db2x1bW5zIFwiK2UudyxmPXt3OmUudyxoOmUuaCxjczpcIkRldmljZUdyYXlcIixicGM6ZS5icGMsZHA6YyxkYXRhOmUuc21hc2t9O1wiZlwiaW4gZSYmKGYuZj1lLmYpLHQuY2FsbCh0aGlzLGYpfWUuY3M9PT10aGlzLmNvbG9yX3NwYWNlcy5JTkRFWEVEJiYodGhpcy5pbnRlcm5hbC5uZXdPYmplY3QoKSxpKHtkYXRhOnRoaXMuYXJyYXlCdWZmZXJUb0JpbmFyeVN0cmluZyhuZXcgVWludDhBcnJheShlLnBhbCkpfSkscihcImVuZG9ialwiKSl9LEw9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmludGVybmFsLmNvbGxlY3Rpb25zW04rXCJpbWFnZXNcIl07Zm9yKHZhciBlIGluIHQpbi5jYWxsKHRoaXMsdFtlXSl9LEE9ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMuaW50ZXJuYWwuY29sbGVjdGlvbnNbTitcImltYWdlc1wiXSxuPXRoaXMuaW50ZXJuYWwud3JpdGU7Zm9yKHZhciByIGluIGUpbihcIi9JXCIrKHQ9ZVtyXSkuaSx0Lm4sXCIwXCIsXCJSXCIpfSxTPWZ1bmN0aW9uKHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHhbXCJwcm9jZXNzXCIrdC50b1VwcGVyQ2FzZSgpXX0sXz1mdW5jdGlvbih0KXtyZXR1cm5cIm9iamVjdFwiPT09c2UodCkmJjE9PT10Lm5vZGVUeXBlfSxGPWZ1bmN0aW9uKHQsZSl7aWYoXCJJTUdcIj09PXQubm9kZU5hbWUmJnQuaGFzQXR0cmlidXRlKFwic3JjXCIpKXt2YXIgbj1cIlwiK3QuZ2V0QXR0cmlidXRlKFwic3JjXCIpO2lmKDA9PT1uLmluZGV4T2YoXCJkYXRhOmltYWdlL1wiKSlyZXR1cm4gdW5lc2NhcGUobik7dmFyIHI9eC5sb2FkRmlsZShuKTtpZih2b2lkIDAhPT1yKXJldHVybiBidG9hKHIpfWlmKFwiQ0FOVkFTXCI9PT10Lm5vZGVOYW1lKXt2YXIgaT10O3JldHVybiB0LnRvRGF0YVVSTChcImltYWdlL2pwZWdcIiwxKX0oaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpKS53aWR0aD10LmNsaWVudFdpZHRofHx0LndpZHRoLGkuaGVpZ2h0PXQuY2xpZW50SGVpZ2h0fHx0LmhlaWdodDt2YXIgbz1pLmdldENvbnRleHQoXCIyZFwiKTtpZighbyl0aHJvd1wiYWRkSW1hZ2UgcmVxdWlyZXMgY2FudmFzIHRvIGJlIHN1cHBvcnRlZCBieSBicm93c2VyLlwiO3JldHVybiBvLmRyYXdJbWFnZSh0LDAsMCxpLndpZHRoLGkuaGVpZ2h0KSxpLnRvRGF0YVVSTChcInBuZ1wiPT0oXCJcIitlKS50b0xvd2VyQ2FzZSgpP1wiaW1hZ2UvcG5nXCI6XCJpbWFnZS9qcGVnXCIpfSxQPWZ1bmN0aW9uKHQsZSl7dmFyIG47aWYoZSlmb3IodmFyIHIgaW4gZSlpZih0PT09ZVtyXS5hbGlhcyl7bj1lW3JdO2JyZWFrfXJldHVybiBufTt4LmNvbG9yX3NwYWNlcz17REVWSUNFX1JHQjpcIkRldmljZVJHQlwiLERFVklDRV9HUkFZOlwiRGV2aWNlR3JheVwiLERFVklDRV9DTVlLOlwiRGV2aWNlQ01ZS1wiLENBTF9HUkVZOlwiQ2FsR3JheVwiLENBTF9SR0I6XCJDYWxSR0JcIixMQUI6XCJMYWJcIixJQ0NfQkFTRUQ6XCJJQ0NCYXNlZFwiLElOREVYRUQ6XCJJbmRleGVkXCIsUEFUVEVSTjpcIlBhdHRlcm5cIixTRVBBUkFUSU9OOlwiU2VwYXJhdGlvblwiLERFVklDRV9OOlwiRGV2aWNlTlwifSx4LmRlY29kZT17RENUX0RFQ09ERTpcIkRDVERlY29kZVwiLEZMQVRFX0RFQ09ERTpcIkZsYXRlRGVjb2RlXCIsTFpXX0RFQ09ERTpcIkxaV0RlY29kZVwiLEpQWF9ERUNPREU6XCJKUFhEZWNvZGVcIixKQklHMl9ERUNPREU6XCJKQklHMkRlY29kZVwiLEFTQ0lJODVfREVDT0RFOlwiQVNDSUk4NURlY29kZVwiLEFTQ0lJX0hFWF9ERUNPREU6XCJBU0NJSUhleERlY29kZVwiLFJVTl9MRU5HVEhfREVDT0RFOlwiUnVuTGVuZ3RoRGVjb2RlXCIsQ0NJVFRfRkFYX0RFQ09ERTpcIkNDSVRURmF4RGVjb2RlXCJ9LHguaW1hZ2VfY29tcHJlc3Npb249e05PTkU6XCJOT05FXCIsRkFTVDpcIkZBU1RcIixNRURJVU06XCJNRURJVU1cIixTTE9XOlwiU0xPV1wifSx4LnNIYXNoQ29kZT1mdW5jdGlvbih0KXt2YXIgZSxuPTA7aWYoMD09PSh0PXR8fFwiXCIpLmxlbmd0aClyZXR1cm4gbjtmb3IoZT0wO2U8dC5sZW5ndGg7ZSsrKW49KG48PDUpLW4rdC5jaGFyQ29kZUF0KGUpLG58PTA7cmV0dXJuIG59LHguaXNTdHJpbmc9ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHR9LHgudmFsaWRhdGVTdHJpbmdBc0Jhc2U2ND1mdW5jdGlvbih0KXsodD10fHxcIlwiKS50b1N0cmluZygpLnRyaW0oKTt2YXIgZT0hMDtyZXR1cm4gMD09PXQubGVuZ3RoJiYoZT0hMSksdC5sZW5ndGglNCE9MCYmKGU9ITEpLCExPT09L15bQS1aYS16MC05K1xcL10rJC8udGVzdCh0LnN1YnN0cigwLHQubGVuZ3RoLTIpKSYmKGU9ITEpLCExPT09L15bQS1aYS16MC05XFwvXVtBLVphLXowLTkrXFwvXXxbQS1aYS16MC05K1xcL109fD09JC8udGVzdCh0LnN1YnN0cigtMikpJiYoZT0hMSksZX0seC5leHRyYWN0SW5mb0Zyb21CYXNlNjREYXRhVVJJPWZ1bmN0aW9uKHQpe3JldHVybi9eZGF0YTooW1xcd10rP1xcLyhbXFx3XSs/KSk7XFxTKjsqYmFzZTY0LCguKykkL2cuZXhlYyh0KX0seC5leHRyYWN0SW1hZ2VGcm9tRGF0YVVybD1mdW5jdGlvbih0KXt2YXIgZT0odD10fHxcIlwiKS5zcGxpdChcImJhc2U2NCxcIiksbj1udWxsO2lmKDI9PT1lLmxlbmd0aCl7dmFyIHI9L15kYXRhOihcXHcqXFwvXFx3Kik7KihjaGFyc2V0PVtcXHc9LV0qKSo7KiQvLmV4ZWMoZVswXSk7QXJyYXkuaXNBcnJheShyKSYmKG49e21pbWVUeXBlOnJbMV0sY2hhcnNldDpyWzJdLGRhdGE6ZVsxXX0pfXJldHVybiBufSx4LnN1cHBvcnRzQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgQXJyYXlCdWZmZXImJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBVaW50OEFycmF5fSx4LmlzQXJyYXlCdWZmZXI9ZnVuY3Rpb24odCl7cmV0dXJuISF0aGlzLnN1cHBvcnRzQXJyYXlCdWZmZXIoKSYmdCBpbnN0YW5jZW9mIEFycmF5QnVmZmVyfSx4LmlzQXJyYXlCdWZmZXJWaWV3PWZ1bmN0aW9uKHQpe3JldHVybiEhdGhpcy5zdXBwb3J0c0FycmF5QnVmZmVyKCkmJihcInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDMyQXJyYXkmJih0IGluc3RhbmNlb2YgSW50OEFycmF5fHx0IGluc3RhbmNlb2YgVWludDhBcnJheXx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFVpbnQ4Q2xhbXBlZEFycmF5JiZ0IGluc3RhbmNlb2YgVWludDhDbGFtcGVkQXJyYXl8fHQgaW5zdGFuY2VvZiBJbnQxNkFycmF5fHx0IGluc3RhbmNlb2YgVWludDE2QXJyYXl8fHQgaW5zdGFuY2VvZiBJbnQzMkFycmF5fHx0IGluc3RhbmNlb2YgVWludDMyQXJyYXl8fHQgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXl8fHQgaW5zdGFuY2VvZiBGbG9hdDY0QXJyYXkpKX0seC5iaW5hcnlTdHJpbmdUb1VpbnQ4QXJyYXk9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQubGVuZ3RoLG49bmV3IFVpbnQ4QXJyYXkoZSkscj0wO3I8ZTtyKyspbltyXT10LmNoYXJDb2RlQXQocik7cmV0dXJuIG59LHguYXJyYXlCdWZmZXJUb0JpbmFyeVN0cmluZz1mdW5jdGlvbih0KXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBhdG9iKXJldHVybiBhdG9iKHRoaXMuYXJyYXlCdWZmZXJUb0Jhc2U2NCh0KSl9LHguYXJyYXlCdWZmZXJUb0Jhc2U2ND1mdW5jdGlvbih0KXtmb3IodmFyIGUsbj1cIlwiLHI9XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCIsaT1uZXcgVWludDhBcnJheSh0KSxvPWkuYnl0ZUxlbmd0aCxhPW8lMyxzPW8tYSxsPTA7bDxzO2wrPTMpbis9clsoMTY1MTUwNzImKGU9aVtsXTw8MTZ8aVtsKzFdPDw4fGlbbCsyXSkpPj4xOF0rclsoMjU4MDQ4JmUpPj4xMl0rclsoNDAzMiZlKT4+Nl0rcls2MyZlXTtyZXR1cm4gMT09YT9uKz1yWygyNTImKGU9aVtzXSkpPj4yXStyWygzJmUpPDw0XStcIj09XCI6Mj09YSYmKG4rPXJbKDY0NTEyJihlPWlbc108PDh8aVtzKzFdKSk+PjEwXStyWygxMDA4JmUpPj40XStyWygxNSZlKTw8Ml0rXCI9XCIpLG59LHguY3JlYXRlSW1hZ2VJbmZvPWZ1bmN0aW9uKHQsZSxuLHIsaSxvLGEscyxsLGgsdSxjLGYpe3ZhciBwPXthbGlhczpzLHc6ZSxoOm4sY3M6cixicGM6aSxpOmEsZGF0YTp0fTtyZXR1cm4gbyYmKHAuZj1vKSxsJiYocC5kcD1sKSxoJiYocC50cm5zPWgpLHUmJihwLnBhbD11KSxjJiYocC5zbWFzaz1jKSxmJiYocC5wPWYpLHB9LHguYWRkSW1hZ2U9ZnVuY3Rpb24odCxlLG4scixpLG8sYSxzLGwpe3ZhciBoPVwiXCI7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUpe3ZhciB1PW87bz1pLGk9cixyPW4sbj1lLGU9dX1pZihcIm9iamVjdFwiPT09c2UodCkmJiFfKHQpJiZcImltYWdlRGF0YVwiaW4gdCl7dmFyIGM9dDt0PWMuaW1hZ2VEYXRhLGU9Yy5mb3JtYXR8fGV8fFwiVU5LTk9XTlwiLG49Yy54fHxufHwwLHI9Yy55fHxyfHwwLGk9Yy53fHxpLG89Yy5ofHxvLGE9Yy5hbGlhc3x8YSxzPWMuY29tcHJlc3Npb258fHMsbD1jLnJvdGF0aW9ufHxjLmFuZ2xlfHxsfXZhciBmPXRoaXMuaW50ZXJuYWwuZ2V0RmlsdGVycygpO2lmKHZvaWQgMD09PXMmJi0xIT09Zi5pbmRleE9mKFwiRmxhdGVFbmNvZGVcIikmJihzPVwiU0xPV1wiKSxcInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9dW5lc2NhcGUodCkpLGlzTmFOKG4pfHxpc05hTihyKSl0aHJvdyBjb25zb2xlLmVycm9yKFwianNQREYuYWRkSW1hZ2U6IEludmFsaWQgY29vcmRpbmF0ZXNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgY29vcmRpbmF0ZXMgcGFzc2VkIHRvIGpzUERGLmFkZEltYWdlXCIpO3ZhciBwLGQsZyxtLHksdix3LGI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmludGVybmFsLmNvbGxlY3Rpb25zW04rXCJpbWFnZXNcIl07cmV0dXJuIHR8fCh0aGlzLmludGVybmFsLmNvbGxlY3Rpb25zW04rXCJpbWFnZXNcIl09dD17fSx0aGlzLmludGVybmFsLmV2ZW50cy5zdWJzY3JpYmUoXCJwdXRSZXNvdXJjZXNcIixMKSx0aGlzLmludGVybmFsLmV2ZW50cy5zdWJzY3JpYmUoXCJwdXRYb2JqZWN0RGljdFwiLEEpKSx0fS5jYWxsKHRoaXMpO2lmKCEoKHA9UCh0LGIpKXx8KF8odCkmJih0PUYodCxlKSksKG51bGw9PSh3PWEpfHwwPT09dy5sZW5ndGgpJiYoYT1cInN0cmluZ1wiPT10eXBlb2Yodj10KT94LnNIYXNoQ29kZSh2KTp4LmlzQXJyYXlCdWZmZXJWaWV3KHYpP3guc0hhc2hDb2RlKHguYXJyYXlCdWZmZXJUb0JpbmFyeVN0cmluZyh2KSk6bnVsbCkscD1QKGEsYikpKSl7aWYodGhpcy5pc1N0cmluZyh0KSYmKFwiXCIhPT0oaD10aGlzLmNvbnZlcnRTdHJpbmdUb0ltYWdlRGF0YSh0KSk/dD1oOnZvaWQgMCE9PShoPXgubG9hZEZpbGUodCkpJiYodD1oKSksZT10aGlzLmdldEltYWdlRmlsZVR5cGVCeUltYWdlRGF0YSh0LGUpLCFTKGUpKXRocm93IG5ldyBFcnJvcihcImFkZEltYWdlIGRvZXMgbm90IHN1cHBvcnQgZmlsZXMgb2YgdHlwZSAnXCIrZStcIicsIHBsZWFzZSBlbnN1cmUgdGhhdCBhIHBsdWdpbiBmb3IgJ1wiK2UrXCInIHN1cHBvcnQgaXMgYWRkZWQuXCIpO2lmKHRoaXMuc3VwcG9ydHNBcnJheUJ1ZmZlcigpJiYodCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXl8fChkPXQsdD10aGlzLmJpbmFyeVN0cmluZ1RvVWludDhBcnJheSh0KSkpLCEocD10aGlzW1wicHJvY2Vzc1wiK2UudG9VcHBlckNhc2UoKV0odCwoeT0wLChtPWIpJiYoeT1PYmplY3Qua2V5cz9PYmplY3Qua2V5cyhtKS5sZW5ndGg6ZnVuY3Rpb24odCl7dmFyIGU9MDtmb3IodmFyIG4gaW4gdCl0Lmhhc093blByb3BlcnR5KG4pJiZlKys7cmV0dXJuIGV9KG0pKSx5KSxhLCgoZz1zKSYmXCJzdHJpbmdcIj09dHlwZW9mIGcmJihnPWcudG9VcHBlckNhc2UoKSksZyBpbiB4LmltYWdlX2NvbXByZXNzaW9uP2c6eC5pbWFnZV9jb21wcmVzc2lvbi5OT05FKSxkKSkpdGhyb3cgbmV3IEVycm9yKFwiQW4gdW5rbm93biBlcnJvciBvY2N1cnJlZCB3aGlsc3QgcHJvY2Vzc2luZyB0aGUgaW1hZ2VcIil9cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLHIsaSxvLGEscyl7dmFyIGw9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0fHxlfHwoZT10PS05NiksdDwwJiYodD0tMSpuLncqNzIvdC90aGlzLmludGVybmFsLnNjYWxlRmFjdG9yKSxlPDAmJihlPS0xKm4uaCo3Mi9lL3RoaXMuaW50ZXJuYWwuc2NhbGVGYWN0b3IpLDA9PT10JiYodD1lKm4udy9uLmgpLDA9PT1lJiYoZT10Km4uaC9uLncpLFt0LGVdfS5jYWxsKHRoaXMsbixyLGkpLGg9dGhpcy5pbnRlcm5hbC5nZXRDb29yZGluYXRlU3RyaW5nLHU9dGhpcy5pbnRlcm5hbC5nZXRWZXJ0aWNhbENvb3JkaW5hdGVTdHJpbmc7aWYobj1sWzBdLHI9bFsxXSxhW29dPWkscyl7cyo9TWF0aC5QSS8xODA7dmFyIGM9TWF0aC5jb3MocyksZj1NYXRoLnNpbihzKSxwPWZ1bmN0aW9uKHQpe3JldHVybiB0LnRvRml4ZWQoNCl9LGQ9W3AoYykscChmKSxwKC0xKmYpLHAoYyksMCwwLFwiY21cIl19dGhpcy5pbnRlcm5hbC53cml0ZShcInFcIikscz8odGhpcy5pbnRlcm5hbC53cml0ZShbMSxcIjBcIixcIjBcIiwxLGgodCksdShlK3IpLFwiY21cIl0uam9pbihcIiBcIikpLHRoaXMuaW50ZXJuYWwud3JpdGUoZC5qb2luKFwiIFwiKSksdGhpcy5pbnRlcm5hbC53cml0ZShbaChuKSxcIjBcIixcIjBcIixoKHIpLFwiMFwiLFwiMFwiLFwiY21cIl0uam9pbihcIiBcIikpKTp0aGlzLmludGVybmFsLndyaXRlKFtoKG4pLFwiMFwiLFwiMFwiLGgociksaCh0KSx1KGUrciksXCJjbVwiXS5qb2luKFwiIFwiKSksdGhpcy5pbnRlcm5hbC53cml0ZShcIi9JXCIraS5pK1wiIERvXCIpLHRoaXMuaW50ZXJuYWwud3JpdGUoXCJRXCIpfS5jYWxsKHRoaXMsbixyLGksbyxwLHAuaSxiLGwpLHRoaXN9LHguY29udmVydFN0cmluZ1RvSW1hZ2VEYXRhPWZ1bmN0aW9uKHQpe3ZhciBlLG49XCJcIjtpZih0aGlzLmlzU3RyaW5nKHQpKXt2YXIgcjtlPW51bGwhPT0ocj10aGlzLmV4dHJhY3RJbWFnZUZyb21EYXRhVXJsKHQpKT9yLmRhdGE6dDt0cnl7bj1hdG9iKGUpfWNhdGNoKHQpe3Rocm93IHgudmFsaWRhdGVTdHJpbmdBc0Jhc2U2NChlKT9uZXcgRXJyb3IoXCJhdG9iLUVycm9yIGluIGpzUERGLmNvbnZlcnRTdHJpbmdUb0ltYWdlRGF0YSBcIit0Lm1lc3NhZ2UpOm5ldyBFcnJvcihcIlN1cHBsaWVkIERhdGEgaXMgbm90IGEgdmFsaWQgYmFzZTY0LVN0cmluZyBqc1BERi5jb252ZXJ0U3RyaW5nVG9JbWFnZURhdGEgXCIpfX1yZXR1cm4gbn07dmFyIHU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5zdWJhcnJheShlLGUrNSl9O3gucHJvY2Vzc0pQRUc9ZnVuY3Rpb24odCxlLG4scixpLG8pe3ZhciBhLHM9dGhpcy5kZWNvZGUuRENUX0RFQ09ERTtpZighdGhpcy5pc1N0cmluZyh0KSYmIXRoaXMuaXNBcnJheUJ1ZmZlcih0KSYmIXRoaXMuaXNBcnJheUJ1ZmZlclZpZXcodCkpcmV0dXJuIG51bGw7aWYodGhpcy5pc1N0cmluZyh0KSYmKGE9ZnVuY3Rpb24odCl7dmFyIGU7aWYoXCJKUEVHXCIhPT1oKHQpKXRocm93IG5ldyBFcnJvcihcImdldEpwZWdTaXplIHJlcXVpcmVzIGEgYmluYXJ5IHN0cmluZyBqcGVnIGZpbGVcIik7Zm9yKHZhciBuPTI1Nip0LmNoYXJDb2RlQXQoNCkrdC5jaGFyQ29kZUF0KDUpLHI9NCxpPXQubGVuZ3RoO3I8aTspe2lmKHIrPW4sMjU1IT09dC5jaGFyQ29kZUF0KHIpKXRocm93IG5ldyBFcnJvcihcImdldEpwZWdTaXplIGNvdWxkIG5vdCBmaW5kIHRoZSBzaXplIG9mIHRoZSBpbWFnZVwiKTtpZigxOTI9PT10LmNoYXJDb2RlQXQocisxKXx8MTkzPT09dC5jaGFyQ29kZUF0KHIrMSl8fDE5ND09PXQuY2hhckNvZGVBdChyKzEpfHwxOTU9PT10LmNoYXJDb2RlQXQocisxKXx8MTk2PT09dC5jaGFyQ29kZUF0KHIrMSl8fDE5Nz09PXQuY2hhckNvZGVBdChyKzEpfHwxOTg9PT10LmNoYXJDb2RlQXQocisxKXx8MTk5PT09dC5jaGFyQ29kZUF0KHIrMSkpcmV0dXJuIGU9MjU2KnQuY2hhckNvZGVBdChyKzUpK3QuY2hhckNvZGVBdChyKzYpLFsyNTYqdC5jaGFyQ29kZUF0KHIrNykrdC5jaGFyQ29kZUF0KHIrOCksZSx0LmNoYXJDb2RlQXQocis5KV07cis9MixuPTI1Nip0LmNoYXJDb2RlQXQocikrdC5jaGFyQ29kZUF0KHIrMSl9fSh0KSksdGhpcy5pc0FycmF5QnVmZmVyKHQpJiYodD1uZXcgVWludDhBcnJheSh0KSksdGhpcy5pc0FycmF5QnVmZmVyVmlldyh0KSYmKGE9ZnVuY3Rpb24odCl7aWYoNjU0OTYhPSh0WzBdPDw4fHRbMV0pKXRocm93IG5ldyBFcnJvcihcIlN1cHBsaWVkIGRhdGEgaXMgbm90IGEgSlBFR1wiKTtmb3IodmFyIGUsbj10Lmxlbmd0aCxyPSh0WzRdPDw4KSt0WzVdLGk9NDtpPG47KXtpZihyPSgoZT11KHQsaSs9cikpWzJdPDw4KStlWzNdLCgxOTI9PT1lWzFdfHwxOTQ9PT1lWzFdKSYmMjU1PT09ZVswXSYmNzxyKXJldHVybnt3aWR0aDooKGU9dSh0LGkrNSkpWzJdPDw4KStlWzNdLGhlaWdodDooZVswXTw8OCkrZVsxXSxudW1jb21wb25lbnRzOmVbNF19O2krPTJ9dGhyb3cgbmV3IEVycm9yKFwiZ2V0SnBlZ1NpemVGcm9tQnl0ZXMgY291bGQgbm90IGZpbmQgdGhlIHNpemUgb2YgdGhlIGltYWdlXCIpfSh0KSx0PWl8fHRoaXMuYXJyYXlCdWZmZXJUb0JpbmFyeVN0cmluZyh0KSksdm9pZCAwPT09bylzd2l0Y2goYS5udW1jb21wb25lbnRzKXtjYXNlIDE6bz10aGlzLmNvbG9yX3NwYWNlcy5ERVZJQ0VfR1JBWTticmVhaztjYXNlIDQ6bz10aGlzLmNvbG9yX3NwYWNlcy5ERVZJQ0VfQ01ZSzticmVhaztkZWZhdWx0OmNhc2UgMzpvPXRoaXMuY29sb3Jfc3BhY2VzLkRFVklDRV9SR0J9cmV0dXJuIHRoaXMuY3JlYXRlSW1hZ2VJbmZvKHQsYS53aWR0aCxhLmhlaWdodCxvLDgscyxlLG4pfSx4LnByb2Nlc3NKUEc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcm9jZXNzSlBFRy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHguZ2V0SW1hZ2VQcm9wZXJ0aWVzPWZ1bmN0aW9uKHQpe3ZhciBlLG4scj1cIlwiO2lmKF8odCkmJih0PUYodCkpLHRoaXMuaXNTdHJpbmcodCkmJihcIlwiIT09KHI9dGhpcy5jb252ZXJ0U3RyaW5nVG9JbWFnZURhdGEodCkpP3Q9cjp2b2lkIDAhPT0ocj14LmxvYWRGaWxlKHQpKSYmKHQ9cikpLG49dGhpcy5nZXRJbWFnZUZpbGVUeXBlQnlJbWFnZURhdGEodCksIVMobikpdGhyb3cgbmV3IEVycm9yKFwiYWRkSW1hZ2UgZG9lcyBub3Qgc3VwcG9ydCBmaWxlcyBvZiB0eXBlICdcIituK1wiJywgcGxlYXNlIGVuc3VyZSB0aGF0IGEgcGx1Z2luIGZvciAnXCIrbitcIicgc3VwcG9ydCBpcyBhZGRlZC5cIik7aWYodGhpcy5zdXBwb3J0c0FycmF5QnVmZmVyKCkmJih0IGluc3RhbmNlb2YgVWludDhBcnJheXx8KHQ9dGhpcy5iaW5hcnlTdHJpbmdUb1VpbnQ4QXJyYXkodCkpKSwhKGU9dGhpc1tcInByb2Nlc3NcIituLnRvVXBwZXJDYXNlKCldKHQpKSl0aHJvdyBuZXcgRXJyb3IoXCJBbiB1bmtub3duIGVycm9yIG9jY3VycmVkIHdoaWxzdCBwcm9jZXNzaW5nIHRoZSBpbWFnZVwiKTtyZXR1cm57ZmlsZVR5cGU6bix3aWR0aDplLncsaGVpZ2h0OmUuaCxjb2xvclNwYWNlOmUuY3MsY29tcHJlc3Npb25Nb2RlOmUuZixiaXRzUGVyQ29tcG9uZW50OmUuYnBjfX19KGx0LkFQSSksXG4vKipcbiAgICogQGxpY2Vuc2VcbiAgICogQ29weXJpZ2h0IChjKSAyMDE0IFN0ZXZlbiBTcHVuZ2luIChUd2VsdmVUb25lIExMQykgIHN0ZXZlbkB0d2VsdmV0b25lLnR2XG4gICAqXG4gICAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAgICogaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlXG4gICAqL1xudD1sdC5BUEksbHQuQVBJLmV2ZW50cy5wdXNoKFtcImFkZFBhZ2VcIixmdW5jdGlvbih0KXt0aGlzLmludGVybmFsLmdldFBhZ2VJbmZvKHQucGFnZU51bWJlcikucGFnZUNvbnRleHQuYW5ub3RhdGlvbnM9W119XSksdC5ldmVudHMucHVzaChbXCJwdXRQYWdlXCIsZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuaW50ZXJuYWwuZ2V0UGFnZUluZm9CeU9iaklkKHQub2JqSWQpLG49dC5wYWdlQ29udGV4dC5hbm5vdGF0aW9ucyxyPWZ1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PXQmJlwiXCIhPXQpcmV0dXJuITB9LGk9ITEsbz0wO288bi5sZW5ndGgmJiFpO28rKylzd2l0Y2goKGw9bltvXSkudHlwZSl7Y2FzZVwibGlua1wiOmlmKHIobC5vcHRpb25zLnVybCl8fHIobC5vcHRpb25zLnBhZ2VOdW1iZXIpKXtpPSEwO2JyZWFrfWNhc2VcInJlZmVyZW5jZVwiOmNhc2VcInRleHRcIjpjYXNlXCJmcmVldGV4dFwiOmk9ITB9aWYoMCE9aSl7dGhpcy5pbnRlcm5hbC53cml0ZShcIi9Bbm5vdHMgW1wiKSx0aGlzLmludGVybmFsLnBhZ2VTaXplLmhlaWdodDt2YXIgYT10aGlzLmludGVybmFsLmdldENvb3JkaW5hdGVTdHJpbmcscz10aGlzLmludGVybmFsLmdldFZlcnRpY2FsQ29vcmRpbmF0ZVN0cmluZztmb3Iobz0wO288bi5sZW5ndGg7bysrKXt2YXIgbDtzd2l0Y2goKGw9bltvXSkudHlwZSl7Y2FzZVwicmVmZXJlbmNlXCI6dGhpcy5pbnRlcm5hbC53cml0ZShcIiBcIitsLm9iamVjdC5vYmpJZCtcIiAwIFIgXCIpO2JyZWFrO2Nhc2VcInRleHRcIjp2YXIgaD10aGlzLmludGVybmFsLm5ld0FkZGl0aW9uYWxPYmplY3QoKSx1PXRoaXMuaW50ZXJuYWwubmV3QWRkaXRpb25hbE9iamVjdCgpLGM9bC50aXRsZXx8XCJOb3RlXCI7bT1cIjw8L1R5cGUgL0Fubm90IC9TdWJ0eXBlIC9UZXh0IFwiKyhwPVwiL1JlY3QgW1wiK2EobC5ib3VuZHMueCkrXCIgXCIrcyhsLmJvdW5kcy55K2wuYm91bmRzLmgpK1wiIFwiK2EobC5ib3VuZHMueCtsLmJvdW5kcy53KStcIiBcIitzKGwuYm91bmRzLnkpK1wiXSBcIikrXCIvQ29udGVudHMgKFwiK2wuY29udGVudHMrXCIpXCIsbSs9XCIgL1BvcHVwIFwiK3Uub2JqSWQrXCIgMCBSXCIsbSs9XCIgL1AgXCIrZS5vYmpJZCtcIiAwIFJcIixtKz1cIiAvVCAoXCIrYytcIikgPj5cIixoLmNvbnRlbnQ9bTt2YXIgZj1oLm9iaklkK1wiIDAgUlwiO209XCI8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvUG9wdXAgXCIrKHA9XCIvUmVjdCBbXCIrYShsLmJvdW5kcy54KzMwKStcIiBcIitzKGwuYm91bmRzLnkrbC5ib3VuZHMuaCkrXCIgXCIrYShsLmJvdW5kcy54K2wuYm91bmRzLncrMzApK1wiIFwiK3MobC5ib3VuZHMueSkrXCJdIFwiKStcIiAvUGFyZW50IFwiK2YsbC5vcGVuJiYobSs9XCIgL09wZW4gdHJ1ZVwiKSxtKz1cIiA+PlwiLHUuY29udGVudD1tLHRoaXMuaW50ZXJuYWwud3JpdGUoaC5vYmpJZCxcIjAgUlwiLHUub2JqSWQsXCIwIFJcIik7YnJlYWs7Y2FzZVwiZnJlZXRleHRcIjp2YXIgcD1cIi9SZWN0IFtcIithKGwuYm91bmRzLngpK1wiIFwiK3MobC5ib3VuZHMueSkrXCIgXCIrYShsLmJvdW5kcy54K2wuYm91bmRzLncpK1wiIFwiK3MobC5ib3VuZHMueStsLmJvdW5kcy5oKStcIl0gXCIsZD1sLmNvbG9yfHxcIiMwMDAwMDBcIjttPVwiPDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0ZyZWVUZXh0IFwiK3ArXCIvQ29udGVudHMgKFwiK2wuY29udGVudHMrXCIpXCIsbSs9XCIgL0RTKGZvbnQ6IEhlbHZldGljYSxzYW5zLXNlcmlmIDEyLjBwdDsgdGV4dC1hbGlnbjpsZWZ0OyBjb2xvcjojXCIrZCtcIilcIixtKz1cIiAvQm9yZGVyIFswIDAgMF1cIixtKz1cIiA+PlwiLHRoaXMuaW50ZXJuYWwud3JpdGUobSk7YnJlYWs7Y2FzZVwibGlua1wiOmlmKGwub3B0aW9ucy5uYW1lKXt2YXIgZz10aGlzLmFubm90YXRpb25zLl9uYW1lTWFwW2wub3B0aW9ucy5uYW1lXTtsLm9wdGlvbnMucGFnZU51bWJlcj1nLnBhZ2UsbC5vcHRpb25zLnRvcD1nLnl9ZWxzZSBsLm9wdGlvbnMudG9wfHwobC5vcHRpb25zLnRvcD0wKTtwPVwiL1JlY3QgW1wiK2EobC54KStcIiBcIitzKGwueSkrXCIgXCIrYShsLngrbC53KStcIiBcIitzKGwueStsLmgpK1wiXSBcIjt2YXIgbT1cIlwiO2lmKGwub3B0aW9ucy51cmwpbT1cIjw8L1R5cGUgL0Fubm90IC9TdWJ0eXBlIC9MaW5rIFwiK3ArXCIvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKFwiK2wub3B0aW9ucy51cmwrXCIpID4+XCI7ZWxzZSBpZihsLm9wdGlvbnMucGFnZU51bWJlcilzd2l0Y2gobT1cIjw8L1R5cGUgL0Fubm90IC9TdWJ0eXBlIC9MaW5rIFwiK3ArXCIvQm9yZGVyIFswIDAgMF0gL0Rlc3QgW1wiK3RoaXMuaW50ZXJuYWwuZ2V0UGFnZUluZm8obC5vcHRpb25zLnBhZ2VOdW1iZXIpLm9iaklkK1wiIDAgUlwiLGwub3B0aW9ucy5tYWdGYWN0b3I9bC5vcHRpb25zLm1hZ0ZhY3Rvcnx8XCJYWVpcIixsLm9wdGlvbnMubWFnRmFjdG9yKXtjYXNlXCJGaXRcIjptKz1cIiAvRml0XVwiO2JyZWFrO2Nhc2VcIkZpdEhcIjptKz1cIiAvRml0SCBcIitsLm9wdGlvbnMudG9wK1wiXVwiO2JyZWFrO2Nhc2VcIkZpdFZcIjpsLm9wdGlvbnMubGVmdD1sLm9wdGlvbnMubGVmdHx8MCxtKz1cIiAvRml0ViBcIitsLm9wdGlvbnMubGVmdCtcIl1cIjticmVhaztjYXNlXCJYWVpcIjpkZWZhdWx0OnZhciB5PXMobC5vcHRpb25zLnRvcCk7bC5vcHRpb25zLmxlZnQ9bC5vcHRpb25zLmxlZnR8fDAsdm9pZCAwPT09bC5vcHRpb25zLnpvb20mJihsLm9wdGlvbnMuem9vbT0wKSxtKz1cIiAvWFlaIFwiK2wub3B0aW9ucy5sZWZ0K1wiIFwiK3krXCIgXCIrbC5vcHRpb25zLnpvb20rXCJdXCJ9XCJcIiE9bSYmKG0rPVwiID4+XCIsdGhpcy5pbnRlcm5hbC53cml0ZShtKSl9fXRoaXMuaW50ZXJuYWwud3JpdGUoXCJdXCIpfX1dKSx0LmNyZWF0ZUFubm90YXRpb249ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5pbnRlcm5hbC5nZXRDdXJyZW50UGFnZUluZm8oKTtzd2l0Y2godC50eXBlKXtjYXNlXCJsaW5rXCI6dGhpcy5saW5rKHQuYm91bmRzLngsdC5ib3VuZHMueSx0LmJvdW5kcy53LHQuYm91bmRzLmgsdCk7YnJlYWs7Y2FzZVwidGV4dFwiOmNhc2VcImZyZWV0ZXh0XCI6ZS5wYWdlQ29udGV4dC5hbm5vdGF0aW9ucy5wdXNoKHQpfX0sdC5saW5rPWZ1bmN0aW9uKHQsZSxuLHIsaSl7dGhpcy5pbnRlcm5hbC5nZXRDdXJyZW50UGFnZUluZm8oKS5wYWdlQ29udGV4dC5hbm5vdGF0aW9ucy5wdXNoKHt4OnQseTplLHc6bixoOnIsb3B0aW9uczppLHR5cGU6XCJsaW5rXCJ9KX0sdC50ZXh0V2l0aExpbms9ZnVuY3Rpb24odCxlLG4scil7dmFyIGk9dGhpcy5nZXRUZXh0V2lkdGgodCksbz10aGlzLmludGVybmFsLmdldExpbmVIZWlnaHQoKS90aGlzLmludGVybmFsLnNjYWxlRmFjdG9yO3JldHVybiB0aGlzLnRleHQodCxlLG4pLG4rPS4yKm8sdGhpcy5saW5rKGUsbi1vLGksbyxyKSxpfSx0LmdldFRleHRXaWR0aD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmludGVybmFsLmdldEZvbnRTaXplKCk7cmV0dXJuIHRoaXMuZ2V0U3RyaW5nVW5pdFdpZHRoKHQpKmUvdGhpcy5pbnRlcm5hbC5zY2FsZUZhY3Rvcn0sXG4vKipcbiAgICogQGxpY2Vuc2VcbiAgICogQ29weXJpZ2h0IChjKSAyMDE3IEFyYXMgQWJiYXNpIFxuICAgKlxuICAgKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gICAqIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZVxuICAgKi9cbmZ1bmN0aW9uKHQpe3ZhciBoPXsxNTY5Ols2NTE1Ml0sMTU3MDpbNjUxNTMsNjUxNTRdLDE1NzE6WzY1MTU1LDY1MTU2XSwxNTcyOls2NTE1Nyw2NTE1OF0sMTU3MzpbNjUxNTksNjUxNjBdLDE1NzQ6WzY1MTYxLDY1MTYyLDY1MTYzLDY1MTY0XSwxNTc1Ols2NTE2NSw2NTE2Nl0sMTU3NjpbNjUxNjcsNjUxNjgsNjUxNjksNjUxNzBdLDE1Nzc6WzY1MTcxLDY1MTcyXSwxNTc4Ols2NTE3Myw2NTE3NCw2NTE3NSw2NTE3Nl0sMTU3OTpbNjUxNzcsNjUxNzgsNjUxNzksNjUxODBdLDE1ODA6WzY1MTgxLDY1MTgyLDY1MTgzLDY1MTg0XSwxNTgxOls2NTE4NSw2NTE4Niw2NTE4Nyw2NTE4OF0sMTU4MjpbNjUxODksNjUxOTAsNjUxOTEsNjUxOTJdLDE1ODM6WzY1MTkzLDY1MTk0XSwxNTg0Ols2NTE5NSw2NTE5Nl0sMTU4NTpbNjUxOTcsNjUxOThdLDE1ODY6WzY1MTk5LDY1MjAwXSwxNTg3Ols2NTIwMSw2NTIwMiw2NTIwMyw2NTIwNF0sMTU4ODpbNjUyMDUsNjUyMDYsNjUyMDcsNjUyMDhdLDE1ODk6WzY1MjA5LDY1MjEwLDY1MjExLDY1MjEyXSwxNTkwOls2NTIxMyw2NTIxNCw2NTIxNSw2NTIxNl0sMTU5MTpbNjUyMTcsNjUyMTgsNjUyMTksNjUyMjBdLDE1OTI6WzY1MjIxLDY1MjIyLDY1MjIzLDY1MjI0XSwxNTkzOls2NTIyNSw2NTIyNiw2NTIyNyw2NTIyOF0sMTU5NDpbNjUyMjksNjUyMzAsNjUyMzEsNjUyMzJdLDE2MDE6WzY1MjMzLDY1MjM0LDY1MjM1LDY1MjM2XSwxNjAyOls2NTIzNyw2NTIzOCw2NTIzOSw2NTI0MF0sMTYwMzpbNjUyNDEsNjUyNDIsNjUyNDMsNjUyNDRdLDE2MDQ6WzY1MjQ1LDY1MjQ2LDY1MjQ3LDY1MjQ4XSwxNjA1Ols2NTI0OSw2NTI1MCw2NTI1MSw2NTI1Ml0sMTYwNjpbNjUyNTMsNjUyNTQsNjUyNTUsNjUyNTZdLDE2MDc6WzY1MjU3LDY1MjU4LDY1MjU5LDY1MjYwXSwxNjA4Ols2NTI2MSw2NTI2Ml0sMTYwOTpbNjUyNjMsNjUyNjQsNjQ0ODgsNjQ0ODldLDE2MTA6WzY1MjY1LDY1MjY2LDY1MjY3LDY1MjY4XSwxNjQ5Ols2NDMzNiw2NDMzN10sMTY1NTpbNjQ0NzddLDE2NTc6WzY0MzU4LDY0MzU5LDY0MzYwLDY0MzYxXSwxNjU4Ols2NDM1MCw2NDM1MSw2NDM1Miw2NDM1M10sMTY1OTpbNjQzMzgsNjQzMzksNjQzNDAsNjQzNDFdLDE2NjI6WzY0MzQyLDY0MzQzLDY0MzQ0LDY0MzQ1XSwxNjYzOls2NDM1NCw2NDM1NSw2NDM1Niw2NDM1N10sMTY2NDpbNjQzNDYsNjQzNDcsNjQzNDgsNjQzNDldLDE2Njc6WzY0Mzc0LDY0Mzc1LDY0Mzc2LDY0Mzc3XSwxNjY4Ols2NDM3MCw2NDM3MSw2NDM3Miw2NDM3M10sMTY3MDpbNjQzNzgsNjQzNzksNjQzODAsNjQzODFdLDE2NzE6WzY0MzgyLDY0MzgzLDY0Mzg0LDY0Mzg1XSwxNjcyOls2NDM5Miw2NDM5M10sMTY3NjpbNjQzODgsNjQzODldLDE2Nzc6WzY0Mzg2LDY0Mzg3XSwxNjc4Ols2NDM5MCw2NDM5MV0sMTY4MTpbNjQzOTYsNjQzOTddLDE2ODg6WzY0Mzk0LDY0Mzk1XSwxNzAwOls2NDM2Miw2NDM2Myw2NDM2NCw2NDM2NV0sMTcwMjpbNjQzNjYsNjQzNjcsNjQzNjgsNjQzNjldLDE3MDU6WzY0Mzk4LDY0Mzk5LDY0NDAwLDY0NDAxXSwxNzA5Ols2NDQ2Nyw2NDQ2OCw2NDQ2OSw2NDQ3MF0sMTcxMTpbNjQ0MDIsNjQ0MDMsNjQ0MDQsNjQ0MDVdLDE3MTM6WzY0NDEwLDY0NDExLDY0NDEyLDY0NDEzXSwxNzE1Ols2NDQwNiw2NDQwNyw2NDQwOCw2NDQwOV0sMTcyMjpbNjQ0MTQsNjQ0MTVdLDE3MjM6WzY0NDE2LDY0NDE3LDY0NDE4LDY0NDE5XSwxNzI2Ols2NDQyNiw2NDQyNyw2NDQyOCw2NDQyOV0sMTcyODpbNjQ0MjAsNjQ0MjFdLDE3Mjk6WzY0NDIyLDY0NDIzLDY0NDI0LDY0NDI1XSwxNzMzOls2NDQ4MCw2NDQ4MV0sMTczNDpbNjQ0NzMsNjQ0NzRdLDE3MzU6WzY0NDcxLDY0NDcyXSwxNzM2Ols2NDQ3NSw2NDQ3Nl0sMTczNzpbNjQ0ODIsNjQ0ODNdLDE3Mzk6WzY0NDc4LDY0NDc5XSwxNzQwOls2NDUwOCw2NDUwOSw2NDUxMCw2NDUxMV0sMTc0NDpbNjQ0ODQsNjQ0ODUsNjQ0ODYsNjQ0ODddLDE3NDY6WzY0NDMwLDY0NDMxXSwxNzQ3Ols2NDQzMiw2NDQzM119LGE9ezY1MjQ3Ons2NTE1NDo2NTI2OSw2NTE1Njo2NTI3MSw2NTE2MDo2NTI3Myw2NTE2Njo2NTI3NX0sNjUyNDg6ezY1MTU0OjY1MjcwLDY1MTU2OjY1MjcyLDY1MTYwOjY1Mjc0LDY1MTY2OjY1Mjc2fSw2NTE2NTp7NjUyNDc6ezY1MjQ4Ons2NTI1ODo2NTAxMH19fSwxNjE3OnsxNjEyOjY0NjA2LDE2MTM6NjQ2MDcsMTYxNDo2NDYwOCwxNjE1OjY0NjA5LDE2MTY6NjQ2MTB9fSxlPXsxNjEyOjY0NjA2LDE2MTM6NjQ2MDcsMTYxNDo2NDYwOCwxNjE1OjY0NjA5LDE2MTY6NjQ2MTB9LG49WzE1NzAsMTU3MSwxNTczLDE1NzVdO3QuX19hcmFiaWNQYXJzZXJfXz17fTt2YXIgcj10Ll9fYXJhYmljUGFyc2VyX18uaXNJbkFyYWJpY1N1YnN0aXR1dGlvbkE9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMCE9PWhbdC5jaGFyQ29kZUF0KDApXX0sdT10Ll9fYXJhYmljUGFyc2VyX18uaXNBcmFiaWNMZXR0ZXI9ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQmJi9eW1xcdTA2MDAtXFx1MDZGRlxcdTA3NTAtXFx1MDc3RlxcdTA4QTAtXFx1MDhGRlxcdUZCNTAtXFx1RkRGRlxcdUZFNzAtXFx1RkVGRl0rJC8udGVzdCh0KX0saT10Ll9fYXJhYmljUGFyc2VyX18uaXNBcmFiaWNFbmRMZXR0ZXI9ZnVuY3Rpb24odCl7cmV0dXJuIHUodCkmJnIodCkmJmhbdC5jaGFyQ29kZUF0KDApXS5sZW5ndGg8PTJ9LG89dC5fX2FyYWJpY1BhcnNlcl9fLmlzQXJhYmljQWxmTGV0dGVyPWZ1bmN0aW9uKHQpe3JldHVybiB1KHQpJiYwPD1uLmluZGV4T2YodC5jaGFyQ29kZUF0KDApKX0scz0odC5fX2FyYWJpY1BhcnNlcl9fLmFyYWJpY0xldHRlckhhc0lzb2xhdGVkRm9ybT1mdW5jdGlvbih0KXtyZXR1cm4gdSh0KSYmcih0KSYmMTw9aFt0LmNoYXJDb2RlQXQoMCldLmxlbmd0aH0sdC5fX2FyYWJpY1BhcnNlcl9fLmFyYWJpY0xldHRlckhhc0ZpbmFsRm9ybT1mdW5jdGlvbih0KXtyZXR1cm4gdSh0KSYmcih0KSYmMjw9aFt0LmNoYXJDb2RlQXQoMCldLmxlbmd0aH0pLGw9KHQuX19hcmFiaWNQYXJzZXJfXy5hcmFiaWNMZXR0ZXJIYXNJbml0aWFsRm9ybT1mdW5jdGlvbih0KXtyZXR1cm4gdSh0KSYmcih0KSYmMzw9aFt0LmNoYXJDb2RlQXQoMCldLmxlbmd0aH0sdC5fX2FyYWJpY1BhcnNlcl9fLmFyYWJpY0xldHRlckhhc01lZGlhbEZvcm09ZnVuY3Rpb24odCl7cmV0dXJuIHUodCkmJnIodCkmJjQ9PWhbdC5jaGFyQ29kZUF0KDApXS5sZW5ndGh9KSxjPXQuX19hcmFiaWNQYXJzZXJfXy5yZXNvbHZlTGlnYXR1cmVzPWZ1bmN0aW9uKHQpe3ZhciBlPTAsbj1hLHI9MCxpPVwiXCIsbz0wO2ZvcihlPTA7ZTx0Lmxlbmd0aDtlKz0xKXZvaWQgMCE9PW5bdC5jaGFyQ29kZUF0KGUpXT8obysrLFwibnVtYmVyXCI9PXR5cGVvZihuPW5bdC5jaGFyQ29kZUF0KGUpXSkmJihyPS0xIT09KHI9Zih0LmNoYXJBdChlKSx0LmNoYXJBdChlLW8pLHQuY2hhckF0KGUrMSkpKT9yOjAsaSs9U3RyaW5nLmZyb21DaGFyQ29kZShuKSxuPWEsbz0wKSxlPT09dC5sZW5ndGgtMSYmKG49YSxpKz10LmNoYXJBdChlLShvLTEpKSxlLT1vLTEsbz0wKSk6KG49YSxpKz10LmNoYXJBdChlLW8pLGUtPW8sbz0wKTtyZXR1cm4gaX0sZj0odC5fX2FyYWJpY1BhcnNlcl9fLmlzQXJhYmljRGlhY3JpdGljPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDAhPT10JiZ2b2lkIDAhPT1lW3QuY2hhckNvZGVBdCgwKV19LHQuX19hcmFiaWNQYXJzZXJfXy5nZXRDb3JyZWN0Rm9ybT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHUodCk/ITE9PT1yKHQpPy0xOiFzKHQpfHwhdShlKSYmIXUobil8fCF1KG4pJiZpKGUpfHxpKHQpJiYhdShlKXx8aSh0KSYmbyhlKXx8aSh0KSYmaShlKT8wOmwodCkmJnUoZSkmJiFpKGUpJiZ1KG4pJiZzKG4pPzM6aSh0KXx8IXUobik/MToyOi0xfSkscD10Ll9fYXJhYmljUGFyc2VyX18ucHJvY2Vzc0FyYWJpYz10LnByb2Nlc3NBcmFiaWM9ZnVuY3Rpb24odCl7dmFyIGU9MCxuPTAscj0wLGk9XCJcIixvPVwiXCIsYT1cIlwiLHM9KHQ9dHx8XCJcIikuc3BsaXQoXCJcXFxccytcIiksbD1bXTtmb3IoZT0wO2U8cy5sZW5ndGg7ZSs9MSl7Zm9yKGwucHVzaChcIlwiKSxuPTA7bjxzW2VdLmxlbmd0aDtuKz0xKWk9c1tlXVtuXSxvPXNbZV1bbi0xXSxhPXNbZV1bbisxXSx1KGkpPyhyPWYoaSxvLGEpLGxbZV0rPS0xIT09cj9TdHJpbmcuZnJvbUNoYXJDb2RlKGhbaS5jaGFyQ29kZUF0KDApXVtyXSk6aSk6bFtlXSs9aTtsW2VdPWMobFtlXSl9cmV0dXJuIGwuam9pbihcIiBcIil9O3QuZXZlbnRzLnB1c2goW1wicHJlUHJvY2Vzc1RleHRcIixmdW5jdGlvbih0KXt2YXIgZT10LnRleHQsbj0odC54LHQueSx0Lm9wdGlvbnN8fHt9KSxyPSh0Lm11dGV4LG4ubGFuZyxbXSk7aWYoXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKXt2YXIgaT0wO2ZvcihyPVtdLGk9MDtpPGUubGVuZ3RoO2krPTEpXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGVbaV0pP3IucHVzaChbcChlW2ldWzBdKSxlW2ldWzFdLGVbaV1bMl1dKTpyLnB1c2goW3AoZVtpXSldKTt0LnRleHQ9cn1lbHNlIHQudGV4dD1wKGUpfV0pfShsdC5BUEkpLGx0LkFQSS5hdXRvUHJpbnQ9ZnVuY3Rpb24odCl7dmFyIGU7c3dpdGNoKCh0PXR8fHt9KS52YXJpYW50PXQudmFyaWFudHx8XCJub24tY29uZm9ybVwiLHQudmFyaWFudCl7Y2FzZVwiamF2YXNjcmlwdFwiOnRoaXMuYWRkSlMoXCJwcmludCh7fSk7XCIpO2JyZWFrO2Nhc2VcIm5vbi1jb25mb3JtXCI6ZGVmYXVsdDp0aGlzLmludGVybmFsLmV2ZW50cy5zdWJzY3JpYmUoXCJwb3N0UHV0UmVzb3VyY2VzXCIsZnVuY3Rpb24oKXtlPXRoaXMuaW50ZXJuYWwubmV3T2JqZWN0KCksdGhpcy5pbnRlcm5hbC5vdXQoXCI8PFwiKSx0aGlzLmludGVybmFsLm91dChcIi9TIC9OYW1lZFwiKSx0aGlzLmludGVybmFsLm91dChcIi9UeXBlIC9BY3Rpb25cIiksdGhpcy5pbnRlcm5hbC5vdXQoXCIvTiAvUHJpbnRcIiksdGhpcy5pbnRlcm5hbC5vdXQoXCI+PlwiKSx0aGlzLmludGVybmFsLm91dChcImVuZG9ialwiKX0pLHRoaXMuaW50ZXJuYWwuZXZlbnRzLnN1YnNjcmliZShcInB1dENhdGFsb2dcIixmdW5jdGlvbigpe3RoaXMuaW50ZXJuYWwub3V0KFwiL09wZW5BY3Rpb24gXCIrZStcIiAwIFJcIil9KX1yZXR1cm4gdGhpc30sXG4vKipcbiAgICogQGxpY2Vuc2VcbiAgICogQ29weXJpZ2h0IChjKSAyMDE0IFN0ZXZlbiBTcHVuZ2luIChUd2VsdmVUb25lIExMQykgIHN0ZXZlbkB0d2VsdmV0b25lLnR2XG4gICAqXG4gICAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAgICogaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlXG4gICAqL1xuZT1sdC5BUEksKG49ZnVuY3Rpb24oKXt2YXIgZT12b2lkIDA7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJwZGZcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGV9LHNldDpmdW5jdGlvbih0KXtlPXR9fSk7dmFyIG49MTUwO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwid2lkdGhcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG59LHNldDpmdW5jdGlvbih0KXtuPWlzTmFOKHQpfHwhMT09PU51bWJlci5pc0ludGVnZXIodCl8fHQ8MD8xNTA6dCx0aGlzLmdldENvbnRleHQoXCIyZFwiKS5wYWdlV3JhcFhFbmFibGVkJiYodGhpcy5nZXRDb250ZXh0KFwiMmRcIikucGFnZVdyYXBYPW4rMSl9fSk7dmFyIHI9MzAwO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiaGVpZ2h0XCIse2dldDpmdW5jdGlvbigpe3JldHVybiByfSxzZXQ6ZnVuY3Rpb24odCl7cj1pc05hTih0KXx8ITE9PT1OdW1iZXIuaXNJbnRlZ2VyKHQpfHx0PDA/MzAwOnQsdGhpcy5nZXRDb250ZXh0KFwiMmRcIikucGFnZVdyYXBZRW5hYmxlZCYmKHRoaXMuZ2V0Q29udGV4dChcIjJkXCIpLnBhZ2VXcmFwWT1yKzEpfX0pO3ZhciBpPVtdO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiY2hpbGROb2Rlc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaX0sc2V0OmZ1bmN0aW9uKHQpe2k9dH19KTt2YXIgbz17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInN0eWxlXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBvfSxzZXQ6ZnVuY3Rpb24odCl7bz10fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwicGFyZW50Tm9kZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX19KX0pLnByb3RvdHlwZS5nZXRDb250ZXh0PWZ1bmN0aW9uKHQsZSl7dmFyIG47aWYoXCIyZFwiIT09KHQ9dHx8XCIyZFwiKSlyZXR1cm4gbnVsbDtmb3IobiBpbiBlKXRoaXMucGRmLmNvbnRleHQyZC5oYXNPd25Qcm9wZXJ0eShuKSYmKHRoaXMucGRmLmNvbnRleHQyZFtuXT1lW25dKTtyZXR1cm4odGhpcy5wZGYuY29udGV4dDJkLl9jYW52YXM9dGhpcykucGRmLmNvbnRleHQyZH0sbi5wcm90b3R5cGUudG9EYXRhVVJMPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwidG9EYXRhVVJMIGlzIG5vdCBpbXBsZW1lbnRlZC5cIil9LGUuZXZlbnRzLnB1c2goW1wiaW5pdGlhbGl6ZWRcIixmdW5jdGlvbigpe3RoaXMuY2FudmFzPW5ldyBuLHRoaXMuY2FudmFzLnBkZj10aGlzfV0pLFxuLyoqIFxuICAgKiBAbGljZW5zZVxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKiBDb3B5cmlnaHQgKGMpIDIwMTMgWW91c3NlZiBCZWRkYWQsIHlvdXNzZWYuYmVkZGFkQGdtYWlsLmNvbVxuICAgKiAgICAgICAgICAgICAgIDIwMTMgRWR1YXJkbyBNZW5lemVzIGRlIE1vcmFpcywgZWR1YXJkby5tb3JhaXNAdXNwLmJyXG4gICAqICAgICAgICAgICAgICAgMjAxMyBMZWUgRHJpc2NvbGwsIGh0dHBzOi8vZ2l0aHViLmNvbS9sc2RyaXNjb2xsXG4gICAqICAgICAgICAgICAgICAgMjAxNCBKdWFuIFBhYmxvIEdhdmlyaWEsIGh0dHBzOi8vZ2l0aHViLmNvbS9qdWFucGdhdmlyaWFcbiAgICogICAgICAgICAgICAgICAyMDE0IEphbWVzIEhhbGwsIGphbWVzQHBhcmFsbC5heFxuICAgKiAgICAgICAgICAgICAgIDIwMTQgRGllZ28gQ2Fzb3JyYW4sIGh0dHBzOi8vZ2l0aHViLmNvbS9kaWVnb2NyXG4gICAqXG4gICAqIFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKi9cbl89bHQuQVBJLEY9e3g6dm9pZCAwLHk6dm9pZCAwLHc6dm9pZCAwLGg6dm9pZCAwLGxuOnZvaWQgMH0sUD0xLHA9ZnVuY3Rpb24odCxlLG4scixpKXtGPXt4OnQseTplLHc6bixoOnIsbG46aX19LGQ9ZnVuY3Rpb24oKXtyZXR1cm4gRn0saz17bGVmdDowLHRvcDowLGJvdHRvbTowfSxfLnNldEhlYWRlckZ1bmN0aW9uPWZ1bmN0aW9uKHQpe2w9dH0sXy5nZXRUZXh0RGltZW5zaW9ucz1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMudGFibGVfZm9udF9zaXplfHx0aGlzLmludGVybmFsLmdldEZvbnRTaXplKCkscj0odGhpcy5pbnRlcm5hbC5nZXRGb250KCkuZm9udFN0eWxlLChlPWV8fHt9KS5zY2FsZUZhY3Rvcnx8dGhpcy5pbnRlcm5hbC5zY2FsZUZhY3RvciksaT0wLG89MCxhPTA7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpMCE9KGk9dGhpcy5nZXRTdHJpbmdVbml0V2lkdGgodCkqbikmJihvPTEpO2Vsc2V7aWYoXCJbb2JqZWN0IEFycmF5XVwiIT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKXRocm93IG5ldyBFcnJvcihcImdldFRleHREaW1lbnNpb25zIGV4cGVjdHMgdGV4dC1wYXJhbWV0ZXIgdG8gYmUgb2YgdHlwZSBTdHJpbmcgb3IgYW4gQXJyYXkgb2YgU3RyaW5ncy5cIik7Zm9yKHZhciBzPTA7czx0Lmxlbmd0aDtzKyspaTwoYT10aGlzLmdldFN0cmluZ1VuaXRXaWR0aCh0W3NdKSpuKSYmKGk9YSk7MCE9PWkmJihvPXQubGVuZ3RoKX1yZXR1cm57dzppLz1yLGg6TWF0aC5tYXgoKG8qbip0aGlzLmdldExpbmVIZWlnaHRGYWN0b3IoKS1uKih0aGlzLmdldExpbmVIZWlnaHRGYWN0b3IoKS0xKSkvciwwKX19LF8uY2VsbEFkZFBhZ2U9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm1hcmdpbnN8fGs7dGhpcy5hZGRQYWdlKCkscCh0LmxlZnQsdC50b3Asdm9pZCAwLHZvaWQgMCksUCs9MX0sXy5jZWxsSW5pdGlhbGl6ZT1mdW5jdGlvbigpe0Y9e3g6dm9pZCAwLHk6dm9pZCAwLHc6dm9pZCAwLGg6dm9pZCAwLGxuOnZvaWQgMH0sUD0xfSxfLmNlbGw9ZnVuY3Rpb24odCxlLG4scixpLG8sYSl7dmFyIHM9ZCgpLGw9ITE7aWYodm9pZCAwIT09cy5sbilpZihzLmxuPT09byl0PXMueCtzLncsZT1zLnk7ZWxzZXt2YXIgaD10aGlzLm1hcmdpbnN8fGs7cy55K3MuaCtyKzEzPj10aGlzLmludGVybmFsLnBhZ2VTaXplLmdldEhlaWdodCgpLWguYm90dG9tJiYodGhpcy5jZWxsQWRkUGFnZSgpLGw9ITAsdGhpcy5wcmludEhlYWRlcnMmJnRoaXMudGFibGVIZWFkZXJSb3cmJnRoaXMucHJpbnRIZWFkZXJSb3cobywhMCkpLGU9ZCgpLnkrZCgpLmgsbCYmKGU9MjMpfWlmKHZvaWQgMCE9PWlbMF0paWYodGhpcy5wcmludGluZ0hlYWRlclJvdz90aGlzLnJlY3QodCxlLG4scixcIkZEXCIpOnRoaXMucmVjdCh0LGUsbixyKSxcInJpZ2h0XCI9PT1hKXtpIGluc3RhbmNlb2YgQXJyYXl8fChpPVtpXSk7Zm9yKHZhciB1PTA7dTxpLmxlbmd0aDt1Kyspe3ZhciBjPWlbdV0sZj10aGlzLmdldFN0cmluZ1VuaXRXaWR0aChjKSp0aGlzLmludGVybmFsLmdldEZvbnRTaXplKCkvdGhpcy5pbnRlcm5hbC5zY2FsZUZhY3Rvcjt0aGlzLnRleHQoYyx0K24tZi0zLGUrdGhpcy5pbnRlcm5hbC5nZXRMaW5lSGVpZ2h0KCkqKHUrMSkpfX1lbHNlIHRoaXMudGV4dChpLHQrMyxlK3RoaXMuaW50ZXJuYWwuZ2V0TGluZUhlaWdodCgpKTtyZXR1cm4gcCh0LGUsbixyLG8pLHRoaXN9LF8uYXJyYXlNYXg9ZnVuY3Rpb24odCxlKXt2YXIgbixyLGksbz10WzBdO2ZvcihuPTAscj10Lmxlbmd0aDtuPHI7bis9MSlpPXRbbl0sZT8tMT09PWUobyxpKSYmKG89aSk6bzxpJiYobz1pKTtyZXR1cm4gb30sXy50YWJsZT1mdW5jdGlvbih0LGUsbixyLGkpe2lmKCFuKXRocm93XCJObyBkYXRhIGZvciBQREYgdGFibGVcIjt2YXIgbyxhLHMsbCxoLHUsYyxmLHAsZCxnPVtdLG09W10seT17fSx2PXt9LHc9W10sYj1bXSx4PSExLE49ITAsTD0xMixBPWs7aWYoQS53aWR0aD10aGlzLmludGVybmFsLnBhZ2VTaXplLmdldFdpZHRoKCksaSYmKCEwPT09aS5hdXRvU2l6ZSYmKHg9ITApLCExPT09aS5wcmludEhlYWRlcnMmJihOPSExKSxpLmZvbnRTaXplJiYoTD1pLmZvbnRTaXplKSxpLmNzcyYmdm9pZCAwIT09aS5jc3NbXCJmb250LXNpemVcIl0mJihMPTE2KmkuY3NzW1wiZm9udC1zaXplXCJdKSxpLm1hcmdpbnMmJihBPWkubWFyZ2lucykpLHRoaXMubG5Nb2Q9MCxGPXt4OnZvaWQgMCx5OnZvaWQgMCx3OnZvaWQgMCxoOnZvaWQgMCxsbjp2b2lkIDB9LFA9MSx0aGlzLnByaW50SGVhZGVycz1OLHRoaXMubWFyZ2lucz1BLHRoaXMuc2V0Rm9udFNpemUoTCksdGhpcy50YWJsZV9mb250X3NpemU9TCxudWxsPT1yKWc9T2JqZWN0LmtleXMoblswXSk7ZWxzZSBpZihyWzBdJiZcInN0cmluZ1wiIT10eXBlb2YgclswXSlmb3IoYT0wLHM9ci5sZW5ndGg7YTxzO2ErPTEpbz1yW2FdLGcucHVzaChvLm5hbWUpLG0ucHVzaChvLnByb21wdCksdltvLm5hbWVdPW8ud2lkdGgqKDE5LjA0OTk3Ni8yNS40KTtlbHNlIGc9cjtpZih4KWZvcihkPWZ1bmN0aW9uKHQpe3JldHVybiB0W29dfSxhPTAscz1nLmxlbmd0aDthPHM7YSs9MSl7Zm9yKHlbbz1nW2FdXT1uLm1hcChkKSx3LnB1c2godGhpcy5nZXRUZXh0RGltZW5zaW9ucyhtW2FdfHxvLHtzY2FsZUZhY3RvcjoxfSkudyksYz0wLGw9KHU9eVtvXSkubGVuZ3RoO2M8bDtjKz0xKWg9dVtjXSx3LnB1c2godGhpcy5nZXRUZXh0RGltZW5zaW9ucyhoLHtzY2FsZUZhY3RvcjoxfSkudyk7dltvXT1fLmFycmF5TWF4KHcpLHc9W119aWYoTil7dmFyIFM9dGhpcy5jYWxjdWxhdGVMaW5lSGVpZ2h0KGcsdixtLmxlbmd0aD9tOmcpO2ZvcihhPTAscz1nLmxlbmd0aDthPHM7YSs9MSlvPWdbYV0sYi5wdXNoKFt0LGUsdltvXSxTLFN0cmluZyhtLmxlbmd0aD9tW2FdOm8pXSk7dGhpcy5zZXRUYWJsZUhlYWRlclJvdyhiKSx0aGlzLnByaW50SGVhZGVyUm93KDEsITEpfWZvcihhPTAscz1uLmxlbmd0aDthPHM7YSs9MSlmb3IoZj1uW2FdLFM9dGhpcy5jYWxjdWxhdGVMaW5lSGVpZ2h0KGcsdixmKSxjPTAscD1nLmxlbmd0aDtjPHA7Yys9MSlvPWdbY10sdGhpcy5jZWxsKHQsZSx2W29dLFMsZltvXSxhKzIsby5hbGlnbik7cmV0dXJuIHRoaXMubGFzdENlbGxQb3M9Rix0aGlzLnRhYmxlX3g9dCx0aGlzLnRhYmxlX3k9ZSx0aGlzfSxfLmNhbGN1bGF0ZUxpbmVIZWlnaHQ9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcixpPTAsbz0wO288dC5sZW5ndGg7bysrKXtuW3I9dFtvXV09dGhpcy5zcGxpdFRleHRUb1NpemUoU3RyaW5nKG5bcl0pLGVbcl0tMyk7dmFyIGE9dGhpcy5pbnRlcm5hbC5nZXRMaW5lSGVpZ2h0KCkqbltyXS5sZW5ndGgrMztpPGEmJihpPWEpfXJldHVybiBpfSxfLnNldFRhYmxlSGVhZGVyUm93PWZ1bmN0aW9uKHQpe3RoaXMudGFibGVIZWFkZXJSb3c9dH0sXy5wcmludEhlYWRlclJvdz1mdW5jdGlvbih0LGUpe2lmKCF0aGlzLnRhYmxlSGVhZGVyUm93KXRocm93XCJQcm9wZXJ0eSB0YWJsZUhlYWRlclJvdyBkb2VzIG5vdCBleGlzdC5cIjt2YXIgbixyLGksbztpZih0aGlzLnByaW50aW5nSGVhZGVyUm93PSEwLHZvaWQgMCE9PWwpe3ZhciBhPWwodGhpcyxQKTtwKGFbMF0sYVsxXSxhWzJdLGFbM10sLTEpfXRoaXMuc2V0Rm9udFN0eWxlKFwiYm9sZFwiKTt2YXIgcz1bXTtmb3IoaT0wLG89dGhpcy50YWJsZUhlYWRlclJvdy5sZW5ndGg7aTxvO2krPTEpdGhpcy5zZXRGaWxsQ29sb3IoMjAwLDIwMCwyMDApLG49dGhpcy50YWJsZUhlYWRlclJvd1tpXSxlJiYodGhpcy5tYXJnaW5zLnRvcD0xMyxuWzFdPXRoaXMubWFyZ2lucyYmdGhpcy5tYXJnaW5zLnRvcHx8MCxzLnB1c2gobikpLHI9W10uY29uY2F0KG4pLHRoaXMuY2VsbC5hcHBseSh0aGlzLHIuY29uY2F0KHQpKTswPHMubGVuZ3RoJiZ0aGlzLnNldFRhYmxlSGVhZGVyUm93KHMpLHRoaXMuc2V0Rm9udFN0eWxlKFwibm9ybWFsXCIpLHRoaXMucHJpbnRpbmdIZWFkZXJSb3c9ITF9LFxuLyoqXG4gICAqIGpzUERGIENvbnRleHQyRCBQbHVnSW4gQ29weXJpZ2h0IChjKSAyMDE0IFN0ZXZlbiBTcHVuZ2luIChUd2VsdmVUb25lIExMQykgc3RldmVuQHR3ZWx2ZXRvbmUudHZcbiAgICpcbiAgICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2VcbiAgICovXG5mdW5jdGlvbih0LGUpe3ZhciBsLGksbyxoLHUsYz1mdW5jdGlvbih0KXtyZXR1cm4gdD10fHx7fSx0aGlzLmlzU3Ryb2tlVHJhbnNwYXJlbnQ9dC5pc1N0cm9rZVRyYW5zcGFyZW50fHwhMSx0aGlzLnN0cm9rZU9wYWNpdHk9dC5zdHJva2VPcGFjaXR5fHwxLHRoaXMuc3Ryb2tlU3R5bGU9dC5zdHJva2VTdHlsZXx8XCIjMDAwMDAwXCIsdGhpcy5maWxsU3R5bGU9dC5maWxsU3R5bGV8fFwiIzAwMDAwMFwiLHRoaXMuaXNGaWxsVHJhbnNwYXJlbnQ9dC5pc0ZpbGxUcmFuc3BhcmVudHx8ITEsdGhpcy5maWxsT3BhY2l0eT10LmZpbGxPcGFjaXR5fHwxLHRoaXMuZm9udD10LmZvbnR8fFwiMTBweCBzYW5zLXNlcmlmXCIsdGhpcy50ZXh0QmFzZWxpbmU9dC50ZXh0QmFzZWxpbmV8fFwiYWxwaGFiZXRpY1wiLHRoaXMudGV4dEFsaWduPXQudGV4dEFsaWdufHxcImxlZnRcIix0aGlzLmxpbmVXaWR0aD10LmxpbmVXaWR0aHx8MSx0aGlzLmxpbmVKb2luPXQubGluZUpvaW58fFwibWl0ZXJcIix0aGlzLmxpbmVDYXA9dC5saW5lQ2FwfHxcImJ1dHRcIix0aGlzLnBhdGg9dC5wYXRofHxbXSx0aGlzLnRyYW5zZm9ybT12b2lkIDAhPT10LnRyYW5zZm9ybT90LnRyYW5zZm9ybS5jbG9uZSgpOm5ldyBNLHRoaXMuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPXQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9ufHxcIm5vcm1hbFwiLHRoaXMuZ2xvYmFsQWxwaGE9dC5nbG9iYWxBbHBoYXx8MSx0aGlzLmNsaXBfcGF0aD10LmNsaXBfcGF0aHx8W10sdGhpcy5jdXJyZW50UG9pbnQ9dC5jdXJyZW50UG9pbnR8fG5ldyBqLHRoaXMubWl0ZXJMaW1pdD10Lm1pdGVyTGltaXR8fDEwLHRoaXMubGFzdFBvaW50PXQubGFzdFBvaW50fHxuZXcgaix0aGlzLmlnbm9yZUNsZWFyUmVjdD1cImJvb2xlYW5cIiE9dHlwZW9mIHQuaWdub3JlQ2xlYXJSZWN0fHx0Lmlnbm9yZUNsZWFyUmVjdCx0aGlzfTt0LmV2ZW50cy5wdXNoKFtcImluaXRpYWxpemVkXCIsZnVuY3Rpb24oKXt0aGlzLmNvbnRleHQyZD1uZXcgbih0aGlzKSxsPXRoaXMuaW50ZXJuYWwuZjIsdGhpcy5pbnRlcm5hbC5mMyxpPXRoaXMuaW50ZXJuYWwuZ2V0Q29vcmRpbmF0ZVN0cmluZyxvPXRoaXMuaW50ZXJuYWwuZ2V0VmVydGljYWxDb29yZGluYXRlU3RyaW5nLGg9dGhpcy5pbnRlcm5hbC5nZXRIb3Jpem9udGFsQ29vcmRpbmF0ZSx1PXRoaXMuaW50ZXJuYWwuZ2V0VmVydGljYWxDb29yZGluYXRlfV0pO3ZhciBuPWZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiY2FudmFzXCIse2dldDpmdW5jdGlvbigpe3JldHVybntwYXJlbnROb2RlOiExLHN0eWxlOiExfX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInBkZlwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdH19KTt2YXIgZT0hMTtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInBhZ2VXcmFwWEVuYWJsZWRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGV9LHNldDpmdW5jdGlvbih0KXtlPUJvb2xlYW4odCl9fSk7dmFyIG49ITE7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJwYWdlV3JhcFlFbmFibGVkXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBufSxzZXQ6ZnVuY3Rpb24odCl7bj1Cb29sZWFuKHQpfX0pO3ZhciByPTA7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJwb3NYXCIse2dldDpmdW5jdGlvbigpe3JldHVybiByfSxzZXQ6ZnVuY3Rpb24odCl7aXNOYU4odCl8fChyPXQpfX0pO3ZhciBpPTA7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJwb3NZXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBpfSxzZXQ6ZnVuY3Rpb24odCl7aXNOYU4odCl8fChpPXQpfX0pO3ZhciBvPSExO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiYXV0b1BhZ2luZ1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gb30sc2V0OmZ1bmN0aW9uKHQpe289Qm9vbGVhbih0KX19KTt2YXIgYT0wO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwibGFzdEJyZWFrXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBhfSxzZXQ6ZnVuY3Rpb24odCl7YT10fX0pO3ZhciBzPVtdO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwicGFnZUJyZWFrc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gc30sc2V0OmZ1bmN0aW9uKHQpe3M9dH19KTt2YXIgbD1uZXcgYztPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImN0eFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbH0sc2V0OmZ1bmN0aW9uKHQpe3QgaW5zdGFuY2VvZiBjJiYobD10KX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInBhdGhcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGwucGF0aH0sc2V0OmZ1bmN0aW9uKHQpe2wucGF0aD10fX0pO3ZhciBoPVtdO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiY3R4U3RhY2tcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGh9LHNldDpmdW5jdGlvbih0KXtoPXR9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJmaWxsU3R5bGVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3R4LmZpbGxTdHlsZX0sc2V0OmZ1bmN0aW9uKHQpe3ZhciBlO2U9Zih0KSx0aGlzLmN0eC5maWxsU3R5bGU9ZS5zdHlsZSx0aGlzLmN0eC5pc0ZpbGxUcmFuc3BhcmVudD0wPT09ZS5hLHRoaXMuY3R4LmZpbGxPcGFjaXR5PWUuYSx0aGlzLnBkZi5zZXRGaWxsQ29sb3IoZS5yLGUuZyxlLmIse2E6ZS5hfSksdGhpcy5wZGYuc2V0VGV4dENvbG9yKGUucixlLmcsZS5iLHthOmUuYX0pfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwic3Ryb2tlU3R5bGVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3R4LnN0cm9rZVN0eWxlfSxzZXQ6ZnVuY3Rpb24odCl7dmFyIGU9Zih0KTt0aGlzLmN0eC5zdHJva2VTdHlsZT1lLnN0eWxlLHRoaXMuY3R4LmlzU3Ryb2tlVHJhbnNwYXJlbnQ9MD09PWUuYSx0aGlzLmN0eC5zdHJva2VPcGFjaXR5PWUuYSwwPT09ZS5hP3RoaXMucGRmLnNldERyYXdDb2xvcigyNTUsMjU1LDI1NSk6KGUuYSx0aGlzLnBkZi5zZXREcmF3Q29sb3IoZS5yLGUuZyxlLmIpKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImxpbmVDYXBcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3R4LmxpbmVDYXB9LHNldDpmdW5jdGlvbih0KXstMSE9PVtcImJ1dHRcIixcInJvdW5kXCIsXCJzcXVhcmVcIl0uaW5kZXhPZih0KSYmKHRoaXMuY3R4LmxpbmVDYXA9dCx0aGlzLnBkZi5zZXRMaW5lQ2FwKHQpKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImxpbmVXaWR0aFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdHgubGluZVdpZHRofSxzZXQ6ZnVuY3Rpb24odCl7aXNOYU4odCl8fCh0aGlzLmN0eC5saW5lV2lkdGg9dCx0aGlzLnBkZi5zZXRMaW5lV2lkdGgodCkpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwibGluZUpvaW5cIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3R4LmxpbmVKb2lufSxzZXQ6ZnVuY3Rpb24odCl7LTEhPT1bXCJiZXZlbFwiLFwicm91bmRcIixcIm1pdGVyXCJdLmluZGV4T2YodCkmJih0aGlzLmN0eC5saW5lSm9pbj10LHRoaXMucGRmLnNldExpbmVKb2luKHQpKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIm1pdGVyTGltaXRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3R4Lm1pdGVyTGltaXR9LHNldDpmdW5jdGlvbih0KXtpc05hTih0KXx8KHRoaXMuY3R4Lm1pdGVyTGltaXQ9dCx0aGlzLnBkZi5zZXRNaXRlckxpbWl0KHQpKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInRleHRCYXNlbGluZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdHgudGV4dEJhc2VsaW5lfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5jdHgudGV4dEJhc2VsaW5lPXR9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJ0ZXh0QWxpZ25cIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3R4LnRleHRBbGlnbn0sc2V0OmZ1bmN0aW9uKHQpey0xIT09W1wicmlnaHRcIixcImVuZFwiLFwiY2VudGVyXCIsXCJsZWZ0XCIsXCJzdGFydFwiXS5pbmRleE9mKHQpJiYodGhpcy5jdHgudGV4dEFsaWduPXQpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiZm9udFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdHguZm9udH0sc2V0OmZ1bmN0aW9uKHQpe3ZhciBlO2lmKHRoaXMuY3R4LmZvbnQ9dCxudWxsIT09KGU9L15cXHMqKD89KD86KD86Wy1hLXpdK1xccyopezAsMn0oaXRhbGljfG9ibGlxdWUpKT8pKD89KD86KD86Wy1hLXpdK1xccyopezAsMn0oc21hbGwtY2FwcykpPykoPz0oPzooPzpbLWEtel0rXFxzKil7MCwyfShib2xkKD86ZXIpP3xsaWdodGVyfFsxLTldMDApKT8pKD86KD86bm9ybWFsfFxcMXxcXDJ8XFwzKVxccyopezAsM30oKD86eHg/LSk/KD86c21hbGx8bGFyZ2UpfG1lZGl1bXxzbWFsbGVyfGxhcmdlcnxbLlxcZF0rKD86XFwlfGlufFtjZW1dbXxleHxwW2N0eF0pKSg/OlxccypcXC9cXHMqKG5vcm1hbHxbLlxcZF0rKD86XFwlfGlufFtjZW1dbXxleHxwW2N0eF0pKSk/XFxzKihbLV8sXFxcIlxcJ1xcc2Etel0rPylcXHMqJC9pLmV4ZWModCkpKXt2YXIgbj1lWzFdLHI9KGVbMl0sZVszXSksaT1lWzRdLG89ZVs1XSxhPWVbNl07aT1cInB4XCI9PT1vP01hdGguZmxvb3IocGFyc2VGbG9hdChpKSk6XCJlbVwiPT09bz9NYXRoLmZsb29yKHBhcnNlRmxvYXQoaSkqdGhpcy5wZGYuZ2V0Rm9udFNpemUoKSk6TWF0aC5mbG9vcihwYXJzZUZsb2F0KGkpKSx0aGlzLnBkZi5zZXRGb250U2l6ZShpKTt2YXIgcz1cIlwiOyhcImJvbGRcIj09PXJ8fDcwMDw9cGFyc2VJbnQociwxMCl8fFwiYm9sZFwiPT09bikmJihzPVwiYm9sZFwiKSxcIml0YWxpY1wiPT09biYmKHMrPVwiaXRhbGljXCIpLDA9PT1zLmxlbmd0aCYmKHM9XCJub3JtYWxcIik7Zm9yKHZhciBsPVwiXCIsaD1hLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXCJ8Jy9nLFwiXCIpLnNwbGl0KC9cXHMqLFxccyovKSx1PXthcmlhbDpcIkhlbHZldGljYVwiLHZlcmRhbmE6XCJIZWx2ZXRpY2FcIixoZWx2ZXRpY2E6XCJIZWx2ZXRpY2FcIixcInNhbnMtc2VyaWZcIjpcIkhlbHZldGljYVwiLGZpeGVkOlwiQ291cmllclwiLG1vbm9zcGFjZTpcIkNvdXJpZXJcIix0ZXJtaW5hbDpcIkNvdXJpZXJcIixjb3VyaWVyOlwiQ291cmllclwiLHRpbWVzOlwiVGltZXNcIixjdXJzaXZlOlwiVGltZXNcIixmYW50YXN5OlwiVGltZXNcIixzZXJpZjpcIlRpbWVzXCJ9LGM9MDtjPGgubGVuZ3RoO2MrKyl7aWYodm9pZCAwIT09dGhpcy5wZGYuaW50ZXJuYWwuZ2V0Rm9udChoW2NdLHMse25vRmFsbGJhY2s6ITAsZGlzYWJsZVdhcm5pbmc6ITB9KSl7bD1oW2NdO2JyZWFrfWlmKFwiYm9sZGl0YWxpY1wiPT09cyYmdm9pZCAwIT09dGhpcy5wZGYuaW50ZXJuYWwuZ2V0Rm9udChoW2NdLFwiYm9sZFwiLHtub0ZhbGxiYWNrOiEwLGRpc2FibGVXYXJuaW5nOiEwfSkpbD1oW2NdLHM9XCJib2xkXCI7ZWxzZSBpZih2b2lkIDAhPT10aGlzLnBkZi5pbnRlcm5hbC5nZXRGb250KGhbY10sXCJub3JtYWxcIix7bm9GYWxsYmFjazohMCxkaXNhYmxlV2FybmluZzohMH0pKXtsPWhbY10scz1cIm5vcm1hbFwiO2JyZWFrfX1pZihcIlwiPT09bClmb3IoYz0wO2M8aC5sZW5ndGg7YysrKWlmKHVbaFtjXV0pe2w9dVtoW2NdXTticmVha31sPVwiXCI9PT1sP1wiVGltZXNcIjpsLHRoaXMucGRmLnNldEZvbnQobCxzKX19fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJnbG9iYWxDb21wb3NpdGVPcGVyYXRpb25cIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbn0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuY3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj10fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiZ2xvYmFsQWxwaGFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3R4Lmdsb2JhbEFscGhhfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5jdHguZ2xvYmFsQWxwaGE9dH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImlnbm9yZUNsZWFyUmVjdFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdHguaWdub3JlQ2xlYXJSZWN0fSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5jdHguaWdub3JlQ2xlYXJSZWN0PUJvb2xlYW4odCl9fSl9O24ucHJvdG90eXBlLmZpbGw9ZnVuY3Rpb24oKXtyLmNhbGwodGhpcyxcImZpbGxcIiwhMSl9LG4ucHJvdG90eXBlLnN0cm9rZT1mdW5jdGlvbigpe3IuY2FsbCh0aGlzLFwic3Ryb2tlXCIsITEpfSxuLnByb3RvdHlwZS5iZWdpblBhdGg9ZnVuY3Rpb24oKXt0aGlzLnBhdGg9W3t0eXBlOlwiYmVnaW5cIn1dfSxuLnByb3RvdHlwZS5tb3ZlVG89ZnVuY3Rpb24odCxlKXtpZihpc05hTih0KXx8aXNOYU4oZSkpdGhyb3cgY29uc29sZS5lcnJvcihcImpzUERGLmNvbnRleHQyZC5tb3ZlVG86IEludmFsaWQgYXJndW1lbnRzXCIsYXJndW1lbnRzKSxuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYuY29udGV4dDJkLm1vdmVUb1wiKTt2YXIgbj10aGlzLmN0eC50cmFuc2Zvcm0uYXBwbHlUb1BvaW50KG5ldyBqKHQsZSkpO3RoaXMucGF0aC5wdXNoKHt0eXBlOlwibXRcIix4Om4ueCx5Om4ueX0pLHRoaXMuY3R4Lmxhc3RQb2ludD1uZXcgaih0LGUpfSxuLnByb3RvdHlwZS5jbG9zZVBhdGg9ZnVuY3Rpb24oKXt2YXIgdD1uZXcgaigwLDApLGU9MDtmb3IoZT10aGlzLnBhdGgubGVuZ3RoLTE7LTEhPT1lO2UtLSlpZihcImJlZ2luXCI9PT10aGlzLnBhdGhbZV0udHlwZSYmXCJvYmplY3RcIj09PXNlKHRoaXMucGF0aFtlKzFdKSYmXCJudW1iZXJcIj09dHlwZW9mIHRoaXMucGF0aFtlKzFdLngpe3Q9bmV3IGoodGhpcy5wYXRoW2UrMV0ueCx0aGlzLnBhdGhbZSsxXS55KSx0aGlzLnBhdGgucHVzaCh7dHlwZTpcImx0XCIseDp0LngseTp0Lnl9KTticmVha31cIm9iamVjdFwiPT09c2UodGhpcy5wYXRoW2UrMl0pJiZcIm51bWJlclwiPT10eXBlb2YgdGhpcy5wYXRoW2UrMl0ueCYmdGhpcy5wYXRoLnB1c2goSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnBhdGhbZSsyXSkpKSx0aGlzLnBhdGgucHVzaCh7dHlwZTpcImNsb3NlXCJ9KSx0aGlzLmN0eC5sYXN0UG9pbnQ9bmV3IGoodC54LHQueSl9LG4ucHJvdG90eXBlLmxpbmVUbz1mdW5jdGlvbih0LGUpe2lmKGlzTmFOKHQpfHxpc05hTihlKSl0aHJvdyBjb25zb2xlLmVycm9yKFwianNQREYuY29udGV4dDJkLmxpbmVUbzogSW52YWxpZCBhcmd1bWVudHNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5jb250ZXh0MmQubGluZVRvXCIpO3ZhciBuPXRoaXMuY3R4LnRyYW5zZm9ybS5hcHBseVRvUG9pbnQobmV3IGoodCxlKSk7dGhpcy5wYXRoLnB1c2goe3R5cGU6XCJsdFwiLHg6bi54LHk6bi55fSksdGhpcy5jdHgubGFzdFBvaW50PW5ldyBqKG4ueCxuLnkpfSxuLnByb3RvdHlwZS5jbGlwPWZ1bmN0aW9uKCl7dGhpcy5jdHguY2xpcF9wYXRoPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5wYXRoKSksci5jYWxsKHRoaXMsbnVsbCwhMCl9LG4ucHJvdG90eXBlLnF1YWRyYXRpY0N1cnZlVG89ZnVuY3Rpb24odCxlLG4scil7aWYoaXNOYU4obil8fGlzTmFOKHIpfHxpc05hTih0KXx8aXNOYU4oZSkpdGhyb3cgY29uc29sZS5lcnJvcihcImpzUERGLmNvbnRleHQyZC5xdWFkcmF0aWNDdXJ2ZVRvOiBJbnZhbGlkIGFyZ3VtZW50c1wiLGFyZ3VtZW50cyksbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudHMgcGFzc2VkIHRvIGpzUERGLmNvbnRleHQyZC5xdWFkcmF0aWNDdXJ2ZVRvXCIpO3ZhciBpPXRoaXMuY3R4LnRyYW5zZm9ybS5hcHBseVRvUG9pbnQobmV3IGoobixyKSksbz10aGlzLmN0eC50cmFuc2Zvcm0uYXBwbHlUb1BvaW50KG5ldyBqKHQsZSkpO3RoaXMucGF0aC5wdXNoKHt0eXBlOlwicWN0XCIseDE6by54LHkxOm8ueSx4OmkueCx5OmkueX0pLHRoaXMuY3R4Lmxhc3RQb2ludD1uZXcgaihpLngsaS55KX0sbi5wcm90b3R5cGUuYmV6aWVyQ3VydmVUbz1mdW5jdGlvbih0LGUsbixyLGksbyl7aWYoaXNOYU4oaSl8fGlzTmFOKG8pfHxpc05hTih0KXx8aXNOYU4oZSl8fGlzTmFOKG4pfHxpc05hTihyKSl0aHJvdyBjb25zb2xlLmVycm9yKFwianNQREYuY29udGV4dDJkLmJlemllckN1cnZlVG86IEludmFsaWQgYXJndW1lbnRzXCIsYXJndW1lbnRzKSxuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYuY29udGV4dDJkLmJlemllckN1cnZlVG9cIik7dmFyIGE9dGhpcy5jdHgudHJhbnNmb3JtLmFwcGx5VG9Qb2ludChuZXcgaihpLG8pKSxzPXRoaXMuY3R4LnRyYW5zZm9ybS5hcHBseVRvUG9pbnQobmV3IGoodCxlKSksbD10aGlzLmN0eC50cmFuc2Zvcm0uYXBwbHlUb1BvaW50KG5ldyBqKG4scikpO3RoaXMucGF0aC5wdXNoKHt0eXBlOlwiYmN0XCIseDE6cy54LHkxOnMueSx4MjpsLngseTI6bC55LHg6YS54LHk6YS55fSksdGhpcy5jdHgubGFzdFBvaW50PW5ldyBqKGEueCxhLnkpfSxuLnByb3RvdHlwZS5hcmM9ZnVuY3Rpb24odCxlLG4scixpLG8pe2lmKGlzTmFOKHQpfHxpc05hTihlKXx8aXNOYU4obil8fGlzTmFOKHIpfHxpc05hTihpKSl0aHJvdyBjb25zb2xlLmVycm9yKFwianNQREYuY29udGV4dDJkLmFyYzogSW52YWxpZCBhcmd1bWVudHNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5jb250ZXh0MmQuYXJjXCIpO2lmKG89Qm9vbGVhbihvKSwhdGhpcy5jdHgudHJhbnNmb3JtLmlzSWRlbnRpdHkpe3ZhciBhPXRoaXMuY3R4LnRyYW5zZm9ybS5hcHBseVRvUG9pbnQobmV3IGoodCxlKSk7dD1hLngsZT1hLnk7dmFyIHM9dGhpcy5jdHgudHJhbnNmb3JtLmFwcGx5VG9Qb2ludChuZXcgaigwLG4pKSxsPXRoaXMuY3R4LnRyYW5zZm9ybS5hcHBseVRvUG9pbnQobmV3IGooMCwwKSk7bj1NYXRoLnNxcnQoTWF0aC5wb3cocy54LWwueCwyKStNYXRoLnBvdyhzLnktbC55LDIpKX1NYXRoLmFicyhpLXIpPj0yKk1hdGguUEkmJihyPTAsaT0yKk1hdGguUEkpLHRoaXMucGF0aC5wdXNoKHt0eXBlOlwiYXJjXCIseDp0LHk6ZSxyYWRpdXM6bixzdGFydEFuZ2xlOnIsZW5kQW5nbGU6aSxjb3VudGVyY2xvY2t3aXNlOm99KX0sbi5wcm90b3R5cGUuYXJjVG89ZnVuY3Rpb24odCxlLG4scixpKXt0aHJvdyBuZXcgRXJyb3IoXCJhcmNUbyBub3QgaW1wbGVtZW50ZWQuXCIpfSxuLnByb3RvdHlwZS5yZWN0PWZ1bmN0aW9uKHQsZSxuLHIpe2lmKGlzTmFOKHQpfHxpc05hTihlKXx8aXNOYU4obil8fGlzTmFOKHIpKXRocm93IGNvbnNvbGUuZXJyb3IoXCJqc1BERi5jb250ZXh0MmQucmVjdDogSW52YWxpZCBhcmd1bWVudHNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5jb250ZXh0MmQucmVjdFwiKTt0aGlzLm1vdmVUbyh0LGUpLHRoaXMubGluZVRvKHQrbixlKSx0aGlzLmxpbmVUbyh0K24sZStyKSx0aGlzLmxpbmVUbyh0LGUrciksdGhpcy5saW5lVG8odCxlKSx0aGlzLmxpbmVUbyh0K24sZSksdGhpcy5saW5lVG8odCxlKX0sbi5wcm90b3R5cGUuZmlsbFJlY3Q9ZnVuY3Rpb24odCxlLG4scil7aWYoaXNOYU4odCl8fGlzTmFOKGUpfHxpc05hTihuKXx8aXNOYU4ocikpdGhyb3cgY29uc29sZS5lcnJvcihcImpzUERGLmNvbnRleHQyZC5maWxsUmVjdDogSW52YWxpZCBhcmd1bWVudHNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5jb250ZXh0MmQuZmlsbFJlY3RcIik7aWYoIU4uY2FsbCh0aGlzKSl7dmFyIGk9e307XCJidXR0XCIhPT10aGlzLmxpbmVDYXAmJihpLmxpbmVDYXA9dGhpcy5saW5lQ2FwLHRoaXMubGluZUNhcD1cImJ1dHRcIiksXCJtaXRlclwiIT09dGhpcy5saW5lSm9pbiYmKGkubGluZUpvaW49dGhpcy5saW5lSm9pbix0aGlzLmxpbmVKb2luPVwibWl0ZXJcIiksdGhpcy5iZWdpblBhdGgoKSx0aGlzLnJlY3QodCxlLG4sciksdGhpcy5maWxsKCksaS5oYXNPd25Qcm9wZXJ0eShcImxpbmVDYXBcIikmJih0aGlzLmxpbmVDYXA9aS5saW5lQ2FwKSxpLmhhc093blByb3BlcnR5KFwibGluZUpvaW5cIikmJih0aGlzLmxpbmVKb2luPWkubGluZUpvaW4pfX0sbi5wcm90b3R5cGUuc3Ryb2tlUmVjdD1mdW5jdGlvbih0LGUsbixyKXtpZihpc05hTih0KXx8aXNOYU4oZSl8fGlzTmFOKG4pfHxpc05hTihyKSl0aHJvdyBjb25zb2xlLmVycm9yKFwianNQREYuY29udGV4dDJkLnN0cm9rZVJlY3Q6IEludmFsaWQgYXJndW1lbnRzXCIsYXJndW1lbnRzKSxuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYuY29udGV4dDJkLnN0cm9rZVJlY3RcIik7TC5jYWxsKHRoaXMpfHwodGhpcy5iZWdpblBhdGgoKSx0aGlzLnJlY3QodCxlLG4sciksdGhpcy5zdHJva2UoKSl9LG4ucHJvdG90eXBlLmNsZWFyUmVjdD1mdW5jdGlvbih0LGUsbixyKXtpZihpc05hTih0KXx8aXNOYU4oZSl8fGlzTmFOKG4pfHxpc05hTihyKSl0aHJvdyBjb25zb2xlLmVycm9yKFwianNQREYuY29udGV4dDJkLmNsZWFyUmVjdDogSW52YWxpZCBhcmd1bWVudHNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5jb250ZXh0MmQuY2xlYXJSZWN0XCIpO3RoaXMuaWdub3JlQ2xlYXJSZWN0fHwodGhpcy5maWxsU3R5bGU9XCIjZmZmZmZmXCIsdGhpcy5maWxsUmVjdCh0LGUsbixyKSl9LG4ucHJvdG90eXBlLnNhdmU9ZnVuY3Rpb24odCl7dD1cImJvb2xlYW5cIiE9dHlwZW9mIHR8fHQ7Zm9yKHZhciBlPXRoaXMucGRmLmludGVybmFsLmdldEN1cnJlbnRQYWdlSW5mbygpLnBhZ2VOdW1iZXIsbj0wO248dGhpcy5wZGYuaW50ZXJuYWwuZ2V0TnVtYmVyT2ZQYWdlcygpO24rKyl0aGlzLnBkZi5zZXRQYWdlKG4rMSksdGhpcy5wZGYuaW50ZXJuYWwub3V0KFwicVwiKTtpZih0aGlzLnBkZi5zZXRQYWdlKGUpLHQpe3RoaXMuY3R4LmZvbnRTaXplPXRoaXMucGRmLmludGVybmFsLmdldEZvbnRTaXplKCk7dmFyIHI9bmV3IGModGhpcy5jdHgpO3RoaXMuY3R4U3RhY2sucHVzaCh0aGlzLmN0eCksdGhpcy5jdHg9cn19LG4ucHJvdG90eXBlLnJlc3RvcmU9ZnVuY3Rpb24odCl7dD1cImJvb2xlYW5cIiE9dHlwZW9mIHR8fHQ7Zm9yKHZhciBlPXRoaXMucGRmLmludGVybmFsLmdldEN1cnJlbnRQYWdlSW5mbygpLnBhZ2VOdW1iZXIsbj0wO248dGhpcy5wZGYuaW50ZXJuYWwuZ2V0TnVtYmVyT2ZQYWdlcygpO24rKyl0aGlzLnBkZi5zZXRQYWdlKG4rMSksdGhpcy5wZGYuaW50ZXJuYWwub3V0KFwiUVwiKTt0aGlzLnBkZi5zZXRQYWdlKGUpLHQmJjAhPT10aGlzLmN0eFN0YWNrLmxlbmd0aCYmKHRoaXMuY3R4PXRoaXMuY3R4U3RhY2sucG9wKCksdGhpcy5maWxsU3R5bGU9dGhpcy5jdHguZmlsbFN0eWxlLHRoaXMuc3Ryb2tlU3R5bGU9dGhpcy5jdHguc3Ryb2tlU3R5bGUsdGhpcy5mb250PXRoaXMuY3R4LmZvbnQsdGhpcy5saW5lQ2FwPXRoaXMuY3R4LmxpbmVDYXAsdGhpcy5saW5lV2lkdGg9dGhpcy5jdHgubGluZVdpZHRoLHRoaXMubGluZUpvaW49dGhpcy5jdHgubGluZUpvaW4pfSxuLnByb3RvdHlwZS50b0RhdGFVUkw9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJ0b0RhdGFVcmwgbm90IGltcGxlbWVudGVkLlwiKX07dmFyIGY9ZnVuY3Rpb24odCl7dmFyIGUsbixyLGk7aWYoITA9PT10LmlzQ2FudmFzR3JhZGllbnQmJih0PXQuZ2V0Q29sb3IoKSksIXQpcmV0dXJue3I6MCxnOjAsYjowLGE6MCxzdHlsZTp0fTtpZigvdHJhbnNwYXJlbnR8cmdiYVxccypcXChcXHMqKFxcZCspXFxzKixcXHMqKFxcZCspXFxzKixcXHMqKFxcZCspXFxzKixcXHMqMCtcXHMqXFwpLy50ZXN0KHQpKWk9cj1uPWU9MDtlbHNle3ZhciBvPS9yZ2JcXHMqXFwoXFxzKihcXGQrKVxccyosXFxzKihcXGQrKVxccyosXFxzKihcXGQrKVxccypcXCkvLmV4ZWModCk7aWYobnVsbCE9PW8pZT1wYXJzZUludChvWzFdKSxuPXBhcnNlSW50KG9bMl0pLHI9cGFyc2VJbnQob1szXSksaT0xO2Vsc2UgaWYobnVsbCE9PShvPS9yZ2JhXFxzKlxcKFxccyooXFxkKylcXHMqLFxccyooXFxkKylcXHMqLFxccyooXFxkKylcXHMqLFxccyooW1xcZFxcLl0rKVxccypcXCkvLmV4ZWModCkpKWU9cGFyc2VJbnQob1sxXSksbj1wYXJzZUludChvWzJdKSxyPXBhcnNlSW50KG9bM10pLGk9cGFyc2VGbG9hdChvWzRdKTtlbHNle2lmKGk9MSxcInN0cmluZ1wiPT10eXBlb2YgdCYmXCIjXCIhPT10LmNoYXJBdCgwKSl7dmFyIGE9bmV3IFJHQkNvbG9yKHQpO3Q9YS5vaz9hLnRvSGV4KCk6XCIjMDAwMDAwXCJ9ND09PXQubGVuZ3RoPyhlPXQuc3Vic3RyaW5nKDEsMiksZSs9ZSxuPXQuc3Vic3RyaW5nKDIsMyksbis9bixyPXQuc3Vic3RyaW5nKDMsNCkscis9cik6KGU9dC5zdWJzdHJpbmcoMSwzKSxuPXQuc3Vic3RyaW5nKDMsNSkscj10LnN1YnN0cmluZyg1LDcpKSxlPXBhcnNlSW50KGUsMTYpLG49cGFyc2VJbnQobiwxNikscj1wYXJzZUludChyLDE2KX19cmV0dXJue3I6ZSxnOm4sYjpyLGE6aSxzdHlsZTp0fX0sTj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmN0eC5pc0ZpbGxUcmFuc3BhcmVudHx8MD09dGhpcy5nbG9iYWxBbHBoYX0sTD1mdW5jdGlvbigpe3JldHVybiBCb29sZWFuKHRoaXMuY3R4LmlzU3Ryb2tlVHJhbnNwYXJlbnR8fDA9PXRoaXMuZ2xvYmFsQWxwaGEpfTtuLnByb3RvdHlwZS5maWxsVGV4dD1mdW5jdGlvbih0LGUsbixyKXtpZihpc05hTihlKXx8aXNOYU4obil8fFwic3RyaW5nXCIhPXR5cGVvZiB0KXRocm93IGNvbnNvbGUuZXJyb3IoXCJqc1BERi5jb250ZXh0MmQuZmlsbFRleHQ6IEludmFsaWQgYXJndW1lbnRzXCIsYXJndW1lbnRzKSxuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYuY29udGV4dDJkLmZpbGxUZXh0XCIpO2lmKHI9aXNOYU4ocik/dm9pZCAwOnIsIU4uY2FsbCh0aGlzKSl7bj1hLmNhbGwodGhpcyxuKTt2YXIgaT1CKHRoaXMuY3R4LnRyYW5zZm9ybS5yb3RhdGlvbiksbz10aGlzLmN0eC50cmFuc2Zvcm0uc2NhbGVYO3MuY2FsbCh0aGlzLHt0ZXh0OnQseDplLHk6bixzY2FsZTpvLGFuZ2xlOmksYWxpZ246dGhpcy50ZXh0QWxpZ24sbWF4V2lkdGg6cn0pfX0sbi5wcm90b3R5cGUuc3Ryb2tlVGV4dD1mdW5jdGlvbih0LGUsbixyKXtpZihpc05hTihlKXx8aXNOYU4obil8fFwic3RyaW5nXCIhPXR5cGVvZiB0KXRocm93IGNvbnNvbGUuZXJyb3IoXCJqc1BERi5jb250ZXh0MmQuc3Ryb2tlVGV4dDogSW52YWxpZCBhcmd1bWVudHNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5jb250ZXh0MmQuc3Ryb2tlVGV4dFwiKTtpZighTC5jYWxsKHRoaXMpKXtyPWlzTmFOKHIpP3ZvaWQgMDpyLG49YS5jYWxsKHRoaXMsbik7dmFyIGk9Qih0aGlzLmN0eC50cmFuc2Zvcm0ucm90YXRpb24pLG89dGhpcy5jdHgudHJhbnNmb3JtLnNjYWxlWDtzLmNhbGwodGhpcyx7dGV4dDp0LHg6ZSx5Om4sc2NhbGU6byxyZW5kZXJpbmdNb2RlOlwic3Ryb2tlXCIsYW5nbGU6aSxhbGlnbjp0aGlzLnRleHRBbGlnbixtYXhXaWR0aDpyfSl9fSxuLnByb3RvdHlwZS5tZWFzdXJlVGV4dD1mdW5jdGlvbih0KXtpZihcInN0cmluZ1wiIT10eXBlb2YgdCl0aHJvdyBjb25zb2xlLmVycm9yKFwianNQREYuY29udGV4dDJkLm1lYXN1cmVUZXh0OiBJbnZhbGlkIGFyZ3VtZW50c1wiLGFyZ3VtZW50cyksbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudHMgcGFzc2VkIHRvIGpzUERGLmNvbnRleHQyZC5tZWFzdXJlVGV4dFwiKTt2YXIgZT10aGlzLnBkZixuPXRoaXMucGRmLmludGVybmFsLnNjYWxlRmFjdG9yLHI9ZS5pbnRlcm5hbC5nZXRGb250U2l6ZSgpLGk9ZS5nZXRTdHJpbmdVbml0V2lkdGgodCkqci9lLmludGVybmFsLnNjYWxlRmFjdG9yO3JldHVybiBuZXcgZnVuY3Rpb24odCl7dmFyIGU9KHQ9dHx8e30pLndpZHRofHwwO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIndpZHRoXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBlfX0pLHRoaXN9KHt3aWR0aDppKj1NYXRoLnJvdW5kKDk2Km4vNzIqMWU0KS8xZTR9KX0sbi5wcm90b3R5cGUuc2NhbGU9ZnVuY3Rpb24odCxlKXtpZihpc05hTih0KXx8aXNOYU4oZSkpdGhyb3cgY29uc29sZS5lcnJvcihcImpzUERGLmNvbnRleHQyZC5zY2FsZTogSW52YWxpZCBhcmd1bWVudHNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5jb250ZXh0MmQuc2NhbGVcIik7dmFyIG49bmV3IE0odCwwLDAsZSwwLDApO3RoaXMuY3R4LnRyYW5zZm9ybT10aGlzLmN0eC50cmFuc2Zvcm0ubXVsdGlwbHkobil9LG4ucHJvdG90eXBlLnJvdGF0ZT1mdW5jdGlvbih0KXtpZihpc05hTih0KSl0aHJvdyBjb25zb2xlLmVycm9yKFwianNQREYuY29udGV4dDJkLnJvdGF0ZTogSW52YWxpZCBhcmd1bWVudHNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5jb250ZXh0MmQucm90YXRlXCIpO3ZhciBlPW5ldyBNKE1hdGguY29zKHQpLE1hdGguc2luKHQpLC1NYXRoLnNpbih0KSxNYXRoLmNvcyh0KSwwLDApO3RoaXMuY3R4LnRyYW5zZm9ybT10aGlzLmN0eC50cmFuc2Zvcm0ubXVsdGlwbHkoZSl9LG4ucHJvdG90eXBlLnRyYW5zbGF0ZT1mdW5jdGlvbih0LGUpe2lmKGlzTmFOKHQpfHxpc05hTihlKSl0aHJvdyBjb25zb2xlLmVycm9yKFwianNQREYuY29udGV4dDJkLnRyYW5zbGF0ZTogSW52YWxpZCBhcmd1bWVudHNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIHBhc3NlZCB0byBqc1BERi5jb250ZXh0MmQudHJhbnNsYXRlXCIpO3ZhciBuPW5ldyBNKDEsMCwwLDEsdCxlKTt0aGlzLmN0eC50cmFuc2Zvcm09dGhpcy5jdHgudHJhbnNmb3JtLm11bHRpcGx5KG4pfSxuLnByb3RvdHlwZS50cmFuc2Zvcm09ZnVuY3Rpb24odCxlLG4scixpLG8pe2lmKGlzTmFOKHQpfHxpc05hTihlKXx8aXNOYU4obil8fGlzTmFOKHIpfHxpc05hTihpKXx8aXNOYU4obykpdGhyb3cgY29uc29sZS5lcnJvcihcImpzUERGLmNvbnRleHQyZC50cmFuc2Zvcm06IEludmFsaWQgYXJndW1lbnRzXCIsYXJndW1lbnRzKSxuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBwYXNzZWQgdG8ganNQREYuY29udGV4dDJkLnRyYW5zZm9ybVwiKTt2YXIgYT1uZXcgTSh0LGUsbixyLGksbyk7dGhpcy5jdHgudHJhbnNmb3JtPXRoaXMuY3R4LnRyYW5zZm9ybS5tdWx0aXBseShhKX0sbi5wcm90b3R5cGUuc2V0VHJhbnNmb3JtPWZ1bmN0aW9uKHQsZSxuLHIsaSxvKXt0PWlzTmFOKHQpPzE6dCxlPWlzTmFOKGUpPzA6ZSxuPWlzTmFOKG4pPzA6bixyPWlzTmFOKHIpPzE6cixpPWlzTmFOKGkpPzA6aSxvPWlzTmFOKG8pPzA6byx0aGlzLmN0eC50cmFuc2Zvcm09bmV3IE0odCxlLG4scixpLG8pfSxuLnByb3RvdHlwZS5kcmF3SW1hZ2U9ZnVuY3Rpb24odCxlLG4scixpLG8sYSxzLGwpe3ZhciBoPXRoaXMucGRmLmdldEltYWdlUHJvcGVydGllcyh0KSx1PTEsYz0xLGY9MSxwPTE7dm9pZCAwIT09ciYmdm9pZCAwIT09cyYmKGY9cy9yLHA9bC9pLHU9aC53aWR0aC9yKnMvcixjPWguaGVpZ2h0L2kqbC9pKSx2b2lkIDA9PT1vJiYobz1lLGE9bixuPWU9MCksdm9pZCAwIT09ciYmdm9pZCAwPT09cyYmKHM9cixsPWkpLHZvaWQgMD09PXImJnZvaWQgMD09PXMmJihzPWgud2lkdGgsbD1oLmhlaWdodCk7dmFyIGQ9dGhpcy5jdHgudHJhbnNmb3JtLmRlY29tcG9zZSgpLGc9QihkLnJvdGF0ZS5zaHgpO2Quc2NhbGUuc3gsZC5zY2FsZS5zeTtmb3IodmFyIG0seT1uZXcgTSx2PSgoeT0oeT0oeT15Lm11bHRpcGx5KGQudHJhbnNsYXRlKSkubXVsdGlwbHkoZC5za2V3KSkubXVsdGlwbHkoZC5zY2FsZSkpLmFwcGx5VG9Qb2ludChuZXcgaihzLGwpKSx5LmFwcGx5VG9SZWN0YW5nbGUobmV3IEUoby1lKmYsYS1uKnAscip1LGkqYykpKSx3PUYuY2FsbCh0aGlzLHYpLGI9W10seD0wO3g8dy5sZW5ndGg7eCs9MSktMT09PWIuaW5kZXhPZih3W3hdKSYmYi5wdXNoKHdbeF0pO2lmKGIuc29ydCgpLHRoaXMuYXV0b1BhZ2luZylmb3IodmFyIE49YlswXSxMPWJbYi5sZW5ndGgtMV0sQT1OO0E8TCsxO0ErKyl7aWYodGhpcy5wZGYuc2V0UGFnZShBKSwwIT09dGhpcy5jdHguY2xpcF9wYXRoLmxlbmd0aCl7dmFyIFM9dGhpcy5wYXRoO209SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmN0eC5jbGlwX3BhdGgpKSx0aGlzLnBhdGg9UChtLHRoaXMucG9zWCwtMSp0aGlzLnBkZi5pbnRlcm5hbC5wYWdlU2l6ZS5oZWlnaHQqKEEtMSkrdGhpcy5wb3NZKSxrLmNhbGwodGhpcyxcImZpbGxcIiwhMCksdGhpcy5wYXRoPVN9dmFyIF89SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh2KSk7Xz1QKFtfXSx0aGlzLnBvc1gsLTEqdGhpcy5wZGYuaW50ZXJuYWwucGFnZVNpemUuaGVpZ2h0KihBLTEpK3RoaXMucG9zWSlbMF0sdGhpcy5wZGYuYWRkSW1hZ2UodCxcImpwZ1wiLF8ueCxfLnksXy53LF8uaCxudWxsLG51bGwsZyl9ZWxzZSB0aGlzLnBkZi5hZGRJbWFnZSh0LFwianBnXCIsdi54LHYueSx2Lncsdi5oLG51bGwsbnVsbCxnKX07dmFyIEY9ZnVuY3Rpb24odCxlLG4pe3ZhciByPVtdO3N3aXRjaChlPWV8fHRoaXMucGRmLmludGVybmFsLnBhZ2VTaXplLndpZHRoLG49bnx8dGhpcy5wZGYuaW50ZXJuYWwucGFnZVNpemUuaGVpZ2h0LHQudHlwZSl7ZGVmYXVsdDpjYXNlXCJtdFwiOmNhc2VcImx0XCI6ci5wdXNoKE1hdGguZmxvb3IoKHQueSt0aGlzLnBvc1kpL24pKzEpO2JyZWFrO2Nhc2VcImFyY1wiOnIucHVzaChNYXRoLmZsb29yKCh0LnkrdGhpcy5wb3NZLXQucmFkaXVzKS9uKSsxKSxyLnB1c2goTWF0aC5mbG9vcigodC55K3RoaXMucG9zWSt0LnJhZGl1cykvbikrMSk7YnJlYWs7Y2FzZVwicWN0XCI6dmFyIGk9dyh0aGlzLmN0eC5sYXN0UG9pbnQueCx0aGlzLmN0eC5sYXN0UG9pbnQueSx0LngxLHQueTEsdC54LHQueSk7ci5wdXNoKE1hdGguZmxvb3IoaS55L24pKzEpLHIucHVzaChNYXRoLmZsb29yKChpLnkraS5oKS9uKSsxKTticmVhaztjYXNlXCJiY3RcIjp2YXIgbz1iKHRoaXMuY3R4Lmxhc3RQb2ludC54LHRoaXMuY3R4Lmxhc3RQb2ludC55LHQueDEsdC55MSx0LngyLHQueTIsdC54LHQueSk7ci5wdXNoKE1hdGguZmxvb3Ioby55L24pKzEpLHIucHVzaChNYXRoLmZsb29yKChvLnkrby5oKS9uKSsxKTticmVhaztjYXNlXCJyZWN0XCI6ci5wdXNoKE1hdGguZmxvb3IoKHQueSt0aGlzLnBvc1kpL24pKzEpLHIucHVzaChNYXRoLmZsb29yKCh0LnkrdC5oK3RoaXMucG9zWSkvbikrMSl9Zm9yKHZhciBhPTA7YTxyLmxlbmd0aDthKz0xKWZvcig7dGhpcy5wZGYuaW50ZXJuYWwuZ2V0TnVtYmVyT2ZQYWdlcygpPHJbYV07KXYuY2FsbCh0aGlzKTtyZXR1cm4gcn0sdj1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZmlsbFN0eWxlLGU9dGhpcy5zdHJva2VTdHlsZSxuPXRoaXMuZm9udCxyPXRoaXMubGluZUNhcCxpPXRoaXMubGluZVdpZHRoLG89dGhpcy5saW5lSm9pbjt0aGlzLnBkZi5hZGRQYWdlKCksdGhpcy5maWxsU3R5bGU9dCx0aGlzLnN0cm9rZVN0eWxlPWUsdGhpcy5mb250PW4sdGhpcy5saW5lQ2FwPXIsdGhpcy5saW5lV2lkdGg9aSx0aGlzLmxpbmVKb2luPW99LFA9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXN3aXRjaCh0W3JdLnR5cGUpe2Nhc2VcImJjdFwiOnRbcl0ueDIrPWUsdFtyXS55Mis9bjtjYXNlXCJxY3RcIjp0W3JdLngxKz1lLHRbcl0ueTErPW47Y2FzZVwibXRcIjpjYXNlXCJsdFwiOmNhc2VcImFyY1wiOmRlZmF1bHQ6dFtyXS54Kz1lLHRbcl0ueSs9bn1yZXR1cm4gdH0scj1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbixyLGk9dGhpcy5maWxsU3R5bGUsbz10aGlzLnN0cm9rZVN0eWxlLGE9KHRoaXMuZm9udCx0aGlzLmxpbmVDYXApLHM9dGhpcy5saW5lV2lkdGgsbD10aGlzLmxpbmVKb2luLGg9SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnBhdGgpKSx1PUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5wYXRoKSksYz1bXSxmPTA7Zjx1Lmxlbmd0aDtmKyspaWYodm9pZCAwIT09dVtmXS54KWZvcih2YXIgcD1GLmNhbGwodGhpcyx1W2ZdKSxkPTA7ZDxwLmxlbmd0aDtkKz0xKS0xPT09Yy5pbmRleE9mKHBbZF0pJiZjLnB1c2gocFtkXSk7Zm9yKGY9MDtmPGMubGVuZ3RoO2YrKylmb3IoO3RoaXMucGRmLmludGVybmFsLmdldE51bWJlck9mUGFnZXMoKTxjW2ZdOyl2LmNhbGwodGhpcyk7aWYoYy5zb3J0KCksdGhpcy5hdXRvUGFnaW5nKXt2YXIgZz1jWzBdLG09Y1tjLmxlbmd0aC0xXTtmb3IoZj1nO2Y8bSsxO2YrKyl7aWYodGhpcy5wZGYuc2V0UGFnZShmKSx0aGlzLmZpbGxTdHlsZT1pLHRoaXMuc3Ryb2tlU3R5bGU9byx0aGlzLmxpbmVDYXA9YSx0aGlzLmxpbmVXaWR0aD1zLHRoaXMubGluZUpvaW49bCwwIT09dGhpcy5jdHguY2xpcF9wYXRoLmxlbmd0aCl7dmFyIHk9dGhpcy5wYXRoO249SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmN0eC5jbGlwX3BhdGgpKSx0aGlzLnBhdGg9UChuLHRoaXMucG9zWCwtMSp0aGlzLnBkZi5pbnRlcm5hbC5wYWdlU2l6ZS5oZWlnaHQqKGYtMSkrdGhpcy5wb3NZKSxrLmNhbGwodGhpcyx0LCEwKSx0aGlzLnBhdGg9eX1yPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoaCkpLHRoaXMucGF0aD1QKHIsdGhpcy5wb3NYLC0xKnRoaXMucGRmLmludGVybmFsLnBhZ2VTaXplLmhlaWdodCooZi0xKSt0aGlzLnBvc1kpLCExIT09ZSYmMCE9PWZ8fGsuY2FsbCh0aGlzLHQsZSl9fWVsc2Ugay5jYWxsKHRoaXMsdCxlKTt0aGlzLnBhdGg9aH0saz1mdW5jdGlvbih0LGUpe2lmKChcInN0cm9rZVwiIT09dHx8ZXx8IUwuY2FsbCh0aGlzKSkmJihcInN0cm9rZVwiPT09dHx8ZXx8IU4uY2FsbCh0aGlzKSkpe3ZhciBuPVtdO3RoaXMuY3R4Lmdsb2JhbEFscGhhO3RoaXMuY3R4LmZpbGxPcGFjaXR5PDEmJnRoaXMuY3R4LmZpbGxPcGFjaXR5O2Zvcih2YXIgcixpPXRoaXMucGF0aCxvPTA7bzxpLmxlbmd0aDtvKyspe3ZhciBhPWlbb107c3dpdGNoKGEudHlwZSl7Y2FzZVwiYmVnaW5cIjpuLnB1c2goe2JlZ2luOiEwfSk7YnJlYWs7Y2FzZVwiY2xvc2VcIjpuLnB1c2goe2Nsb3NlOiEwfSk7YnJlYWs7Y2FzZVwibXRcIjpuLnB1c2goe3N0YXJ0OmEsZGVsdGFzOltdLGFiczpbXX0pO2JyZWFrO2Nhc2VcImx0XCI6dmFyIHM9bi5sZW5ndGg7aWYoIWlzTmFOKGlbby0xXS54KSl7dmFyIGw9W2EueC1pW28tMV0ueCxhLnktaVtvLTFdLnldO2lmKDA8cylmb3IoOzA8PXM7cy0tKWlmKCEwIT09bltzLTFdLmNsb3NlJiYhMCE9PW5bcy0xXS5iZWdpbil7bltzLTFdLmRlbHRhcy5wdXNoKGwpLG5bcy0xXS5hYnMucHVzaChhKTticmVha319YnJlYWs7Y2FzZVwiYmN0XCI6bD1bYS54MS1pW28tMV0ueCxhLnkxLWlbby0xXS55LGEueDItaVtvLTFdLngsYS55Mi1pW28tMV0ueSxhLngtaVtvLTFdLngsYS55LWlbby0xXS55XTtuW24ubGVuZ3RoLTFdLmRlbHRhcy5wdXNoKGwpO2JyZWFrO2Nhc2VcInFjdFwiOnZhciBoPWlbby0xXS54KzIvMyooYS54MS1pW28tMV0ueCksdT1pW28tMV0ueSsyLzMqKGEueTEtaVtvLTFdLnkpLGM9YS54KzIvMyooYS54MS1hLngpLGY9YS55KzIvMyooYS55MS1hLnkpLHA9YS54LGQ9YS55O2w9W2gtaVtvLTFdLngsdS1pW28tMV0ueSxjLWlbby0xXS54LGYtaVtvLTFdLnkscC1pW28tMV0ueCxkLWlbby0xXS55XTtuW24ubGVuZ3RoLTFdLmRlbHRhcy5wdXNoKGwpO2JyZWFrO2Nhc2VcImFyY1wiOm4ucHVzaCh7ZGVsdGFzOltdLGFiczpbXSxhcmM6ITB9KSxBcnJheS5pc0FycmF5KG5bbi5sZW5ndGgtMV0uYWJzKSYmbltuLmxlbmd0aC0xXS5hYnMucHVzaChhKX19cj1lP251bGw6XCJzdHJva2VcIj09PXQ/XCJzdHJva2VcIjpcImZpbGxcIjtmb3Iobz0wO288bi5sZW5ndGg7bysrKXtpZihuW29dLmFyYylmb3IodmFyIGc9bltvXS5hYnMsbT0wO208Zy5sZW5ndGg7bSsrKXt2YXIgeT1nW21dO2lmKHZvaWQgMCE9PXkuc3RhcnRBbmdsZSl7dmFyIHY9Qih5LnN0YXJ0QW5nbGUpLHc9Qih5LmVuZEFuZ2xlKSxiPXkueCx4PXkueTtBLmNhbGwodGhpcyxiLHgseS5yYWRpdXMsdix3LHkuY291bnRlcmNsb2Nrd2lzZSxyLGUpfWVsc2UgSS5jYWxsKHRoaXMseS54LHkueSl9aWYoIW5bb10uYXJjJiYhMCE9PW5bb10uY2xvc2UmJiEwIT09bltvXS5iZWdpbil7Yj1uW29dLnN0YXJ0LngseD1uW29dLnN0YXJ0Lnk7Qy5jYWxsKHRoaXMsbltvXS5kZWx0YXMsYix4LG51bGwsbnVsbCl9fXImJlMuY2FsbCh0aGlzLHIpLGUmJl8uY2FsbCh0aGlzKX19LGE9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5wZGYuaW50ZXJuYWwuZ2V0Rm9udFNpemUoKS90aGlzLnBkZi5pbnRlcm5hbC5zY2FsZUZhY3RvcixuPWUqKHRoaXMucGRmLmludGVybmFsLmdldExpbmVIZWlnaHRGYWN0b3IoKS0xKTtzd2l0Y2godGhpcy5jdHgudGV4dEJhc2VsaW5lKXtjYXNlXCJib3R0b21cIjpyZXR1cm4gdC1uO2Nhc2VcInRvcFwiOnJldHVybiB0K2UtbjtjYXNlXCJoYW5naW5nXCI6cmV0dXJuIHQrZS0yKm47Y2FzZVwibWlkZGxlXCI6cmV0dXJuIHQrZS8yLW47Y2FzZVwiaWRlb2dyYXBoaWNcIjpyZXR1cm4gdDtjYXNlXCJhbHBoYWJldGljXCI6ZGVmYXVsdDpyZXR1cm4gdH19O24ucHJvdG90eXBlLmNyZWF0ZUxpbmVhckdyYWRpZW50PWZ1bmN0aW9uKCl7dmFyIHQ9ZnVuY3Rpb24oKXt9O3JldHVybiB0LmNvbG9yU3RvcHM9W10sdC5hZGRDb2xvclN0b3A9ZnVuY3Rpb24odCxlKXt0aGlzLmNvbG9yU3RvcHMucHVzaChbdCxlXSl9LHQuZ2V0Q29sb3I9ZnVuY3Rpb24oKXtyZXR1cm4gMD09PXRoaXMuY29sb3JTdG9wcy5sZW5ndGg/XCIjMDAwMDAwXCI6dGhpcy5jb2xvclN0b3BzWzBdWzFdfSx0LmlzQ2FudmFzR3JhZGllbnQ9ITAsdH0sbi5wcm90b3R5cGUuY3JlYXRlUGF0dGVybj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNyZWF0ZUxpbmVhckdyYWRpZW50KCl9LG4ucHJvdG90eXBlLmNyZWF0ZVJhZGlhbEdyYWRpZW50PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3JlYXRlTGluZWFyR3JhZGllbnQoKX07dmFyIEE9ZnVuY3Rpb24odCxlLG4scixpLG8sYSxzKXt0aGlzLnBkZi5pbnRlcm5hbC5zY2FsZUZhY3Rvcjtmb3IodmFyIGw9eShyKSxoPXkoaSksdT1nLmNhbGwodGhpcyxuLGwsaCxvKSxjPTA7Yzx1Lmxlbmd0aDtjKyspe3ZhciBmPXVbY107MD09PWMmJnAuY2FsbCh0aGlzLGYueDErdCxmLnkxK2UpLGQuY2FsbCh0aGlzLHQsZSxmLngyLGYueTIsZi54MyxmLnkzLGYueDQsZi55NCl9cz9fLmNhbGwodGhpcyk6Uy5jYWxsKHRoaXMsYSl9LFM9ZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2VcInN0cm9rZVwiOnRoaXMucGRmLmludGVybmFsLm91dChcIlNcIik7YnJlYWs7Y2FzZVwiZmlsbFwiOnRoaXMucGRmLmludGVybmFsLm91dChcImZcIil9fSxfPWZ1bmN0aW9uKCl7dGhpcy5wZGYuY2xpcCgpfSxwPWZ1bmN0aW9uKHQsZSl7dGhpcy5wZGYuaW50ZXJuYWwub3V0KGkodCkrXCIgXCIrbyhlKStcIiBtXCIpfSxzPWZ1bmN0aW9uKHQpe3ZhciBlO3N3aXRjaCh0LmFsaWduKXtjYXNlXCJyaWdodFwiOmNhc2VcImVuZFwiOmU9XCJyaWdodFwiO2JyZWFrO2Nhc2VcImNlbnRlclwiOmU9XCJjZW50ZXJcIjticmVhaztjYXNlXCJsZWZ0XCI6Y2FzZVwic3RhcnRcIjpkZWZhdWx0OmU9XCJsZWZ0XCJ9dmFyIG49dGhpcy5jdHgudHJhbnNmb3JtLmFwcGx5VG9Qb2ludChuZXcgaih0LngsdC55KSkscj10aGlzLmN0eC50cmFuc2Zvcm0uZGVjb21wb3NlKCksaT1uZXcgTTtpPShpPShpPWkubXVsdGlwbHkoci50cmFuc2xhdGUpKS5tdWx0aXBseShyLnNrZXcpKS5tdWx0aXBseShyLnNjYWxlKTtmb3IodmFyIG8sYT10aGlzLnBkZi5nZXRUZXh0RGltZW5zaW9ucyh0LnRleHQpLHM9dGhpcy5jdHgudHJhbnNmb3JtLmFwcGx5VG9SZWN0YW5nbGUobmV3IEUodC54LHQueSxhLncsYS5oKSksbD1pLmFwcGx5VG9SZWN0YW5nbGUobmV3IEUodC54LHQueS1hLmgsYS53LGEuaCkpLGg9Ri5jYWxsKHRoaXMsbCksdT1bXSxjPTA7YzxoLmxlbmd0aDtjKz0xKS0xPT09dS5pbmRleE9mKGhbY10pJiZ1LnB1c2goaFtjXSk7aWYodS5zb3J0KCksITA9PT10aGlzLmF1dG9QYWdpbmcpZm9yKHZhciBmPXVbMF0scD11W3UubGVuZ3RoLTFdLGQ9ZjtkPHArMTtkKyspe2lmKHRoaXMucGRmLnNldFBhZ2UoZCksMCE9PXRoaXMuY3R4LmNsaXBfcGF0aC5sZW5ndGgpe3ZhciBnPXRoaXMucGF0aDtvPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5jdHguY2xpcF9wYXRoKSksdGhpcy5wYXRoPVAobyx0aGlzLnBvc1gsLTEqdGhpcy5wZGYuaW50ZXJuYWwucGFnZVNpemUuaGVpZ2h0KihkLTEpK3RoaXMucG9zWSksay5jYWxsKHRoaXMsXCJmaWxsXCIsITApLHRoaXMucGF0aD1nfXZhciBtPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocykpO2lmKG09UChbbV0sdGhpcy5wb3NYLC0xKnRoaXMucGRmLmludGVybmFsLnBhZ2VTaXplLmhlaWdodCooZC0xKSt0aGlzLnBvc1kpWzBdLC4wMTw9dC5zY2FsZSl7dmFyIHk9dGhpcy5wZGYuaW50ZXJuYWwuZ2V0Rm9udFNpemUoKTt0aGlzLnBkZi5zZXRGb250U2l6ZSh5KnQuc2NhbGUpfXRoaXMucGRmLnRleHQodC50ZXh0LG0ueCxtLnkse2FuZ2xlOnQuYW5nbGUsYWxpZ246ZSxyZW5kZXJpbmdNb2RlOnQucmVuZGVyaW5nTW9kZSxtYXhXaWR0aDp0Lm1heFdpZHRofSksLjAxPD10LnNjYWxlJiZ0aGlzLnBkZi5zZXRGb250U2l6ZSh5KX1lbHNle2lmKC4wMTw9dC5zY2FsZSl7eT10aGlzLnBkZi5pbnRlcm5hbC5nZXRGb250U2l6ZSgpO3RoaXMucGRmLnNldEZvbnRTaXplKHkqdC5zY2FsZSl9dGhpcy5wZGYudGV4dCh0LnRleHQsbi54K3RoaXMucG9zWCxuLnkrdGhpcy5wb3NZLHthbmdsZTp0LmFuZ2xlLGFsaWduOmUscmVuZGVyaW5nTW9kZTp0LnJlbmRlcmluZ01vZGUsbWF4V2lkdGg6dC5tYXhXaWR0aH0pLC4wMTw9dC5zY2FsZSYmdGhpcy5wZGYuc2V0Rm9udFNpemUoeSl9fSxJPWZ1bmN0aW9uKHQsZSxuLHIpe249bnx8MCxyPXJ8fDAsdGhpcy5wZGYuaW50ZXJuYWwub3V0KGkodCtuKStcIiBcIitvKGUrcikrXCIgbFwiKX0sQz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHRoaXMucGRmLmxpbmVzKHQsZSxuLG51bGwsbnVsbCl9LGQ9ZnVuY3Rpb24odCxlLG4scixpLG8sYSxzKXt0aGlzLnBkZi5pbnRlcm5hbC5vdXQoW2woaChuK3QpKSxsKHUocitlKSksbChoKGkrdCkpLGwodShvK2UpKSxsKGgoYSt0KSksbCh1KHMrZSkpLFwiY1wiXS5qb2luKFwiIFwiKSl9LGc9ZnVuY3Rpb24odCxlLG4scil7dmFyIGk9MipNYXRoLlBJLG89ZTsobzxpfHxpPG8pJiYobyU9aSk7dmFyIGE9bjsoYTxpfHxpPGEpJiYoYSU9aSk7Zm9yKHZhciBzPVtdLGw9TWF0aC5QSS8yLGg9cj8tMToxLHU9ZSxjPU1hdGgubWluKGksTWF0aC5hYnMoYS1vKSk7MWUtNTxjOyl7dmFyIGY9dStoKk1hdGgubWluKGMsbCk7cy5wdXNoKG0uY2FsbCh0aGlzLHQsdSxmKSksYy09TWF0aC5hYnMoZi11KSx1PWZ9cmV0dXJuIHN9LG09ZnVuY3Rpb24odCxlLG4pe3ZhciByPShuLWUpLzIsaT10Kk1hdGguY29zKHIpLG89dCpNYXRoLnNpbihyKSxhPWkscz0tbyxsPWEqYStzKnMsaD1sK2EqaStzKm8sdT00LzMqKE1hdGguc3FydCgyKmwqaCktaCkvKGEqby1zKmkpLGM9YS11KnMsZj1zK3UqYSxwPWMsZD0tZixnPXIrZSxtPU1hdGguY29zKGcpLHk9TWF0aC5zaW4oZyk7cmV0dXJue3gxOnQqTWF0aC5jb3MoZSkseTE6dCpNYXRoLnNpbihlKSx4MjpjKm0tZip5LHkyOmMqeStmKm0seDM6cCptLWQqeSx5MzpwKnkrZCptLHg0OnQqTWF0aC5jb3MobikseTQ6dCpNYXRoLnNpbihuKX19LEI9ZnVuY3Rpb24odCl7cmV0dXJuIDE4MCp0L01hdGguUEl9LHk9ZnVuY3Rpb24odCl7cmV0dXJuIHQqTWF0aC5QSS8xODB9LHc9ZnVuY3Rpb24odCxlLG4scixpLG8pe3ZhciBhPXQrLjUqKG4tdCkscz1lKy41KihyLWUpLGw9aSsuNSoobi1pKSxoPW8rLjUqKHItbyksdT1NYXRoLm1pbih0LGksYSxsKSxjPU1hdGgubWF4KHQsaSxhLGwpLGY9TWF0aC5taW4oZSxvLHMsaCkscD1NYXRoLm1heChlLG8scyxoKTtyZXR1cm4gbmV3IEUodSxmLGMtdSxwLWYpfSxiPWZ1bmN0aW9uKHQsZSxuLHIsaSxvLGEscyl7Zm9yKHZhciBsLGgsdSxjLGYscCxkLGcsbSx5LHYsdyxiLHg9bi10LE49ci1lLEw9aS1uLEE9by1yLFM9YS1pLF89cy1vLEY9MDtGPDQxO0YrKylnPShwPShoPXQrKGw9Ri80MCkqeCkrbCooKGM9bitsKkwpLWgpKStsKihjK2wqKGkrbCpTLWMpLXApLG09KGQ9KHU9ZStsKk4pK2wqKChmPXIrbCpBKS11KSkrbCooZitsKihvK2wqXy1mKS1kKSxiPTA9PUY/KHc9eT1nLHY9bSk6KHk9TWF0aC5taW4oeSxnKSx2PU1hdGgubWluKHYsbSksdz1NYXRoLm1heCh3LGcpLE1hdGgubWF4KGIsbSkpO3JldHVybiBuZXcgRShNYXRoLnJvdW5kKHkpLE1hdGgucm91bmQodiksTWF0aC5yb3VuZCh3LXkpLE1hdGgucm91bmQoYi12KSl9LGo9ZnVuY3Rpb24odCxlKXt2YXIgbj10fHwwO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwieFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBufSxzZXQ6ZnVuY3Rpb24odCl7aXNOYU4odCl8fChuPXBhcnNlRmxvYXQodCkpfX0pO3ZhciByPWV8fDA7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJ5XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHJ9LHNldDpmdW5jdGlvbih0KXtpc05hTih0KXx8KHI9cGFyc2VGbG9hdCh0KSl9fSk7dmFyIGk9XCJwdFwiO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaX0sc2V0OmZ1bmN0aW9uKHQpe2k9dC50b1N0cmluZygpfX0pLHRoaXN9LEU9ZnVuY3Rpb24odCxlLG4scil7ai5jYWxsKHRoaXMsdCxlKSx0aGlzLnR5cGU9XCJyZWN0XCI7dmFyIGk9bnx8MDtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcIndcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaX0sc2V0OmZ1bmN0aW9uKHQpe2lzTmFOKHQpfHwoaT1wYXJzZUZsb2F0KHQpKX19KTt2YXIgbz1yfHwwO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImhcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gb30sc2V0OmZ1bmN0aW9uKHQpe2lzTmFOKHQpfHwobz1wYXJzZUZsb2F0KHQpKX19KSx0aGlzfSxNPWZ1bmN0aW9uKHQsZSxuLHIsaSxvKXt2YXIgYT1bXTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJzeFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYVswXX0sc2V0OmZ1bmN0aW9uKHQpe2FbMF09TWF0aC5yb3VuZCgxZTUqdCkvMWU1fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwic2h5XCIse2dldDpmdW5jdGlvbigpe3JldHVybiBhWzFdfSxzZXQ6ZnVuY3Rpb24odCl7YVsxXT1NYXRoLnJvdW5kKDFlNSp0KS8xZTV9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJzaHhcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGFbMl19LHNldDpmdW5jdGlvbih0KXthWzJdPU1hdGgucm91bmQoMWU1KnQpLzFlNX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInN5XCIse2dldDpmdW5jdGlvbigpe3JldHVybiBhWzNdfSxzZXQ6ZnVuY3Rpb24odCl7YVszXT1NYXRoLnJvdW5kKDFlNSp0KS8xZTV9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJ0eFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYVs0XX0sc2V0OmZ1bmN0aW9uKHQpe2FbNF09TWF0aC5yb3VuZCgxZTUqdCkvMWU1fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwidHlcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGFbNV19LHNldDpmdW5jdGlvbih0KXthWzVdPU1hdGgucm91bmQoMWU1KnQpLzFlNX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInJvdGF0aW9uXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBNYXRoLmF0YW4yKHRoaXMuc2h4LHRoaXMuc3gpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwic2NhbGVYXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRlY29tcG9zZSgpLnNjYWxlLnN4fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwic2NhbGVZXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRlY29tcG9zZSgpLnNjYWxlLnN5fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiaXNJZGVudGl0eVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMT09PXRoaXMuc3gmJigwPT09dGhpcy5zaHkmJigwPT09dGhpcy5zaHgmJigxPT09dGhpcy5zeSYmKDA9PT10aGlzLnR4JiYwPT09dGhpcy50eSkpKSl9fSksdGhpcy5zeD1pc05hTih0KT8xOnQsdGhpcy5zaHk9aXNOYU4oZSk/MDplLHRoaXMuc2h4PWlzTmFOKG4pPzA6bix0aGlzLnN5PWlzTmFOKHIpPzE6cix0aGlzLnR4PWlzTmFOKGkpPzA6aSx0aGlzLnR5PWlzTmFOKG8pPzA6byx0aGlzfTtNLnByb3RvdHlwZS5tdWx0aXBseT1mdW5jdGlvbih0KXt2YXIgZT10LnN4KnRoaXMuc3grdC5zaHkqdGhpcy5zaHgsbj10LnN4KnRoaXMuc2h5K3Quc2h5KnRoaXMuc3kscj10LnNoeCp0aGlzLnN4K3Quc3kqdGhpcy5zaHgsaT10LnNoeCp0aGlzLnNoeSt0LnN5KnRoaXMuc3ksbz10LnR4KnRoaXMuc3grdC50eSp0aGlzLnNoeCt0aGlzLnR4LGE9dC50eCp0aGlzLnNoeSt0LnR5KnRoaXMuc3krdGhpcy50eTtyZXR1cm4gbmV3IE0oZSxuLHIsaSxvLGEpfSxNLnByb3RvdHlwZS5kZWNvbXBvc2U9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnN4LGU9dGhpcy5zaHksbj10aGlzLnNoeCxyPXRoaXMuc3ksaT10aGlzLnR4LG89dGhpcy50eSxhPU1hdGguc3FydCh0KnQrZSplKSxzPSh0Lz1hKSpuKyhlLz1hKSpyO24tPXQqcyxyLT1lKnM7dmFyIGw9TWF0aC5zcXJ0KG4qbityKnIpO3JldHVybiBzLz1sLHQqKHIvPWwpPGUqKG4vPWwpJiYodD0tdCxlPS1lLHM9LXMsYT0tYSkse3NjYWxlOm5ldyBNKGEsMCwwLGwsMCwwKSx0cmFuc2xhdGU6bmV3IE0oMSwwLDAsMSxpLG8pLHJvdGF0ZTpuZXcgTSh0LGUsLWUsdCwwLDApLHNrZXc6bmV3IE0oMSwwLHMsMSwwLDApfX0sTS5wcm90b3R5cGUuYXBwbHlUb1BvaW50PWZ1bmN0aW9uKHQpe3ZhciBlPXQueCp0aGlzLnN4K3QueSp0aGlzLnNoeCt0aGlzLnR4LG49dC54KnRoaXMuc2h5K3QueSp0aGlzLnN5K3RoaXMudHk7cmV0dXJuIG5ldyBqKGUsbil9LE0ucHJvdG90eXBlLmFwcGx5VG9SZWN0YW5nbGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5hcHBseVRvUG9pbnQodCksbj10aGlzLmFwcGx5VG9Qb2ludChuZXcgaih0LngrdC53LHQueSt0LmgpKTtyZXR1cm4gbmV3IEUoZS54LGUueSxuLngtZS54LG4ueS1lLnkpfSxNLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuc3gsZT10aGlzLnNoeSxuPXRoaXMuc2h4LHI9dGhpcy5zeSxpPXRoaXMudHgsbz10aGlzLnR5O3JldHVybiBuZXcgTSh0LGUsbixyLGksbyl9fShsdC5BUEksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGZ8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbCYmZ2xvYmFsfHxGdW5jdGlvbigncmV0dXJuIHR5cGVvZiB0aGlzID09PSBcIm9iamVjdFwiICYmIHRoaXMuY29udGVudCcpKCl8fEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSksXG4vKipcbiAgICoganNQREYgZmlsdGVycyBQbHVnSW5cbiAgICogQ29weXJpZ2h0IChjKSAyMDE0IEFyYXMgQWJiYXNpIFxuICAgKlxuICAgKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gICAqIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZVxuICAgKi9cbmE9bHQuQVBJLG89ZnVuY3Rpb24odCl7dmFyIHIsZSxuLGksbyxhLHMsbCxoLHU7Zm9yKC9bXlxceDAwLVxceEZGXS8udGVzdCh0KSxlPVtdLG49MCxpPSh0Kz1yPVwiXFwwXFwwXFwwXFwwXCIuc2xpY2UodC5sZW5ndGglNHx8NCkpLmxlbmd0aDtuPGk7bis9NCkwIT09KG89KHQuY2hhckNvZGVBdChuKTw8MjQpKyh0LmNoYXJDb2RlQXQobisxKTw8MTYpKyh0LmNoYXJDb2RlQXQobisyKTw8OCkrdC5jaGFyQ29kZUF0KG4rMykpPyhhPShvPSgobz0oKG89KChvPShvLSh1PW8lODUpKS84NSktKGg9byU4NSkpLzg1KS0obD1vJTg1KSkvODUpLShzPW8lODUpKS84NSklODUsZS5wdXNoKGErMzMscyszMyxsKzMzLGgrMzMsdSszMykpOmUucHVzaCgxMjIpO3JldHVybiBmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1yLmxlbmd0aDswPG47bi0tKXQucG9wKCl9KGUpLFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGUpK1wifj5cIn0scz1mdW5jdGlvbih0KXt2YXIgcixlLG4saSxvLGE9U3RyaW5nLHM9XCJsZW5ndGhcIixsPVwiY2hhckNvZGVBdFwiLGg9XCJzbGljZVwiLHU9XCJyZXBsYWNlXCI7Zm9yKHRbaF0oLTIpLHQ9dFtoXSgwLC0yKVt1XSgvXFxzL2csXCJcIilbdV0oXCJ6XCIsXCIhISEhIVwiKSxuPVtdLGk9MCxvPSh0Kz1yPVwidXV1dXVcIltoXSh0W3NdJTV8fDUpKVtzXTtpPG87aSs9NSllPTUyMjAwNjI1Kih0W2xdKGkpLTMzKSs2MTQxMjUqKHRbbF0oaSsxKS0zMykrNzIyNSoodFtsXShpKzIpLTMzKSs4NSoodFtsXShpKzMpLTMzKSsodFtsXShpKzQpLTMzKSxuLnB1c2goMjU1JmU+PjI0LDI1NSZlPj4xNiwyNTUmZT4+OCwyNTUmZSk7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXJbc107MDxuO24tLSl0LnBvcCgpfShuKSxhLmZyb21DaGFyQ29kZS5hcHBseShhLG4pfSxoPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1cIlwiLG49MDtuPHQubGVuZ3RoO24rPTEpZSs9KFwiMFwiK3QuY2hhckNvZGVBdChuKS50b1N0cmluZygxNikpLnNsaWNlKC0yKTtyZXR1cm4gZSs9XCI+XCJ9LHU9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IFJlZ0V4cCgvXihbMC05QS1GYS1mXXsyfSkrJC8pO2lmKC0xIT09KHQ9dC5yZXBsYWNlKC9cXHMvZyxcIlwiKSkuaW5kZXhPZihcIj5cIikmJih0PXQuc3Vic3RyKDAsdC5pbmRleE9mKFwiPlwiKSkpLHQubGVuZ3RoJTImJih0Kz1cIjBcIiksITE9PT1lLnRlc3QodCkpcmV0dXJuXCJcIjtmb3IodmFyIG49XCJcIixyPTA7cjx0Lmxlbmd0aDtyKz0yKW4rPVN0cmluZy5mcm9tQ2hhckNvZGUoXCIweFwiKyh0W3JdK3RbcisxXSkpO3JldHVybiBufSxjPWZ1bmN0aW9uKHQsZSl7ZT1PYmplY3QuYXNzaWduKHtwcmVkaWN0b3I6MSxjb2xvcnM6MSxiaXRzUGVyQ29tcG9uZW50OjgsY29sdW1uczoxfSxlKTtmb3IodmFyIG4scixpPVtdLG89dC5sZW5ndGg7by0tOylpW29dPXQuY2hhckNvZGVBdChvKTtyZXR1cm4gbj1hLmFkbGVyMzJjcy5mcm9tKHQpLChyPW5ldyBEZWZsYXRlcig2KSkuYXBwZW5kKG5ldyBVaW50OEFycmF5KGkpKSx0PXIuZmx1c2goKSwoaT1uZXcgVWludDhBcnJheSh0Lmxlbmd0aCs2KSkuc2V0KG5ldyBVaW50OEFycmF5KFsxMjAsMTU2XSkpLGkuc2V0KHQsMiksaS5zZXQobmV3IFVpbnQ4QXJyYXkoWzI1NSZuLG4+PjgmMjU1LG4+PjE2JjI1NSxuPj4yNCYyNTVdKSx0Lmxlbmd0aCsyKSx0PVN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxpKX0sYS5wcm9jZXNzRGF0YUJ5RmlsdGVycz1mdW5jdGlvbih0LGUpe3ZhciBuPTAscj10fHxcIlwiLGk9W107Zm9yKFwic3RyaW5nXCI9PXR5cGVvZihlPWV8fFtdKSYmKGU9W2VdKSxuPTA7bjxlLmxlbmd0aDtuKz0xKXN3aXRjaChlW25dKXtjYXNlXCJBU0NJSTg1RGVjb2RlXCI6Y2FzZVwiL0FTQ0lJODVEZWNvZGVcIjpyPXMociksaS5wdXNoKFwiL0FTQ0lJODVFbmNvZGVcIik7YnJlYWs7Y2FzZVwiQVNDSUk4NUVuY29kZVwiOmNhc2VcIi9BU0NJSTg1RW5jb2RlXCI6cj1vKHIpLGkucHVzaChcIi9BU0NJSTg1RGVjb2RlXCIpO2JyZWFrO2Nhc2VcIkFTQ0lJSGV4RGVjb2RlXCI6Y2FzZVwiL0FTQ0lJSGV4RGVjb2RlXCI6cj11KHIpLGkucHVzaChcIi9BU0NJSUhleEVuY29kZVwiKTticmVhaztjYXNlXCJBU0NJSUhleEVuY29kZVwiOmNhc2VcIi9BU0NJSUhleEVuY29kZVwiOnI9aChyKSxpLnB1c2goXCIvQVNDSUlIZXhEZWNvZGVcIik7YnJlYWs7Y2FzZVwiRmxhdGVFbmNvZGVcIjpjYXNlXCIvRmxhdGVFbmNvZGVcIjpyPWMociksaS5wdXNoKFwiL0ZsYXRlRGVjb2RlXCIpO2JyZWFrO2RlZmF1bHQ6dGhyb3cnVGhlIGZpbHRlcjogXCInK2Vbbl0rJ1wiIGlzIG5vdCBpbXBsZW1lbnRlZCd9cmV0dXJue2RhdGE6cixyZXZlcnNlQ2hhaW46aS5yZXZlcnNlKCkuam9pbihcIiBcIil9fSwoXG4vKipcbiAgICoganNQREYgZmlsZWxvYWRpbmcgUGx1Z0luXG4gICAqIENvcHlyaWdodCAoYykgMjAxOCBBcmFzIEFiYmFzaSAoYXJhcy5hYmJhc2lAZ21haWwuY29tKVxuICAgKlxuICAgKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gICAqIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZVxuICAgKi9cbnI9bHQuQVBJKS5sb2FkRmlsZT1mdW5jdGlvbih0LGUsbil7dmFyIHI7ZT1lfHwhMCxuPW58fGZ1bmN0aW9uKCl7fTt0cnl7cj1mdW5jdGlvbih0LGUsbil7dmFyIHI9bmV3IFhNTEh0dHBSZXF1ZXN0LGk9W10sbz0wLGE9ZnVuY3Rpb24odCl7dmFyIGU9dC5sZW5ndGgsbj1TdHJpbmcuZnJvbUNoYXJDb2RlO2ZvcihvPTA7bzxlO28rPTEpaS5wdXNoKG4oMjU1JnQuY2hhckNvZGVBdChvKSkpO3JldHVybiBpLmpvaW4oXCJcIil9O2lmKHIub3BlbihcIkdFVFwiLHQsIWUpLHIub3ZlcnJpZGVNaW1lVHlwZShcInRleHQvcGxhaW47IGNoYXJzZXQ9eC11c2VyLWRlZmluZWRcIiksITE9PT1lJiYoci5vbmxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gYSh0aGlzLnJlc3BvbnNlVGV4dCl9KSxyLnNlbmQobnVsbCksMjAwPT09ci5zdGF0dXMpcmV0dXJuIGU/YShyLnJlc3BvbnNlVGV4dCk6dm9pZCAwO2NvbnNvbGUud2FybignVW5hYmxlIHRvIGxvYWQgZmlsZSBcIicrdCsnXCInKX0odCxlKX1jYXRjaCh0KXtyPXZvaWQgMH1yZXR1cm4gcn0sci5sb2FkSW1hZ2VGaWxlPXIubG9hZEZpbGUsXG4vKipcbiAgICogQ29weXJpZ2h0IChjKSAyMDE4IEVyaWsgS29vcG1hbnNcbiAgICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICAgKlxuICAgKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gICAqIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZVxuICAgKi9cbmk9bHQuQVBJLGY9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93fHxcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsJiZnbG9iYWwsZz1mdW5jdGlvbih0KXt2YXIgZT1zZSh0KTtyZXR1cm5cInVuZGVmaW5lZFwiPT09ZT9cInVuZGVmaW5lZFwiOlwic3RyaW5nXCI9PT1lfHx0IGluc3RhbmNlb2YgU3RyaW5nP1wic3RyaW5nXCI6XCJudW1iZXJcIj09PWV8fHQgaW5zdGFuY2VvZiBOdW1iZXI/XCJudW1iZXJcIjpcImZ1bmN0aW9uXCI9PT1lfHx0IGluc3RhbmNlb2YgRnVuY3Rpb24/XCJmdW5jdGlvblwiOnQmJnQuY29uc3RydWN0b3I9PT1BcnJheT9cImFycmF5XCI6dCYmMT09PXQubm9kZVR5cGU/XCJlbGVtZW50XCI6XCJvYmplY3RcIj09PWU/XCJvYmplY3RcIjpcInVua25vd25cIn0sbT1mdW5jdGlvbih0LGUpe3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodCk7aWYoZS5jbGFzc05hbWUmJihuLmNsYXNzTmFtZT1lLmNsYXNzTmFtZSksZS5pbm5lckhUTUwpe24uaW5uZXJIVE1MPWUuaW5uZXJIVE1MO2Zvcih2YXIgcj1uLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpLGk9ci5sZW5ndGg7MDxpLS07bnVsbClyW2ldLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocltpXSl9Zm9yKHZhciBvIGluIGUuc3R5bGUpbi5zdHlsZVtvXT1lLnN0eWxlW29dO3JldHVybiBufSwoKCh5PWZ1bmN0aW9uIHQoZSl7dmFyIG49T2JqZWN0LmFzc2lnbih0LmNvbnZlcnQoUHJvbWlzZS5yZXNvbHZlKCkpLEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodC50ZW1wbGF0ZSkpKSxyPXQuY29udmVydChQcm9taXNlLnJlc29sdmUoKSxuKTtyZXR1cm4gcj0ocj1yLnNldFByb2dyZXNzKDEsdCwxLFt0XSkpLnNldChlKX0pLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFByb21pc2UucHJvdG90eXBlKSkuY29uc3RydWN0b3I9eSkuY29udmVydD1mdW5jdGlvbih0LGUpe3JldHVybiB0Ll9fcHJvdG9fXz1lfHx5LnByb3RvdHlwZSx0fSx5LnRlbXBsYXRlPXtwcm9wOntzcmM6bnVsbCxjb250YWluZXI6bnVsbCxvdmVybGF5Om51bGwsY2FudmFzOm51bGwsaW1nOm51bGwscGRmOm51bGwscGFnZVNpemU6bnVsbCxjYWxsYmFjazpmdW5jdGlvbigpe319LHByb2dyZXNzOnt2YWw6MCxzdGF0ZTpudWxsLG46MCxzdGFjazpbXX0sb3B0OntmaWxlbmFtZTpcImZpbGUucGRmXCIsbWFyZ2luOlswLDAsMCwwXSxlbmFibGVMaW5rczohMCx4OjAseTowLGh0bWwyY2FudmFzOnt9LGpzUERGOnt9fX0seS5wcm90b3R5cGUuZnJvbT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRoZW4oZnVuY3Rpb24oKXtzd2l0Y2goZT1lfHxmdW5jdGlvbih0KXtzd2l0Y2goZyh0KSl7Y2FzZVwic3RyaW5nXCI6cmV0dXJuXCJzdHJpbmdcIjtjYXNlXCJlbGVtZW50XCI6cmV0dXJuXCJjYW52YXNcIj09PXQubm9kZU5hbWUudG9Mb3dlckNhc2U/XCJjYW52YXNcIjpcImVsZW1lbnRcIjtkZWZhdWx0OnJldHVyblwidW5rbm93blwifX0odCkpe2Nhc2VcInN0cmluZ1wiOnJldHVybiB0aGlzLnNldCh7c3JjOm0oXCJkaXZcIix7aW5uZXJIVE1MOnR9KX0pO2Nhc2VcImVsZW1lbnRcIjpyZXR1cm4gdGhpcy5zZXQoe3NyYzp0fSk7Y2FzZVwiY2FudmFzXCI6cmV0dXJuIHRoaXMuc2V0KHtjYW52YXM6dH0pO2Nhc2VcImltZ1wiOnJldHVybiB0aGlzLnNldCh7aW1nOnR9KTtkZWZhdWx0OnJldHVybiB0aGlzLmVycm9yKFwiVW5rbm93biBzb3VyY2UgdHlwZS5cIil9fSl9LHkucHJvdG90eXBlLnRvPWZ1bmN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlXCJjb250YWluZXJcIjpyZXR1cm4gdGhpcy50b0NvbnRhaW5lcigpO2Nhc2VcImNhbnZhc1wiOnJldHVybiB0aGlzLnRvQ2FudmFzKCk7Y2FzZVwiaW1nXCI6cmV0dXJuIHRoaXMudG9JbWcoKTtjYXNlXCJwZGZcIjpyZXR1cm4gdGhpcy50b1BkZigpO2RlZmF1bHQ6cmV0dXJuIHRoaXMuZXJyb3IoXCJJbnZhbGlkIHRhcmdldC5cIil9fSx5LnByb3RvdHlwZS50b0NvbnRhaW5lcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRoZW5MaXN0KFtmdW5jdGlvbigpe3JldHVybiB0aGlzLnByb3Auc3JjfHx0aGlzLmVycm9yKFwiQ2Fubm90IGR1cGxpY2F0ZSAtIG5vIHNvdXJjZSBIVE1MLlwiKX0sZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcm9wLnBhZ2VTaXplfHx0aGlzLnNldFBhZ2VTaXplKCl9XSkudGhlbihmdW5jdGlvbigpe3ZhciB0PXtwb3NpdGlvbjpcInJlbGF0aXZlXCIsZGlzcGxheTpcImlubGluZS1ibG9ja1wiLHdpZHRoOk1hdGgubWF4KHRoaXMucHJvcC5zcmMuY2xpZW50V2lkdGgsdGhpcy5wcm9wLnNyYy5zY3JvbGxXaWR0aCx0aGlzLnByb3Auc3JjLm9mZnNldFdpZHRoKStcInB4XCIsbGVmdDowLHJpZ2h0OjAsdG9wOjAsbWFyZ2luOlwiYXV0b1wiLGJhY2tncm91bmRDb2xvcjpcIndoaXRlXCJ9LGU9ZnVuY3Rpb24gdChlLG4pe2Zvcih2YXIgcj0zPT09ZS5ub2RlVHlwZT9kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShlLm5vZGVWYWx1ZSk6ZS5jbG9uZU5vZGUoITEpLGk9ZS5maXJzdENoaWxkO2k7aT1pLm5leHRTaWJsaW5nKSEwIT09biYmMT09PWkubm9kZVR5cGUmJlwiU0NSSVBUXCI9PT1pLm5vZGVOYW1lfHxyLmFwcGVuZENoaWxkKHQoaSxuKSk7cmV0dXJuIDE9PT1lLm5vZGVUeXBlJiYoXCJDQU5WQVNcIj09PWUubm9kZU5hbWU/KHIud2lkdGg9ZS53aWR0aCxyLmhlaWdodD1lLmhlaWdodCxyLmdldENvbnRleHQoXCIyZFwiKS5kcmF3SW1hZ2UoZSwwLDApKTpcIlRFWFRBUkVBXCIhPT1lLm5vZGVOYW1lJiZcIlNFTEVDVFwiIT09ZS5ub2RlTmFtZXx8KHIudmFsdWU9ZS52YWx1ZSksci5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLGZ1bmN0aW9uKCl7ci5zY3JvbGxUb3A9ZS5zY3JvbGxUb3Asci5zY3JvbGxMZWZ0PWUuc2Nyb2xsTGVmdH0sITApKSxyfSh0aGlzLnByb3Auc3JjLHRoaXMub3B0Lmh0bWwyY2FudmFzLmphdmFzY3JpcHRFbmFibGVkKTtcIkJPRFlcIj09PWUudGFnTmFtZSYmKHQuaGVpZ2h0PU1hdGgubWF4KGRvY3VtZW50LmJvZHkuc2Nyb2xsSGVpZ2h0LGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0LGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQsZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQub2Zmc2V0SGVpZ2h0KStcInB4XCIpLHRoaXMucHJvcC5vdmVybGF5PW0oXCJkaXZcIix7Y2xhc3NOYW1lOlwiaHRtbDJwZGZfX292ZXJsYXlcIixzdHlsZTp7cG9zaXRpb246XCJmaXhlZFwiLG92ZXJmbG93OlwiaGlkZGVuXCIsekluZGV4OjFlMyxsZWZ0OlwiLTEwMDAwMHB4XCIscmlnaHQ6MCxib3R0b206MCx0b3A6MH19KSx0aGlzLnByb3AuY29udGFpbmVyPW0oXCJkaXZcIix7Y2xhc3NOYW1lOlwiaHRtbDJwZGZfX2NvbnRhaW5lclwiLHN0eWxlOnR9KSx0aGlzLnByb3AuY29udGFpbmVyLmFwcGVuZENoaWxkKGUpLHRoaXMucHJvcC5jb250YWluZXIuZmlyc3RDaGlsZC5hcHBlbmRDaGlsZChtKFwiZGl2XCIse3N0eWxlOntjbGVhcjpcImJvdGhcIixib3JkZXI6XCIwIG5vbmUgdHJhbnNwYXJlbnRcIixtYXJnaW46MCxwYWRkaW5nOjAsaGVpZ2h0OjB9fSkpLHRoaXMucHJvcC5jb250YWluZXIuc3R5bGUuZmxvYXQ9XCJub25lXCIsdGhpcy5wcm9wLm92ZXJsYXkuYXBwZW5kQ2hpbGQodGhpcy5wcm9wLmNvbnRhaW5lciksZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLnByb3Aub3ZlcmxheSksdGhpcy5wcm9wLmNvbnRhaW5lci5maXJzdENoaWxkLnN0eWxlLnBvc2l0aW9uPVwicmVsYXRpdmVcIix0aGlzLnByb3AuY29udGFpbmVyLmhlaWdodD1NYXRoLm1heCh0aGlzLnByb3AuY29udGFpbmVyLmZpcnN0Q2hpbGQuY2xpZW50SGVpZ2h0LHRoaXMucHJvcC5jb250YWluZXIuZmlyc3RDaGlsZC5zY3JvbGxIZWlnaHQsdGhpcy5wcm9wLmNvbnRhaW5lci5maXJzdENoaWxkLm9mZnNldEhlaWdodCkrXCJweFwifSl9LHkucHJvdG90eXBlLnRvQ2FudmFzPWZ1bmN0aW9uKCl7dmFyIHQ9W2Z1bmN0aW9uKCl7cmV0dXJuIGRvY3VtZW50LmJvZHkuY29udGFpbnModGhpcy5wcm9wLmNvbnRhaW5lcil8fHRoaXMudG9Db250YWluZXIoKX1dO3JldHVybiB0aGlzLnRoZW5MaXN0KHQpLnRoZW4oZnVuY3Rpb24oKXt2YXIgdD1PYmplY3QuYXNzaWduKHt9LHRoaXMub3B0Lmh0bWwyY2FudmFzKTtpZihkZWxldGUgdC5vbnJlbmRlcmVkLHRoaXMuaXNIdG1sMkNhbnZhc0xvYWRlZCgpKXJldHVybiBodG1sMmNhbnZhcyh0aGlzLnByb3AuY29udGFpbmVyLHQpfSkudGhlbihmdW5jdGlvbih0KXsodGhpcy5vcHQuaHRtbDJjYW52YXMub25yZW5kZXJlZHx8ZnVuY3Rpb24oKXt9KSh0KSx0aGlzLnByb3AuY2FudmFzPXQsZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLnByb3Aub3ZlcmxheSl9KX0seS5wcm90b3R5cGUudG9Db250ZXh0MmQ9ZnVuY3Rpb24oKXt2YXIgdD1bZnVuY3Rpb24oKXtyZXR1cm4gZG9jdW1lbnQuYm9keS5jb250YWlucyh0aGlzLnByb3AuY29udGFpbmVyKXx8dGhpcy50b0NvbnRhaW5lcigpfV07cmV0dXJuIHRoaXMudGhlbkxpc3QodCkudGhlbihmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0LmpzUERGLGU9T2JqZWN0LmFzc2lnbih7YXN5bmM6ITAsYWxsb3dUYWludDohMCxiYWNrZ3JvdW5kQ29sb3I6XCIjZmZmZmZmXCIsaW1hZ2VUaW1lb3V0OjE1ZTMsbG9nZ2luZzohMCxwcm94eTpudWxsLHJlbW92ZUNvbnRhaW5lcjohMCxmb3JlaWduT2JqZWN0UmVuZGVyaW5nOiExLHVzZUNPUlM6ITF9LHRoaXMub3B0Lmh0bWwyY2FudmFzKTtpZihkZWxldGUgZS5vbnJlbmRlcmVkLHQuY29udGV4dDJkLmF1dG9QYWdpbmc9ITAsdC5jb250ZXh0MmQucG9zWD10aGlzLm9wdC54LHQuY29udGV4dDJkLnBvc1k9dGhpcy5vcHQueSxlLndpbmRvd0hlaWdodD1lLndpbmRvd0hlaWdodHx8MCxlLndpbmRvd0hlaWdodD0wPT1lLndpbmRvd0hlaWdodD9NYXRoLm1heCh0aGlzLnByb3AuY29udGFpbmVyLmNsaWVudEhlaWdodCx0aGlzLnByb3AuY29udGFpbmVyLnNjcm9sbEhlaWdodCx0aGlzLnByb3AuY29udGFpbmVyLm9mZnNldEhlaWdodCk6ZS53aW5kb3dIZWlnaHQsdGhpcy5pc0h0bWwyQ2FudmFzTG9hZGVkKCkpcmV0dXJuIGh0bWwyY2FudmFzKHRoaXMucHJvcC5jb250YWluZXIsZSl9KS50aGVuKGZ1bmN0aW9uKHQpeyh0aGlzLm9wdC5odG1sMmNhbnZhcy5vbnJlbmRlcmVkfHxmdW5jdGlvbigpe30pKHQpLHRoaXMucHJvcC5jYW52YXM9dCxkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMucHJvcC5vdmVybGF5KX0pfSx5LnByb3RvdHlwZS50b0ltZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRoZW5MaXN0KFtmdW5jdGlvbigpe3JldHVybiB0aGlzLnByb3AuY2FudmFzfHx0aGlzLnRvQ2FudmFzKCl9XSkudGhlbihmdW5jdGlvbigpe3ZhciB0PXRoaXMucHJvcC5jYW52YXMudG9EYXRhVVJMKFwiaW1hZ2UvXCIrdGhpcy5vcHQuaW1hZ2UudHlwZSx0aGlzLm9wdC5pbWFnZS5xdWFsaXR5KTt0aGlzLnByb3AuaW1nPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiksdGhpcy5wcm9wLmltZy5zcmM9dH0pfSx5LnByb3RvdHlwZS50b1BkZj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRoZW5MaXN0KFtmdW5jdGlvbigpe3JldHVybiB0aGlzLnRvQ29udGV4dDJkKCl9XSkudGhlbihmdW5jdGlvbigpe3RoaXMucHJvcC5wZGY9dGhpcy5wcm9wLnBkZnx8dGhpcy5vcHQuanNQREZ9KX0seS5wcm90b3R5cGUub3V0cHV0PWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm5cImltZ1wiPT09KG49bnx8XCJwZGZcIikudG9Mb3dlckNhc2UoKXx8XCJpbWFnZVwiPT09bi50b0xvd2VyQ2FzZSgpP3RoaXMub3V0cHV0SW1nKHQsZSk6dGhpcy5vdXRwdXRQZGYodCxlKX0seS5wcm90b3R5cGUub3V0cHV0UGRmPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGhlbkxpc3QoW2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJvcC5wZGZ8fHRoaXMudG9QZGYoKX1dKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJvcC5wZGYub3V0cHV0KHQsZSl9KX0seS5wcm90b3R5cGUub3V0cHV0SW1nPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGhlbkxpc3QoW2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJvcC5pbWd8fHRoaXMudG9JbWcoKX1dKS50aGVuKGZ1bmN0aW9uKCl7c3dpdGNoKHQpe2Nhc2Ugdm9pZCAwOmNhc2VcImltZ1wiOnJldHVybiB0aGlzLnByb3AuaW1nO2Nhc2VcImRhdGF1cmlzdHJpbmdcIjpjYXNlXCJkYXRhdXJsc3RyaW5nXCI6cmV0dXJuIHRoaXMucHJvcC5pbWcuc3JjO2Nhc2VcImRhdGF1cmlcIjpjYXNlXCJkYXRhdXJsXCI6cmV0dXJuIGRvY3VtZW50LmxvY2F0aW9uLmhyZWY9dGhpcy5wcm9wLmltZy5zcmM7ZGVmYXVsdDp0aHJvdydJbWFnZSBvdXRwdXQgdHlwZSBcIicrdCsnXCIgaXMgbm90IHN1cHBvcnRlZC4nfX0pfSx5LnByb3RvdHlwZS5pc0h0bWwyQ2FudmFzTG9hZGVkPWZ1bmN0aW9uKCl7dmFyIHQ9dm9pZCAwIT09Zi5odG1sMmNhbnZhcztyZXR1cm4gdHx8Y29uc29sZS5lcnJvcihcImh0bWwyY2FudmFzIG5vdCBsb2FkZWQuXCIpLHR9LHkucHJvdG90eXBlLnNhdmU9ZnVuY3Rpb24odCl7aWYodGhpcy5pc0h0bWwyQ2FudmFzTG9hZGVkKCkpcmV0dXJuIHRoaXMudGhlbkxpc3QoW2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJvcC5wZGZ8fHRoaXMudG9QZGYoKX1dKS5zZXQodD97ZmlsZW5hbWU6dH06bnVsbCkudGhlbihmdW5jdGlvbigpe3RoaXMucHJvcC5wZGYuc2F2ZSh0aGlzLm9wdC5maWxlbmFtZSl9KX0seS5wcm90b3R5cGUuZG9DYWxsYmFjaz1mdW5jdGlvbih0KXtpZih0aGlzLmlzSHRtbDJDYW52YXNMb2FkZWQoKSlyZXR1cm4gdGhpcy50aGVuTGlzdChbZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcm9wLnBkZnx8dGhpcy50b1BkZigpfV0pLnRoZW4oZnVuY3Rpb24oKXt0aGlzLnByb3AuY2FsbGJhY2sodGhpcy5wcm9wLnBkZil9KX0seS5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUpe2lmKFwib2JqZWN0XCIhPT1nKGUpKXJldHVybiB0aGlzO3ZhciB0PU9iamVjdC5rZXlzKGV8fHt9KS5tYXAoZnVuY3Rpb24odCl7aWYodCBpbiB5LnRlbXBsYXRlLnByb3ApcmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5wcm9wW3RdPWVbdF19O3N3aXRjaCh0KXtjYXNlXCJtYXJnaW5cIjpyZXR1cm4gdGhpcy5zZXRNYXJnaW4uYmluZCh0aGlzLGUubWFyZ2luKTtjYXNlXCJqc1BERlwiOnJldHVybiBmdW5jdGlvbigpe3JldHVybiB0aGlzLm9wdC5qc1BERj1lLmpzUERGLHRoaXMuc2V0UGFnZVNpemUoKX07Y2FzZVwicGFnZVNpemVcIjpyZXR1cm4gdGhpcy5zZXRQYWdlU2l6ZS5iaW5kKHRoaXMsZS5wYWdlU2l6ZSk7ZGVmYXVsdDpyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLm9wdFt0XT1lW3RdfX19LHRoaXMpO3JldHVybiB0aGlzLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aGVuTGlzdCh0KX0pfSx5LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdGhpcy50aGVuKGZ1bmN0aW9uKCl7dmFyIHQ9ZSBpbiB5LnRlbXBsYXRlLnByb3A/dGhpcy5wcm9wW2VdOnRoaXMub3B0W2VdO3JldHVybiBuP24odCk6dH0pfSx5LnByb3RvdHlwZS5zZXRNYXJnaW49ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhlbihmdW5jdGlvbigpe3N3aXRjaChnKHQpKXtjYXNlXCJudW1iZXJcIjp0PVt0LHQsdCx0XTtjYXNlXCJhcnJheVwiOmlmKDI9PT10Lmxlbmd0aCYmKHQ9W3RbMF0sdFsxXSx0WzBdLHRbMV1dKSw0PT09dC5sZW5ndGgpYnJlYWs7ZGVmYXVsdDpyZXR1cm4gdGhpcy5lcnJvcihcIkludmFsaWQgbWFyZ2luIGFycmF5LlwiKX10aGlzLm9wdC5tYXJnaW49dH0pLnRoZW4odGhpcy5zZXRQYWdlU2l6ZSl9LHkucHJvdG90eXBlLnNldFBhZ2VTaXplPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUodCxlKXtyZXR1cm4gTWF0aC5mbG9vcih0KmUvNzIqOTYpfXJldHVybiB0aGlzLnRoZW4oZnVuY3Rpb24oKXsodD10fHxsdC5nZXRQYWdlU2l6ZSh0aGlzLm9wdC5qc1BERikpLmhhc093blByb3BlcnR5KFwiaW5uZXJcIil8fCh0LmlubmVyPXt3aWR0aDp0LndpZHRoLXRoaXMub3B0Lm1hcmdpblsxXS10aGlzLm9wdC5tYXJnaW5bM10saGVpZ2h0OnQuaGVpZ2h0LXRoaXMub3B0Lm1hcmdpblswXS10aGlzLm9wdC5tYXJnaW5bMl19LHQuaW5uZXIucHg9e3dpZHRoOmUodC5pbm5lci53aWR0aCx0LmspLGhlaWdodDplKHQuaW5uZXIuaGVpZ2h0LHQuayl9LHQuaW5uZXIucmF0aW89dC5pbm5lci5oZWlnaHQvdC5pbm5lci53aWR0aCksdGhpcy5wcm9wLnBhZ2VTaXplPXR9KX0seS5wcm90b3R5cGUuc2V0UHJvZ3Jlc3M9ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIG51bGwhPXQmJih0aGlzLnByb2dyZXNzLnZhbD10KSxudWxsIT1lJiYodGhpcy5wcm9ncmVzcy5zdGF0ZT1lKSxudWxsIT1uJiYodGhpcy5wcm9ncmVzcy5uPW4pLG51bGwhPXImJih0aGlzLnByb2dyZXNzLnN0YWNrPXIpLHRoaXMucHJvZ3Jlc3MucmF0aW89dGhpcy5wcm9ncmVzcy52YWwvdGhpcy5wcm9ncmVzcy5zdGF0ZSx0aGlzfSx5LnByb3RvdHlwZS51cGRhdGVQcm9ncmVzcz1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gdGhpcy5zZXRQcm9ncmVzcyh0P3RoaXMucHJvZ3Jlc3MudmFsK3Q6bnVsbCxlfHxudWxsLG4/dGhpcy5wcm9ncmVzcy5uK246bnVsbCxyP3RoaXMucHJvZ3Jlc3Muc3RhY2suY29uY2F0KHIpOm51bGwpfSx5LnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gdGhpcy50aGVuQ29yZSh0LGUsZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi51cGRhdGVQcm9ncmVzcyhudWxsLG51bGwsMSxbZV0pLFByb21pc2UucHJvdG90eXBlLnRoZW4uY2FsbCh0aGlzLGZ1bmN0aW9uKHQpe3JldHVybiBuLnVwZGF0ZVByb2dyZXNzKG51bGwsZSksdH0pLnRoZW4oZSx0KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBuLnVwZGF0ZVByb2dyZXNzKDEpLHR9KX0pfSx5LnByb3RvdHlwZS50aGVuQ29yZT1mdW5jdGlvbih0LGUsbil7bj1ufHxQcm9taXNlLnByb3RvdHlwZS50aGVuO3ZhciByPXRoaXM7dCYmKHQ9dC5iaW5kKHIpKSxlJiYoZT1lLmJpbmQocikpO3ZhciBpPS0xIT09UHJvbWlzZS50b1N0cmluZygpLmluZGV4T2YoXCJbbmF0aXZlIGNvZGVdXCIpJiZcIlByb21pc2VcIj09PVByb21pc2UubmFtZT9yOnkuY29udmVydChPYmplY3QuYXNzaWduKHt9LHIpLFByb21pc2UucHJvdG90eXBlKSxvPW4uY2FsbChpLHQsZSk7cmV0dXJuIHkuY29udmVydChvLHIuX19wcm90b19fKX0seS5wcm90b3R5cGUudGhlbkV4dGVybmFsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIFByb21pc2UucHJvdG90eXBlLnRoZW4uY2FsbCh0aGlzLHQsZSl9LHkucHJvdG90eXBlLnRoZW5MaXN0PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbih0KXtlPWUudGhlbkNvcmUodCl9KSxlfSx5LnByb3RvdHlwZS5jYXRjaD1mdW5jdGlvbih0KXt0JiYodD10LmJpbmQodGhpcykpO3ZhciBlPVByb21pc2UucHJvdG90eXBlLmNhdGNoLmNhbGwodGhpcyx0KTtyZXR1cm4geS5jb252ZXJ0KGUsdGhpcyl9LHkucHJvdG90eXBlLmNhdGNoRXh0ZXJuYWw9ZnVuY3Rpb24odCl7cmV0dXJuIFByb21pc2UucHJvdG90eXBlLmNhdGNoLmNhbGwodGhpcyx0KX0seS5wcm90b3R5cGUuZXJyb3I9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhlbihmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcih0KX0pfSx5LnByb3RvdHlwZS51c2luZz15LnByb3RvdHlwZS5zZXQseS5wcm90b3R5cGUuc2F2ZUFzPXkucHJvdG90eXBlLnNhdmUseS5wcm90b3R5cGUuZXhwb3J0PXkucHJvdG90eXBlLm91dHB1dCx5LnByb3RvdHlwZS5ydW49eS5wcm90b3R5cGUudGhlbixsdC5nZXRQYWdlU2l6ZT1mdW5jdGlvbih0LGUsbil7aWYoXCJvYmplY3RcIj09PXNlKHQpKXt2YXIgcj10O3Q9ci5vcmllbnRhdGlvbixlPXIudW5pdHx8ZSxuPXIuZm9ybWF0fHxufWU9ZXx8XCJtbVwiLG49bnx8XCJhNFwiLHQ9KFwiXCIrKHR8fFwiUFwiKSkudG9Mb3dlckNhc2UoKTt2YXIgaT0oXCJcIituKS50b0xvd2VyQ2FzZSgpLG89e2EwOlsyMzgzLjk0LDMzNzAuMzldLGExOlsxNjgzLjc4LDIzODMuOTRdLGEyOlsxMTkwLjU1LDE2ODMuNzhdLGEzOls4NDEuODksMTE5MC41NV0sYTQ6WzU5NS4yOCw4NDEuODldLGE1Ols0MTkuNTMsNTk1LjI4XSxhNjpbMjk3LjY0LDQxOS41M10sYTc6WzIwOS43NiwyOTcuNjRdLGE4OlsxNDcuNCwyMDkuNzZdLGE5OlsxMDQuODgsMTQ3LjRdLGExMDpbNzMuNywxMDQuODhdLGIwOlsyODM0LjY1LDQwMDguMTldLGIxOlsyMDA0LjA5LDI4MzQuNjVdLGIyOlsxNDE3LjMyLDIwMDQuMDldLGIzOlsxMDAwLjYzLDE0MTcuMzJdLGI0Ols3MDguNjYsMTAwMC42M10sYjU6WzQ5OC45LDcwOC42Nl0sYjY6WzM1NC4zMyw0OTguOV0sYjc6WzI0OS40NSwzNTQuMzNdLGI4OlsxNzUuNzUsMjQ5LjQ1XSxiOTpbMTI0LjcyLDE3NS43NV0sYjEwOls4Ny44NywxMjQuNzJdLGMwOlsyNTk5LjM3LDM2NzYuNTRdLGMxOlsxODM2Ljg1LDI1OTkuMzddLGMyOlsxMjk4LjI3LDE4MzYuODVdLGMzOls5MTguNDMsMTI5OC4yN10sYzQ6WzY0OS4xMyw5MTguNDNdLGM1Ols0NTkuMjEsNjQ5LjEzXSxjNjpbMzIzLjE1LDQ1OS4yMV0sYzc6WzIyOS42MSwzMjMuMTVdLGM4OlsxNjEuNTcsMjI5LjYxXSxjOTpbMTEzLjM5LDE2MS41N10sYzEwOls3OS4zNywxMTMuMzldLGRsOlszMTEuODEsNjIzLjYyXSxsZXR0ZXI6WzYxMiw3OTJdLFwiZ292ZXJubWVudC1sZXR0ZXJcIjpbNTc2LDc1Nl0sbGVnYWw6WzYxMiwxMDA4XSxcImp1bmlvci1sZWdhbFwiOls1NzYsMzYwXSxsZWRnZXI6WzEyMjQsNzkyXSx0YWJsb2lkOls3OTIsMTIyNF0sXCJjcmVkaXQtY2FyZFwiOlsxNTMsMjQzXX07c3dpdGNoKGUpe2Nhc2VcInB0XCI6dmFyIGE9MTticmVhaztjYXNlXCJtbVwiOmE9NzIvMjUuNDticmVhaztjYXNlXCJjbVwiOmE9NzIvMi41NDticmVhaztjYXNlXCJpblwiOmE9NzI7YnJlYWs7Y2FzZVwicHhcIjphPS43NTticmVhaztjYXNlXCJwY1wiOmNhc2VcImVtXCI6YT0xMjticmVhaztjYXNlXCJleFwiOmE9NjticmVhaztkZWZhdWx0OnRocm93XCJJbnZhbGlkIHVuaXQ6IFwiK2V9aWYoby5oYXNPd25Qcm9wZXJ0eShpKSl2YXIgcz1vW2ldWzFdL2EsbD1vW2ldWzBdL2E7ZWxzZSB0cnl7cz1uWzFdLGw9blswXX1jYXRjaCh0KXt0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGZvcm1hdDogXCIrbil9aWYoXCJwXCI9PT10fHxcInBvcnRyYWl0XCI9PT10KXtpZih0PVwicFwiLHM8bCl7dmFyIGg9bDtsPXMscz1ofX1lbHNle2lmKFwibFwiIT09dCYmXCJsYW5kc2NhcGVcIiE9PXQpdGhyb3dcIkludmFsaWQgb3JpZW50YXRpb246IFwiK3Q7dD1cImxcIixsPHMmJihoPWwsbD1zLHM9aCl9cmV0dXJue3dpZHRoOmwsaGVpZ2h0OnMsdW5pdDplLGs6YX19LGkuaHRtbD1mdW5jdGlvbih0LGUpeyhlPWV8fHt9KS5jYWxsYmFjaz1lLmNhbGxiYWNrfHxmdW5jdGlvbigpe30sZS5odG1sMmNhbnZhcz1lLmh0bWwyY2FudmFzfHx7fSxlLmh0bWwyY2FudmFzLmNhbnZhcz1lLmh0bWwyY2FudmFzLmNhbnZhc3x8dGhpcy5jYW52YXMsZS5qc1BERj1lLmpzUERGfHx0aGlzLGUuanNQREY7dmFyIG49bmV3IHkoZSk7cmV0dXJuIGUud29ya2VyP246bi5mcm9tKHQpLmRvQ2FsbGJhY2soKX0sbHQuQVBJLmFkZEpTPWZ1bmN0aW9uKHQpe3JldHVybiBiPXQsdGhpcy5pbnRlcm5hbC5ldmVudHMuc3Vic2NyaWJlKFwicG9zdFB1dFJlc291cmNlc1wiLGZ1bmN0aW9uKHQpe3Y9dGhpcy5pbnRlcm5hbC5uZXdPYmplY3QoKSx0aGlzLmludGVybmFsLm91dChcIjw8XCIpLHRoaXMuaW50ZXJuYWwub3V0KFwiL05hbWVzIFsoRW1iZWRkZWRKUykgXCIrKHYrMSkrXCIgMCBSXVwiKSx0aGlzLmludGVybmFsLm91dChcIj4+XCIpLHRoaXMuaW50ZXJuYWwub3V0KFwiZW5kb2JqXCIpLHc9dGhpcy5pbnRlcm5hbC5uZXdPYmplY3QoKSx0aGlzLmludGVybmFsLm91dChcIjw8XCIpLHRoaXMuaW50ZXJuYWwub3V0KFwiL1MgL0phdmFTY3JpcHRcIiksdGhpcy5pbnRlcm5hbC5vdXQoXCIvSlMgKFwiK2IrXCIpXCIpLHRoaXMuaW50ZXJuYWwub3V0KFwiPj5cIiksdGhpcy5pbnRlcm5hbC5vdXQoXCJlbmRvYmpcIil9KSx0aGlzLmludGVybmFsLmV2ZW50cy5zdWJzY3JpYmUoXCJwdXRDYXRhbG9nXCIsZnVuY3Rpb24oKXt2b2lkIDAhPT12JiZ2b2lkIDAhPT13JiZ0aGlzLmludGVybmFsLm91dChcIi9OYW1lcyA8PC9KYXZhU2NyaXB0IFwiK3YrXCIgMCBSPj5cIil9KSx0aGlzfSwoXG4vKipcbiAgICogQGxpY2Vuc2VcbiAgICogQ29weXJpZ2h0IChjKSAyMDE0IFN0ZXZlbiBTcHVuZ2luIChUd2VsdmVUb25lIExMQykgIHN0ZXZlbkB0d2VsdmV0b25lLnR2XG4gICAqXG4gICAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAgICogaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlXG4gICAqL1xueD1sdC5BUEkpLmV2ZW50cy5wdXNoKFtcInBvc3RQdXRSZXNvdXJjZXNcIixmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT0vXihcXGQrKSAwIG9iaiQvO2lmKDA8dGhpcy5vdXRsaW5lLnJvb3QuY2hpbGRyZW4ubGVuZ3RoKWZvcih2YXIgbj10Lm91dGxpbmUucmVuZGVyKCkuc3BsaXQoL1xcclxcbi8pLHI9MDtyPG4ubGVuZ3RoO3IrKyl7dmFyIGk9bltyXSxvPWUuZXhlYyhpKTtpZihudWxsIT1vKXt2YXIgYT1vWzFdO3QuaW50ZXJuYWwubmV3T2JqZWN0RGVmZXJyZWRCZWdpbihhLCExKX10LmludGVybmFsLndyaXRlKGkpfWlmKHRoaXMub3V0bGluZS5jcmVhdGVOYW1lZERlc3RpbmF0aW9ucyl7dmFyIHM9dGhpcy5pbnRlcm5hbC5wYWdlcy5sZW5ndGgsbD1bXTtmb3Iocj0wO3I8cztyKyspe3ZhciBoPXQuaW50ZXJuYWwubmV3T2JqZWN0KCk7bC5wdXNoKGgpO3ZhciB1PXQuaW50ZXJuYWwuZ2V0UGFnZUluZm8ocisxKTt0LmludGVybmFsLndyaXRlKFwiPDwgL0RbXCIrdS5vYmpJZCtcIiAwIFIgL1hZWiBudWxsIG51bGwgbnVsbF0+PiBlbmRvYmpcIil9dmFyIGM9dC5pbnRlcm5hbC5uZXdPYmplY3QoKTtmb3IodC5pbnRlcm5hbC53cml0ZShcIjw8IC9OYW1lcyBbIFwiKSxyPTA7cjxsLmxlbmd0aDtyKyspdC5pbnRlcm5hbC53cml0ZShcIihwYWdlX1wiKyhyKzEpK1wiKVwiK2xbcl0rXCIgMCBSXCIpO3QuaW50ZXJuYWwud3JpdGUoXCIgXSA+PlwiLFwiZW5kb2JqXCIpLHQuaW50ZXJuYWwubmV3T2JqZWN0KCksdC5pbnRlcm5hbC53cml0ZShcIjw8IC9EZXN0cyBcIitjK1wiIDAgUlwiKSx0LmludGVybmFsLndyaXRlKFwiPj5cIixcImVuZG9ialwiKX19XSkseC5ldmVudHMucHVzaChbXCJwdXRDYXRhbG9nXCIsZnVuY3Rpb24oKXswPHRoaXMub3V0bGluZS5yb290LmNoaWxkcmVuLmxlbmd0aCYmKHRoaXMuaW50ZXJuYWwud3JpdGUoXCIvT3V0bGluZXNcIix0aGlzLm91dGxpbmUubWFrZVJlZih0aGlzLm91dGxpbmUucm9vdCkpLHRoaXMub3V0bGluZS5jcmVhdGVOYW1lZERlc3RpbmF0aW9ucyYmdGhpcy5pbnRlcm5hbC53cml0ZShcIi9OYW1lcyBcIituYW1lc09pZCtcIiAwIFJcIikpfV0pLHguZXZlbnRzLnB1c2goW1wiaW5pdGlhbGl6ZWRcIixmdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5vdXRsaW5lPXtjcmVhdGVOYW1lZERlc3RpbmF0aW9uczohMSxyb290OntjaGlsZHJlbjpbXX19LGEub3V0bGluZS5hZGQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXt0aXRsZTplLG9wdGlvbnM6bixjaGlsZHJlbjpbXX07cmV0dXJuIG51bGw9PXQmJih0PXRoaXMucm9vdCksdC5jaGlsZHJlbi5wdXNoKHIpLHJ9LGEub3V0bGluZS5yZW5kZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdHg9e30sdGhpcy5jdHgudmFsPVwiXCIsdGhpcy5jdHgucGRmPWEsdGhpcy5nZW5JZHNfcih0aGlzLnJvb3QpLHRoaXMucmVuZGVyUm9vdCh0aGlzLnJvb3QpLHRoaXMucmVuZGVySXRlbXModGhpcy5yb290KSx0aGlzLmN0eC52YWx9LGEub3V0bGluZS5nZW5JZHNfcj1mdW5jdGlvbih0KXt0LmlkPWEuaW50ZXJuYWwubmV3T2JqZWN0RGVmZXJyZWQoKTtmb3IodmFyIGU9MDtlPHQuY2hpbGRyZW4ubGVuZ3RoO2UrKyl0aGlzLmdlbklkc19yKHQuY2hpbGRyZW5bZV0pfSxhLm91dGxpbmUucmVuZGVyUm9vdD1mdW5jdGlvbih0KXt0aGlzLm9ialN0YXJ0KHQpLHRoaXMubGluZShcIi9UeXBlIC9PdXRsaW5lc1wiKSwwPHQuY2hpbGRyZW4ubGVuZ3RoJiYodGhpcy5saW5lKFwiL0ZpcnN0IFwiK3RoaXMubWFrZVJlZih0LmNoaWxkcmVuWzBdKSksdGhpcy5saW5lKFwiL0xhc3QgXCIrdGhpcy5tYWtlUmVmKHQuY2hpbGRyZW5bdC5jaGlsZHJlbi5sZW5ndGgtMV0pKSksdGhpcy5saW5lKFwiL0NvdW50IFwiK3RoaXMuY291bnRfcih7Y291bnQ6MH0sdCkpLHRoaXMub2JqRW5kKCl9LGEub3V0bGluZS5yZW5kZXJJdGVtcz1mdW5jdGlvbih0KXt0aGlzLmN0eC5wZGYuaW50ZXJuYWwuZ2V0Q29vcmRpbmF0ZVN0cmluZztmb3IodmFyIGU9dGhpcy5jdHgucGRmLmludGVybmFsLmdldFZlcnRpY2FsQ29vcmRpbmF0ZVN0cmluZyxuPTA7bjx0LmNoaWxkcmVuLmxlbmd0aDtuKyspe3ZhciByPXQuY2hpbGRyZW5bbl07dGhpcy5vYmpTdGFydChyKSx0aGlzLmxpbmUoXCIvVGl0bGUgXCIrdGhpcy5tYWtlU3RyaW5nKHIudGl0bGUpKSx0aGlzLmxpbmUoXCIvUGFyZW50IFwiK3RoaXMubWFrZVJlZih0KSksMDxuJiZ0aGlzLmxpbmUoXCIvUHJldiBcIit0aGlzLm1ha2VSZWYodC5jaGlsZHJlbltuLTFdKSksbjx0LmNoaWxkcmVuLmxlbmd0aC0xJiZ0aGlzLmxpbmUoXCIvTmV4dCBcIit0aGlzLm1ha2VSZWYodC5jaGlsZHJlbltuKzFdKSksMDxyLmNoaWxkcmVuLmxlbmd0aCYmKHRoaXMubGluZShcIi9GaXJzdCBcIit0aGlzLm1ha2VSZWYoci5jaGlsZHJlblswXSkpLHRoaXMubGluZShcIi9MYXN0IFwiK3RoaXMubWFrZVJlZihyLmNoaWxkcmVuW3IuY2hpbGRyZW4ubGVuZ3RoLTFdKSkpO3ZhciBpPXRoaXMuY291bnQ9dGhpcy5jb3VudF9yKHtjb3VudDowfSxyKTtpZigwPGkmJnRoaXMubGluZShcIi9Db3VudCBcIitpKSxyLm9wdGlvbnMmJnIub3B0aW9ucy5wYWdlTnVtYmVyKXt2YXIgbz1hLmludGVybmFsLmdldFBhZ2VJbmZvKHIub3B0aW9ucy5wYWdlTnVtYmVyKTt0aGlzLmxpbmUoXCIvRGVzdCBbXCIrby5vYmpJZCtcIiAwIFIgL1hZWiAwIFwiK2UoMCkrXCIgMF1cIil9dGhpcy5vYmpFbmQoKX1mb3Iobj0wO248dC5jaGlsZHJlbi5sZW5ndGg7bisrKXI9dC5jaGlsZHJlbltuXSx0aGlzLnJlbmRlckl0ZW1zKHIpfSxhLm91dGxpbmUubGluZT1mdW5jdGlvbih0KXt0aGlzLmN0eC52YWwrPXQrXCJcXHJcXG5cIn0sYS5vdXRsaW5lLm1ha2VSZWY9ZnVuY3Rpb24odCl7cmV0dXJuIHQuaWQrXCIgMCBSXCJ9LGEub3V0bGluZS5tYWtlU3RyaW5nPWZ1bmN0aW9uKHQpe3JldHVyblwiKFwiK2EuaW50ZXJuYWwucGRmRXNjYXBlKHQpK1wiKVwifSxhLm91dGxpbmUub2JqU3RhcnQ9ZnVuY3Rpb24odCl7dGhpcy5jdHgudmFsKz1cIlxcclxcblwiK3QuaWQrXCIgMCBvYmpcXHJcXG48PFxcclxcblwifSxhLm91dGxpbmUub2JqRW5kPWZ1bmN0aW9uKHQpe3RoaXMuY3R4LnZhbCs9XCI+PiBcXHJcXG5lbmRvYmpcXHJcXG5cIn0sYS5vdXRsaW5lLmNvdW50X3I9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MDtuPGUuY2hpbGRyZW4ubGVuZ3RoO24rKyl0LmNvdW50KyssdGhpcy5jb3VudF9yKHQsZS5jaGlsZHJlbltuXSk7cmV0dXJuIHQuY291bnR9fV0pLFxuLyoqXG4gICAqIEBsaWNlbnNlXG4gICAqIFxuICAgKiBDb3B5cmlnaHQgKGMpIDIwMTQgSmFtZXMgUm9iYiwgaHR0cHM6Ly9naXRodWIuY29tL2phbWVzYnJvYmJcbiAgICpcbiAgICogXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAqL1xuST1sdC5BUEksQz1mdW5jdGlvbigpe3ZhciB0PVwiZnVuY3Rpb25cIj09dHlwZW9mIERlZmxhdGVyO2lmKCF0KXRocm93IG5ldyBFcnJvcihcInJlcXVpcmVzIGRlZmxhdGUuanMgZm9yIGNvbXByZXNzaW9uXCIpO3JldHVybiB0fSxCPWZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPTUsbz1FO3N3aXRjaChyKXtjYXNlIEkuaW1hZ2VfY29tcHJlc3Npb24uRkFTVDppPTMsbz1qO2JyZWFrO2Nhc2UgSS5pbWFnZV9jb21wcmVzc2lvbi5NRURJVU06aT02LG89TTticmVhaztjYXNlIEkuaW1hZ2VfY29tcHJlc3Npb24uU0xPVzppPTksbz1PfXQ9QSh0LGUsbixvKTt2YXIgYT1uZXcgVWludDhBcnJheShOKGkpKSxzPUwodCksbD1uZXcgRGVmbGF0ZXIoaSksaD1sLmFwcGVuZCh0KSx1PWwuZmx1c2goKSxjPWEubGVuZ3RoK2gubGVuZ3RoK3UubGVuZ3RoLGY9bmV3IFVpbnQ4QXJyYXkoYys0KTtyZXR1cm4gZi5zZXQoYSksZi5zZXQoaCxhLmxlbmd0aCksZi5zZXQodSxhLmxlbmd0aCtoLmxlbmd0aCksZltjKytdPXM+Pj4yNCYyNTUsZltjKytdPXM+Pj4xNiYyNTUsZltjKytdPXM+Pj44JjI1NSxmW2MrK109MjU1JnMsSS5hcnJheUJ1ZmZlclRvQmluYXJ5U3RyaW5nKGYpfSxOPWZ1bmN0aW9uKHQsZSl7dmFyIG49TWF0aC5MT0cyRSpNYXRoLmxvZygzMjc2OCktODw8NHw4LHI9bjw8ODtyZXR1cm4gcnw9TWF0aC5taW4oMywoZS0xJjI1NSk+PjEpPDw2LHJ8PTAsW24sMjU1JihyKz0zMS1yJTMxKV19LEw9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4scj0xLGk9MCxvPXQubGVuZ3RoLGE9MDswPG87KXtmb3Ioby09bj1lPG8/ZTpvO2krPXIrPXRbYSsrXSwtLW47KTtyJT02NTUyMSxpJT02NTUyMX1yZXR1cm4oaTw8MTZ8cik+Pj4wfSxBPWZ1bmN0aW9uKHQsZSxuLHIpe2Zvcih2YXIgaSxvLGEscz10Lmxlbmd0aC9lLGw9bmV3IFVpbnQ4QXJyYXkodC5sZW5ndGgrcyksaD1UKCksdT0wO3U8czt1Kyspe2lmKGE9dSplLGk9dC5zdWJhcnJheShhLGErZSkscilsLnNldChyKGksbixvKSxhK3UpO2Vsc2V7Zm9yKHZhciBjPTAsZj1oLmxlbmd0aCxwPVtdO2M8ZjtjKyspcFtjXT1oW2NdKGksbixvKTt2YXIgZD1SKHAuY29uY2F0KCkpO2wuc2V0KHBbZF0sYSt1KX1vPWl9cmV0dXJuIGx9LFM9ZnVuY3Rpb24odCxlLG4pe3ZhciByPUFycmF5LmFwcGx5KFtdLHQpO3JldHVybiByLnVuc2hpZnQoMCkscn0saj1mdW5jdGlvbih0LGUsbil7dmFyIHIsaT1bXSxvPTAsYT10Lmxlbmd0aDtmb3IoaVswXT0xO288YTtvKyspcj10W28tZV18fDAsaVtvKzFdPXRbb10tcisyNTYmMjU1O3JldHVybiBpfSxFPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpPVtdLG89MCxhPXQubGVuZ3RoO2ZvcihpWzBdPTI7bzxhO28rKylyPW4mJm5bb118fDAsaVtvKzFdPXRbb10tcisyNTYmMjU1O3JldHVybiBpfSxNPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpLG89W10sYT0wLHM9dC5sZW5ndGg7Zm9yKG9bMF09MzthPHM7YSsrKXI9dFthLWVdfHwwLGk9biYmblthXXx8MCxvW2ErMV09dFthXSsyNTYtKHIraT4+PjEpJjI1NTtyZXR1cm4gb30sTz1mdW5jdGlvbih0LGUsbil7dmFyIHIsaSxvLGEscz1bXSxsPTAsaD10Lmxlbmd0aDtmb3Ioc1swXT00O2w8aDtsKyspcj10W2wtZV18fDAsaT1uJiZuW2xdfHwwLG89biYmbltsLWVdfHwwLGE9cShyLGksbyksc1tsKzFdPXRbbF0tYSsyNTYmMjU1O3JldHVybiBzfSxxPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10K2UtbixpPU1hdGguYWJzKHItdCksbz1NYXRoLmFicyhyLWUpLGE9TWF0aC5hYnMoci1uKTtyZXR1cm4gaTw9byYmaTw9YT90Om88PWE/ZTpufSxUPWZ1bmN0aW9uKCl7cmV0dXJuW1MsaixFLE0sT119LFI9ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG4scixpPTAsbz10Lmxlbmd0aDtpPG87KSgoZT1EKHRbaV0uc2xpY2UoMSkpKTxufHwhbikmJihuPWUscj1pKSxpKys7cmV0dXJuIHJ9LEQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsbj10Lmxlbmd0aCxyPTA7ZTxuOylyKz1NYXRoLmFicyh0W2UrK10pO3JldHVybiByfSxJLnByb2Nlc3NQTkc9ZnVuY3Rpb24odCxlLG4scixpKXt2YXIgbyxhLHMsbCxoLHUsYz10aGlzLmNvbG9yX3NwYWNlcy5ERVZJQ0VfUkdCLGY9dGhpcy5kZWNvZGUuRkxBVEVfREVDT0RFLHA9ODtpZih0aGlzLmlzQXJyYXlCdWZmZXIodCkmJih0PW5ldyBVaW50OEFycmF5KHQpKSx0aGlzLmlzQXJyYXlCdWZmZXJWaWV3KHQpKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBQTkd8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGt0KXRocm93IG5ldyBFcnJvcihcIlBORyBzdXBwb3J0IHJlcXVpcmVzIHBuZy5qcyBhbmQgemxpYi5qc1wiKTtpZih0PShvPW5ldyBQTkcodCkpLmltZ0RhdGEscD1vLmJpdHMsYz1vLmNvbG9yU3BhY2UsbD1vLmNvbG9ycywtMSE9PVs0LDZdLmluZGV4T2Yoby5jb2xvclR5cGUpKXtpZig4PT09by5iaXRzKWZvcih2YXIgZCxnPShfPTMyPT1vLnBpeGVsQml0bGVuZ3RoP25ldyBVaW50MzJBcnJheShvLmRlY29kZVBpeGVscygpLmJ1ZmZlcik6MTY9PW8ucGl4ZWxCaXRsZW5ndGg/bmV3IFVpbnQxNkFycmF5KG8uZGVjb2RlUGl4ZWxzKCkuYnVmZmVyKTpuZXcgVWludDhBcnJheShvLmRlY29kZVBpeGVscygpLmJ1ZmZlcikpLmxlbmd0aCxtPW5ldyBVaW50OEFycmF5KGcqby5jb2xvcnMpLHk9bmV3IFVpbnQ4QXJyYXkoZyksdj1vLnBpeGVsQml0bGVuZ3RoLW8uYml0cyx3PTAsYj0wO3c8Zzt3Kyspe2Zvcih4PV9bd10sZD0wO2Q8djspbVtiKytdPXg+Pj5kJjI1NSxkKz1vLmJpdHM7eVt3XT14Pj4+ZCYyNTV9aWYoMTY9PT1vLmJpdHMpe2c9KF89bmV3IFVpbnQzMkFycmF5KG8uZGVjb2RlUGl4ZWxzKCkuYnVmZmVyKSkubGVuZ3RoLG09bmV3IFVpbnQ4QXJyYXkoZyooMzIvby5waXhlbEJpdGxlbmd0aCkqby5jb2xvcnMpLHk9bmV3IFVpbnQ4QXJyYXkoZyooMzIvby5waXhlbEJpdGxlbmd0aCkpO2Zvcih2YXIgeCxOPTE8by5jb2xvcnMsTD1iPXc9MDt3PGc7KXg9X1t3KytdLG1bYisrXT14Pj4+MCYyNTUsTiYmKG1bYisrXT14Pj4+MTYmMjU1LHg9X1t3KytdLG1bYisrXT14Pj4+MCYyNTUpLHlbTCsrXT14Pj4+MTYmMjU1O3A9OH1yIT09SS5pbWFnZV9jb21wcmVzc2lvbi5OT05FJiZDKCk/KHQ9QihtLG8ud2lkdGgqby5jb2xvcnMsby5jb2xvcnMsciksdT1CKHksby53aWR0aCwxLHIpKToodD1tLHU9eSxmPW51bGwpfWlmKDM9PT1vLmNvbG9yVHlwZSYmKGM9dGhpcy5jb2xvcl9zcGFjZXMuSU5ERVhFRCxoPW8ucGFsZXR0ZSxvLnRyYW5zcGFyZW5jeS5pbmRleGVkKSl7dmFyIEE9by50cmFuc3BhcmVuY3kuaW5kZXhlZCxTPTA7Zm9yKHc9MCxnPUEubGVuZ3RoO3c8ZzsrK3cpUys9QVt3XTtpZigoUy89MjU1KT09Zy0xJiYtMSE9PUEuaW5kZXhPZigwKSlzPVtBLmluZGV4T2YoMCldO2Vsc2UgaWYoUyE9PWcpe3ZhciBfPW8uZGVjb2RlUGl4ZWxzKCk7Zm9yKHk9bmV3IFVpbnQ4QXJyYXkoXy5sZW5ndGgpLHc9MCxnPV8ubGVuZ3RoO3c8Zzt3KyspeVt3XT1BW19bd11dO3U9Qih5LG8ud2lkdGgsMSl9fXZhciBGPWZ1bmN0aW9uKHQpe3ZhciBlO3N3aXRjaCh0KXtjYXNlIEkuaW1hZ2VfY29tcHJlc3Npb24uRkFTVDplPTExO2JyZWFrO2Nhc2UgSS5pbWFnZV9jb21wcmVzc2lvbi5NRURJVU06ZT0xMzticmVhaztjYXNlIEkuaW1hZ2VfY29tcHJlc3Npb24uU0xPVzplPTE0O2JyZWFrO2RlZmF1bHQ6ZT0xMn1yZXR1cm4gZX0ocik7cmV0dXJuIGE9Zj09PXRoaXMuZGVjb2RlLkZMQVRFX0RFQ09ERT9cIi9QcmVkaWN0b3IgXCIrRitcIiAvQ29sb3JzIFwiK2wrXCIgL0JpdHNQZXJDb21wb25lbnQgXCIrcCtcIiAvQ29sdW1ucyBcIitvLndpZHRoOlwiL0NvbG9ycyBcIitsK1wiIC9CaXRzUGVyQ29tcG9uZW50IFwiK3ArXCIgL0NvbHVtbnMgXCIrby53aWR0aCwodGhpcy5pc0FycmF5QnVmZmVyKHQpfHx0aGlzLmlzQXJyYXlCdWZmZXJWaWV3KHQpKSYmKHQ9dGhpcy5hcnJheUJ1ZmZlclRvQmluYXJ5U3RyaW5nKHQpKSwodSYmdGhpcy5pc0FycmF5QnVmZmVyKHUpfHx0aGlzLmlzQXJyYXlCdWZmZXJWaWV3KHUpKSYmKHU9dGhpcy5hcnJheUJ1ZmZlclRvQmluYXJ5U3RyaW5nKHUpKSx0aGlzLmNyZWF0ZUltYWdlSW5mbyh0LG8ud2lkdGgsby5oZWlnaHQsYyxwLGYsZSxuLGEscyxoLHUsRil9dGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgUE5HIGltYWdlIGRhdGEsIHRyeSB1c2luZyBKUEVHIGluc3RlYWQuXCIpfSwoXG4vKipcbiAgICogQGxpY2Vuc2VcbiAgICogQ29weXJpZ2h0IChjKSAyMDE3IEFyYXMgQWJiYXNpIFxuICAgKlxuICAgKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gICAqIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZVxuICAgKi9cblU9bHQuQVBJKS5wcm9jZXNzR0lGODlBPWZ1bmN0aW9uKHQsZSxuLHIsaSl7dmFyIG89bmV3IEF0KHQpLGE9by53aWR0aCxzPW8uaGVpZ2h0LGw9W107by5kZWNvZGVBbmRCbGl0RnJhbWVSR0JBKDAsbCk7dmFyIGg9e2RhdGE6bCx3aWR0aDphLGhlaWdodDpzfSx1PW5ldyBfdCgxMDApLmVuY29kZShoLDEwMCk7cmV0dXJuIFUucHJvY2Vzc0pQRUcuY2FsbCh0aGlzLHUsZSxuLHIpfSxVLnByb2Nlc3NHSUY4N0E9VS5wcm9jZXNzR0lGODlBLChcbi8qKlxuICAgKiBDb3B5cmlnaHQgKGMpIDIwMTggQXJhcyBBYmJhc2kgXG4gICAqXG4gICAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAgICogaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlXG4gICAqL1xuej1sdC5BUEkpLnByb2Nlc3NCTVA9ZnVuY3Rpb24odCxlLG4scixpKXt2YXIgbz1uZXcgRnQodCwhMSksYT1vLndpZHRoLHM9by5oZWlnaHQsbD17ZGF0YTpvLmdldERhdGEoKSx3aWR0aDphLGhlaWdodDpzfSxoPW5ldyBfdCgxMDApLmVuY29kZShsLDEwMCk7cmV0dXJuIHoucHJvY2Vzc0pQRUcuY2FsbCh0aGlzLGgsZSxuLHIpfSxsdC5BUEkuc2V0TGFuZ3VhZ2U9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXRoaXMuaW50ZXJuYWwubGFuZ3VhZ2VTZXR0aW5ncyYmKHRoaXMuaW50ZXJuYWwubGFuZ3VhZ2VTZXR0aW5ncz17fSx0aGlzLmludGVybmFsLmxhbmd1YWdlU2V0dGluZ3MuaXNTdWJzY3JpYmVkPSExKSx2b2lkIDAhPT17YWY6XCJBZnJpa2FhbnNcIixzcTpcIkFsYmFuaWFuXCIsYXI6XCJBcmFiaWMgKFN0YW5kYXJkKVwiLFwiYXItRFpcIjpcIkFyYWJpYyAoQWxnZXJpYSlcIixcImFyLUJIXCI6XCJBcmFiaWMgKEJhaHJhaW4pXCIsXCJhci1FR1wiOlwiQXJhYmljIChFZ3lwdClcIixcImFyLUlRXCI6XCJBcmFiaWMgKElyYXEpXCIsXCJhci1KT1wiOlwiQXJhYmljIChKb3JkYW4pXCIsXCJhci1LV1wiOlwiQXJhYmljIChLdXdhaXQpXCIsXCJhci1MQlwiOlwiQXJhYmljIChMZWJhbm9uKVwiLFwiYXItTFlcIjpcIkFyYWJpYyAoTGlieWEpXCIsXCJhci1NQVwiOlwiQXJhYmljIChNb3JvY2NvKVwiLFwiYXItT01cIjpcIkFyYWJpYyAoT21hbilcIixcImFyLVFBXCI6XCJBcmFiaWMgKFFhdGFyKVwiLFwiYXItU0FcIjpcIkFyYWJpYyAoU2F1ZGkgQXJhYmlhKVwiLFwiYXItU1lcIjpcIkFyYWJpYyAoU3lyaWEpXCIsXCJhci1UTlwiOlwiQXJhYmljIChUdW5pc2lhKVwiLFwiYXItQUVcIjpcIkFyYWJpYyAoVS5BLkUuKVwiLFwiYXItWUVcIjpcIkFyYWJpYyAoWWVtZW4pXCIsYW46XCJBcmFnb25lc2VcIixoeTpcIkFybWVuaWFuXCIsYXM6XCJBc3NhbWVzZVwiLGFzdDpcIkFzdHVyaWFuXCIsYXo6XCJBemVyYmFpamFuaVwiLGV1OlwiQmFzcXVlXCIsYmU6XCJCZWxhcnVzaWFuXCIsYm46XCJCZW5nYWxpXCIsYnM6XCJCb3NuaWFuXCIsYnI6XCJCcmV0b25cIixiZzpcIkJ1bGdhcmlhblwiLG15OlwiQnVybWVzZVwiLGNhOlwiQ2F0YWxhblwiLGNoOlwiQ2hhbW9ycm9cIixjZTpcIkNoZWNoZW5cIix6aDpcIkNoaW5lc2VcIixcInpoLUhLXCI6XCJDaGluZXNlIChIb25nIEtvbmcpXCIsXCJ6aC1DTlwiOlwiQ2hpbmVzZSAoUFJDKVwiLFwiemgtU0dcIjpcIkNoaW5lc2UgKFNpbmdhcG9yZSlcIixcInpoLVRXXCI6XCJDaGluZXNlIChUYWl3YW4pXCIsY3Y6XCJDaHV2YXNoXCIsY286XCJDb3JzaWNhblwiLGNyOlwiQ3JlZVwiLGhyOlwiQ3JvYXRpYW5cIixjczpcIkN6ZWNoXCIsZGE6XCJEYW5pc2hcIixubDpcIkR1dGNoIChTdGFuZGFyZClcIixcIm5sLUJFXCI6XCJEdXRjaCAoQmVsZ2lhbilcIixlbjpcIkVuZ2xpc2hcIixcImVuLUFVXCI6XCJFbmdsaXNoIChBdXN0cmFsaWEpXCIsXCJlbi1CWlwiOlwiRW5nbGlzaCAoQmVsaXplKVwiLFwiZW4tQ0FcIjpcIkVuZ2xpc2ggKENhbmFkYSlcIixcImVuLUlFXCI6XCJFbmdsaXNoIChJcmVsYW5kKVwiLFwiZW4tSk1cIjpcIkVuZ2xpc2ggKEphbWFpY2EpXCIsXCJlbi1OWlwiOlwiRW5nbGlzaCAoTmV3IFplYWxhbmQpXCIsXCJlbi1QSFwiOlwiRW5nbGlzaCAoUGhpbGlwcGluZXMpXCIsXCJlbi1aQVwiOlwiRW5nbGlzaCAoU291dGggQWZyaWNhKVwiLFwiZW4tVFRcIjpcIkVuZ2xpc2ggKFRyaW5pZGFkICYgVG9iYWdvKVwiLFwiZW4tR0JcIjpcIkVuZ2xpc2ggKFVuaXRlZCBLaW5nZG9tKVwiLFwiZW4tVVNcIjpcIkVuZ2xpc2ggKFVuaXRlZCBTdGF0ZXMpXCIsXCJlbi1aV1wiOlwiRW5nbGlzaCAoWmltYmFid2UpXCIsZW86XCJFc3BlcmFudG9cIixldDpcIkVzdG9uaWFuXCIsZm86XCJGYWVyb2VzZVwiLGZqOlwiRmlqaWFuXCIsZmk6XCJGaW5uaXNoXCIsZnI6XCJGcmVuY2ggKFN0YW5kYXJkKVwiLFwiZnItQkVcIjpcIkZyZW5jaCAoQmVsZ2l1bSlcIixcImZyLUNBXCI6XCJGcmVuY2ggKENhbmFkYSlcIixcImZyLUZSXCI6XCJGcmVuY2ggKEZyYW5jZSlcIixcImZyLUxVXCI6XCJGcmVuY2ggKEx1eGVtYm91cmcpXCIsXCJmci1NQ1wiOlwiRnJlbmNoIChNb25hY28pXCIsXCJmci1DSFwiOlwiRnJlbmNoIChTd2l0emVybGFuZClcIixmeTpcIkZyaXNpYW5cIixmdXI6XCJGcml1bGlhblwiLGdkOlwiR2FlbGljIChTY290cylcIixcImdkLUlFXCI6XCJHYWVsaWMgKElyaXNoKVwiLGdsOlwiR2FsYWNpYW5cIixrYTpcIkdlb3JnaWFuXCIsZGU6XCJHZXJtYW4gKFN0YW5kYXJkKVwiLFwiZGUtQVRcIjpcIkdlcm1hbiAoQXVzdHJpYSlcIixcImRlLURFXCI6XCJHZXJtYW4gKEdlcm1hbnkpXCIsXCJkZS1MSVwiOlwiR2VybWFuIChMaWVjaHRlbnN0ZWluKVwiLFwiZGUtTFVcIjpcIkdlcm1hbiAoTHV4ZW1ib3VyZylcIixcImRlLUNIXCI6XCJHZXJtYW4gKFN3aXR6ZXJsYW5kKVwiLGVsOlwiR3JlZWtcIixndTpcIkd1anVyYXRpXCIsaHQ6XCJIYWl0aWFuXCIsaGU6XCJIZWJyZXdcIixoaTpcIkhpbmRpXCIsaHU6XCJIdW5nYXJpYW5cIixpczpcIkljZWxhbmRpY1wiLGlkOlwiSW5kb25lc2lhblwiLGl1OlwiSW51a3RpdHV0XCIsZ2E6XCJJcmlzaFwiLGl0OlwiSXRhbGlhbiAoU3RhbmRhcmQpXCIsXCJpdC1DSFwiOlwiSXRhbGlhbiAoU3dpdHplcmxhbmQpXCIsamE6XCJKYXBhbmVzZVwiLGtuOlwiS2FubmFkYVwiLGtzOlwiS2FzaG1pcmlcIixrazpcIkthemFraFwiLGttOlwiS2htZXJcIixreTpcIktpcmdoaXpcIix0bGg6XCJLbGluZ29uXCIsa286XCJLb3JlYW5cIixcImtvLUtQXCI6XCJLb3JlYW4gKE5vcnRoIEtvcmVhKVwiLFwia28tS1JcIjpcIktvcmVhbiAoU291dGggS29yZWEpXCIsbGE6XCJMYXRpblwiLGx2OlwiTGF0dmlhblwiLGx0OlwiTGl0aHVhbmlhblwiLGxiOlwiTHV4ZW1ib3VyZ2lzaFwiLG1rOlwiRllSTyBNYWNlZG9uaWFuXCIsbXM6XCJNYWxheVwiLG1sOlwiTWFsYXlhbGFtXCIsbXQ6XCJNYWx0ZXNlXCIsbWk6XCJNYW9yaVwiLG1yOlwiTWFyYXRoaVwiLG1vOlwiTW9sZGF2aWFuXCIsbnY6XCJOYXZham9cIixuZzpcIk5kb25nYVwiLG5lOlwiTmVwYWxpXCIsbm86XCJOb3J3ZWdpYW5cIixuYjpcIk5vcndlZ2lhbiAoQm9rbWFsKVwiLG5uOlwiTm9yd2VnaWFuIChOeW5vcnNrKVwiLG9jOlwiT2NjaXRhblwiLG9yOlwiT3JpeWFcIixvbTpcIk9yb21vXCIsZmE6XCJQZXJzaWFuXCIsXCJmYS1JUlwiOlwiUGVyc2lhbi9JcmFuXCIscGw6XCJQb2xpc2hcIixwdDpcIlBvcnR1Z3Vlc2VcIixcInB0LUJSXCI6XCJQb3J0dWd1ZXNlIChCcmF6aWwpXCIscGE6XCJQdW5qYWJpXCIsXCJwYS1JTlwiOlwiUHVuamFiaSAoSW5kaWEpXCIsXCJwYS1QS1wiOlwiUHVuamFiaSAoUGFraXN0YW4pXCIscXU6XCJRdWVjaHVhXCIscm06XCJSaGFldG8tUm9tYW5pY1wiLHJvOlwiUm9tYW5pYW5cIixcInJvLU1PXCI6XCJSb21hbmlhbiAoTW9sZGF2aWEpXCIscnU6XCJSdXNzaWFuXCIsXCJydS1NT1wiOlwiUnVzc2lhbiAoTW9sZGF2aWEpXCIsc3o6XCJTYW1pIChMYXBwaXNoKVwiLHNnOlwiU2FuZ29cIixzYTpcIlNhbnNrcml0XCIsc2M6XCJTYXJkaW5pYW5cIixzZDpcIlNpbmRoaVwiLHNpOlwiU2luZ2hhbGVzZVwiLHNyOlwiU2VyYmlhblwiLHNrOlwiU2xvdmFrXCIsc2w6XCJTbG92ZW5pYW5cIixzbzpcIlNvbWFuaVwiLHNiOlwiU29yYmlhblwiLGVzOlwiU3BhbmlzaFwiLFwiZXMtQVJcIjpcIlNwYW5pc2ggKEFyZ2VudGluYSlcIixcImVzLUJPXCI6XCJTcGFuaXNoIChCb2xpdmlhKVwiLFwiZXMtQ0xcIjpcIlNwYW5pc2ggKENoaWxlKVwiLFwiZXMtQ09cIjpcIlNwYW5pc2ggKENvbG9tYmlhKVwiLFwiZXMtQ1JcIjpcIlNwYW5pc2ggKENvc3RhIFJpY2EpXCIsXCJlcy1ET1wiOlwiU3BhbmlzaCAoRG9taW5pY2FuIFJlcHVibGljKVwiLFwiZXMtRUNcIjpcIlNwYW5pc2ggKEVjdWFkb3IpXCIsXCJlcy1TVlwiOlwiU3BhbmlzaCAoRWwgU2FsdmFkb3IpXCIsXCJlcy1HVFwiOlwiU3BhbmlzaCAoR3VhdGVtYWxhKVwiLFwiZXMtSE5cIjpcIlNwYW5pc2ggKEhvbmR1cmFzKVwiLFwiZXMtTVhcIjpcIlNwYW5pc2ggKE1leGljbylcIixcImVzLU5JXCI6XCJTcGFuaXNoIChOaWNhcmFndWEpXCIsXCJlcy1QQVwiOlwiU3BhbmlzaCAoUGFuYW1hKVwiLFwiZXMtUFlcIjpcIlNwYW5pc2ggKFBhcmFndWF5KVwiLFwiZXMtUEVcIjpcIlNwYW5pc2ggKFBlcnUpXCIsXCJlcy1QUlwiOlwiU3BhbmlzaCAoUHVlcnRvIFJpY28pXCIsXCJlcy1FU1wiOlwiU3BhbmlzaCAoU3BhaW4pXCIsXCJlcy1VWVwiOlwiU3BhbmlzaCAoVXJ1Z3VheSlcIixcImVzLVZFXCI6XCJTcGFuaXNoIChWZW5lenVlbGEpXCIsc3g6XCJTdXR1XCIsc3c6XCJTd2FoaWxpXCIsc3Y6XCJTd2VkaXNoXCIsXCJzdi1GSVwiOlwiU3dlZGlzaCAoRmlubGFuZClcIixcInN2LVNWXCI6XCJTd2VkaXNoIChTd2VkZW4pXCIsdGE6XCJUYW1pbFwiLHR0OlwiVGF0YXJcIix0ZTpcIlRlbHVnYVwiLHRoOlwiVGhhaVwiLHRpZzpcIlRpZ3JlXCIsdHM6XCJUc29uZ2FcIix0bjpcIlRzd2FuYVwiLHRyOlwiVHVya2lzaFwiLHRrOlwiVHVya21lblwiLHVrOlwiVWtyYWluaWFuXCIsaHNiOlwiVXBwZXIgU29yYmlhblwiLHVyOlwiVXJkdVwiLHZlOlwiVmVuZGFcIix2aTpcIlZpZXRuYW1lc2VcIix2bzpcIlZvbGFwdWtcIix3YTpcIldhbGxvb25cIixjeTpcIldlbHNoXCIseGg6XCJYaG9zYVwiLGppOlwiWWlkZGlzaFwiLHp1OlwiWnVsdVwifVt0XSYmKHRoaXMuaW50ZXJuYWwubGFuZ3VhZ2VTZXR0aW5ncy5sYW5ndWFnZUNvZGU9dCwhMT09PXRoaXMuaW50ZXJuYWwubGFuZ3VhZ2VTZXR0aW5ncy5pc1N1YnNjcmliZWQmJih0aGlzLmludGVybmFsLmV2ZW50cy5zdWJzY3JpYmUoXCJwdXRDYXRhbG9nXCIsZnVuY3Rpb24oKXt0aGlzLmludGVybmFsLndyaXRlKFwiL0xhbmcgKFwiK3RoaXMuaW50ZXJuYWwubGFuZ3VhZ2VTZXR0aW5ncy5sYW5ndWFnZUNvZGUrXCIpXCIpfSksdGhpcy5pbnRlcm5hbC5sYW5ndWFnZVNldHRpbmdzLmlzU3Vic2NyaWJlZD0hMCkpLHRoaXN9LFxuLyoqIEBsaWNlbnNlXG4gICAqIE1JVCBsaWNlbnNlLlxuICAgKiBDb3B5cmlnaHQgKGMpIDIwMTIgV2lsbG93IFN5c3RlbXMgQ29ycG9yYXRpb24sIHdpbGxvdy1zeXN0ZW1zLmNvbVxuICAgKiAgICAgICAgICAgICAgIDIwMTQgRGllZ28gQ2Fzb3JyYW4sIGh0dHBzOi8vZ2l0aHViLmNvbS9kaWVnb2NyXG4gICAqXG4gICAqIFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKi9cbkg9bHQuQVBJLFc9SC5nZXRDaGFyV2lkdGhzQXJyYXk9ZnVuY3Rpb24odCxlKXt2YXIgbixyLGksbz0oZT1lfHx7fSkuZm9udHx8dGhpcy5pbnRlcm5hbC5nZXRGb250KCksYT1lLmZvbnRTaXplfHx0aGlzLmludGVybmFsLmdldEZvbnRTaXplKCkscz1lLmNoYXJTcGFjZXx8dGhpcy5pbnRlcm5hbC5nZXRDaGFyU3BhY2UoKSxsPWUud2lkdGhzP2Uud2lkdGhzOm8ubWV0YWRhdGEuVW5pY29kZS53aWR0aHMsaD1sLmZvZj9sLmZvZjoxLHU9ZS5rZXJuaW5nP2Uua2VybmluZzpvLm1ldGFkYXRhLlVuaWNvZGUua2VybmluZyxjPXUuZm9mP3UuZm9mOjEsZj0wLHA9bFswXXx8aCxkPVtdO2ZvcihuPTAscj10Lmxlbmd0aDtuPHI7bisrKWk9dC5jaGFyQ29kZUF0KG4pLFwiZnVuY3Rpb25cIj09dHlwZW9mIG8ubWV0YWRhdGEud2lkdGhPZlN0cmluZz9kLnB1c2goKG8ubWV0YWRhdGEud2lkdGhPZkdseXBoKG8ubWV0YWRhdGEuY2hhcmFjdGVyVG9HbHlwaChpKSkrcyooMWUzL2EpfHwwKS8xZTMpOmQucHVzaCgobFtpXXx8cCkvaCsodVtpXSYmdVtpXVtmXXx8MCkvYyksZj1pO3JldHVybiBkfSxWPUguZ2V0QXJyYXlTdW09ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQubGVuZ3RoLG49MDtlOyluKz10Wy0tZV07cmV0dXJuIG59LEc9SC5nZXRTdHJpbmdVbml0V2lkdGg9ZnVuY3Rpb24odCxlKXt2YXIgbj0oZT1lfHx7fSkuZm9udFNpemV8fHRoaXMuaW50ZXJuYWwuZ2V0Rm9udFNpemUoKSxyPWUuZm9udHx8dGhpcy5pbnRlcm5hbC5nZXRGb250KCksaT1lLmNoYXJTcGFjZXx8dGhpcy5pbnRlcm5hbC5nZXRDaGFyU3BhY2UoKTtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiByLm1ldGFkYXRhLndpZHRoT2ZTdHJpbmc/ci5tZXRhZGF0YS53aWR0aE9mU3RyaW5nKHQsbixpKS9uOlYoVy5hcHBseSh0aGlzLGFyZ3VtZW50cykpfSxZPWZ1bmN0aW9uKHQsZSxuLHIpe2Zvcih2YXIgaT1bXSxvPTAsYT10Lmxlbmd0aCxzPTA7byE9PWEmJnMrZVtvXTxuOylzKz1lW29dLG8rKztpLnB1c2godC5zbGljZSgwLG8pKTt2YXIgbD1vO2ZvcihzPTA7byE9PWE7KXMrZVtvXT5yJiYoaS5wdXNoKHQuc2xpY2UobCxvKSkscz0wLGw9bykscys9ZVtvXSxvKys7cmV0dXJuIGwhPT1vJiZpLnB1c2godC5zbGljZShsLG8pKSxpfSxKPWZ1bmN0aW9uKHQsZSxuKXtufHwobj17fSk7dmFyIHIsaSxvLGEscyxsLGg9W10sdT1baF0sYz1uLnRleHRJbmRlbnR8fDAsZj0wLHA9MCxkPXQuc3BsaXQoXCIgXCIpLGc9Vy5hcHBseSh0aGlzLFtcIiBcIixuXSlbMF07aWYobD0tMT09PW4ubGluZUluZGVudD9kWzBdLmxlbmd0aCsyOm4ubGluZUluZGVudHx8MCl7dmFyIG09QXJyYXkobCkuam9pbihcIiBcIikseT1bXTtkLm1hcChmdW5jdGlvbih0KXsxPCh0PXQuc3BsaXQoL1xccypcXG4vKSkubGVuZ3RoP3k9eS5jb25jYXQodC5tYXAoZnVuY3Rpb24odCxlKXtyZXR1cm4oZSYmdC5sZW5ndGg/XCJcXG5cIjpcIlwiKSt0fSkpOnkucHVzaCh0WzBdKX0pLGQ9eSxsPUcuYXBwbHkodGhpcyxbbSxuXSl9Zm9yKG89MCxhPWQubGVuZ3RoO288YTtvKyspe3ZhciB2PTA7aWYocj1kW29dLGwmJlwiXFxuXCI9PXJbMF0mJihyPXIuc3Vic3RyKDEpLHY9MSksaT1XLmFwcGx5KHRoaXMsW3Isbl0pLGU8YytmKyhwPVYoaSkpfHx2KXtpZihlPHApe2ZvcihzPVkuYXBwbHkodGhpcyxbcixpLGUtKGMrZiksZV0pLGgucHVzaChzLnNoaWZ0KCkpLGg9W3MucG9wKCldO3MubGVuZ3RoOyl1LnB1c2goW3Muc2hpZnQoKV0pO3A9VihpLnNsaWNlKHIubGVuZ3RoLShoWzBdP2hbMF0ubGVuZ3RoOjApKSl9ZWxzZSBoPVtyXTt1LnB1c2goaCksYz1wK2wsZj1nfWVsc2UgaC5wdXNoKHIpLGMrPWYrcCxmPWd9aWYobCl2YXIgdz1mdW5jdGlvbih0LGUpe3JldHVybihlP206XCJcIikrdC5qb2luKFwiIFwiKX07ZWxzZSB3PWZ1bmN0aW9uKHQpe3JldHVybiB0LmpvaW4oXCIgXCIpfTtyZXR1cm4gdS5tYXAodyl9LEguc3BsaXRUZXh0VG9TaXplPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpPShuPW58fHt9KS5mb250U2l6ZXx8dGhpcy5pbnRlcm5hbC5nZXRGb250U2l6ZSgpLG89ZnVuY3Rpb24odCl7dmFyIGU9ezA6MX0sbj17fTtpZih0LndpZHRocyYmdC5rZXJuaW5nKXJldHVybnt3aWR0aHM6dC53aWR0aHMsa2VybmluZzp0Lmtlcm5pbmd9O3ZhciByPXRoaXMuaW50ZXJuYWwuZ2V0Rm9udCh0LmZvbnROYW1lLHQuZm9udFN0eWxlKSxpPVwiVW5pY29kZVwiO3JldHVybiByLm1ldGFkYXRhW2ldP3t3aWR0aHM6ci5tZXRhZGF0YVtpXS53aWR0aHN8fGUsa2VybmluZzpyLm1ldGFkYXRhW2ldLmtlcm5pbmd8fG59Ontmb250OnIubWV0YWRhdGEsZm9udFNpemU6dGhpcy5pbnRlcm5hbC5nZXRGb250U2l6ZSgpLGNoYXJTcGFjZTp0aGlzLmludGVybmFsLmdldENoYXJTcGFjZSgpfX0uY2FsbCh0aGlzLG4pO3I9QXJyYXkuaXNBcnJheSh0KT90OnQuc3BsaXQoL1xccj9cXG4vKTt2YXIgYT0xKnRoaXMuaW50ZXJuYWwuc2NhbGVGYWN0b3IqZS9pO28udGV4dEluZGVudD1uLnRleHRJbmRlbnQ/MSpuLnRleHRJbmRlbnQqdGhpcy5pbnRlcm5hbC5zY2FsZUZhY3Rvci9pOjAsby5saW5lSW5kZW50PW4ubGluZUluZGVudDt2YXIgcyxsLGg9W107Zm9yKHM9MCxsPXIubGVuZ3RoO3M8bDtzKyspaD1oLmNvbmNhdChKLmFwcGx5KHRoaXMsW3Jbc10sYSxvXSkpO3JldHVybiBofSxcbi8qKiBAbGljZW5zZVxuICAganNQREYgc3RhbmRhcmRfZm9udHNfbWV0cmljcyBwbHVnaW5cbiAgICogQ29weXJpZ2h0IChjKSAyMDEyIFdpbGxvdyBTeXN0ZW1zIENvcnBvcmF0aW9uLCB3aWxsb3ctc3lzdGVtcy5jb21cbiAgICogTUlUIGxpY2Vuc2UuXG4gICAqIFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKi9cblg9bHQuQVBJLFo9e2NvZGVQYWdlczpbXCJXaW5BbnNpRW5jb2RpbmdcIl0sV2luQW5zaUVuY29kaW5nOihLPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1cImtsbW5vcHFyc3R1dnd4eXpcIixuPXt9LHI9MDtyPGUubGVuZ3RoO3IrKyluW2Vbcl1dPVwiMDEyMzQ1Njc4OWFiY2RlZlwiW3JdO3ZhciBpLG8sYSxzLGwsaD17fSx1PTEsYz1oLGY9W10scD1cIlwiLGQ9XCJcIixnPXQubGVuZ3RoLTE7Zm9yKHI9MTtyIT1nOylsPXRbcl0scis9MSxcIidcIj09bD9vPW8/KHM9by5qb2luKFwiXCIpLGkpOltdOm8/by5wdXNoKGwpOlwie1wiPT1sPyhmLnB1c2goW2Msc10pLGM9e30scz1pKTpcIn1cIj09bD8oKGE9Zi5wb3AoKSlbMF1bYVsxXV09YyxzPWksYz1hWzBdKTpcIi1cIj09bD91PS0xOnM9PT1pP24uaGFzT3duUHJvcGVydHkobCk/KHArPW5bbF0scz1wYXJzZUludChwLDE2KSp1LHU9MSxwPVwiXCIpOnArPWw6bi5oYXNPd25Qcm9wZXJ0eShsKT8oZCs9bltsXSxjW3NdPXBhcnNlSW50KGQsMTYpKnUsdT0xLHM9aSxkPVwiXCIpOmQrPWw7cmV0dXJuIGh9KShcInsxOW04bjIwMW45cTIwMW85cjIwMXM5bDIwMXQ5bTIwMXU4bTIwMXc5bjIwMXg5bzIwMXk4bzIwMms4cTIwMmw4cjIwMm05cDIwMnE4cDIwYXc4azIwM2s4dDIwM3Q4djIwM3U5djJjcThzMjEybTl0MTVtOHcxNW45dzJkdzlzMTZrOHUxNmw5dTE3czl6MTd4OHkxN3k5eX1cIil9LFE9e1VuaWNvZGU6e0NvdXJpZXI6WixcIkNvdXJpZXItQm9sZFwiOlosXCJDb3VyaWVyLUJvbGRPYmxpcXVlXCI6WixcIkNvdXJpZXItT2JsaXF1ZVwiOlosSGVsdmV0aWNhOlosXCJIZWx2ZXRpY2EtQm9sZFwiOlosXCJIZWx2ZXRpY2EtQm9sZE9ibGlxdWVcIjpaLFwiSGVsdmV0aWNhLU9ibGlxdWVcIjpaLFwiVGltZXMtUm9tYW5cIjpaLFwiVGltZXMtQm9sZFwiOlosXCJUaW1lcy1Cb2xkSXRhbGljXCI6WixcIlRpbWVzLUl0YWxpY1wiOlp9fSwkPXtVbmljb2RlOntcIkNvdXJpZXItT2JsaXF1ZVwiOksoXCJ7J3dpZHRocyd7azN3J2ZvZic2b30na2VybmluZyd7J2ZvZictNm99fVwiKSxcIlRpbWVzLUJvbGRJdGFsaWNcIjpLKFwieyd3aWR0aHMne2szbzJxNHljeDJyMjAxbjNtMjAxbzZvMjAxczJsMjAxdDJsMjAxdTJsMjAxdzNtMjAxeDNtMjAxeTNtMmsxdDJsMnIyMDJtMm4ybjNtMm8zbTJwNW4yMDJxNm8ycjF3MnMybDJ0MmwydTNtMnYzdDJ3MXQyeDJsMnkxdDJ6MXczazNtM2wzbTNtM20zbjNtM28zbTNwM20zcTNtM3IzbTNzM20yMDN0MmwyMDN1MmwzdjJsM3czdDN4M3QzeTN0M3ozbTRrNW40bDRtNG00bTRuNG00bzRzNHA0bTRxNG00cjRzNHM0eTR0MnI0dTNtNHY0bTR3M3g0eDV0NHk0czR6NHM1azN4NWw0czVtNG01bjNyNW8zeDVwNHM1cTRtNXI1dDVzNG01dDN4NXUzeDV2Mmw1dzF3NXgybDV5M3Q1ejNtNmsybDZsM202bTNtNm4ydzZvM202cDJ3NnEybDZyM202czNyNnQxdzZ1MXc2djNtNncxdzZ4NHk2eTNyNnozbTdrM203bDNtN20ycjduMnI3bzF3N3AzcjdxMnc3cjRtN3MzbTd0Mnc3dTJyN3Yybjd3MXE3eDJuN3kzdDIwMmwzbWNsNG1hbDJyYW0zbWFuM21hbzNtYXAzbWFyM21hczJsYXQ0dWF1MXVhdjNtYXczd2F5NHVhejJsYmsyc2JsM3QnZm9mJzZvYm8ybGJwM3RicTNtYnIxdGJzMmxidTF5YnYzbWJ6M21jazRtMjAyazNtY200bWNuNG1jbzRtY3A0bWNxNXljcjRtY3M0bWN0NG1jdTRtY3Y0bWN3MnIybTNyY3kycmN6MnJkbDRzZG00c2RuNHNkbzRzZHA0c2RxNHNkczRzZHQ0c2R1NHNkdjRzZHc0c2R6M21lazNtZWwzbWVtM21lbjNtZW8zbWVwM21lcTRzZXIyd2VzMndldDJ3ZXUyd2V2MndldzF3ZXgxd2V5MXdlejF3ZmwzcmZtM21mbjNtZm8zbWZwM21mcTNtZnIzdGZzM21mdDNyZnUzcmZ2M3JmdzNyZnoydzIwM2s2bzIxMm02bzJkdzJsMmNxMmwzdDNtM3UybDE3czN4MTltM219J2tlcm5pbmcne2NsezRxdTVrdDVxdDVyczE3c3M1dHN9MjAxc3syMDFzc30yMDF0e2NrczRsc2Ntc2Nuc2Nvc2Nwc2NsczJ3dTJ5dTIwMXRzfTIwMXh7Mnd1Mnl1fTJrezIwMXRzfTJ3ezRxeDVreDVvdTVxeDVyczE3c3U1dHV9Mnh7MTdzdTV0dTVvdX0yeXs0cXg1a3g1b3U1cXg1cnMxN3NzNXRzfSdmb2YnLTZvZm57MTdzdzV0dzVvdTVxdzVyc303dHtja3NjbHNjbXNjbnNjb3NjcHM0bHN9M3V7MTdzdTV0dTVvczVxc30zdnsxN3N1NXR1NW9zNXFzfTdwezE3c3U1dHV9Y2t7NHF1NWt0NXF0NXJzMTdzczV0c300bHs0cXU1a3Q1cXQ1cnMxN3NzNXRzfWNtezRxdTVrdDVxdDVyczE3c3M1dHN9Y257NHF1NWt0NXF0NXJzMTdzczV0c31jb3s0cXU1a3Q1cXQ1cnMxN3NzNXRzfWNwezRxdTVrdDVxdDVyczE3c3M1dHN9Nmx7NHF1NW91NXF3NXJ0MTdzdTV0dX01cXtja3VjbHVjbXVjbnVjb3VjcHU0bHV9NXJ7Y2t1Y2x1Y211Y251Y291Y3B1NGx1fTdxe2Nrc2Nsc2Ntc2Nuc2Nvc2NwczRsc302cHs0cXU1b3U1cXc1cnQxN3N3NXR3fWVrezRxdTVvdTVxdzVydDE3c3U1dHV9ZWx7NHF1NW91NXF3NXJ0MTdzdTV0dX1lbXs0cXU1b3U1cXc1cnQxN3N1NXR1fWVuezRxdTVvdTVxdzVydDE3c3U1dHV9ZW97NHF1NW91NXF3NXJ0MTdzdTV0dX1lcHs0cXU1b3U1cXc1cnQxN3N1NXR1fWVzezE3c3M1dHM1cXM0cXV9ZXR7NHF1NW91NXF3NXJ0MTdzdzV0d31ldXs0cXU1b3U1cXc1cnQxN3NzNXRzfWV2ezE3c3M1dHM1cXM0cXV9Nnp7MTdzdzV0dzVvdTVxdzVyc31mbXsxN3N3NXR3NW91NXF3NXJzfTduezIwMXRzfWZvezE3c3c1dHc1b3U1cXc1cnN9ZnB7MTdzdzV0dzVvdTVxdzVyc31mcXsxN3N3NXR3NW91NXF3NXJzfTdye2Nrc2Nsc2Ntc2Nuc2Nvc2NwczRsc31mc3sxN3N3NXR3NW91NXF3NXJzfWZ0ezE3c3U1dHV9ZnV7MTdzdTV0dX1mdnsxN3N1NXR1fWZ3ezE3c3U1dHV9Znp7Y2tzY2xzY21zY25zY29zY3BzNGxzfX19XCIpLFwiSGVsdmV0aWNhLUJvbGRcIjpLKFwieyd3aWR0aHMne2szczJxNHNjeDF3MjAxbjNyMjAxbzZvMjAxczF3MjAxdDF3MjAxdTF3MjAxdzNtMjAxeDNtMjAxeTNtMmsxdzJsMmwyMDJtMm4ybjNyMm8zcjJwNXQyMDJxNm8ycjFzMnMybDJ0MmwydTJyMnYzdTJ3MXcyeDJsMnkxdzJ6MXczazNyM2wzcjNtM3IzbjNyM28zcjNwM3IzcTNyM3IzcjNzM3IyMDN0MmwyMDN1MmwzdjJsM3czdTN4M3UzeTN1M3ozeDRrNmw0bDRzNG00czRuNHM0bzRzNHA0bTRxM3g0cjR5NHM0czR0MXc0dTNyNHY0czR3M3g0eDVuNHk0czR6NHk1azRtNWw0eTVtNHM1bjRtNW8zeDVwNHM1cTRtNXI1eTVzNG01dDRtNXUzeDV2Mmw1dzF3NXgybDV5M3U1ejNyNmsybDZsM3I2bTN4Nm4zcjZvM3g2cDNyNnEybDZyM3g2czN4NnQxdzZ1MXc2djNyNncxdzZ4NXQ2eTN4NnozeDdrM3g3bDN4N20ycjduM3I3bzJsN3AzeDdxM3I3cjR5N3Mzcjd0M3I3dTNtN3Yycjd3MXc3eDJyN3kzdTIwMmwzcmNsNHNhbDJsYW0zcmFuM3JhbzNyYXAzcmFyM3JhczJsYXQ0dGF1MnBhdjNyYXczdWF5NHRhejJsYmsyc2JsM3UnZm9mJzZvYm8ybGJwM3hicTNyYnIxd2JzMmxidTJvYnYzcmJ6M3hjazRzMjAyazNyY200c2NuNHNjbzRzY3A0c2NxNm9jcjRzY3M0bWN0NG1jdTRtY3Y0bWN3MXcybTJ6Y3kxd2N6MXdkbDRzZG00eWRuNHlkbzR5ZHA0eWRxNHlkczR5ZHQ0c2R1NHNkdjRzZHc0c2R6M3hlazNyZWwzcmVtM3JlbjNyZW8zcmVwM3JlcTV0ZXIzcmVzM3JldDNyZXUzcmV2M3JldzF3ZXgxd2V5MXdlejF3ZmwzeGZtM3hmbjN4Zm8zeGZwM3hmcTN4ZnIzdWZzM3hmdDN4ZnUzeGZ2M3hmdzN4ZnozcjIwM2s2bzIxMm02bzJkdzJsMmNxMmwzdDNyM3UybDE3czRtMTltM3J9J2tlcm5pbmcne2NsezRxczVrdTVvdDVxczE3c3Y1dHZ9MjAxdHsyd3c0d3kyeXd9MjAxd3sya3N9MjAxeHsyd3c0d3kyeXd9Mmt7MjAxdHMyMDF4c30yd3s3cXM0cXU1a3c1b3M1cXc1cnMxN3N1NXR1N3RzZnpzfTJ4ezVvdzVxc30yeXs3cXM0cXU1a3c1b3M1cXc1cnMxN3N1NXR1N3RzZnpzfSdmb2YnLTZvN3B7MTdzdTV0dTVvdH1ja3s0cXM1a3U1b3Q1cXMxN3N2NXR2fTRsezRxczVrdTVvdDVxczE3c3Y1dHZ9Y217NHFzNWt1NW90NXFzMTdzdjV0dn1jbns0cXM1a3U1b3Q1cXMxN3N2NXR2fWNvezRxczVrdTVvdDVxczE3c3Y1dHZ9Y3B7NHFzNWt1NW90NXFzMTdzdjV0dn02bHsxN3N0NXR0NW9zfTE3c3sya3djbHZjbXZjbnZjb3ZjcHY0bHY0d3dja3Z9NW97Mmt1Y2x0Y210Y250Y290Y3B0NGx0NHd0Y2t0fTVxezJrc2Nsc2Ntc2Nuc2Nvc2NwczRsczR3dmNrc301cnsya3M0d3N9NXR7Mmt3Y2x2Y212Y252Y292Y3B2NGx2NHd3Y2t2fWVvezE3c3Q1dHQ1b3N9ZnV7MTdzdTV0dTVvdH02cHsxN3NzNXRzfWVrezE3c3Q1dHQ1b3N9ZWx7MTdzdDV0dDVvc31lbXsxN3N0NXR0NW9zfWVuezE3c3Q1dHQ1b3N9Nm97MjAxdHN9ZXB7MTdzdDV0dDVvc31lc3sxN3NzNXRzfWV0ezE3c3M1dHN9ZXV7MTdzczV0c31ldnsxN3NzNXRzfTZ6ezE3c3U1dHU1b3M1cXR9Zm17MTdzdTV0dTVvczVxdH1mbnsxN3N1NXR1NW9zNXF0fWZvezE3c3U1dHU1b3M1cXR9ZnB7MTdzdTV0dTVvczVxdH1mcXsxN3N1NXR1NW9zNXF0fWZzezE3c3U1dHU1b3M1cXR9ZnR7MTdzdTV0dTVvdH03bXs1b3N9ZnZ7MTdzdTV0dTVvdH1md3sxN3N1NXR1NW90fX19XCIpLENvdXJpZXI6SyhcInsnd2lkdGhzJ3trM3cnZm9mJzZvfSdrZXJuaW5nJ3snZm9mJy02b319XCIpLFwiQ291cmllci1Cb2xkT2JsaXF1ZVwiOksoXCJ7J3dpZHRocyd7azN3J2ZvZic2b30na2VybmluZyd7J2ZvZictNm99fVwiKSxcIlRpbWVzLUJvbGRcIjpLKFwieyd3aWR0aHMne2szcTJxNW5jeDJyMjAxbjNtMjAxbzZvMjAxczJsMjAxdDJsMjAxdTJsMjAxdzNtMjAxeDNtMjAxeTNtMmsxdDJsMmwyMDJtMm4ybjNtMm8zbTJwNm8yMDJxNm8ycjF3MnMybDJ0MmwydTNtMnYzdDJ3MXQyeDJsMnkxdDJ6MXczazNtM2wzbTNtM20zbjNtM28zbTNwM20zcTNtM3IzbTNzM20yMDN0MmwyMDN1MmwzdjJsM3czdDN4M3QzeTN0M3ozbTRrNXg0bDRzNG00bTRuNHM0bzRzNHA0bTRxM3g0cjR5NHM0eTR0MnI0dTNtNHY0eTR3NG00eDV5NHk0czR6NHk1azN4NWw0eTVtNHM1bjNyNW80bTVwNHM1cTRzNXI2bzVzNHM1dDRzNXU0bTV2Mmw1dzF3NXgybDV5M3U1ejNtNmsybDZsM202bTNyNm4ydzZvM3I2cDJ3NnEybDZyM202czNyNnQxdzZ1Mmw2djNyNncxdzZ4NW42eTNyNnozbTdrM3I3bDNyN20ydzduMnI3bzJsN3AzcjdxM203cjRzN3MzbTd0M203dTJ3N3Yycjd3MXE3eDJyN3kzbzIwMmwzbWNsNHNhbDJsYW0zbWFuM21hbzNtYXAzbWFyM21hczJsYXQ0dWF1MXlhdjNtYXczdGF5NHVhejJsYmsyc2JsM3QnZm9mJzZvYm8ybGJwM3JicjF0YnMybGJ1MmxidjNtYnozbWNrNHMyMDJrM21jbTRzY240c2NvNHNjcDRzY3E2b2NyNHNjczRtY3Q0bWN1NG1jdjRtY3cycjJtM3JjeTJyY3oycmRsNHNkbTR5ZG40eWRvNHlkcDR5ZHE0eWRzNHlkdDRzZHU0c2R2NHNkdzRzZHozcmVrM21lbDNtZW0zbWVuM21lbzNtZXAzbWVxNHNlcjJ3ZXMyd2V0MndldTJ3ZXYyd2V3MXdleDF3ZXkxd2V6MXdmbDNyZm0zbWZuM21mbzNtZnAzbWZxM21mcjN0ZnMzbWZ0M3JmdTNyZnYzcmZ3M3JmejNtMjAzazZvMjEybTZvMmR3MmwyY3EybDN0M20zdTJsMTdzNHMxOW0zbX0na2VybmluZyd7Y2x7NHF0NWtzNW90NXF5NXJ3MTdzdjV0dn0yMDF0e2NrczRsc2Ntc2Nuc2Nvc2Nwc2NsczR3dn0ya3syMDF0c30yd3s0cXU1a3U3bXU1b3M1cXg1cnUxN3N1NXR1fTJ4ezE3c3U1dHU1b3U1cXN9Mnl7NHF2NWt2N211NW90NXF6NXJ1MTdzdTV0dX0nZm9mJy02bzd0e2Nrc2Nsc2Ntc2Nuc2Nvc2NwczRsc30zdXsxN3N1NXR1NW9zNXF1fTN2ezE3c3U1dHU1b3M1cXV9ZnV7MTdzdTV0dTVvdTVxdX03cHsxN3N1NXR1NW91NXF1fWNrezRxdDVrczVvdDVxeTVydzE3c3Y1dHZ9NGx7NHF0NWtzNW90NXF5NXJ3MTdzdjV0dn1jbXs0cXQ1a3M1b3Q1cXk1cncxN3N2NXR2fWNuezRxdDVrczVvdDVxeTVydzE3c3Y1dHZ9Y297NHF0NWtzNW90NXF5NXJ3MTdzdjV0dn1jcHs0cXQ1a3M1b3Q1cXk1cncxN3N2NXR2fTZsezE3c3Q1dHQ1b3U1cXV9MTdze2NrdWNsdWNtdWNudWNvdWNwdTRsdTR3dX01b3tja3VjbHVjbXVjbnVjb3VjcHU0bHU0d3V9NXF7Y2t6Y2x6Y216Y256Y296Y3B6NGx6NHd1fTVye2NreGNseGNteGNueGNveGNweDRseDR3dX01dHtja3VjbHVjbXVjbnVjb3VjcHU0bHU0d3V9N3F7Y2t1Y2x1Y211Y251Y291Y3B1NGx1fTZwezE3c3c1dHc1b3U1cXV9ZWt7MTdzdDV0dDVxdX1lbHsxN3N0NXR0NW91NXF1fWVtezE3c3Q1dHQ1cXV9ZW57MTdzdDV0dDVxdX1lb3sxN3N0NXR0NXF1fWVwezE3c3Q1dHQ1b3U1cXV9ZXN7MTdzczV0czVxdX1ldHsxN3N3NXR3NW91NXF1fWV1ezE3c3c1dHc1b3U1cXV9ZXZ7MTdzczV0czVxdX02ensxN3N3NXR3NW91NXF1NXJzfWZtezE3c3c1dHc1b3U1cXU1cnN9Zm57MTdzdzV0dzVvdTVxdTVyc31mb3sxN3N3NXR3NW91NXF1NXJzfWZwezE3c3c1dHc1b3U1cXU1cnN9ZnF7MTdzdzV0dzVvdTVxdTVyc303cntja3RjbHRjbXRjbnRjb3RjcHQ0bHQ1b3N9ZnN7MTdzdzV0dzVvdTVxdTVyc31mdHsxN3N1NXR1NW91NXF1fTdtezVvc31mdnsxN3N1NXR1NW91NXF1fWZ3ezE3c3U1dHU1b3U1cXV9Znp7Y2tzY2xzY21zY25zY29zY3BzNGxzfX19XCIpLFN5bWJvbDpLKFwieyd3aWR0aHMne2szdWF3NHIxOW0zbTJrMXQybDJsMjAybTJ5Mm4zbTJwNW4yMDJxNm8zazNtMnMybDJ0MmwydjNyMncxdDNtM20yeTF0Mnoxd2JrMnNibDNyJ2ZvZic2bzNuM20zbzNtM3AzbTNxM20zcjNtM3MzbTN0M20zdTF3M3YxdzN3M3IzeDNyM3kzcjN6MndicDN0M2wzbTV2Mmw1eDJsNXozbTJxNHlmcjNyN3Yzazd3MW83eDNrfSdrZXJuaW5nJ3snZm9mJy02b319XCIpLEhlbHZldGljYTpLKFwieyd3aWR0aHMne2szcDJxNG1jeDF3MjAxbjNyMjAxbzZvMjAxczFxMjAxdDFxMjAxdTFxMjAxdzJsMjAxeDJsMjAxeTJsMmsxdzJsMXcyMDJtMm4ybjNyMm8zcjJwNXQyMDJxNm8ycjFuMnMybDJ0MmwydTJyMnYzdTJ3MXcyeDJsMnkxdzJ6MXczazNyM2wzcjNtM3IzbjNyM28zcjNwM3IzcTNyM3IzcjNzM3IyMDN0MmwyMDN1MmwzdjF3M3czdTN4M3UzeTN1M3ozcjRrNnA0bDRtNG00bTRuNHM0bzRzNHA0bTRxM3g0cjR5NHM0czR0MXc0dTNtNHY0bTR3M3I0eDVuNHk0czR6NHk1azRtNWw0eTVtNHM1bjRtNW8zeDVwNHM1cTRtNXI1eTVzNG01dDRtNXUzeDV2MXc1dzF3NXgxdzV5Mno1ejNyNmsybDZsM3I2bTNyNm4zbTZvM3I2cDNyNnExdzZyM3I2czNyNnQxcTZ1MXE2djNtNncxcTZ4NW42eTNyNnozcjdrM3I3bDNyN20ybDduM203bzF3N3AzcjdxM203cjRzN3MzbTd0M203dTNtN3YybDd3MXU3eDJsN3kzdTIwMmwzcmNsNG1hbDJsYW0zcmFuM3JhbzNyYXAzcmFyM3JhczJsYXQ0dGF1MnBhdjNyYXczdWF5NHRhejJsYmsyc2JsM3UnZm9mJzZvYm8ybGJwM3JicjF3YnMybGJ1Mm9idjNyYnozeGNrNG0yMDJrM3JjbTRtY240bWNvNG1jcDRtY3E2b2NyNHNjczRtY3Q0bWN1NG1jdjRtY3cxdzJtMm5jeTF3Y3oxd2RsNHNkbTR5ZG40eWRvNHlkcDR5ZHE0eWRzNHlkdDRzZHU0c2R2NHNkdzRzZHozeGVrM3JlbDNyZW0zcmVuM3JlbzNyZXAzcmVxNXRlcjNtZXMzcmV0M3JldTNyZXYzcmV3MXdleDF3ZXkxd2V6MXdmbDNyZm0zcmZuM3JmbzNyZnAzcmZxM3JmcjN1ZnMzeGZ0M3JmdTNyZnYzcmZ3M3JmejNtMjAzazZvMjEybTZvMmR3MmwyY3EybDN0M3IzdTF3MTdzNG0xOW0zcn0na2VybmluZyd7NXF7NHd2fWNsezRxczVrdzVvdzVxczE3c3Y1dHZ9MjAxdHsyd3U0dzFrMnl1fTIwMXh7Mnd1NHd5Mnl1fTE3c3sya3RjbHVjbXVjbnU0b3RjcHU0bHU0d3ljb3Vja3V9Mnd7N3FzNHF6NWsxbTE3c3k1b3c1cXg1cnNmc3U1dHk3dHVmenV9Mnh7MTdzeTV0eTVveTVxc30yeXs3cXM0cXo1azFtMTdzeTVvdzVxeDVyc2ZzdTV0eTd0dWZ6dX0nZm9mJy02bzdwezE3c3Y1dHY1b3d9Y2t7NHFzNWt3NW93NXFzMTdzdjV0dn00bHs0cXM1a3c1b3c1cXMxN3N2NXR2fWNtezRxczVrdzVvdzVxczE3c3Y1dHZ9Y257NHFzNWt3NW93NXFzMTdzdjV0dn1jb3s0cXM1a3c1b3c1cXMxN3N2NXR2fWNwezRxczVrdzVvdzVxczE3c3Y1dHZ9Nmx7MTdzeTV0eTVvd31kb3sxN3N0NXR0fTR6ezE3c3Q1dHR9N3N7ZnN0fWRtezE3c3Q1dHR9ZG57MTdzdDV0dH01b3tja3djbHdjbXdjbndjb3djcHc0bHc0d3Z9ZHB7MTdzdDV0dH1kcXsxN3N0NXR0fTd0ezVvd31kc3sxN3N0NXR0fTV0ezJrdGNsdWNtdWNudTRvdGNwdTRsdTR3eWNvdWNrdX1mdXsxN3N2NXR2NW93fTZwezE3c3k1dHk1b3c1cXN9ZWt7MTdzeTV0eTVvd31lbHsxN3N5NXR5NW93fWVtezE3c3k1dHk1b3d9ZW57NXR5fWVvezE3c3k1dHk1b3d9ZXB7MTdzeTV0eTVvd31lc3sxN3N5NXR5NXFzfWV0ezE3c3k1dHk1b3c1cXN9ZXV7MTdzeTV0eTVvdzVxc31ldnsxN3N5NXR5NW93NXFzfTZ6ezE3c3k1dHk1b3c1cXN9Zm17MTdzeTV0eTVvdzVxc31mbnsxN3N5NXR5NW93NXFzfWZvezE3c3k1dHk1b3c1cXN9ZnB7MTdzeTV0eTVxc31mcXsxN3N5NXR5NW93NXFzfTdyezVvd31mc3sxN3N5NXR5NW93NXFzfWZ0ezE3c3Y1dHY1b3d9N217NW93fWZ2ezE3c3Y1dHY1b3d9Znd7MTdzdjV0djVvd319fVwiKSxcIkhlbHZldGljYS1Cb2xkT2JsaXF1ZVwiOksoXCJ7J3dpZHRocyd7azNzMnE0c2N4MXcyMDFuM3IyMDFvNm8yMDFzMXcyMDF0MXcyMDF1MXcyMDF3M20yMDF4M20yMDF5M20yazF3MmwybDIwMm0ybjJuM3IybzNyMnA1dDIwMnE2bzJyMXMyczJsMnQybDJ1MnIydjN1MncxdzJ4MmwyeTF3MnoxdzNrM3IzbDNyM20zcjNuM3IzbzNyM3AzcjNxM3IzcjNyM3MzcjIwM3QybDIwM3UybDN2MmwzdzN1M3gzdTN5M3UzejN4NGs2bDRsNHM0bTRzNG40czRvNHM0cDRtNHEzeDRyNHk0czRzNHQxdzR1M3I0djRzNHczeDR4NW40eTRzNHo0eTVrNG01bDR5NW00czVuNG01bzN4NXA0czVxNG01cjV5NXM0bTV0NG01dTN4NXYybDV3MXc1eDJsNXkzdTV6M3I2azJsNmwzcjZtM3g2bjNyNm8zeDZwM3I2cTJsNnIzeDZzM3g2dDF3NnUxdzZ2M3I2dzF3Nng1dDZ5M3g2ejN4N2szeDdsM3g3bTJyN24zcjdvMmw3cDN4N3EzcjdyNHk3czNyN3Qzcjd1M203djJyN3cxdzd4MnI3eTN1MjAybDNyY2w0c2FsMmxhbTNyYW4zcmFvM3JhcDNyYXIzcmFzMmxhdDR0YXUycGF2M3JhdzN1YXk0dGF6MmxiazJzYmwzdSdmb2YnNm9ibzJsYnAzeGJxM3JicjF3YnMybGJ1Mm9idjNyYnozeGNrNHMyMDJrM3JjbTRzY240c2NvNHNjcDRzY3E2b2NyNHNjczRtY3Q0bWN1NG1jdjRtY3cxdzJtMnpjeTF3Y3oxd2RsNHNkbTR5ZG40eWRvNHlkcDR5ZHE0eWRzNHlkdDRzZHU0c2R2NHNkdzRzZHozeGVrM3JlbDNyZW0zcmVuM3JlbzNyZXAzcmVxNXRlcjNyZXMzcmV0M3JldTNyZXYzcmV3MXdleDF3ZXkxd2V6MXdmbDN4Zm0zeGZuM3hmbzN4ZnAzeGZxM3hmcjN1ZnMzeGZ0M3hmdTN4ZnYzeGZ3M3hmejNyMjAzazZvMjEybTZvMmR3MmwyY3EybDN0M3IzdTJsMTdzNG0xOW0zcn0na2VybmluZyd7Y2x7NHFzNWt1NW90NXFzMTdzdjV0dn0yMDF0ezJ3dzR3eTJ5d30yMDF3ezJrc30yMDF4ezJ3dzR3eTJ5d30ya3syMDF0czIwMXhzfTJ3ezdxczRxdTVrdzVvczVxdzVyczE3c3U1dHU3dHNmenN9Mnh7NW93NXFzfTJ5ezdxczRxdTVrdzVvczVxdzVyczE3c3U1dHU3dHNmenN9J2ZvZictNm83cHsxN3N1NXR1NW90fWNrezRxczVrdTVvdDVxczE3c3Y1dHZ9NGx7NHFzNWt1NW90NXFzMTdzdjV0dn1jbXs0cXM1a3U1b3Q1cXMxN3N2NXR2fWNuezRxczVrdTVvdDVxczE3c3Y1dHZ9Y297NHFzNWt1NW90NXFzMTdzdjV0dn1jcHs0cXM1a3U1b3Q1cXMxN3N2NXR2fTZsezE3c3Q1dHQ1b3N9MTdzezJrd2NsdmNtdmNudmNvdmNwdjRsdjR3d2Nrdn01b3sya3VjbHRjbXRjbnRjb3RjcHQ0bHQ0d3Rja3R9NXF7MmtzY2xzY21zY25zY29zY3BzNGxzNHd2Y2tzfTVyezJrczR3c301dHsya3djbHZjbXZjbnZjb3ZjcHY0bHY0d3dja3Z9ZW97MTdzdDV0dDVvc31mdXsxN3N1NXR1NW90fTZwezE3c3M1dHN9ZWt7MTdzdDV0dDVvc31lbHsxN3N0NXR0NW9zfWVtezE3c3Q1dHQ1b3N9ZW57MTdzdDV0dDVvc302b3syMDF0c31lcHsxN3N0NXR0NW9zfWVzezE3c3M1dHN9ZXR7MTdzczV0c31ldXsxN3NzNXRzfWV2ezE3c3M1dHN9Nnp7MTdzdTV0dTVvczVxdH1mbXsxN3N1NXR1NW9zNXF0fWZuezE3c3U1dHU1b3M1cXR9Zm97MTdzdTV0dTVvczVxdH1mcHsxN3N1NXR1NW9zNXF0fWZxezE3c3U1dHU1b3M1cXR9ZnN7MTdzdTV0dTVvczVxdH1mdHsxN3N1NXR1NW90fTdtezVvc31mdnsxN3N1NXR1NW90fWZ3ezE3c3U1dHU1b3R9fX1cIiksWmFwZkRpbmdiYXRzOksoXCJ7J3dpZHRocyd7azR1Mmsxdydmb2YnNm99J2tlcm5pbmcneydmb2YnLTZvfX1cIiksXCJDb3VyaWVyLUJvbGRcIjpLKFwieyd3aWR0aHMne2szdydmb2YnNm99J2tlcm5pbmcneydmb2YnLTZvfX1cIiksXCJUaW1lcy1JdGFsaWNcIjpLKFwieyd3aWR0aHMne2szbjJxNHljeDJsMjAxbjNtMjAxbzV0MjAxczJsMjAxdDJsMjAxdTJsMjAxdzNyMjAxeDNyMjAxeTNyMmsxdDJsMmwyMDJtMm4ybjNtMm8zbTJwNW4yMDJxNXQycjFwMnMybDJ0MmwydTNtMnY0bjJ3MXQyeDJsMnkxdDJ6MXczazNtM2wzbTNtM20zbjNtM28zbTNwM20zcTNtM3IzbTNzM20yMDN0MmwyMDN1MmwzdjJsM3c0bjN4NG4zeTRuM3ozbTRrNXc0bDN4NG0zeDRuNG00bzRzNHAzeDRxM3g0cjRzNHM0czR0Mmw0dTJ3NHY0bTR3M3I0eDVuNHk0bTR6NHM1azN4NWw0czVtM3g1bjNtNW8zcjVwNHM1cTN4NXI1bjVzM3g1dDNyNXUzcjV2MnI1dzF3NXgycjV5MnU1ejNtNmsybDZsM202bTNtNm4ydzZvM202cDJ3NnExdzZyM202czNtNnQxdzZ1MXc2djJ3NncxdzZ4NHM2eTNtNnozbTdrM203bDNtN20ycjduMnI3bzF3N3AzbTdxMnc3cjRtN3Mydzd0Mnc3dTJyN3Yyczd3MXY3eDJzN3kzcTIwMmwzbWNsM3hhbDJyYW0zbWFuM21hbzNtYXAzbWFyM21hczJsYXQ0d2F1MXZhdjNtYXc0bmF5NHdhejJsYmsyc2JsNG4nZm9mJzZvYm8ybGJwM21icTNvYnIxdGJzMmxidTF6YnYzbWJ6M21jazN4MjAyazNtY20zeGNuM3hjbzN4Y3AzeGNxNXRjcjRtY3MzeGN0M3hjdTN4Y3YzeGN3MmwybTJ1Y3kybGN6MmxkbDRtZG00c2RuNHNkbzRzZHA0c2RxNHNkczRzZHQ0c2R1NHNkdjRzZHc0c2R6M21lazNtZWwzbWVtM21lbjNtZW8zbWVwM21lcTRtZXIyd2VzMndldDJ3ZXUyd2V2MndldzF3ZXgxd2V5MXdlejF3ZmwzbWZtM21mbjNtZm8zbWZwM21mcTNtZnI0bmZzM21mdDNtZnUzbWZ2M21mdzNtZnoydzIwM2s2bzIxMm02bTJkdzJsMmNxMmwzdDNtM3UybDE3czNyMTltM219J2tlcm5pbmcne2NsezVrdDRxd30yMDFzezIwMXN3fTIwMXR7MjAxdHcyd3kyeXk2cS10fTIwMXh7Mnd5Mnl5fTJrezIwMXR3fTJ3ezdxczRxeTdyczVreTdtdzVvczVxeDVydTE3c3U1dHV9Mnh7MTdzczV0czVvc30yeXs3cXM0cXk3cnM1a3k3bXc1b3M1cXg1cnUxN3N1NXR1fSdmb2YnLTZvNnR7MTdzczV0czVxc303dHs1b3N9M3Z7NXFzfTdwezE3c3U1dHU1cXN9Y2t7NWt0NHF3fTRsezVrdDRxd31jbXs1a3Q0cXd9Y257NWt0NHF3fWNvezVrdDRxd31jcHs1a3Q0cXd9Nmx7NHFzNWtzNW91NXF3NXJ1MTdzdTV0dX0xN3N7MmtzfTVxe2NrdmNsdmNtdmNudmNvdmNwdjRsdn01cntja3VjbHVjbXVjbnVjb3VjcHU0bHV9NXR7MmtzfTZwezRxczVrczVvdTVxdzVydTE3c3U1dHV9ZWt7NHFzNWtzNW91NXF3NXJ1MTdzdTV0dX1lbHs0cXM1a3M1b3U1cXc1cnUxN3N1NXR1fWVtezRxczVrczVvdTVxdzVydTE3c3U1dHV9ZW57NHFzNWtzNW91NXF3NXJ1MTdzdTV0dX1lb3s0cXM1a3M1b3U1cXc1cnUxN3N1NXR1fWVwezRxczVrczVvdTVxdzVydTE3c3U1dHV9ZXN7NWtzNXFzNHFzfWV0ezRxczVrczVvdTVxdzVydTE3c3U1dHV9ZXV7NHFzNWtzNXF3NXJ1MTdzdTV0dX1ldns1a3M1cXM0cXN9ZXh7MTdzczV0czVxc302ens0cXY1a3M1b3U1cXc1cnUxN3N1NXR1fWZtezRxdjVrczVvdTVxdzVydTE3c3U1dHV9Zm57NHF2NWtzNW91NXF3NXJ1MTdzdTV0dX1mb3s0cXY1a3M1b3U1cXc1cnUxN3N1NXR1fWZwezRxdjVrczVvdTVxdzVydTE3c3U1dHV9ZnF7NHF2NWtzNW91NXF3NXJ1MTdzdTV0dX03cns1b3N9ZnN7NHF2NWtzNW91NXF3NXJ1MTdzdTV0dX1mdHsxN3N1NXR1NXFzfWZ1ezE3c3U1dHU1cXN9ZnZ7MTdzdTV0dTVxc31md3sxN3N1NXR1NXFzfX19XCIpLFwiVGltZXMtUm9tYW5cIjpLKFwieyd3aWR0aHMne2szbjJxNHljeDJsMjAxbjNtMjAxbzZvMjAxczJsMjAxdDJsMjAxdTJsMjAxdzJ3MjAxeDJ3MjAxeTJ3MmsxdDJsMmwyMDJtMm4ybjNtMm8zbTJwNW4yMDJxNm8ycjFtMnMybDJ0MmwydTNtMnYzczJ3MXQyeDJsMnkxdDJ6MXczazNtM2wzbTNtM20zbjNtM28zbTNwM20zcTNtM3IzbTNzM20yMDN0MmwyMDN1MmwzdjF3M3czczN4M3MzeTNzM3oydzRrNXc0bDRzNG00bTRuNG00bzRzNHAzeDRxM3I0cjRzNHM0czR0Mmw0dTJyNHY0czR3M3g0eDV0NHk0czR6NHM1azNyNWw0czVtNG01bjNyNW8zeDVwNHM1cTRzNXI1eTVzNHM1dDRzNXUzeDV2Mmw1dzF3NXgybDV5Mno1ejNtNmsybDZsMnc2bTNtNm4ydzZvM202cDJ3NnEybDZyM202czNtNnQxdzZ1MXc2djNtNncxdzZ4NHk2eTNtNnozbTdrM203bDNtN20ybDduMnI3bzF3N3AzbTdxM203cjRzN3MzbTd0M203dTJ3N3Yzazd3MW83eDNrN3kzcTIwMmwzbWNsNHNhbDJsYW0zbWFuM21hbzNtYXAzbWFyM21hczJsYXQ0d2F1MXZhdjNtYXczc2F5NHdhejJsYmsyc2JsM3MnZm9mJzZvYm8ybGJwM21icTJ4YnIxdGJzMmxidTF6YnYzbWJ6MndjazRzMjAyazNtY200c2NuNHNjbzRzY3A0c2NxNXRjcjRtY3MzeGN0M3hjdTN4Y3YzeGN3MmwybTJ0Y3kybGN6MmxkbDRzZG00c2RuNHNkbzRzZHA0c2RxNHNkczRzZHQ0c2R1NHNkdjRzZHc0c2R6M21lazJ3ZWwyd2VtMndlbjJ3ZW8yd2VwMndlcTRtZXIyd2VzMndldDJ3ZXUyd2V2MndldzF3ZXgxd2V5MXdlejF3ZmwzbWZtM21mbjNtZm8zbWZwM21mcTNtZnIzc2ZzM21mdDNtZnUzbWZ2M21mdzNtZnozbTIwM2s2bzIxMm02bTJkdzJsMmNxMmwzdDNtM3UxdzE3czRzMTltM219J2tlcm5pbmcne2NsezRxczVrdTE3c3c1b3U1cXk1cncyMDFzczV0dzIwMXdzfTIwMXN7MjAxc3N9MjAxdHtja3c0bHdjbXdjbndjb3djcHdjbHc0d3UyMDF0c30ya3syMDF0c30yd3s0cXM1a3c1b3M1cXg1cnUxN3N4NXR4fTJ4ezE3c3c1dHc1b3U1cXV9Mnl7NHFzNWt3NW9zNXF4NXJ1MTdzeDV0eH0nZm9mJy02bzd0e2NrdWNsdWNtdWNudWNvdWNwdTRsdTVvczVyc30zdXsxN3N1NXR1NXFzfTN2ezE3c3U1dHU1cXN9N3B7MTdzdzV0dzVxc31ja3s0cXM1a3UxN3N3NW91NXF5NXJ3MjAxc3M1dHcyMDF3c300bHs0cXM1a3UxN3N3NW91NXF5NXJ3MjAxc3M1dHcyMDF3c31jbXs0cXM1a3UxN3N3NW91NXF5NXJ3MjAxc3M1dHcyMDF3c31jbns0cXM1a3UxN3N3NW91NXF5NXJ3MjAxc3M1dHcyMDF3c31jb3s0cXM1a3UxN3N3NW91NXF5NXJ3MjAxc3M1dHcyMDF3c31jcHs0cXM1a3UxN3N3NW91NXF5NXJ3MjAxc3M1dHcyMDF3c302bHsxN3N1NXR1NW9zNXF3NXJzfTE3c3sya3RjbHZjbXZjbnZjb3ZjcHY0bHY0d3Vja3Z9NW97Y2t3Y2x3Y213Y253Y293Y3B3NGx3NHd1fTVxe2NreWNseWNteWNueWNveWNweTRseTR3dTVtc301cntja3RjbHRjbXRjbnRjb3RjcHQ0bHQ0d3N9NXR7Mmt0Y2x2Y212Y252Y292Y3B2NGx2NHd1Y2t2fTdxe2Nrc2Nsc2Ntc2Nuc2Nvc2NwczRsc302cHsxN3N1NXR1NXF3NXJzfWVrezVxczVyc31lbHsxN3N1NXR1NW9zNXF3NXJzfWVtezE3c3U1dHU1b3M1cXM1cnN9ZW57MTdzdTVxczVyc31lb3s1cXM1cnN9ZXB7MTdzdTV0dTVvczVxdzVyc31lc3s1cXN9ZXR7MTdzdTV0dTVxdzVyc31ldXsxN3N1NXR1NXFzNXJzfWV2ezVxc302ensxN3N2NXR2NW9zNXF4NXJzfWZtezVvczVxdDVyc31mbnsxN3N2NXR2NW9zNXF4NXJzfWZvezE3c3Y1dHY1b3M1cXg1cnN9ZnB7NW9zNXF0NXJzfWZxezVvczVxdDVyc303cntja3VjbHVjbXVjbnVjb3VjcHU0bHU1b3N9ZnN7MTdzdjV0djVvczVxeDVyc31mdHsxN3NzNXRzNXFzfWZ1ezE3c3c1dHc1cXN9ZnZ7MTdzdzV0dzVxc31md3sxN3NzNXRzNXFzfWZ6e2NrdWNsdWNtdWNudWNvdWNwdTRsdTVvczVyc319fVwiKSxcIkhlbHZldGljYS1PYmxpcXVlXCI6SyhcInsnd2lkdGhzJ3trM3AycTRtY3gxdzIwMW4zcjIwMW82bzIwMXMxcTIwMXQxcTIwMXUxcTIwMXcybDIwMXgybDIwMXkybDJrMXcybDF3MjAybTJuMm4zcjJvM3IycDV0MjAycTZvMnIxbjJzMmwydDJsMnUycjJ2M3UydzF3MngybDJ5MXcyejF3M2szcjNsM3IzbTNyM24zcjNvM3IzcDNyM3EzcjNyM3IzczNyMjAzdDJsMjAzdTJsM3YxdzN3M3UzeDN1M3kzdTN6M3I0azZwNGw0bTRtNG00bjRzNG80czRwNG00cTN4NHI0eTRzNHM0dDF3NHUzbTR2NG00dzNyNHg1bjR5NHM0ejR5NWs0bTVsNHk1bTRzNW40bTVvM3g1cDRzNXE0bTVyNXk1czRtNXQ0bTV1M3g1djF3NXcxdzV4MXc1eTJ6NXozcjZrMmw2bDNyNm0zcjZuM202bzNyNnAzcjZxMXc2cjNyNnMzcjZ0MXE2dTFxNnYzbTZ3MXE2eDVuNnkzcjZ6M3I3azNyN2wzcjdtMmw3bjNtN28xdzdwM3I3cTNtN3I0czdzM203dDNtN3UzbTd2Mmw3dzF1N3gybDd5M3UyMDJsM3JjbDRtYWwybGFtM3JhbjNyYW8zcmFwM3JhcjNyYXMybGF0NHRhdTJwYXYzcmF3M3VheTR0YXoybGJrMnNibDN1J2ZvZic2b2JvMmxicDNyYnIxd2JzMmxidTJvYnYzcmJ6M3hjazRtMjAyazNyY200bWNuNG1jbzRtY3A0bWNxNm9jcjRzY3M0bWN0NG1jdTRtY3Y0bWN3MXcybTJuY3kxd2N6MXdkbDRzZG00eWRuNHlkbzR5ZHA0eWRxNHlkczR5ZHQ0c2R1NHNkdjRzZHc0c2R6M3hlazNyZWwzcmVtM3JlbjNyZW8zcmVwM3JlcTV0ZXIzbWVzM3JldDNyZXUzcmV2M3JldzF3ZXgxd2V5MXdlejF3ZmwzcmZtM3JmbjNyZm8zcmZwM3JmcTNyZnIzdWZzM3hmdDNyZnUzcmZ2M3JmdzNyZnozbTIwM2s2bzIxMm02bzJkdzJsMmNxMmwzdDNyM3UxdzE3czRtMTltM3J9J2tlcm5pbmcnezVxezR3dn1jbHs0cXM1a3c1b3c1cXMxN3N2NXR2fTIwMXR7Mnd1NHcxazJ5dX0yMDF4ezJ3dTR3eTJ5dX0xN3N7Mmt0Y2x1Y211Y251NG90Y3B1NGx1NHd5Y291Y2t1fTJ3ezdxczRxejVrMW0xN3N5NW93NXF4NXJzZnN1NXR5N3R1Znp1fTJ4ezE3c3k1dHk1b3k1cXN9Mnl7N3FzNHF6NWsxbTE3c3k1b3c1cXg1cnNmc3U1dHk3dHVmenV9J2ZvZictNm83cHsxN3N2NXR2NW93fWNrezRxczVrdzVvdzVxczE3c3Y1dHZ9NGx7NHFzNWt3NW93NXFzMTdzdjV0dn1jbXs0cXM1a3c1b3c1cXMxN3N2NXR2fWNuezRxczVrdzVvdzVxczE3c3Y1dHZ9Y297NHFzNWt3NW93NXFzMTdzdjV0dn1jcHs0cXM1a3c1b3c1cXMxN3N2NXR2fTZsezE3c3k1dHk1b3d9ZG97MTdzdDV0dH00ensxN3N0NXR0fTdze2ZzdH1kbXsxN3N0NXR0fWRuezE3c3Q1dHR9NW97Y2t3Y2x3Y213Y253Y293Y3B3NGx3NHd2fWRwezE3c3Q1dHR9ZHF7MTdzdDV0dH03dHs1b3d9ZHN7MTdzdDV0dH01dHsya3RjbHVjbXVjbnU0b3RjcHU0bHU0d3ljb3Vja3V9ZnV7MTdzdjV0djVvd302cHsxN3N5NXR5NW93NXFzfWVrezE3c3k1dHk1b3d9ZWx7MTdzeTV0eTVvd31lbXsxN3N5NXR5NW93fWVuezV0eX1lb3sxN3N5NXR5NW93fWVwezE3c3k1dHk1b3d9ZXN7MTdzeTV0eTVxc31ldHsxN3N5NXR5NW93NXFzfWV1ezE3c3k1dHk1b3c1cXN9ZXZ7MTdzeTV0eTVvdzVxc302ensxN3N5NXR5NW93NXFzfWZtezE3c3k1dHk1b3c1cXN9Zm57MTdzeTV0eTVvdzVxc31mb3sxN3N5NXR5NW93NXFzfWZwezE3c3k1dHk1cXN9ZnF7MTdzeTV0eTVvdzVxc303cns1b3d9ZnN7MTdzeTV0eTVvdzVxc31mdHsxN3N2NXR2NW93fTdtezVvd31mdnsxN3N2NXR2NW93fWZ3ezE3c3Y1dHY1b3d9fX1cIil9fSxYLmV2ZW50cy5wdXNoKFtcImFkZEZvbnRcIixmdW5jdGlvbih0KXt2YXIgZSxuLHIsaT10LmZvbnQsbz1cIlVuaWNvZGVcIjsoZT0kW29dW2kucG9zdFNjcmlwdE5hbWVdKSYmKChuPWkubWV0YWRhdGFbb10/aS5tZXRhZGF0YVtvXTppLm1ldGFkYXRhW29dPXt9KS53aWR0aHM9ZS53aWR0aHMsbi5rZXJuaW5nPWUua2VybmluZyksKHI9UVtvXVtpLnBvc3RTY3JpcHROYW1lXSkmJigobj1pLm1ldGFkYXRhW29dP2kubWV0YWRhdGFbb106aS5tZXRhZGF0YVtvXT17fSkuZW5jb2Rpbmc9cikuY29kZVBhZ2VzJiZyLmNvZGVQYWdlcy5sZW5ndGgmJihpLmVuY29kaW5nPXIuY29kZVBhZ2VzWzBdKX1dKSxcbi8qKlxuICAgKiBAbGljZW5zZVxuICAgKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gICAqIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZVxuICAgKi9cbnR0PWx0LFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmJiZzZWxmfHxcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsJiZnbG9iYWx8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpLHR0LkFQSS5ldmVudHMucHVzaChbXCJhZGRGb250XCIsZnVuY3Rpb24odCl7dmFyIGU9dC5mb250LG49dC5pbnN0YW5jZTtpZih2b2lkIDAhPT1uJiZuLmV4aXN0c0ZpbGVJblZGUyhlLnBvc3RTY3JpcHROYW1lKSl7dmFyIHI9bi5nZXRGaWxlRnJvbVZGUyhlLnBvc3RTY3JpcHROYW1lKTtpZihcInN0cmluZ1wiIT10eXBlb2Ygcil0aHJvdyBuZXcgRXJyb3IoXCJGb250IGlzIG5vdCBzdG9yZWQgYXMgc3RyaW5nLWRhdGEgaW4gdkZTLCBpbXBvcnQgZm9udHMgb3IgcmVtb3ZlIGRlY2xhcmF0aW9uIGRvYy5hZGRGb250KCdcIitlLnBvc3RTY3JpcHROYW1lK1wiJykuXCIpO2UubWV0YWRhdGE9dHQuQVBJLlRURkZvbnQub3BlbihlLnBvc3RTY3JpcHROYW1lLGUuZm9udE5hbWUscixlLmVuY29kaW5nKSxlLm1ldGFkYXRhLlVuaWNvZGU9ZS5tZXRhZGF0YS5Vbmljb2RlfHx7ZW5jb2Rpbmc6e30sa2VybmluZzp7fSx3aWR0aHM6W119LGUubWV0YWRhdGEuZ2x5SWRzVXNlZD1bMF19ZWxzZSBpZighMT09PWUuaXNTdGFuZGFyZEZvbnQpdGhyb3cgbmV3IEVycm9yKFwiRm9udCBkb2VzIG5vdCBleGlzdCBpbiB2RlMsIGltcG9ydCBmb250cyBvciByZW1vdmUgZGVjbGFyYXRpb24gZG9jLmFkZEZvbnQoJ1wiK2UucG9zdFNjcmlwdE5hbWUrXCInKS5cIil9XSksKFxuLyoqIEBsaWNlbnNlXG4gICAqIENvcHlyaWdodCAoYykgMjAxMiBXaWxsb3cgU3lzdGVtcyBDb3Jwb3JhdGlvbiwgd2lsbG93LXN5c3RlbXMuY29tXG4gICAqIFxuICAgKiBcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICovXG5ldD1sdC5BUEkpLmFkZFN2Zz1mdW5jdGlvbih0LGUsbixyLGkpe2lmKHZvaWQgMD09PWV8fHZvaWQgMD09PW4pdGhyb3cgbmV3IEVycm9yKFwiYWRkU1ZHIG5lZWRzIHZhbHVlcyBmb3IgJ3gnIGFuZCAneSdcIik7ZnVuY3Rpb24gbyh0KXtmb3IodmFyIGU9cGFyc2VGbG9hdCh0WzFdKSxuPXBhcnNlRmxvYXQodFsyXSkscj1bXSxpPTMsbz10Lmxlbmd0aDtpPG87KVwiY1wiPT09dFtpXT8oci5wdXNoKFtwYXJzZUZsb2F0KHRbaSsxXSkscGFyc2VGbG9hdCh0W2krMl0pLHBhcnNlRmxvYXQodFtpKzNdKSxwYXJzZUZsb2F0KHRbaSs0XSkscGFyc2VGbG9hdCh0W2krNV0pLHBhcnNlRmxvYXQodFtpKzZdKV0pLGkrPTcpOlwibFwiPT09dFtpXT8oci5wdXNoKFtwYXJzZUZsb2F0KHRbaSsxXSkscGFyc2VGbG9hdCh0W2krMl0pXSksaSs9Myk6aSs9MTtyZXR1cm5bZSxuLHJdfXZhciBhLHMsbCxoLHUsYyxmLHAsZD0oaD1kb2N1bWVudCxwPWguY3JlYXRlRWxlbWVudChcImlmcmFtZVwiKSx1PVwiLmpzUERGX3NpbGx5c3ZnX2lmcmFtZSB7ZGlzcGxheTpub25lO3Bvc2l0aW9uOmFic29sdXRlO31cIiwoZj0oYz1oKS5jcmVhdGVFbGVtZW50KFwic3R5bGVcIikpLnR5cGU9XCJ0ZXh0L2Nzc1wiLGYuc3R5bGVTaGVldD9mLnN0eWxlU2hlZXQuY3NzVGV4dD11OmYuYXBwZW5kQ2hpbGQoYy5jcmVhdGVUZXh0Tm9kZSh1KSksYy5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF0uYXBwZW5kQ2hpbGQoZikscC5uYW1lPVwiY2hpbGRmcmFtZVwiLHAuc2V0QXR0cmlidXRlKFwid2lkdGhcIiwwKSxwLnNldEF0dHJpYnV0ZShcImhlaWdodFwiLDApLHAuc2V0QXR0cmlidXRlKFwiZnJhbWVib3JkZXJcIixcIjBcIikscC5zZXRBdHRyaWJ1dGUoXCJzY3JvbGxpbmdcIixcIm5vXCIpLHAuc2V0QXR0cmlidXRlKFwic2VhbWxlc3NcIixcInNlYW1sZXNzXCIpLHAuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixcImpzUERGX3NpbGx5c3ZnX2lmcmFtZVwiKSxoLmJvZHkuYXBwZW5kQ2hpbGQocCkscCksZz0oYT10LChsPSgocz1kKS5jb250ZW50V2luZG93fHxzLmNvbnRlbnREb2N1bWVudCkuZG9jdW1lbnQpLndyaXRlKGEpLGwuY2xvc2UoKSxsLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic3ZnXCIpWzBdKSxtPVsxLDFdLHk9cGFyc2VGbG9hdChnLmdldEF0dHJpYnV0ZShcIndpZHRoXCIpKSx2PXBhcnNlRmxvYXQoZy5nZXRBdHRyaWJ1dGUoXCJoZWlnaHRcIikpO3kmJnYmJihyJiZpP209W3IveSxpL3ZdOnI/bT1bci95LHIveV06aSYmKG09W2kvdixpL3ZdKSk7dmFyIHcsYix4LE4sTD1nLmNoaWxkTm9kZXM7Zm9yKHc9MCxiPUwubGVuZ3RoO3c8Yjt3KyspKHg9TFt3XSkudGFnTmFtZSYmXCJQQVRIXCI9PT14LnRhZ05hbWUudG9VcHBlckNhc2UoKSYmKChOPW8oeC5nZXRBdHRyaWJ1dGUoXCJkXCIpLnNwbGl0KFwiIFwiKSkpWzBdPU5bMF0qbVswXStlLE5bMV09TlsxXSptWzFdK24sdGhpcy5saW5lcy5jYWxsKHRoaXMsTlsyXSxOWzBdLE5bMV0sbSkpO3JldHVybiB0aGlzfSxldC5hZGRTVkc9ZXQuYWRkU3ZnLGV0LmFkZFN2Z0FzSW1hZ2U9ZnVuY3Rpb24odCxlLG4scixpLG8sYSxzKXtpZihpc05hTihlKXx8aXNOYU4obikpdGhyb3cgY29uc29sZS5lcnJvcihcImpzUERGLmFkZFN2Z0FzSW1hZ2U6IEludmFsaWQgY29vcmRpbmF0ZXNcIixhcmd1bWVudHMpLG5ldyBFcnJvcihcIkludmFsaWQgY29vcmRpbmF0ZXMgcGFzc2VkIHRvIGpzUERGLmFkZFN2Z0FzSW1hZ2VcIik7aWYoaXNOYU4ocil8fGlzTmFOKGkpKXRocm93IGNvbnNvbGUuZXJyb3IoXCJqc1BERi5hZGRTdmdBc0ltYWdlOiBJbnZhbGlkIG1lYXN1cmVtZW50c1wiLGFyZ3VtZW50cyksbmV3IEVycm9yKFwiSW52YWxpZCBtZWFzdXJlbWVudHMgKHdpZHRoIGFuZC9vciBoZWlnaHQpIHBhc3NlZCB0byBqc1BERi5hZGRTdmdBc0ltYWdlXCIpO3ZhciBsPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7bC53aWR0aD1yLGwuaGVpZ2h0PWk7dmFyIGg9bC5nZXRDb250ZXh0KFwiMmRcIik7cmV0dXJuIGguZmlsbFN0eWxlPVwiI2ZmZlwiLGguZmlsbFJlY3QoMCwwLGwud2lkdGgsbC5oZWlnaHQpLGNhbnZnKGwsdCx7aWdub3JlTW91c2U6ITAsaWdub3JlQW5pbWF0aW9uOiEwLGlnbm9yZURpbWVuc2lvbnM6ITAsaWdub3JlQ2xlYXI6ITB9KSx0aGlzLmFkZEltYWdlKGwudG9EYXRhVVJMKFwiaW1hZ2UvanBlZ1wiLDEpLGUsbixyLGksYSxzKSx0aGlzfSxsdC5BUEkucHV0VG90YWxQYWdlcz1mdW5jdGlvbih0KXt2YXIgZSxuPTA7bj1wYXJzZUludCh0aGlzLmludGVybmFsLmdldEZvbnQoKS5pZC5zdWJzdHIoMSksMTApPDE1PyhlPW5ldyBSZWdFeHAodCxcImdcIiksdGhpcy5pbnRlcm5hbC5nZXROdW1iZXJPZlBhZ2VzKCkpOihlPW5ldyBSZWdFeHAodGhpcy5wZGZFc2NhcGUxNih0LHRoaXMuaW50ZXJuYWwuZ2V0Rm9udCgpKSxcImdcIiksdGhpcy5wZGZFc2NhcGUxNih0aGlzLmludGVybmFsLmdldE51bWJlck9mUGFnZXMoKStcIlwiLHRoaXMuaW50ZXJuYWwuZ2V0Rm9udCgpKSk7Zm9yKHZhciByPTE7cjw9dGhpcy5pbnRlcm5hbC5nZXROdW1iZXJPZlBhZ2VzKCk7cisrKWZvcih2YXIgaT0wO2k8dGhpcy5pbnRlcm5hbC5wYWdlc1tyXS5sZW5ndGg7aSsrKXRoaXMuaW50ZXJuYWwucGFnZXNbcl1baV09dGhpcy5pbnRlcm5hbC5wYWdlc1tyXVtpXS5yZXBsYWNlKGUsbik7cmV0dXJuIHRoaXN9LGx0LkFQSS52aWV3ZXJQcmVmZXJlbmNlcz1mdW5jdGlvbih0LGUpe3ZhciBuO3Q9dHx8e30sZT1lfHwhMTt2YXIgcixpLG89e0hpZGVUb29sYmFyOntkZWZhdWx0VmFsdWU6ITEsdmFsdWU6ITEsdHlwZTpcImJvb2xlYW5cIixleHBsaWNpdFNldDohMSx2YWx1ZVNldDpbITAsITFdLHBkZlZlcnNpb246MS4zfSxIaWRlTWVudWJhcjp7ZGVmYXVsdFZhbHVlOiExLHZhbHVlOiExLHR5cGU6XCJib29sZWFuXCIsZXhwbGljaXRTZXQ6ITEsdmFsdWVTZXQ6WyEwLCExXSxwZGZWZXJzaW9uOjEuM30sSGlkZVdpbmRvd1VJOntkZWZhdWx0VmFsdWU6ITEsdmFsdWU6ITEsdHlwZTpcImJvb2xlYW5cIixleHBsaWNpdFNldDohMSx2YWx1ZVNldDpbITAsITFdLHBkZlZlcnNpb246MS4zfSxGaXRXaW5kb3c6e2RlZmF1bHRWYWx1ZTohMSx2YWx1ZTohMSx0eXBlOlwiYm9vbGVhblwiLGV4cGxpY2l0U2V0OiExLHZhbHVlU2V0OlshMCwhMV0scGRmVmVyc2lvbjoxLjN9LENlbnRlcldpbmRvdzp7ZGVmYXVsdFZhbHVlOiExLHZhbHVlOiExLHR5cGU6XCJib29sZWFuXCIsZXhwbGljaXRTZXQ6ITEsdmFsdWVTZXQ6WyEwLCExXSxwZGZWZXJzaW9uOjEuM30sRGlzcGxheURvY1RpdGxlOntkZWZhdWx0VmFsdWU6ITEsdmFsdWU6ITEsdHlwZTpcImJvb2xlYW5cIixleHBsaWNpdFNldDohMSx2YWx1ZVNldDpbITAsITFdLHBkZlZlcnNpb246MS40fSxOb25GdWxsU2NyZWVuUGFnZU1vZGU6e2RlZmF1bHRWYWx1ZTpcIlVzZU5vbmVcIix2YWx1ZTpcIlVzZU5vbmVcIix0eXBlOlwibmFtZVwiLGV4cGxpY2l0U2V0OiExLHZhbHVlU2V0OltcIlVzZU5vbmVcIixcIlVzZU91dGxpbmVzXCIsXCJVc2VUaHVtYnNcIixcIlVzZU9DXCJdLHBkZlZlcnNpb246MS4zfSxEaXJlY3Rpb246e2RlZmF1bHRWYWx1ZTpcIkwyUlwiLHZhbHVlOlwiTDJSXCIsdHlwZTpcIm5hbWVcIixleHBsaWNpdFNldDohMSx2YWx1ZVNldDpbXCJMMlJcIixcIlIyTFwiXSxwZGZWZXJzaW9uOjEuM30sVmlld0FyZWE6e2RlZmF1bHRWYWx1ZTpcIkNyb3BCb3hcIix2YWx1ZTpcIkNyb3BCb3hcIix0eXBlOlwibmFtZVwiLGV4cGxpY2l0U2V0OiExLHZhbHVlU2V0OltcIk1lZGlhQm94XCIsXCJDcm9wQm94XCIsXCJUcmltQm94XCIsXCJCbGVlZEJveFwiLFwiQXJ0Qm94XCJdLHBkZlZlcnNpb246MS40fSxWaWV3Q2xpcDp7ZGVmYXVsdFZhbHVlOlwiQ3JvcEJveFwiLHZhbHVlOlwiQ3JvcEJveFwiLHR5cGU6XCJuYW1lXCIsZXhwbGljaXRTZXQ6ITEsdmFsdWVTZXQ6W1wiTWVkaWFCb3hcIixcIkNyb3BCb3hcIixcIlRyaW1Cb3hcIixcIkJsZWVkQm94XCIsXCJBcnRCb3hcIl0scGRmVmVyc2lvbjoxLjR9LFByaW50QXJlYTp7ZGVmYXVsdFZhbHVlOlwiQ3JvcEJveFwiLHZhbHVlOlwiQ3JvcEJveFwiLHR5cGU6XCJuYW1lXCIsZXhwbGljaXRTZXQ6ITEsdmFsdWVTZXQ6W1wiTWVkaWFCb3hcIixcIkNyb3BCb3hcIixcIlRyaW1Cb3hcIixcIkJsZWVkQm94XCIsXCJBcnRCb3hcIl0scGRmVmVyc2lvbjoxLjR9LFByaW50Q2xpcDp7ZGVmYXVsdFZhbHVlOlwiQ3JvcEJveFwiLHZhbHVlOlwiQ3JvcEJveFwiLHR5cGU6XCJuYW1lXCIsZXhwbGljaXRTZXQ6ITEsdmFsdWVTZXQ6W1wiTWVkaWFCb3hcIixcIkNyb3BCb3hcIixcIlRyaW1Cb3hcIixcIkJsZWVkQm94XCIsXCJBcnRCb3hcIl0scGRmVmVyc2lvbjoxLjR9LFByaW50U2NhbGluZzp7ZGVmYXVsdFZhbHVlOlwiQXBwRGVmYXVsdFwiLHZhbHVlOlwiQXBwRGVmYXVsdFwiLHR5cGU6XCJuYW1lXCIsZXhwbGljaXRTZXQ6ITEsdmFsdWVTZXQ6W1wiQXBwRGVmYXVsdFwiLFwiTm9uZVwiXSxwZGZWZXJzaW9uOjEuNn0sRHVwbGV4OntkZWZhdWx0VmFsdWU6XCJcIix2YWx1ZTpcIm5vbmVcIix0eXBlOlwibmFtZVwiLGV4cGxpY2l0U2V0OiExLHZhbHVlU2V0OltcIlNpbXBsZXhcIixcIkR1cGxleEZsaXBTaG9ydEVkZ2VcIixcIkR1cGxleEZsaXBMb25nRWRnZVwiLFwibm9uZVwiXSxwZGZWZXJzaW9uOjEuN30sUGlja1RyYXlCeVBERlNpemU6e2RlZmF1bHRWYWx1ZTohMSx2YWx1ZTohMSx0eXBlOlwiYm9vbGVhblwiLGV4cGxpY2l0U2V0OiExLHZhbHVlU2V0OlshMCwhMV0scGRmVmVyc2lvbjoxLjd9LFByaW50UGFnZVJhbmdlOntkZWZhdWx0VmFsdWU6XCJcIix2YWx1ZTpcIlwiLHR5cGU6XCJhcnJheVwiLGV4cGxpY2l0U2V0OiExLHZhbHVlU2V0Om51bGwscGRmVmVyc2lvbjoxLjd9LE51bUNvcGllczp7ZGVmYXVsdFZhbHVlOjEsdmFsdWU6MSx0eXBlOlwiaW50ZWdlclwiLGV4cGxpY2l0U2V0OiExLHZhbHVlU2V0Om51bGwscGRmVmVyc2lvbjoxLjd9fSxhPU9iamVjdC5rZXlzKG8pLHM9W10sbD0wLGg9MCx1PTAsYz0hMDtmdW5jdGlvbiBmKHQsZSl7dmFyIG4scj0hMTtmb3Iobj0wO248dC5sZW5ndGg7bis9MSl0W25dPT09ZSYmKHI9ITApO3JldHVybiByfWlmKHZvaWQgMD09PXRoaXMuaW50ZXJuYWwudmlld2VycHJlZmVyZW5jZXMmJih0aGlzLmludGVybmFsLnZpZXdlcnByZWZlcmVuY2VzPXt9LHRoaXMuaW50ZXJuYWwudmlld2VycHJlZmVyZW5jZXMuY29uZmlndXJhdGlvbj1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG8pKSx0aGlzLmludGVybmFsLnZpZXdlcnByZWZlcmVuY2VzLmlzU3Vic2NyaWJlZD0hMSksbj10aGlzLmludGVybmFsLnZpZXdlcnByZWZlcmVuY2VzLmNvbmZpZ3VyYXRpb24sXCJyZXNldFwiPT09dHx8ITA9PT1lKXt2YXIgcD1hLmxlbmd0aDtmb3IodT0wO3U8cDt1Kz0xKW5bYVt1XV0udmFsdWU9blthW3VdXS5kZWZhdWx0VmFsdWUsblthW3VdXS5leHBsaWNpdFNldD0hMX1pZihcIm9iamVjdFwiPT09c2UodCkpZm9yKHIgaW4gdClpZihpPXRbcl0sZihhLHIpJiZ2b2lkIDAhPT1pKXtpZihcImJvb2xlYW5cIj09PW5bcl0udHlwZSYmXCJib29sZWFuXCI9PXR5cGVvZiBpKW5bcl0udmFsdWU9aTtlbHNlIGlmKFwibmFtZVwiPT09bltyXS50eXBlJiZmKG5bcl0udmFsdWVTZXQsaSkpbltyXS52YWx1ZT1pO2Vsc2UgaWYoXCJpbnRlZ2VyXCI9PT1uW3JdLnR5cGUmJk51bWJlci5pc0ludGVnZXIoaSkpbltyXS52YWx1ZT1pO2Vsc2UgaWYoXCJhcnJheVwiPT09bltyXS50eXBlKXtmb3IobD0wO2w8aS5sZW5ndGg7bCs9MSlpZihjPSEwLDE9PT1pW2xdLmxlbmd0aCYmXCJudW1iZXJcIj09dHlwZW9mIGlbbF1bMF0pcy5wdXNoKFN0cmluZyhpW2xdLTEpKTtlbHNlIGlmKDE8aVtsXS5sZW5ndGgpe2ZvcihoPTA7aDxpW2xdLmxlbmd0aDtoKz0xKVwibnVtYmVyXCIhPXR5cGVvZiBpW2xdW2hdJiYoYz0hMSk7ITA9PT1jJiZzLnB1c2goW2lbbF1bMF0tMSxpW2xdWzFdLTFdLmpvaW4oXCIgXCIpKX1uW3JdLnZhbHVlPVwiW1wiK3Muam9pbihcIiBcIikrXCJdXCJ9ZWxzZSBuW3JdLnZhbHVlPW5bcl0uZGVmYXVsdFZhbHVlO25bcl0uZXhwbGljaXRTZXQ9ITB9cmV0dXJuITE9PT10aGlzLmludGVybmFsLnZpZXdlcnByZWZlcmVuY2VzLmlzU3Vic2NyaWJlZCYmKHRoaXMuaW50ZXJuYWwuZXZlbnRzLnN1YnNjcmliZShcInB1dENhdGFsb2dcIixmdW5jdGlvbigpe3ZhciB0LGU9W107Zm9yKHQgaW4gbikhMD09PW5bdF0uZXhwbGljaXRTZXQmJihcIm5hbWVcIj09PW5bdF0udHlwZT9lLnB1c2goXCIvXCIrdCtcIiAvXCIrblt0XS52YWx1ZSk6ZS5wdXNoKFwiL1wiK3QrXCIgXCIrblt0XS52YWx1ZSkpOzAhPT1lLmxlbmd0aCYmdGhpcy5pbnRlcm5hbC53cml0ZShcIi9WaWV3ZXJQcmVmZXJlbmNlc1xcbjw8XFxuXCIrZS5qb2luKFwiXFxuXCIpK1wiXFxuPj5cIil9KSx0aGlzLmludGVybmFsLnZpZXdlcnByZWZlcmVuY2VzLmlzU3Vic2NyaWJlZD0hMCksdGhpcy5pbnRlcm5hbC52aWV3ZXJwcmVmZXJlbmNlcy5jb25maWd1cmF0aW9uPW4sdGhpc30sXG4vKiogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gXG4gICAqIGpzUERGIFhNUCBtZXRhZGF0YSBwbHVnaW5cbiAgICogQ29weXJpZ2h0IChjKSAyMDE2IEp1c3NpIFV0dW5lbiwgdS1qdXNzaUBzdW9taTI0LmZpXG4gICAqIFxuICAgKiBcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICovXG5udD1sdC5BUEksb3Q9aXQ9cnQ9XCJcIixudC5hZGRNZXRhZGF0YT1mdW5jdGlvbih0LGUpe3JldHVybiBpdD1lfHxcImh0dHA6Ly9qc3BkZi5kZWZhdWx0Lm5hbWVzcGFjZXVyaS9cIixydD10LHRoaXMuaW50ZXJuYWwuZXZlbnRzLnN1YnNjcmliZShcInBvc3RQdXRSZXNvdXJjZXNcIixmdW5jdGlvbigpe2lmKHJ0KXt2YXIgdD0nPHJkZjpSREYgeG1sbnM6cmRmPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zI1wiPjxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PVwiXCIgeG1sbnM6anNwZGY9XCInK2l0KydcIj48anNwZGY6bWV0YWRhdGE+JyxlPXVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCgnPHg6eG1wbWV0YSB4bWxuczp4PVwiYWRvYmU6bnM6bWV0YS9cIj4nKSksbj11bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQodCkpLHI9dW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHJ0KSksaT11bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoXCI8L2pzcGRmOm1ldGFkYXRhPjwvcmRmOkRlc2NyaXB0aW9uPjwvcmRmOlJERj5cIikpLG89dW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KFwiPC94OnhtcG1ldGE+XCIpKSxhPW4ubGVuZ3RoK3IubGVuZ3RoK2kubGVuZ3RoK2UubGVuZ3RoK28ubGVuZ3RoO290PXRoaXMuaW50ZXJuYWwubmV3T2JqZWN0KCksdGhpcy5pbnRlcm5hbC53cml0ZShcIjw8IC9UeXBlIC9NZXRhZGF0YSAvU3VidHlwZSAvWE1MIC9MZW5ndGggXCIrYStcIiA+PlwiKSx0aGlzLmludGVybmFsLndyaXRlKFwic3RyZWFtXCIpLHRoaXMuaW50ZXJuYWwud3JpdGUoZStuK3IraStvKSx0aGlzLmludGVybmFsLndyaXRlKFwiZW5kc3RyZWFtXCIpLHRoaXMuaW50ZXJuYWwud3JpdGUoXCJlbmRvYmpcIil9ZWxzZSBvdD1cIlwifSksdGhpcy5pbnRlcm5hbC5ldmVudHMuc3Vic2NyaWJlKFwicHV0Q2F0YWxvZ1wiLGZ1bmN0aW9uKCl7b3QmJnRoaXMuaW50ZXJuYWwud3JpdGUoXCIvTWV0YWRhdGEgXCIrb3QrXCIgMCBSXCIpfSksdGhpc30sZnVuY3Rpb24oZix0KXt2YXIgZT1mLkFQSTt2YXIgbT1lLnBkZkVzY2FwZTE2PWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuLHI9ZS5tZXRhZGF0YS5Vbmljb2RlLndpZHRocyxpPVtcIlwiLFwiMFwiLFwiMDBcIixcIjAwMFwiLFwiMDAwMFwiXSxvPVtcIlwiXSxhPTAscz10Lmxlbmd0aDthPHM7KythKXtpZihuPWUubWV0YWRhdGEuY2hhcmFjdGVyVG9HbHlwaCh0LmNoYXJDb2RlQXQoYSkpLGUubWV0YWRhdGEuZ2x5SWRzVXNlZC5wdXNoKG4pLGUubWV0YWRhdGEudG9Vbmljb2RlW25dPXQuY2hhckNvZGVBdChhKSwtMT09ci5pbmRleE9mKG4pJiYoci5wdXNoKG4pLHIucHVzaChbcGFyc2VJbnQoZS5tZXRhZGF0YS53aWR0aE9mR2x5cGgobiksMTApXSkpLFwiMFwiPT1uKXJldHVybiBvLmpvaW4oXCJcIik7bj1uLnRvU3RyaW5nKDE2KSxvLnB1c2goaVs0LW4ubGVuZ3RoXSxuKX1yZXR1cm4gby5qb2luKFwiXCIpfSxwPWZ1bmN0aW9uKHQpe3ZhciBlLG4scixpLG8sYSxzO2ZvcihvPVwiL0NJREluaXQgL1Byb2NTZXQgZmluZHJlc291cmNlIGJlZ2luXFxuMTIgZGljdCBiZWdpblxcbmJlZ2luY21hcFxcbi9DSURTeXN0ZW1JbmZvIDw8XFxuICAvUmVnaXN0cnkgKEFkb2JlKVxcbiAgL09yZGVyaW5nIChVQ1MpXFxuICAvU3VwcGxlbWVudCAwXFxuPj4gZGVmXFxuL0NNYXBOYW1lIC9BZG9iZS1JZGVudGl0eS1VQ1MgZGVmXFxuL0NNYXBUeXBlIDIgZGVmXFxuMSBiZWdpbmNvZGVzcGFjZXJhbmdlXFxuPDAwMDA+PGZmZmY+XFxuZW5kY29kZXNwYWNlcmFuZ2VcIixyPVtdLGE9MCxzPShuPU9iamVjdC5rZXlzKHQpLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1lfSkpLmxlbmd0aDthPHM7YSsrKWU9blthXSwxMDA8PXIubGVuZ3RoJiYobys9XCJcXG5cIityLmxlbmd0aCtcIiBiZWdpbmJmY2hhclxcblwiK3Iuam9pbihcIlxcblwiKStcIlxcbmVuZGJmY2hhclwiLHI9W10pLGk9KFwiMDAwMFwiK3RbZV0udG9TdHJpbmcoMTYpKS5zbGljZSgtNCksZT0oXCIwMDAwXCIrKCtlKS50b1N0cmluZygxNikpLnNsaWNlKC00KSxyLnB1c2goXCI8XCIrZStcIj48XCIraStcIj5cIik7cmV0dXJuIHIubGVuZ3RoJiYobys9XCJcXG5cIityLmxlbmd0aCtcIiBiZWdpbmJmY2hhclxcblwiK3Iuam9pbihcIlxcblwiKStcIlxcbmVuZGJmY2hhclxcblwiKSxvKz1cImVuZGNtYXBcXG5DTWFwTmFtZSBjdXJyZW50ZGljdCAvQ01hcCBkZWZpbmVyZXNvdXJjZSBwb3BcXG5lbmRcXG5lbmRcIn07ZS5ldmVudHMucHVzaChbXCJwdXRGb250XCIsZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSxuLHIpe2lmKHQubWV0YWRhdGEgaW5zdGFuY2VvZiBmLkFQSS5UVEZGb250JiZcIklkZW50aXR5LUhcIj09PXQuZW5jb2Rpbmcpe2Zvcih2YXIgaT10Lm1ldGFkYXRhLlVuaWNvZGUud2lkdGhzLG89dC5tZXRhZGF0YS5zdWJzZXQuZW5jb2RlKHQubWV0YWRhdGEuZ2x5SWRzVXNlZCwxKSxhPVwiXCIscz0wO3M8by5sZW5ndGg7cysrKWErPVN0cmluZy5mcm9tQ2hhckNvZGUob1tzXSk7dmFyIGw9bigpO3Ioe2RhdGE6YSxhZGRMZW5ndGgxOiEwfSksZShcImVuZG9ialwiKTt2YXIgaD1uKCk7cih7ZGF0YTpwKHQubWV0YWRhdGEudG9Vbmljb2RlKSxhZGRMZW5ndGgxOiEwfSksZShcImVuZG9ialwiKTt2YXIgdT1uKCk7ZShcIjw8XCIpLGUoXCIvVHlwZSAvRm9udERlc2NyaXB0b3JcIiksZShcIi9Gb250TmFtZSAvXCIrdC5mb250TmFtZSksZShcIi9Gb250RmlsZTIgXCIrbCtcIiAwIFJcIiksZShcIi9Gb250QkJveCBcIitmLkFQSS5QREZPYmplY3QuY29udmVydCh0Lm1ldGFkYXRhLmJib3gpKSxlKFwiL0ZsYWdzIFwiK3QubWV0YWRhdGEuZmxhZ3MpLGUoXCIvU3RlbVYgXCIrdC5tZXRhZGF0YS5zdGVtViksZShcIi9JdGFsaWNBbmdsZSBcIit0Lm1ldGFkYXRhLml0YWxpY0FuZ2xlKSxlKFwiL0FzY2VudCBcIit0Lm1ldGFkYXRhLmFzY2VuZGVyKSxlKFwiL0Rlc2NlbnQgXCIrdC5tZXRhZGF0YS5kZWNlbmRlciksZShcIi9DYXBIZWlnaHQgXCIrdC5tZXRhZGF0YS5jYXBIZWlnaHQpLGUoXCI+PlwiKSxlKFwiZW5kb2JqXCIpO3ZhciBjPW4oKTtlKFwiPDxcIiksZShcIi9UeXBlIC9Gb250XCIpLGUoXCIvQmFzZUZvbnQgL1wiK3QuZm9udE5hbWUpLGUoXCIvRm9udERlc2NyaXB0b3IgXCIrdStcIiAwIFJcIiksZShcIi9XIFwiK2YuQVBJLlBERk9iamVjdC5jb252ZXJ0KGkpKSxlKFwiL0NJRFRvR0lETWFwIC9JZGVudGl0eVwiKSxlKFwiL0RXIDEwMDBcIiksZShcIi9TdWJ0eXBlIC9DSURGb250VHlwZTJcIiksZShcIi9DSURTeXN0ZW1JbmZvXCIpLGUoXCI8PFwiKSxlKFwiL1N1cHBsZW1lbnQgMFwiKSxlKFwiL1JlZ2lzdHJ5IChBZG9iZSlcIiksZShcIi9PcmRlcmluZyAoXCIrdC5lbmNvZGluZytcIilcIiksZShcIj4+XCIpLGUoXCI+PlwiKSxlKFwiZW5kb2JqXCIpLHQub2JqZWN0TnVtYmVyPW4oKSxlKFwiPDxcIiksZShcIi9UeXBlIC9Gb250XCIpLGUoXCIvU3VidHlwZSAvVHlwZTBcIiksZShcIi9Ub1VuaWNvZGUgXCIraCtcIiAwIFJcIiksZShcIi9CYXNlRm9udCAvXCIrdC5mb250TmFtZSksZShcIi9FbmNvZGluZyAvXCIrdC5lbmNvZGluZyksZShcIi9EZXNjZW5kYW50Rm9udHMgW1wiK2MrXCIgMCBSXVwiKSxlKFwiPj5cIiksZShcImVuZG9ialwiKSx0LmlzQWxyZWFkeVB1dHRlZD0hMH19KHQuZm9udCx0Lm91dCx0Lm5ld09iamVjdCx0LnB1dFN0cmVhbSl9XSk7ZS5ldmVudHMucHVzaChbXCJwdXRGb250XCIsZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSxuLHIpe2lmKHQubWV0YWRhdGEgaW5zdGFuY2VvZiBmLkFQSS5UVEZGb250JiZcIldpbkFuc2lFbmNvZGluZ1wiPT09dC5lbmNvZGluZyl7dC5tZXRhZGF0YS5Vbmljb2RlLndpZHRocztmb3IodmFyIGk9dC5tZXRhZGF0YS5yYXdEYXRhLG89XCJcIixhPTA7YTxpLmxlbmd0aDthKyspbys9U3RyaW5nLmZyb21DaGFyQ29kZShpW2FdKTt2YXIgcz1uKCk7cih7ZGF0YTpvLGFkZExlbmd0aDE6ITB9KSxlKFwiZW5kb2JqXCIpO3ZhciBsPW4oKTtyKHtkYXRhOnAodC5tZXRhZGF0YS50b1VuaWNvZGUpLGFkZExlbmd0aDE6ITB9KSxlKFwiZW5kb2JqXCIpO3ZhciBoPW4oKTtmb3IoZShcIjw8XCIpLGUoXCIvRGVzY2VudCBcIit0Lm1ldGFkYXRhLmRlY2VuZGVyKSxlKFwiL0NhcEhlaWdodCBcIit0Lm1ldGFkYXRhLmNhcEhlaWdodCksZShcIi9TdGVtViBcIit0Lm1ldGFkYXRhLnN0ZW1WKSxlKFwiL1R5cGUgL0ZvbnREZXNjcmlwdG9yXCIpLGUoXCIvRm9udEZpbGUyIFwiK3MrXCIgMCBSXCIpLGUoXCIvRmxhZ3MgOTZcIiksZShcIi9Gb250QkJveCBcIitmLkFQSS5QREZPYmplY3QuY29udmVydCh0Lm1ldGFkYXRhLmJib3gpKSxlKFwiL0ZvbnROYW1lIC9cIit0LmZvbnROYW1lKSxlKFwiL0l0YWxpY0FuZ2xlIFwiK3QubWV0YWRhdGEuaXRhbGljQW5nbGUpLGUoXCIvQXNjZW50IFwiK3QubWV0YWRhdGEuYXNjZW5kZXIpLGUoXCI+PlwiKSxlKFwiZW5kb2JqXCIpLHQub2JqZWN0TnVtYmVyPW4oKSxhPTA7YTx0Lm1ldGFkYXRhLmhtdHgud2lkdGhzLmxlbmd0aDthKyspdC5tZXRhZGF0YS5obXR4LndpZHRoc1thXT1wYXJzZUludCh0Lm1ldGFkYXRhLmhtdHgud2lkdGhzW2FdKigxZTMvdC5tZXRhZGF0YS5oZWFkLnVuaXRzUGVyRW0pKTtlKFwiPDwvU3VidHlwZS9UcnVlVHlwZS9UeXBlL0ZvbnQvVG9Vbmljb2RlIFwiK2wrXCIgMCBSL0Jhc2VGb250L1wiK3QuZm9udE5hbWUrXCIvRm9udERlc2NyaXB0b3IgXCIraCtcIiAwIFIvRW5jb2RpbmcvXCIrdC5lbmNvZGluZytcIiAvRmlyc3RDaGFyIDI5IC9MYXN0Q2hhciAyNTUgL1dpZHRocyBcIitmLkFQSS5QREZPYmplY3QuY29udmVydCh0Lm1ldGFkYXRhLmhtdHgud2lkdGhzKStcIj4+XCIpLGUoXCJlbmRvYmpcIiksdC5pc0FscmVhZHlQdXR0ZWQ9ITB9fSh0LmZvbnQsdC5vdXQsdC5uZXdPYmplY3QsdC5wdXRTdHJlYW0pfV0pO3ZhciBoPWZ1bmN0aW9uKHQpe3ZhciBlLG4scj10LnRleHR8fFwiXCIsaT10Lngsbz10LnksYT10Lm9wdGlvbnN8fHt9LHM9dC5tdXRleHx8e30sbD1zLnBkZkVzY2FwZSxoPXMuYWN0aXZlRm9udEtleSx1PXMuZm9udHMsYz0ocy5hY3RpdmVGb250U2l6ZSxcIlwiKSxmPTAscD1cIlwiLGQ9dVtuPWhdLmVuY29kaW5nO2lmKFwiSWRlbnRpdHktSFwiIT09dVtuXS5lbmNvZGluZylyZXR1cm57dGV4dDpyLHg6aSx5Om8sb3B0aW9uczphLG11dGV4OnN9O2ZvcihwPXIsbj1oLFwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSYmKHA9clswXSksZj0wO2Y8cC5sZW5ndGg7Zis9MSl1W25dLm1ldGFkYXRhLmhhc093blByb3BlcnR5KFwiY21hcFwiKSYmKGU9dVtuXS5tZXRhZGF0YS5jbWFwLnVuaWNvZGUuY29kZU1hcFtwW2ZdLmNoYXJDb2RlQXQoMCldKSxlP2MrPXBbZl06cFtmXS5jaGFyQ29kZUF0KDApPDI1NiYmdVtuXS5tZXRhZGF0YS5oYXNPd25Qcm9wZXJ0eShcIlVuaWNvZGVcIik/Yys9cFtmXTpjKz1cIlwiO3ZhciBnPVwiXCI7cmV0dXJuIHBhcnNlSW50KG4uc2xpY2UoMSkpPDE0fHxcIldpbkFuc2lFbmNvZGluZ1wiPT09ZD9nPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1cIlwiLG49MDtuPHQubGVuZ3RoO24rKyllKz1cIlwiK3QuY2hhckNvZGVBdChuKS50b1N0cmluZygxNik7cmV0dXJuIGV9KGwoYyxuKSk6XCJJZGVudGl0eS1IXCI9PT1kJiYoZz1tKGMsdVtuXSkpLHMuaXNIZXg9ITAse3RleHQ6Zyx4OmkseTpvLG9wdGlvbnM6YSxtdXRleDpzfX07ZS5ldmVudHMucHVzaChbXCJwb3N0UHJvY2Vzc1RleHRcIixmdW5jdGlvbih0KXt2YXIgZT10LnRleHR8fFwiXCIsbj10Lngscj10LnksaT10Lm9wdGlvbnMsbz10Lm11dGV4LGE9KGkubGFuZyxbXSkscz17dGV4dDplLHg6bix5OnIsb3B0aW9uczppLG11dGV4Om99O2lmKFwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSl7dmFyIGw9MDtmb3IobD0wO2w8ZS5sZW5ndGg7bCs9MSlcIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZVtsXSkmJjM9PT1lW2xdLmxlbmd0aD9hLnB1c2goW2goT2JqZWN0LmFzc2lnbih7fSxzLHt0ZXh0OmVbbF1bMF19KSkudGV4dCxlW2xdWzFdLGVbbF1bMl1dKTphLnB1c2goaChPYmplY3QuYXNzaWduKHt9LHMse3RleHQ6ZVtsXX0pKS50ZXh0KTt0LnRleHQ9YX1lbHNlIHQudGV4dD1oKE9iamVjdC5hc3NpZ24oe30scyx7dGV4dDplfSkpLnRleHR9XSl9KGx0LFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmJiZzZWxmfHxcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsJiZnbG9iYWx8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpKSxhdD1sdC5BUEksc3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMCE9PXQmJih2b2lkIDA9PT10LnZGUyYmKHQudkZTPXt9KSwhMCl9LGF0LmV4aXN0c0ZpbGVJblZGUz1mdW5jdGlvbih0KXtyZXR1cm4hIXN0KHRoaXMuaW50ZXJuYWwpJiZ2b2lkIDAhPT10aGlzLmludGVybmFsLnZGU1t0XX0sYXQuYWRkRmlsZVRvVkZTPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHN0KHRoaXMuaW50ZXJuYWwpLHRoaXMuaW50ZXJuYWwudkZTW3RdPWUsdGhpc30sYXQuZ2V0RmlsZUZyb21WRlM9ZnVuY3Rpb24odCl7cmV0dXJuIHN0KHRoaXMuaW50ZXJuYWwpLHZvaWQgMCE9PXRoaXMuaW50ZXJuYWwudkZTW3RdP3RoaXMuaW50ZXJuYWwudkZTW3RdOm51bGx9LGx0LkFQSS5hZGRIVE1MPWZ1bmN0aW9uKHQsZCxnLHMsbSl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIGh0bWwyY2FudmFzJiZcInVuZGVmaW5lZFwiPT10eXBlb2YgcmFzdGVyaXplSFRNTCl0aHJvdyBuZXcgRXJyb3IoXCJZb3UgbmVlZCBlaXRoZXIgaHR0cHM6Ly9naXRodWIuY29tL25pa2xhc3ZoL2h0bWwyY2FudmFzIG9yIGh0dHBzOi8vZ2l0aHViLmNvbS9jYnVyZ21lci9yYXN0ZXJpemVIVE1MLmpzXCIpO1wibnVtYmVyXCIhPXR5cGVvZiBkJiYocz1kLG09ZyksXCJmdW5jdGlvblwiPT10eXBlb2YgcyYmKG09cyxzPW51bGwpLFwiZnVuY3Rpb25cIiE9dHlwZW9mIG0mJihtPWZ1bmN0aW9uKCl7fSk7dmFyIGU9dGhpcy5pbnRlcm5hbCx5PWUuc2NhbGVGYWN0b3Isdj1lLnBhZ2VTaXplLmdldFdpZHRoKCksdz1lLnBhZ2VTaXplLmdldEhlaWdodCgpO2lmKChzPXN8fHt9KS5vbnJlbmRlcmVkPWZ1bmN0aW9uKGwpe2Q9cGFyc2VJbnQoZCl8fDAsZz1wYXJzZUludChnKXx8MDt2YXIgdD1zLmRpbXx8e30saD1PYmplY3QuYXNzaWduKHt0b3A6MCxyaWdodDowLGJvdHRvbTowLGxlZnQ6MCx1c2VGb3I6XCJjb250ZW50XCJ9LHMubWFyZ2luKSxlPXQuaHx8TWF0aC5taW4odyxsLmhlaWdodC95KSx1PXQud3x8TWF0aC5taW4odixsLndpZHRoL3kpLWQsYz1zLmZvcm1hdHx8XCJKUEVHXCIsZj1zLmltYWdlQ29tcHJlc3Npb258fFwiU0xPV1wiO2lmKGwuaGVpZ2h0PnctaC50b3AtaC5ib3R0b20mJnMucGFnZXNwbGl0KXt2YXIgcD1mdW5jdGlvbih0LGUsbixyLGkpe3ZhciBvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7by5oZWlnaHQ9aSxvLndpZHRoPXI7dmFyIGE9by5nZXRDb250ZXh0KFwiMmRcIik7cmV0dXJuIGEubW96SW1hZ2VTbW9vdGhpbmdFbmFibGVkPSExLGEud2Via2l0SW1hZ2VTbW9vdGhpbmdFbmFibGVkPSExLGEubXNJbWFnZVNtb290aGluZ0VuYWJsZWQ9ITEsYS5pbWFnZVNtb290aGluZ0VuYWJsZWQ9ITEsYS5maWxsU3R5bGU9cy5iYWNrZ3JvdW5kQ29sb3J8fFwiI2ZmZmZmZlwiLGEuZmlsbFJlY3QoMCwwLHIsaSksYS5kcmF3SW1hZ2UodCxlLG4scixpLDAsMCxyLGkpLG99LG49ZnVuY3Rpb24oKXtmb3IodmFyIHQsZSxuPTAscj0wLGk9e30sbz0hMTs7KXt2YXIgYTtpZihyPTAsaS50b3A9MCE9PW4/aC50b3A6ZyxpLmxlZnQ9MCE9PW4/aC5sZWZ0OmQsbz0odi1oLmxlZnQtaC5yaWdodCkqeTxsLndpZHRoLFwiY29udGVudFwiPT09aC51c2VGb3I/MD09PW4/KHQ9TWF0aC5taW4oKHYtaC5sZWZ0KSp5LGwud2lkdGgpLGU9TWF0aC5taW4oKHctaC50b3ApKnksbC5oZWlnaHQtbikpOih0PU1hdGgubWluKHYqeSxsLndpZHRoKSxlPU1hdGgubWluKHcqeSxsLmhlaWdodC1uKSxpLnRvcD0wKToodD1NYXRoLm1pbigodi1oLmxlZnQtaC5yaWdodCkqeSxsLndpZHRoKSxlPU1hdGgubWluKCh3LWguYm90dG9tLWgudG9wKSp5LGwuaGVpZ2h0LW4pKSxvKWZvcig7Oyl7XCJjb250ZW50XCI9PT1oLnVzZUZvciYmKDA9PT1yP3Q9TWF0aC5taW4oKHYtaC5sZWZ0KSp5LGwud2lkdGgpOih0PU1hdGgubWluKHYqeSxsLndpZHRoLXIpLGkubGVmdD0wKSk7dmFyIHM9W2E9cChsLHIsbix0LGUpLGkubGVmdCxpLnRvcCxhLndpZHRoL3ksYS5oZWlnaHQveSxjLG51bGwsZl07aWYodGhpcy5hZGRJbWFnZS5hcHBseSh0aGlzLHMpLChyKz10KT49bC53aWR0aClicmVhazt0aGlzLmFkZFBhZ2UoKX1lbHNlIHM9W2E9cChsLDAsbix0LGUpLGkubGVmdCxpLnRvcCxhLndpZHRoL3ksYS5oZWlnaHQveSxjLG51bGwsZl0sdGhpcy5hZGRJbWFnZS5hcHBseSh0aGlzLHMpO2lmKChuKz1lKT49bC5oZWlnaHQpYnJlYWs7dGhpcy5hZGRQYWdlKCl9bSh1LG4sbnVsbCxzKX0uYmluZCh0aGlzKTtpZihcIkNBTlZBU1wiPT09bC5ub2RlTmFtZSl7dmFyIHI9bmV3IEltYWdlO3Iub25sb2FkPW4sci5zcmM9bC50b0RhdGFVUkwoXCJpbWFnZS9wbmdcIiksbD1yfWVsc2UgbigpfWVsc2V7dmFyIGk9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNSksbz1bbCxkLGcsdSxlLGMsaSxmXTt0aGlzLmFkZEltYWdlLmFwcGx5KHRoaXMsbyksbSh1LGUsaSxvKX19LmJpbmQodGhpcyksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGh0bWwyY2FudmFzJiYhcy5yc3R6KXJldHVybiBodG1sMmNhbnZhcyh0LHMpO2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiByYXN0ZXJpemVIVE1MKXJldHVybiBudWxsO3ZhciBuPVwiZHJhd0RvY3VtZW50XCI7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQmJihuPS9eaHR0cC8udGVzdCh0KT9cImRyYXdVUkxcIjpcImRyYXdIVE1MXCIpLHMud2lkdGg9cy53aWR0aHx8dip5LHJhc3Rlcml6ZUhUTUxbbl0odCx2b2lkIDAscykudGhlbihmdW5jdGlvbih0KXtzLm9ucmVuZGVyZWQodC5pbWFnZSl9LGZ1bmN0aW9uKHQpe20obnVsbCx0KX0pfSxcbi8qKlxuICAgKiBqc1BERiBmcm9tSFRNTCBwbHVnaW4uIEJFVEEgc3RhZ2UuIEFQSSBzdWJqZWN0IHRvIGNoYW5nZS4gTmVlZHMgYnJvd3NlclxuICAgKiBDb3B5cmlnaHQgKGMpIDIwMTIgV2lsbG93IFN5c3RlbXMgQ29ycG9yYXRpb24sIHdpbGxvdy1zeXN0ZW1zLmNvbVxuICAgKiAgICAgICAgICAgICAgIDIwMTQgSnVhbiBQYWJsbyBHYXZpcmlhLCBodHRwczovL2dpdGh1Yi5jb20vanVhbnBnYXZpcmlhXG4gICAqICAgICAgICAgICAgICAgMjAxNCBEaWVnbyBDYXNvcnJhbiwgaHR0cHM6Ly9naXRodWIuY29tL2RpZWdvY3JcbiAgICogICAgICAgICAgICAgICAyMDE0IERhbmllbCBIdXNhciwgaHR0cHM6Ly9naXRodWIuY29tL2RhbmllbGh1c2FyXG4gICAqICAgICAgICAgICAgICAgMjAxNCBXb2xmZ2FuZyBHYXNzbGVyLCBodHRwczovL2dpdGh1Yi5jb20vd29vbGZnXG4gICAqICAgICAgICAgICAgICAgMjAxNCBTdGV2ZW4gU3B1bmdpbiwgaHR0cHM6Ly9naXRodWIuY29tL2ZsYW1lbmNvXG4gICAqXG4gICAqIEBsaWNlbnNlXG4gICAqIFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKi9cbmZ1bmN0aW9uKHQpe3ZhciBQLGssaSxhLHMsbCxoLHUsSSx3LGYsYyxwLG4sQyxCLGQsZyxtLGo7UD1mdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gZS5wcm90b3R5cGU9dCxuZXcgZX07ZnVuY3Rpb24gZSgpe319KCksdz1mdW5jdGlvbih0KXt2YXIgZSxuLHIsaSxvLGEscztmb3Iobj0wLHI9dC5sZW5ndGgsZT12b2lkIDAsYT1pPSExOyFpJiZuIT09cjspKGU9dFtuXT10W25dLnRyaW1MZWZ0KCkpJiYoaT0hMCksbisrO2ZvcihuPXItMTtyJiYhYSYmLTEhPT1uOykoZT10W25dPXRbbl0udHJpbVJpZ2h0KCkpJiYoYT0hMCksbi0tO2ZvcihvPS9cXHMrJC9nLHM9ITAsbj0wO24hPT1yOylcIlxcdTIwMjhcIiE9dFtuXSYmKGU9dFtuXS5yZXBsYWNlKC9cXHMrL2csXCIgXCIpLHMmJihlPWUudHJpbUxlZnQoKSksZSYmKHM9by50ZXN0KGUpKSx0W25dPWUpLG4rKztyZXR1cm4gdH0sYz1mdW5jdGlvbih0KXt2YXIgZSxuLHI7Zm9yKGU9dm9pZCAwLG49KHI9dC5zcGxpdChcIixcIikpLnNoaWZ0KCk7IWUmJm47KWU9aVtuLnRyaW0oKS50b0xvd2VyQ2FzZSgpXSxuPXIuc2hpZnQoKTtyZXR1cm4gZX0scD1mdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4tMTwodD1cImF1dG9cIj09PXQ/XCIwcHhcIjp0KS5pbmRleE9mKFwiZW1cIikmJiFpc05hTihOdW1iZXIodC5yZXBsYWNlKFwiZW1cIixcIlwiKSkpJiYodD0xOC43MTkqTnVtYmVyKHQucmVwbGFjZShcImVtXCIsXCJcIikpK1wicHhcIiksLTE8dC5pbmRleE9mKFwicHRcIikmJiFpc05hTihOdW1iZXIodC5yZXBsYWNlKFwicHRcIixcIlwiKSkpJiYodD0xLjMzMypOdW1iZXIodC5yZXBsYWNlKFwicHRcIixcIlwiKSkrXCJweFwiKSx2b2lkIDAsMTYsKGU9blt0XSk/ZTp2b2lkIDAhPT0oZT17XCJ4eC1zbWFsbFwiOjksXCJ4LXNtYWxsXCI6MTEsc21hbGw6MTMsbWVkaXVtOjE2LGxhcmdlOjE5LFwieC1sYXJnZVwiOjIzLFwieHgtbGFyZ2VcIjoyOCxhdXRvOjB9W3RdKT9uW3RdPWUvMTY6KGU9cGFyc2VGbG9hdCh0KSk/blt0XT1lLzE2OihlPXQubWF0Y2goLyhbXFxkXFwuXSspKHB4KS8pLEFycmF5LmlzQXJyYXkoZSkmJjM9PT1lLmxlbmd0aD9uW3RdPXBhcnNlRmxvYXQoZVsxXSkvMTY6blt0XT0xKX0sST1mdW5jdGlvbih0KXt2YXIgZSxuLHIsaSxvO3JldHVybiBvPXQsaT1kb2N1bWVudC5kZWZhdWx0VmlldyYmZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZT9kb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKG8sbnVsbCk6by5jdXJyZW50U3R5bGU/by5jdXJyZW50U3R5bGU6by5zdHlsZSxuPXZvaWQgMCwoZT17fSlbXCJmb250LWZhbWlseVwiXT1jKChyPWZ1bmN0aW9uKHQpe3JldHVybiB0PXQucmVwbGFjZSgvLVxcRC9nLGZ1bmN0aW9uKHQpe3JldHVybiB0LmNoYXJBdCgxKS50b1VwcGVyQ2FzZSgpfSksaVt0XX0pKFwiZm9udC1mYW1pbHlcIikpfHxcInRpbWVzXCIsZVtcImZvbnQtc3R5bGVcIl09YVtyKFwiZm9udC1zdHlsZVwiKV18fFwibm9ybWFsXCIsZVtcInRleHQtYWxpZ25cIl09c1tyKFwidGV4dC1hbGlnblwiKV18fFwibGVmdFwiLFwiYm9sZFwiPT09KG49bFtyKFwiZm9udC13ZWlnaHRcIildfHxcIm5vcm1hbFwiKSYmKFwibm9ybWFsXCI9PT1lW1wiZm9udC1zdHlsZVwiXT9lW1wiZm9udC1zdHlsZVwiXT1uOmVbXCJmb250LXN0eWxlXCJdPW4rZVtcImZvbnQtc3R5bGVcIl0pLGVbXCJmb250LXNpemVcIl09cChyKFwiZm9udC1zaXplXCIpKXx8MSxlW1wibGluZS1oZWlnaHRcIl09cChyKFwibGluZS1oZWlnaHRcIikpfHwxLGUuZGlzcGxheT1cImlubGluZVwiPT09cihcImRpc3BsYXlcIik/XCJpbmxpbmVcIjpcImJsb2NrXCIsbj1cImJsb2NrXCI9PT1lLmRpc3BsYXksZVtcIm1hcmdpbi10b3BcIl09biYmcChyKFwibWFyZ2luLXRvcFwiKSl8fDAsZVtcIm1hcmdpbi1ib3R0b21cIl09biYmcChyKFwibWFyZ2luLWJvdHRvbVwiKSl8fDAsZVtcInBhZGRpbmctdG9wXCJdPW4mJnAocihcInBhZGRpbmctdG9wXCIpKXx8MCxlW1wicGFkZGluZy1ib3R0b21cIl09biYmcChyKFwicGFkZGluZy1ib3R0b21cIikpfHwwLGVbXCJtYXJnaW4tbGVmdFwiXT1uJiZwKHIoXCJtYXJnaW4tbGVmdFwiKSl8fDAsZVtcIm1hcmdpbi1yaWdodFwiXT1uJiZwKHIoXCJtYXJnaW4tcmlnaHRcIikpfHwwLGVbXCJwYWRkaW5nLWxlZnRcIl09biYmcChyKFwicGFkZGluZy1sZWZ0XCIpKXx8MCxlW1wicGFkZGluZy1yaWdodFwiXT1uJiZwKHIoXCJwYWRkaW5nLXJpZ2h0XCIpKXx8MCxlW1wicGFnZS1icmVhay1iZWZvcmVcIl09cihcInBhZ2UtYnJlYWstYmVmb3JlXCIpfHxcImF1dG9cIixlLmZsb2F0PWhbcihcImNzc0Zsb2F0XCIpXXx8XCJub25lXCIsZS5jbGVhcj11W3IoXCJjbGVhclwiKV18fFwibm9uZVwiLGUuY29sb3I9cihcImNvbG9yXCIpLGV9LEM9ZnVuY3Rpb24odCxlLG4pe3ZhciByLGksbyxhLHM7aWYobz0hMSxhPWk9dm9pZCAwLHI9bltcIiNcIit0LmlkXSlpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiByKW89cih0LGUpO2Vsc2UgZm9yKGk9MCxhPXIubGVuZ3RoOyFvJiZpIT09YTspbz1yW2ldKHQsZSksaSsrO2lmKHI9blt0Lm5vZGVOYW1lXSwhbyYmcilpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiByKW89cih0LGUpO2Vsc2UgZm9yKGk9MCxhPXIubGVuZ3RoOyFvJiZpIT09YTspbz1yW2ldKHQsZSksaSsrO2ZvcihzPVwic3RyaW5nXCI9PXR5cGVvZiB0LmNsYXNzTmFtZT90LmNsYXNzTmFtZS5zcGxpdChcIiBcIik6W10saT0wO2k8cy5sZW5ndGg7aSsrKWlmKHI9bltcIi5cIitzW2ldXSwhbyYmcilpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiByKW89cih0LGUpO2Vsc2UgZm9yKGk9MCxhPXIubGVuZ3RoOyFvJiZpIT09YTspbz1yW2ldKHQsZSksaSsrO3JldHVybiBvfSxqPWZ1bmN0aW9uKHQsZSl7dmFyIG4scixpLG8sYSxzLGwsaCx1O2ZvcihuPVtdLHI9W10saT0wLHU9dC5yb3dzWzBdLmNlbGxzLmxlbmd0aCxsPXQuY2xpZW50V2lkdGg7aTx1OyloPXQucm93c1swXS5jZWxsc1tpXSxyW2ldPXtuYW1lOmgudGV4dENvbnRlbnQudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXHMrL2csXCJcIikscHJvbXB0OmgudGV4dENvbnRlbnQucmVwbGFjZSgvXFxyP1xcbi9nLFwiXCIpLHdpZHRoOmguY2xpZW50V2lkdGgvbCplLnBkZi5pbnRlcm5hbC5wYWdlU2l6ZS5nZXRXaWR0aCgpfSxpKys7Zm9yKGk9MTtpPHQucm93cy5sZW5ndGg7KXtmb3Iocz10LnJvd3NbaV0sYT17fSxvPTA7bzxzLmNlbGxzLmxlbmd0aDspYVtyW29dLm5hbWVdPXMuY2VsbHNbb10udGV4dENvbnRlbnQucmVwbGFjZSgvXFxyP1xcbi9nLFwiXCIpLG8rKztuLnB1c2goYSksaSsrfXJldHVybntyb3dzOm4saGVhZGVyczpyfX07dmFyIEU9e1NDUklQVDoxLFNUWUxFOjEsTk9TQ1JJUFQ6MSxPQkpFQ1Q6MSxFTUJFRDoxLFNFTEVDVDoxfSxNPTE7az1mdW5jdGlvbih0LGksZSl7dmFyIG4scixvLGEscyxsLGgsdTtmb3Iocj10LmNoaWxkTm9kZXMsbj12b2lkIDAsKHM9XCJibG9ja1wiPT09KG89SSh0KSkuZGlzcGxheSkmJihpLnNldEJsb2NrQm91bmRhcnkoKSxpLnNldEJsb2NrU3R5bGUobykpLGE9MCxsPXIubGVuZ3RoO2E8bDspe2lmKFwib2JqZWN0XCI9PT1zZShuPXJbYV0pKXtpZihpLmV4ZWN1dGVXYXRjaEZ1bmN0aW9ucyhuKSwxPT09bi5ub2RlVHlwZSYmXCJIRUFERVJcIj09PW4ubm9kZU5hbWUpe3ZhciBjPW4sZj1pLnBkZi5tYXJnaW5zX2RvYy50b3A7aS5wZGYuaW50ZXJuYWwuZXZlbnRzLnN1YnNjcmliZShcImFkZFBhZ2VcIixmdW5jdGlvbih0KXtpLnk9ZixrKGMsaSxlKSxpLnBkZi5tYXJnaW5zX2RvYy50b3A9aS55KzEwLGkueSs9MTB9LCExKX1pZig4PT09bi5ub2RlVHlwZSYmXCIjY29tbWVudFwiPT09bi5ub2RlTmFtZSl+bi50ZXh0Q29udGVudC5pbmRleE9mKFwiQUREX1BBR0VcIikmJihpLnBkZi5hZGRQYWdlKCksaS55PWkucGRmLm1hcmdpbnNfZG9jLnRvcCk7ZWxzZSBpZigxIT09bi5ub2RlVHlwZXx8RVtuLm5vZGVOYW1lXSlpZigzPT09bi5ub2RlVHlwZSl7dmFyIHA9bi5ub2RlVmFsdWU7aWYobi5ub2RlVmFsdWUmJlwiTElcIj09PW4ucGFyZW50Tm9kZS5ub2RlTmFtZSlpZihcIk9MXCI9PT1uLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSlwPU0rKytcIi4gXCIrcDtlbHNle3ZhciBkPW9bXCJmb250LXNpemVcIl0sZz0oMy0uNzUqZCkqaS5wZGYuaW50ZXJuYWwuc2NhbGVGYWN0b3IsbT0uNzUqZCppLnBkZi5pbnRlcm5hbC5zY2FsZUZhY3Rvcix5PTEuNzQqZC9pLnBkZi5pbnRlcm5hbC5zY2FsZUZhY3Rvcjt1PWZ1bmN0aW9uKHQsZSl7dGhpcy5wZGYuY2lyY2xlKHQrZyxlK20seSxcIkZEXCIpfX0xNiZuLm93bmVyRG9jdW1lbnQuYm9keS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihuKSYmaS5hZGRUZXh0KHAsbyl9ZWxzZVwic3RyaW5nXCI9PXR5cGVvZiBuJiZpLmFkZFRleHQobixvKTtlbHNle3ZhciB2O2lmKFwiSU1HXCI9PT1uLm5vZGVOYW1lKXt2YXIgdz1uLmdldEF0dHJpYnV0ZShcInNyY1wiKTt2PUJbaS5wZGYuc0hhc2hDb2RlKHcpfHx3XX1pZih2KXtpLnBkZi5pbnRlcm5hbC5wYWdlU2l6ZS5nZXRIZWlnaHQoKS1pLnBkZi5tYXJnaW5zX2RvYy5ib3R0b208aS55K24uaGVpZ2h0JiZpLnk+aS5wZGYubWFyZ2luc19kb2MudG9wJiYoaS5wZGYuYWRkUGFnZSgpLGkueT1pLnBkZi5tYXJnaW5zX2RvYy50b3AsaS5leGVjdXRlV2F0Y2hGdW5jdGlvbnMobikpO3ZhciBiPUkobikseD1pLngsTj0xMi9pLnBkZi5pbnRlcm5hbC5zY2FsZUZhY3RvcixMPShiW1wibWFyZ2luLWxlZnRcIl0rYltcInBhZGRpbmctbGVmdFwiXSkqTixBPShiW1wibWFyZ2luLXJpZ2h0XCJdK2JbXCJwYWRkaW5nLXJpZ2h0XCJdKSpOLFM9KGJbXCJtYXJnaW4tdG9wXCJdK2JbXCJwYWRkaW5nLXRvcFwiXSkqTixfPShiW1wibWFyZ2luLWJvdHRvbVwiXStiW1wicGFkZGluZy1ib3R0b21cIl0pKk47dm9pZCAwIT09Yi5mbG9hdCYmXCJyaWdodFwiPT09Yi5mbG9hdD94Kz1pLnNldHRpbmdzLndpZHRoLW4ud2lkdGgtQTp4Kz1MLGkucGRmLmFkZEltYWdlKHYseCxpLnkrUyxuLndpZHRoLG4uaGVpZ2h0KSx2PXZvaWQgMCxcInJpZ2h0XCI9PT1iLmZsb2F0fHxcImxlZnRcIj09PWIuZmxvYXQ/KGkud2F0Y2hGdW5jdGlvbnMucHVzaChmdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gaS55Pj1lPyhpLngrPXQsaS5zZXR0aW5ncy53aWR0aCs9biwhMCk6ISEociYmMT09PXIubm9kZVR5cGUmJiFFW3Iubm9kZU5hbWVdJiZpLngrci53aWR0aD5pLnBkZi5tYXJnaW5zX2RvYy5sZWZ0K2kucGRmLm1hcmdpbnNfZG9jLndpZHRoKSYmKGkueCs9dCxpLnk9ZSxpLnNldHRpbmdzLndpZHRoKz1uLCEwKX0uYmluZCh0aGlzLFwibGVmdFwiPT09Yi5mbG9hdD8tbi53aWR0aC1MLUE6MCxpLnkrbi5oZWlnaHQrUytfLG4ud2lkdGgpKSxpLndhdGNoRnVuY3Rpb25zLnB1c2goZnVuY3Rpb24odCxlLG4pe3JldHVybiEoaS55PHQmJmU9PT1pLnBkZi5pbnRlcm5hbC5nZXROdW1iZXJPZlBhZ2VzKCkpfHwxPT09bi5ub2RlVHlwZSYmXCJib3RoXCI9PT1JKG4pLmNsZWFyJiYoaS55PXQsITApfS5iaW5kKHRoaXMsaS55K24uaGVpZ2h0LGkucGRmLmludGVybmFsLmdldE51bWJlck9mUGFnZXMoKSkpLGkuc2V0dGluZ3Mud2lkdGgtPW4ud2lkdGgrTCtBLFwibGVmdFwiPT09Yi5mbG9hdCYmKGkueCs9bi53aWR0aCtMK0EpKTppLnkrPW4uaGVpZ2h0K1MrX31lbHNlIGlmKFwiVEFCTEVcIj09PW4ubm9kZU5hbWUpaD1qKG4saSksaS55Kz0xMCxpLnBkZi50YWJsZShpLngsaS55LGgucm93cyxoLmhlYWRlcnMse2F1dG9TaXplOiExLHByaW50SGVhZGVyczplLnByaW50SGVhZGVycyxtYXJnaW5zOmkucGRmLm1hcmdpbnNfZG9jLGNzczpJKG4pfSksaS55PWkucGRmLmxhc3RDZWxsUG9zLnkraS5wZGYubGFzdENlbGxQb3MuaCsyMDtlbHNlIGlmKFwiT0xcIj09PW4ubm9kZU5hbWV8fFwiVUxcIj09PW4ubm9kZU5hbWUpTT0xLEMobixpLGUpfHxrKG4saSxlKSxpLnkrPTEwO2Vsc2UgaWYoXCJMSVwiPT09bi5ub2RlTmFtZSl7dmFyIEY9aS54O2kueCs9MjAvaS5wZGYuaW50ZXJuYWwuc2NhbGVGYWN0b3IsaS55Kz0zLEMobixpLGUpfHxrKG4saSxlKSxpLng9Rn1lbHNlXCJCUlwiPT09bi5ub2RlTmFtZT8oaS55Kz1vW1wiZm9udC1zaXplXCJdKmkucGRmLmludGVybmFsLnNjYWxlRmFjdG9yLGkuYWRkVGV4dChcIlxcdTIwMjhcIixQKG8pKSk6QyhuLGksZSl8fGsobixpLGUpfX1hKyt9aWYoZS5vdXRZPWkueSxzKXJldHVybiBpLnNldEJsb2NrQm91bmRhcnkodSl9LEI9e30sZD1mdW5jdGlvbih0LG8sZSxuKXt2YXIgYSxyPXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbWdcIiksaT1yLmxlbmd0aCxzPTA7ZnVuY3Rpb24gbCgpe28ucGRmLmludGVybmFsLmV2ZW50cy5wdWJsaXNoKFwiaW1hZ2VzTG9hZGVkXCIpLG4oYSl9ZnVuY3Rpb24gaChlLG4scil7aWYoZSl7dmFyIGk9bmV3IEltYWdlO2E9KytzLGkuY3Jvc3NPcmlnaW49XCJcIixpLm9uZXJyb3I9aS5vbmxvYWQ9ZnVuY3Rpb24oKXtpZihpLmNvbXBsZXRlJiYoMD09PWkuc3JjLmluZGV4T2YoXCJkYXRhOmltYWdlL1wiKSYmKGkud2lkdGg9bnx8aS53aWR0aHx8MCxpLmhlaWdodD1yfHxpLmhlaWdodHx8MCksaS53aWR0aCtpLmhlaWdodCkpe3ZhciB0PW8ucGRmLnNIYXNoQ29kZShlKXx8ZTtCW3RdPUJbdF18fGl9LS1zfHxsKCl9LGkuc3JjPWV9fWZvcig7aS0tOyloKHJbaV0uZ2V0QXR0cmlidXRlKFwic3JjXCIpLHJbaV0ud2lkdGgscltpXS5oZWlnaHQpO3JldHVybiBzfHxsKCl9LGc9ZnVuY3Rpb24odCxvLGEpe3ZhciBzPXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJmb290ZXJcIik7aWYoMDxzLmxlbmd0aCl7cz1zWzBdO3ZhciBlPW8ucGRmLmludGVybmFsLndyaXRlLG49by55O28ucGRmLmludGVybmFsLndyaXRlPWZ1bmN0aW9uKCl7fSxrKHMsbyxhKTt2YXIgbD1NYXRoLmNlaWwoby55LW4pKzU7by55PW4sby5wZGYuaW50ZXJuYWwud3JpdGU9ZSxvLnBkZi5tYXJnaW5zX2RvYy5ib3R0b20rPWw7Zm9yKHZhciByPWZ1bmN0aW9uKHQpe3ZhciBlPXZvaWQgMCE9PXQ/dC5wYWdlTnVtYmVyOjEsbj1vLnk7by55PW8ucGRmLmludGVybmFsLnBhZ2VTaXplLmdldEhlaWdodCgpLW8ucGRmLm1hcmdpbnNfZG9jLmJvdHRvbSxvLnBkZi5tYXJnaW5zX2RvYy5ib3R0b20tPWw7Zm9yKHZhciByPXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzcGFuXCIpLGk9MDtpPHIubGVuZ3RoOysraSktMTwoXCIgXCIrcltpXS5jbGFzc05hbWUrXCIgXCIpLnJlcGxhY2UoL1tcXG5cXHRdL2csXCIgXCIpLmluZGV4T2YoXCIgcGFnZUNvdW50ZXIgXCIpJiYocltpXS5pbm5lckhUTUw9ZSksLTE8KFwiIFwiK3JbaV0uY2xhc3NOYW1lK1wiIFwiKS5yZXBsYWNlKC9bXFxuXFx0XS9nLFwiIFwiKS5pbmRleE9mKFwiIHRvdGFsUGFnZXMgXCIpJiYocltpXS5pbm5lckhUTUw9XCIjIyNqc1BERlZhclRvdGFsUGFnZXMjIyNcIik7ayhzLG8sYSksby5wZGYubWFyZ2luc19kb2MuYm90dG9tKz1sLG8ueT1ufSxpPXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzcGFuXCIpLGg9MDtoPGkubGVuZ3RoOysraCktMTwoXCIgXCIraVtoXS5jbGFzc05hbWUrXCIgXCIpLnJlcGxhY2UoL1tcXG5cXHRdL2csXCIgXCIpLmluZGV4T2YoXCIgdG90YWxQYWdlcyBcIikmJm8ucGRmLmludGVybmFsLmV2ZW50cy5zdWJzY3JpYmUoXCJodG1sUmVuZGVyaW5nRmluaXNoZWRcIixvLnBkZi5wdXRUb3RhbFBhZ2VzLmJpbmQoby5wZGYsXCIjIyNqc1BERlZhclRvdGFsUGFnZXMjIyNcIiksITApO28ucGRmLmludGVybmFsLmV2ZW50cy5zdWJzY3JpYmUoXCJhZGRQYWdlXCIsciwhMSkscigpLEUuRk9PVEVSPTF9fSxtPWZ1bmN0aW9uKHQsZSxuLHIsaSxvKXtpZighZSlyZXR1cm4hMTt2YXIgYSxzLGwsaDtcInN0cmluZ1wiPT10eXBlb2YgZXx8ZS5wYXJlbnROb2RlfHwoZT1cIlwiK2UuaW5uZXJIVE1MKSxcInN0cmluZ1wiPT10eXBlb2YgZSYmKGE9ZS5yZXBsYWNlKC88XFwvP3NjcmlwdFtePl0qPz4vZ2ksXCJcIiksaD1cImpzUERGaHRtbFRleHRcIitEYXRlLm5vdygpLnRvU3RyaW5nKCkrKDFlMypNYXRoLnJhbmRvbSgpKS50b0ZpeGVkKDApLChsPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLnN0eWxlLmNzc1RleHQ9XCJwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtjbGlwOiByZWN0KDFweCAxcHggMXB4IDFweCk7IC8qIElFNiwgSUU3ICovY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO3BhZGRpbmc6MCAhaW1wb3J0YW50O2JvcmRlcjowICFpbXBvcnRhbnQ7aGVpZ2h0OiAxcHggIWltcG9ydGFudDt3aWR0aDogMXB4ICFpbXBvcnRhbnQ7IHRvcDphdXRvO2xlZnQ6LTEwMHB4O292ZXJmbG93OiBoaWRkZW47XCIsbC5pbm5lckhUTUw9JzxpZnJhbWUgc3R5bGU9XCJoZWlnaHQ6MXB4O3dpZHRoOjFweFwiIG5hbWU9XCInK2grJ1wiIC8+Jyxkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGwpLChzPXdpbmRvdy5mcmFtZXNbaF0pLmRvY3VtZW50Lm9wZW4oKSxzLmRvY3VtZW50LndyaXRlbG4oYSkscy5kb2N1bWVudC5jbG9zZSgpLGU9cy5kb2N1bWVudC5ib2R5KTt2YXIgdSxjPW5ldyBmKHQsbixyLGkpO3JldHVybiBkLmNhbGwodGhpcyxlLGMsaS5lbGVtZW50SGFuZGxlcnMsZnVuY3Rpb24odCl7ZyhlLGMsaS5lbGVtZW50SGFuZGxlcnMpLGsoZSxjLGkuZWxlbWVudEhhbmRsZXJzKSxjLnBkZi5pbnRlcm5hbC5ldmVudHMucHVibGlzaChcImh0bWxSZW5kZXJpbmdGaW5pc2hlZFwiKSx1PWMuZGlzcG9zZSgpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG8/byh1KTp0JiZjb25zb2xlLmVycm9yKFwianNQREYgV2FybmluZzogcmVuZGVyaW5nIGlzc3Vlcz8gcHJvdmlkZSBhIGNhbGxiYWNrIHRvIGZyb21IVE1MIVwiKX0pLHV8fHt4OmMueCx5OmMueX19LChmPWZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiB0aGlzLnBkZj10LHRoaXMueD1lLHRoaXMueT1uLHRoaXMuc2V0dGluZ3M9cix0aGlzLndhdGNoRnVuY3Rpb25zPVtdLHRoaXMuaW5pdCgpLHRoaXN9KS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcmFncmFwaD17dGV4dDpbXSxzdHlsZTpbXX0sdGhpcy5wZGYuaW50ZXJuYWwud3JpdGUoXCJxXCIpfSxmLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGRmLmludGVybmFsLndyaXRlKFwiUVwiKSx7eDp0aGlzLngseTp0aGlzLnkscmVhZHk6ITB9fSxmLnByb3RvdHlwZS5leGVjdXRlV2F0Y2hGdW5jdGlvbnM9ZnVuY3Rpb24odCl7dmFyIGU9ITEsbj1bXTtpZigwPHRoaXMud2F0Y2hGdW5jdGlvbnMubGVuZ3RoKXtmb3IodmFyIHI9MDtyPHRoaXMud2F0Y2hGdW5jdGlvbnMubGVuZ3RoOysrcikhMD09PXRoaXMud2F0Y2hGdW5jdGlvbnNbcl0odCk/ZT0hMDpuLnB1c2godGhpcy53YXRjaEZ1bmN0aW9uc1tyXSk7dGhpcy53YXRjaEZ1bmN0aW9ucz1ufXJldHVybiBlfSxmLnByb3RvdHlwZS5zcGxpdEZyYWdtZW50c0ludG9MaW5lcz1mdW5jdGlvbih0LGUpe3ZhciBuLHIsaSxvLGEscyxsLGgsdSxjLGYscCxkLGc7Zm9yKDEyLGM9dGhpcy5wZGYuaW50ZXJuYWwuc2NhbGVGYWN0b3Isbz17fSxzPWw9aD1nPWE9aT11PXI9dm9pZCAwLHA9W2Y9W11dLG49MCxkPXRoaXMuc2V0dGluZ3Mud2lkdGg7dC5sZW5ndGg7KWlmKGE9dC5zaGlmdCgpLGc9ZS5zaGlmdCgpLGEpaWYoKGk9b1socj1nW1wiZm9udC1mYW1pbHlcIl0pKyh1PWdbXCJmb250LXN0eWxlXCJdKV0pfHwoaT10aGlzLnBkZi5pbnRlcm5hbC5nZXRGb250KHIsdSkubWV0YWRhdGEuVW5pY29kZSxvW3IrdV09aSksaD17d2lkdGhzOmkud2lkdGhzLGtlcm5pbmc6aS5rZXJuaW5nLGZvbnRTaXplOjEyKmdbXCJmb250LXNpemVcIl0sdGV4dEluZGVudDpufSxsPXRoaXMucGRmLmdldFN0cmluZ1VuaXRXaWR0aChhLGgpKmguZm9udFNpemUvYyxcIlxcdTIwMjhcIj09YSlmPVtdLHAucHVzaChmKTtlbHNlIGlmKGQ8bitsKXtmb3Iocz10aGlzLnBkZi5zcGxpdFRleHRUb1NpemUoYSxkLGgpLGYucHVzaChbcy5zaGlmdCgpLGddKTtzLmxlbmd0aDspZj1bW3Muc2hpZnQoKSxnXV0scC5wdXNoKGYpO249dGhpcy5wZGYuZ2V0U3RyaW5nVW5pdFdpZHRoKGZbMF1bMF0saCkqaC5mb250U2l6ZS9jfWVsc2UgZi5wdXNoKFthLGddKSxuKz1sO2lmKHZvaWQgMCE9PWdbXCJ0ZXh0LWFsaWduXCJdJiYoXCJjZW50ZXJcIj09PWdbXCJ0ZXh0LWFsaWduXCJdfHxcInJpZ2h0XCI9PT1nW1widGV4dC1hbGlnblwiXXx8XCJqdXN0aWZ5XCI9PT1nW1widGV4dC1hbGlnblwiXSkpZm9yKHZhciBtPTA7bTxwLmxlbmd0aDsrK20pe3ZhciB5PXRoaXMucGRmLmdldFN0cmluZ1VuaXRXaWR0aChwW21dWzBdWzBdLGgpKmguZm9udFNpemUvYzswPG0mJihwW21dWzBdWzFdPVAocFttXVswXVsxXSkpO3ZhciB2PWQteTtpZihcInJpZ2h0XCI9PT1nW1widGV4dC1hbGlnblwiXSlwW21dWzBdWzFdW1wibWFyZ2luLWxlZnRcIl09djtlbHNlIGlmKFwiY2VudGVyXCI9PT1nW1widGV4dC1hbGlnblwiXSlwW21dWzBdWzFdW1wibWFyZ2luLWxlZnRcIl09di8yO2Vsc2UgaWYoXCJqdXN0aWZ5XCI9PT1nW1widGV4dC1hbGlnblwiXSl7dmFyIHc9cFttXVswXVswXS5zcGxpdChcIiBcIikubGVuZ3RoLTE7cFttXVswXVsxXVtcIndvcmQtc3BhY2luZ1wiXT12L3csbT09PXAubGVuZ3RoLTEmJihwW21dWzBdWzFdW1wid29yZC1zcGFjaW5nXCJdPTApfX1yZXR1cm4gcH0sZi5wcm90b3R5cGUuUmVuZGVyVGV4dEZyYWdtZW50PWZ1bmN0aW9uKHQsZSl7dmFyIG4scjtyPTAsdGhpcy5wZGYuaW50ZXJuYWwucGFnZVNpemUuZ2V0SGVpZ2h0KCktdGhpcy5wZGYubWFyZ2luc19kb2MuYm90dG9tPHRoaXMueSt0aGlzLnBkZi5pbnRlcm5hbC5nZXRGb250U2l6ZSgpJiYodGhpcy5wZGYuaW50ZXJuYWwud3JpdGUoXCJFVFwiLFwiUVwiKSx0aGlzLnBkZi5hZGRQYWdlKCksdGhpcy55PXRoaXMucGRmLm1hcmdpbnNfZG9jLnRvcCx0aGlzLnBkZi5pbnRlcm5hbC53cml0ZShcInFcIixcIkJUXCIsdGhpcy5nZXRQZGZDb2xvcihlLmNvbG9yKSx0aGlzLnBkZi5pbnRlcm5hbC5nZXRDb29yZGluYXRlU3RyaW5nKHRoaXMueCksdGhpcy5wZGYuaW50ZXJuYWwuZ2V0VmVydGljYWxDb29yZGluYXRlU3RyaW5nKHRoaXMueSksXCJUZFwiKSxyPU1hdGgubWF4KHIsZVtcImxpbmUtaGVpZ2h0XCJdLGVbXCJmb250LXNpemVcIl0pLHRoaXMucGRmLmludGVybmFsLndyaXRlKDAsKC0xMipyKS50b0ZpeGVkKDIpLFwiVGRcIikpLG49dGhpcy5wZGYuaW50ZXJuYWwuZ2V0Rm9udChlW1wiZm9udC1mYW1pbHlcIl0sZVtcImZvbnQtc3R5bGVcIl0pO3ZhciBpPXRoaXMuZ2V0UGRmQ29sb3IoZS5jb2xvcik7aSE9PXRoaXMubGFzdFRleHRDb2xvciYmKHRoaXMucGRmLmludGVybmFsLndyaXRlKGkpLHRoaXMubGFzdFRleHRDb2xvcj1pKSx2b2lkIDAhPT1lW1wid29yZC1zcGFjaW5nXCJdJiYwPGVbXCJ3b3JkLXNwYWNpbmdcIl0mJnRoaXMucGRmLmludGVybmFsLndyaXRlKGVbXCJ3b3JkLXNwYWNpbmdcIl0udG9GaXhlZCgyKSxcIlR3XCIpLHRoaXMucGRmLmludGVybmFsLndyaXRlKFwiL1wiK24uaWQsKDEyKmVbXCJmb250LXNpemVcIl0pLnRvRml4ZWQoMiksXCJUZlwiLFwiKFwiK3RoaXMucGRmLmludGVybmFsLnBkZkVzY2FwZSh0KStcIikgVGpcIiksdm9pZCAwIT09ZVtcIndvcmQtc3BhY2luZ1wiXSYmdGhpcy5wZGYuaW50ZXJuYWwud3JpdGUoMCxcIlR3XCIpfSxmLnByb3RvdHlwZS5nZXRQZGZDb2xvcj1mdW5jdGlvbih0KXt2YXIgZSxuLHIsaT0vcmdiXFxzKlxcKFxccyooXFxkKyksXFxzKihcXGQrKSxcXHMqKFxcZCtcXHMqKVxcKS8uZXhlYyh0KTtpZihudWxsIT1pKWU9cGFyc2VJbnQoaVsxXSksbj1wYXJzZUludChpWzJdKSxyPXBhcnNlSW50KGlbM10pO2Vsc2V7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQmJlwiI1wiIT10LmNoYXJBdCgwKSl7dmFyIG89bmV3IFJHQkNvbG9yKHQpO3Q9by5vaz9vLnRvSGV4KCk6XCIjMDAwMDAwXCJ9ZT10LnN1YnN0cmluZygxLDMpLGU9cGFyc2VJbnQoZSwxNiksbj10LnN1YnN0cmluZygzLDUpLG49cGFyc2VJbnQobiwxNikscj10LnN1YnN0cmluZyg1LDcpLHI9cGFyc2VJbnQociwxNil9aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUmJi9eI1swLTlBLUZhLWZdezZ9JC8udGVzdChlKSl7dmFyIGE9cGFyc2VJbnQoZS5zdWJzdHIoMSksMTYpO2U9YT4+MTYmMjU1LG49YT4+OCYyNTUscj0yNTUmYX12YXIgcz10aGlzLmYzO3JldHVybiAwPT09ZSYmMD09PW4mJjA9PT1yfHx2b2lkIDA9PT1uP3MoZS8yNTUpK1wiIGdcIjpbcyhlLzI1NSkscyhuLzI1NSkscyhyLzI1NSksXCJyZ1wiXS5qb2luKFwiIFwiKX0sZi5wcm90b3R5cGUuZjM9ZnVuY3Rpb24odCl7cmV0dXJuIHQudG9GaXhlZCgzKX0sZi5wcm90b3R5cGUucmVuZGVyUGFyYWdyYXBoPWZ1bmN0aW9uKHQpe3ZhciBlLG4scixpLG8sYSxzLGwsaCx1LGMsZixwO2lmKHI9dyh0aGlzLnBhcmFncmFwaC50ZXh0KSxmPXRoaXMucGFyYWdyYXBoLnN0eWxlLGU9dGhpcy5wYXJhZ3JhcGguYmxvY2tzdHlsZSx0aGlzLnBhcmFncmFwaC5wcmlvcmJsb2Nrc3R5bGV8fHt9LHRoaXMucGFyYWdyYXBoPXt0ZXh0OltdLHN0eWxlOltdLGJsb2Nrc3R5bGU6e30scHJpb3JibG9ja3N0eWxlOmV9LHIuam9pbihcIlwiKS50cmltKCkpe3M9dGhpcy5zcGxpdEZyYWdtZW50c0ludG9MaW5lcyhyLGYpLGw9YT12b2lkIDAsbj0xMi90aGlzLnBkZi5pbnRlcm5hbC5zY2FsZUZhY3Rvcix0aGlzLnByaW9yTWFyZ2luQm90dG9tPXRoaXMucHJpb3JNYXJnaW5Cb3R0b218fDAsYz0oTWF0aC5tYXgoKGVbXCJtYXJnaW4tdG9wXCJdfHwwKS10aGlzLnByaW9yTWFyZ2luQm90dG9tLDApKyhlW1wicGFkZGluZy10b3BcIl18fDApKSpuLHU9KChlW1wibWFyZ2luLWJvdHRvbVwiXXx8MCkrKGVbXCJwYWRkaW5nLWJvdHRvbVwiXXx8MCkpKm4sdGhpcy5wcmlvck1hcmdpbkJvdHRvbT1lW1wibWFyZ2luLWJvdHRvbVwiXXx8MCxcImFsd2F5c1wiPT09ZVtcInBhZ2UtYnJlYWstYmVmb3JlXCJdJiYodGhpcy5wZGYuYWRkUGFnZSgpLHRoaXMueT0wLGM9KChlW1wibWFyZ2luLXRvcFwiXXx8MCkrKGVbXCJwYWRkaW5nLXRvcFwiXXx8MCkpKm4pLGg9dGhpcy5wZGYuaW50ZXJuYWwud3JpdGUsbz1pPXZvaWQgMCx0aGlzLnkrPWMsaChcInFcIixcIkJUIDAgZ1wiLHRoaXMucGRmLmludGVybmFsLmdldENvb3JkaW5hdGVTdHJpbmcodGhpcy54KSx0aGlzLnBkZi5pbnRlcm5hbC5nZXRWZXJ0aWNhbENvb3JkaW5hdGVTdHJpbmcodGhpcy55KSxcIlRkXCIpO2Zvcih2YXIgZD0wO3MubGVuZ3RoOyl7Zm9yKGk9bD0wLG89KGE9cy5zaGlmdCgpKS5sZW5ndGg7aSE9PW87KWFbaV1bMF0udHJpbSgpJiYobD1NYXRoLm1heChsLGFbaV1bMV1bXCJsaW5lLWhlaWdodFwiXSxhW2ldWzFdW1wiZm9udC1zaXplXCJdKSxwPTcqYVtpXVsxXVtcImZvbnQtc2l6ZVwiXSksaSsrO3ZhciBnPTAsbT0wO2Zvcih2b2lkIDAhPT1hWzBdWzFdW1wibWFyZ2luLWxlZnRcIl0mJjA8YVswXVsxXVtcIm1hcmdpbi1sZWZ0XCJdJiYoZz0obT10aGlzLnBkZi5pbnRlcm5hbC5nZXRDb29yZGluYXRlU3RyaW5nKGFbMF1bMV1bXCJtYXJnaW4tbGVmdFwiXSkpLWQsZD1tKSxoKGcrTWF0aC5tYXgoZVtcIm1hcmdpbi1sZWZ0XCJdfHwwLDApKm4sKC0xMipsKS50b0ZpeGVkKDIpLFwiVGRcIiksaT0wLG89YS5sZW5ndGg7aSE9PW87KWFbaV1bMF0mJnRoaXMuUmVuZGVyVGV4dEZyYWdtZW50KGFbaV1bMF0sYVtpXVsxXSksaSsrO2lmKHRoaXMueSs9bCpuLHRoaXMuZXhlY3V0ZVdhdGNoRnVuY3Rpb25zKGFbMF1bMV0pJiYwPHMubGVuZ3RoKXt2YXIgeT1bXSx2PVtdO3MuZm9yRWFjaChmdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPXQubGVuZ3RoO2UhPT1uOyl0W2VdWzBdJiYoeS5wdXNoKHRbZV1bMF0rXCIgXCIpLHYucHVzaCh0W2VdWzFdKSksKytlfSkscz10aGlzLnNwbGl0RnJhZ21lbnRzSW50b0xpbmVzKHcoeSksdiksaChcIkVUXCIsXCJRXCIpLGgoXCJxXCIsXCJCVCAwIGdcIix0aGlzLnBkZi5pbnRlcm5hbC5nZXRDb29yZGluYXRlU3RyaW5nKHRoaXMueCksdGhpcy5wZGYuaW50ZXJuYWwuZ2V0VmVydGljYWxDb29yZGluYXRlU3RyaW5nKHRoaXMueSksXCJUZFwiKX19cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJnQuY2FsbCh0aGlzLHRoaXMueC05LHRoaXMueS1wLzIpLGgoXCJFVFwiLFwiUVwiKSx0aGlzLnkrPXV9fSxmLnByb3RvdHlwZS5zZXRCbG9ja0JvdW5kYXJ5PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnJlbmRlclBhcmFncmFwaCh0KX0sZi5wcm90b3R5cGUuc2V0QmxvY2tTdHlsZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5wYXJhZ3JhcGguYmxvY2tzdHlsZT10fSxmLnByb3RvdHlwZS5hZGRUZXh0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMucGFyYWdyYXBoLnRleHQucHVzaCh0KSx0aGlzLnBhcmFncmFwaC5zdHlsZS5wdXNoKGUpfSxpPXtoZWx2ZXRpY2E6XCJoZWx2ZXRpY2FcIixcInNhbnMtc2VyaWZcIjpcImhlbHZldGljYVwiLFwidGltZXMgbmV3IHJvbWFuXCI6XCJ0aW1lc1wiLHNlcmlmOlwidGltZXNcIix0aW1lczpcInRpbWVzXCIsbW9ub3NwYWNlOlwiY291cmllclwiLGNvdXJpZXI6XCJjb3VyaWVyXCJ9LGw9ezEwMDpcIm5vcm1hbFwiLDIwMDpcIm5vcm1hbFwiLDMwMDpcIm5vcm1hbFwiLDQwMDpcIm5vcm1hbFwiLDUwMDpcImJvbGRcIiw2MDA6XCJib2xkXCIsNzAwOlwiYm9sZFwiLDgwMDpcImJvbGRcIiw5MDA6XCJib2xkXCIsbm9ybWFsOlwibm9ybWFsXCIsYm9sZDpcImJvbGRcIixib2xkZXI6XCJib2xkXCIsbGlnaHRlcjpcIm5vcm1hbFwifSxhPXtub3JtYWw6XCJub3JtYWxcIixpdGFsaWM6XCJpdGFsaWNcIixvYmxpcXVlOlwiaXRhbGljXCJ9LHM9e2xlZnQ6XCJsZWZ0XCIscmlnaHQ6XCJyaWdodFwiLGNlbnRlcjpcImNlbnRlclwiLGp1c3RpZnk6XCJqdXN0aWZ5XCJ9LGg9e25vbmU6XCJub25lXCIscmlnaHQ6XCJyaWdodFwiLGxlZnQ6XCJsZWZ0XCJ9LHU9e25vbmU6XCJub25lXCIsYm90aDpcImJvdGhcIn0sbj17bm9ybWFsOjF9LHQuZnJvbUhUTUw9ZnVuY3Rpb24odCxlLG4scixpLG8pe3JldHVybiB0aGlzLm1hcmdpbnNfZG9jPW98fHt0b3A6MCxib3R0b206MH0scnx8KHI9e30pLHIuZWxlbWVudEhhbmRsZXJzfHwoci5lbGVtZW50SGFuZGxlcnM9e30pLG0odGhpcyx0LGlzTmFOKGUpPzQ6ZSxpc05hTihuKT80Om4scixpKX19KGx0LkFQSSksbHQuQVBJLChcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3d8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWwmJmdsb2JhbCkuaHRtbDJwZGY9ZnVuY3Rpb24odCxhLGUpe3ZhciBuPWEuY2FudmFzO2lmKG4pe3ZhciByLGk7aWYoKG4ucGRmPWEpLmFubm90YXRpb25zPXtfbmFtZU1hcDpbXSxjcmVhdGVBbm5vdGF0aW9uOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj1hLmNvbnRleHQyZC5fd3JhcFgoZS5sZWZ0KSxpPWEuY29udGV4dDJkLl93cmFwWShlLnRvcCksbz0oYS5jb250ZXh0MmQuX3BhZ2UoZS50b3ApLHQuaW5kZXhPZihcIiNcIikpO249MDw9bz97bmFtZTp0LnN1YnN0cmluZyhvKzEpfTp7dXJsOnR9LGEubGluayhyLGksZS5yaWdodC1lLmxlZnQsZS5ib3R0b20tZS50b3Asbil9LHNldE5hbWU6ZnVuY3Rpb24odCxlKXt2YXIgbj1hLmNvbnRleHQyZC5fd3JhcFgoZS5sZWZ0KSxyPWEuY29udGV4dDJkLl93cmFwWShlLnRvcCksaT1hLmNvbnRleHQyZC5fcGFnZShlLnRvcCk7dGhpcy5fbmFtZU1hcFt0XT17cGFnZTppLHg6bix5OnJ9fX0sbi5hbm5vdGF0aW9ucz1hLmFubm90YXRpb25zLGEuY29udGV4dDJkLl9wYWdlQnJlYWtBdD1mdW5jdGlvbih0KXt0aGlzLnBhZ2VCcmVha3MucHVzaCh0KX0sYS5jb250ZXh0MmQuX2dvdG9QYWdlPWZ1bmN0aW9uKHQpe2Zvcig7YS5pbnRlcm5hbC5nZXROdW1iZXJPZlBhZ2VzKCk8dDspYS5hZGRQYWdlKCk7YS5zZXRQYWdlKHQpfSxcInN0cmluZ1wiPT10eXBlb2YgdCl7dD10LnJlcGxhY2UoLzxzY3JpcHRcXGJbXjxdKig/Oig/ITxcXC9zY3JpcHQ+KTxbXjxdKikqPFxcL3NjcmlwdD4vZ2ksXCJcIik7dmFyIG8scyxsPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsKSxudWxsIT0obz1sLmNvbnRlbnREb2N1bWVudCkmJm51bGwhPW98fChvPWwuY29udGVudFdpbmRvdy5kb2N1bWVudCksby5vcGVuKCksby53cml0ZSh0KSxvLmNsb3NlKCkscj1vLmJvZHkscz1vLmJvZHl8fHt9LHQ9by5kb2N1bWVudEVsZW1lbnR8fHt9LGk9TWF0aC5tYXgocy5zY3JvbGxIZWlnaHQscy5vZmZzZXRIZWlnaHQsdC5jbGllbnRIZWlnaHQsdC5zY3JvbGxIZWlnaHQsdC5vZmZzZXRIZWlnaHQpfWVsc2Ugcz0ocj10KS5ib2R5fHx7fSxpPU1hdGgubWF4KHMuc2Nyb2xsSGVpZ2h0LHMub2Zmc2V0SGVpZ2h0LHQuY2xpZW50SGVpZ2h0LHQuc2Nyb2xsSGVpZ2h0LHQub2Zmc2V0SGVpZ2h0KTt2YXIgaD17YXN5bmM6ITAsYWxsb3dUYWludDohMCxiYWNrZ3JvdW5kQ29sb3I6XCIjZmZmZmZmXCIsY2FudmFzOm4saW1hZ2VUaW1lb3V0OjE1ZTMsbG9nZ2luZzohMCxwcm94eTpudWxsLHJlbW92ZUNvbnRhaW5lcjohMCxmb3JlaWduT2JqZWN0UmVuZGVyaW5nOiExLHVzZUNPUlM6ITEsd2luZG93SGVpZ2h0Omk9YS5pbnRlcm5hbC5wYWdlU2l6ZS5nZXRIZWlnaHQoKSxzY3JvbGxZOml9O2EuY29udGV4dDJkLnBhZ2VXcmFwWUVuYWJsZWQ9ITAsYS5jb250ZXh0MmQucGFnZVdyYXBZPWEuaW50ZXJuYWwucGFnZVNpemUuZ2V0SGVpZ2h0KCksaHRtbDJjYW52YXMocixoKS50aGVuKGZ1bmN0aW9uKHQpe2UmJihsJiZsLnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQobCksZShhKSl9KX1lbHNlIGFsZXJ0KFwianNQREYgY2FudmFzIHBsdWdpbiBub3QgaW5zdGFsbGVkXCIpfSx3aW5kb3cudG1wPWh0bWwycGRmLGZ1bmN0aW9uKGYpe3ZhciByPWYuQmxvYkJ1aWxkZXJ8fGYuV2ViS2l0QmxvYkJ1aWxkZXJ8fGYuTVNCbG9iQnVpbGRlcnx8Zi5Nb3pCbG9iQnVpbGRlcjtmLlVSTD1mLlVSTHx8Zi53ZWJraXRVUkx8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuKGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIikpLmhyZWY9dCxlfTt2YXIgbj1mLkJsb2IscD1VUkwuY3JlYXRlT2JqZWN0VVJMLGQ9VVJMLnJldm9rZU9iamVjdFVSTCxvPWYuU3ltYm9sJiZmLlN5bWJvbC50b1N0cmluZ1RhZyx0PSExLGU9ITEsZz0hIWYuQXJyYXlCdWZmZXIsaT1yJiZyLnByb3RvdHlwZS5hcHBlbmQmJnIucHJvdG90eXBlLmdldEJsb2I7dHJ5e3Q9Mj09PW5ldyBCbG9iKFtcIsOkXCJdKS5zaXplLGU9Mj09PW5ldyBCbG9iKFtuZXcgVWludDhBcnJheShbMSwyXSldKS5zaXplfWNhdGNoKHQpe31mdW5jdGlvbiBhKHQpe3JldHVybiB0Lm1hcChmdW5jdGlvbih0KXtpZih0LmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKXt2YXIgZT10LmJ1ZmZlcjtpZih0LmJ5dGVMZW5ndGghPT1lLmJ5dGVMZW5ndGgpe3ZhciBuPW5ldyBVaW50OEFycmF5KHQuYnl0ZUxlbmd0aCk7bi5zZXQobmV3IFVpbnQ4QXJyYXkoZSx0LmJ5dGVPZmZzZXQsdC5ieXRlTGVuZ3RoKSksZT1uLmJ1ZmZlcn1yZXR1cm4gZX1yZXR1cm4gdH0pfWZ1bmN0aW9uIHModCxlKXtlPWV8fHt9O3ZhciBuPW5ldyByO3JldHVybiBhKHQpLmZvckVhY2goZnVuY3Rpb24odCl7bi5hcHBlbmQodCl9KSxlLnR5cGU/bi5nZXRCbG9iKGUudHlwZSk6bi5nZXRCbG9iKCl9ZnVuY3Rpb24gbCh0LGUpe3JldHVybiBuZXcgbihhKHQpLGV8fHt9KX1pZihmLkJsb2ImJihzLnByb3RvdHlwZT1CbG9iLnByb3RvdHlwZSxsLnByb3RvdHlwZT1CbG9iLnByb3RvdHlwZSksbyl0cnl7RmlsZS5wcm90b3R5cGVbb109XCJGaWxlXCIsQmxvYi5wcm90b3R5cGVbb109XCJCbG9iXCIsRmlsZVJlYWRlci5wcm90b3R5cGVbb109XCJGaWxlUmVhZGVyXCJ9Y2F0Y2godCl7fWZ1bmN0aW9uIGgoKXt2YXIgdD0hIWYuQWN0aXZlWE9iamVjdHx8XCItbXMtc2Nyb2xsLWxpbWl0XCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUmJlwiLW1zLWltZS1hbGlnblwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLGU9Zi5YTUxIdHRwUmVxdWVzdCYmZi5YTUxIdHRwUmVxdWVzdC5wcm90b3R5cGUuc2VuZDt0JiZlJiYoWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLnNlbmQ9ZnVuY3Rpb24odCl7dCBpbnN0YW5jZW9mIEJsb2ImJnRoaXMuc2V0UmVxdWVzdEhlYWRlcihcIkNvbnRlbnQtVHlwZVwiLHQudHlwZSksZS5jYWxsKHRoaXMsdCl9KTt0cnl7bmV3IEZpbGUoW10sXCJcIil9Y2F0Y2godCl7dHJ5e3ZhciBuPW5ldyBGdW5jdGlvbignY2xhc3MgRmlsZSBleHRlbmRzIEJsb2Ige2NvbnN0cnVjdG9yKGNodW5rcywgbmFtZSwgb3B0cykge29wdHMgPSBvcHRzIHx8IHt9O3N1cGVyKGNodW5rcywgb3B0cyB8fCB7fSk7dGhpcy5uYW1lID0gbmFtZTt0aGlzLmxhc3RNb2RpZmllZERhdGUgPSBvcHRzLmxhc3RNb2RpZmllZCA/IG5ldyBEYXRlKG9wdHMubGFzdE1vZGlmaWVkKSA6IG5ldyBEYXRlO3RoaXMubGFzdE1vZGlmaWVkID0gK3RoaXMubGFzdE1vZGlmaWVkRGF0ZTt9fTtyZXR1cm4gbmV3IEZpbGUoW10sIFwiXCIpLCBGaWxlJykoKTtmLkZpbGU9bn1jYXRjaCh0KXtuPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uZXcgQmxvYih0LG4pLGk9biYmdm9pZCAwIT09bi5sYXN0TW9kaWZpZWQ/bmV3IERhdGUobi5sYXN0TW9kaWZpZWQpOm5ldyBEYXRlO3JldHVybiByLm5hbWU9ZSxyLmxhc3RNb2RpZmllZERhdGU9aSxyLmxhc3RNb2RpZmllZD0raSxyLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJbb2JqZWN0IEZpbGVdXCJ9LG8mJihyW29dPVwiRmlsZVwiKSxyfTtmLkZpbGU9bn19fXQ/KGgoKSxmLkJsb2I9ZT9mLkJsb2I6bCk6aT8oaCgpLGYuQmxvYj1zKTpmdW5jdGlvbigpe2Z1bmN0aW9uIGEodCl7Zm9yKHZhciBlPVtdLG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dC5jaGFyQ29kZUF0KG4pO3I8MTI4P2UucHVzaChyKTpyPDIwNDg/ZS5wdXNoKDE5MnxyPj42LDEyOHw2MyZyKTpyPDU1Mjk2fHw1NzM0NDw9cj9lLnB1c2goMjI0fHI+PjEyLDEyOHxyPj42JjYzLDEyOHw2MyZyKToobisrLHI9NjU1MzYrKCgxMDIzJnIpPDwxMHwxMDIzJnQuY2hhckNvZGVBdChuKSksZS5wdXNoKDI0MHxyPj4xOCwxMjh8cj4+MTImNjMsMTI4fHI+PjYmNjMsMTI4fDYzJnIpKX1yZXR1cm4gZX1mdW5jdGlvbiBlKHQpe3ZhciBlLG4scixpLG8sYTtmb3IoZT1cIlwiLHI9dC5sZW5ndGgsbj0wO248cjspc3dpdGNoKChpPXRbbisrXSk+PjQpe2Nhc2UgMDpjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmNhc2UgNjpjYXNlIDc6ZSs9U3RyaW5nLmZyb21DaGFyQ29kZShpKTticmVhaztjYXNlIDEyOmNhc2UgMTM6bz10W24rK10sZSs9U3RyaW5nLmZyb21DaGFyQ29kZSgoMzEmaSk8PDZ8NjMmbyk7YnJlYWs7Y2FzZSAxNDpvPXRbbisrXSxhPXRbbisrXSxlKz1TdHJpbmcuZnJvbUNoYXJDb2RlKCgxNSZpKTw8MTJ8KDYzJm8pPDw2fCg2MyZhKTw8MCl9cmV0dXJuIGV9ZnVuY3Rpb24gcyh0KXtmb3IodmFyIGU9bmV3IEFycmF5KHQuYnl0ZUxlbmd0aCksbj1uZXcgVWludDhBcnJheSh0KSxyPWUubGVuZ3RoO3ItLTspZVtyXT1uW3JdO3JldHVybiBlfWZ1bmN0aW9uIG4odCl7Zm9yKHZhciBlPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODlcIixuPVtdLHI9MDtyPHQubGVuZ3RoO3IrPTMpe3ZhciBpPXRbcl0sbz1yKzE8dC5sZW5ndGgsYT1vP3RbcisxXTowLHM9cisyPHQubGVuZ3RoLGw9cz90W3IrMl06MCxoPWk+PjIsdT0oMyZpKTw8NHxhPj40LGM9KDE1JmEpPDwyfGw+PjYsZj02MyZsO3N8fChmPTY0LG98fChjPTY0KSksbi5wdXNoKGVbaF0sZVt1XSxlW2NdLGVbZl0pfXJldHVybiBuLmpvaW4oXCJcIil9dmFyIHQ9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZS5wcm90b3R5cGU9dCxuZXcgZX07aWYoZyl2YXIgcj1bXCJbb2JqZWN0IEludDhBcnJheV1cIixcIltvYmplY3QgVWludDhBcnJheV1cIixcIltvYmplY3QgVWludDhDbGFtcGVkQXJyYXldXCIsXCJbb2JqZWN0IEludDE2QXJyYXldXCIsXCJbb2JqZWN0IFVpbnQxNkFycmF5XVwiLFwiW29iamVjdCBJbnQzMkFycmF5XVwiLFwiW29iamVjdCBVaW50MzJBcnJheV1cIixcIltvYmplY3QgRmxvYXQzMkFycmF5XVwiLFwiW29iamVjdCBGbG9hdDY0QXJyYXldXCJdLGw9QXJyYXlCdWZmZXIuaXNWaWV3fHxmdW5jdGlvbih0KXtyZXR1cm4gdCYmLTE8ci5pbmRleE9mKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSl9O2Z1bmN0aW9uIGgodCxlKXtmb3IodmFyIG49MCxyPSh0PXR8fFtdKS5sZW5ndGg7bjxyO24rKyl7dmFyIGk9dFtuXTtpIGluc3RhbmNlb2YgaD90W25dPWkuX2J1ZmZlcjpcInN0cmluZ1wiPT10eXBlb2YgaT90W25dPWEoaSk6ZyYmKEFycmF5QnVmZmVyLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGkpfHxsKGkpKT90W25dPXMoaSk6ZyYmKG89aSkmJkRhdGFWaWV3LnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKG8pP3Rbbl09cyhpLmJ1ZmZlcik6dFtuXT1hKFN0cmluZyhpKSl9dmFyIG87dGhpcy5fYnVmZmVyPVtdLmNvbmNhdC5hcHBseShbXSx0KSx0aGlzLnNpemU9dGhpcy5fYnVmZmVyLmxlbmd0aCx0aGlzLnR5cGU9ZSYmZS50eXBlfHxcIlwifWZ1bmN0aW9uIGkodCxlLG4pe3ZhciByPWguY2FsbCh0aGlzLHQsbj1ufHx7fSl8fHRoaXM7cmV0dXJuIHIubmFtZT1lLHIubGFzdE1vZGlmaWVkRGF0ZT1uLmxhc3RNb2RpZmllZD9uZXcgRGF0ZShuLmxhc3RNb2RpZmllZCk6bmV3IERhdGUsci5sYXN0TW9kaWZpZWQ9K3IubGFzdE1vZGlmaWVkRGF0ZSxyfWlmKGgucHJvdG90eXBlLnNsaWNlPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbmV3IGgoW3RoaXMuX2J1ZmZlci5zbGljZSh0fHwwLGV8fHRoaXMuX2J1ZmZlci5sZW5ndGgpXSx7dHlwZTpufSl9LGgucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJbb2JqZWN0IEJsb2JdXCJ9LChpLnByb3RvdHlwZT10KGgucHJvdG90eXBlKSkuY29uc3RydWN0b3I9aSxPYmplY3Quc2V0UHJvdG90eXBlT2YpT2JqZWN0LnNldFByb3RvdHlwZU9mKGksaCk7ZWxzZSB0cnl7aS5fX3Byb3RvX189aH1jYXRjaCh0KXt9ZnVuY3Rpb24gbygpe2lmKCEodGhpcyBpbnN0YW5jZW9mIG8pKXRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdGaWxlUmVhZGVyJzogUGxlYXNlIHVzZSB0aGUgJ25ldycgb3BlcmF0b3IsIHRoaXMgRE9NIG9iamVjdCBjb25zdHJ1Y3RvciBjYW5ub3QgYmUgY2FsbGVkIGFzIGEgZnVuY3Rpb24uXCIpO3ZhciBuPWRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTt0aGlzLmFkZEV2ZW50TGlzdGVuZXI9bi5hZGRFdmVudExpc3RlbmVyLHRoaXMuZGlzcGF0Y2hFdmVudD1mdW5jdGlvbih0KXt2YXIgZT10aGlzW1wib25cIit0LnR5cGVdO1wiZnVuY3Rpb25cIj09dHlwZW9mIGUmJmUodCksbi5kaXNwYXRjaEV2ZW50KHQpfSx0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXI9bi5yZW1vdmVFdmVudExpc3RlbmVyfWZ1bmN0aW9uIHUodCxlLG4pe2lmKCEoZSBpbnN0YW5jZW9mIGgpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gZXhlY3V0ZSAnXCIrbitcIicgb24gJ0ZpbGVSZWFkZXInOiBwYXJhbWV0ZXIgMSBpcyBub3Qgb2YgdHlwZSAnQmxvYicuXCIpO3QucmVzdWx0PVwiXCIsc2V0VGltZW91dChmdW5jdGlvbigpe3RoaXMucmVhZHlTdGF0ZT1vLkxPQURJTkcsdC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcImxvYWRcIikpLHQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJsb2FkZW5kXCIpKX0pfWkucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJbb2JqZWN0IEZpbGVdXCJ9LG8uRU1QVFk9MCxvLkxPQURJTkc9MSxvLkRPTkU9MixvLnByb3RvdHlwZS5lcnJvcj1udWxsLG8ucHJvdG90eXBlLm9uYWJvcnQ9bnVsbCxvLnByb3RvdHlwZS5vbmVycm9yPW51bGwsby5wcm90b3R5cGUub25sb2FkPW51bGwsby5wcm90b3R5cGUub25sb2FkZW5kPW51bGwsby5wcm90b3R5cGUub25sb2Fkc3RhcnQ9bnVsbCxvLnByb3RvdHlwZS5vbnByb2dyZXNzPW51bGwsby5wcm90b3R5cGUucmVhZEFzRGF0YVVSTD1mdW5jdGlvbih0KXt1KHRoaXMsdCxcInJlYWRBc0RhdGFVUkxcIiksdGhpcy5yZXN1bHQ9XCJkYXRhOlwiK3QudHlwZStcIjtiYXNlNjQsXCIrbih0Ll9idWZmZXIpfSxvLnByb3RvdHlwZS5yZWFkQXNUZXh0PWZ1bmN0aW9uKHQpe3UodGhpcyx0LFwicmVhZEFzVGV4dFwiKSx0aGlzLnJlc3VsdD1lKHQuX2J1ZmZlcil9LG8ucHJvdG90eXBlLnJlYWRBc0FycmF5QnVmZmVyPWZ1bmN0aW9uKHQpe3UodGhpcyx0LFwicmVhZEFzVGV4dFwiKSx0aGlzLnJlc3VsdD10Ll9idWZmZXIuc2xpY2UoKX0sby5wcm90b3R5cGUuYWJvcnQ9ZnVuY3Rpb24oKXt9LFVSTC5jcmVhdGVPYmplY3RVUkw9ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBoP1wiZGF0YTpcIit0LnR5cGUrXCI7YmFzZTY0LFwiK24odC5fYnVmZmVyKTpwLmNhbGwoVVJMLHQpfSxVUkwucmV2b2tlT2JqZWN0VVJMPWZ1bmN0aW9uKHQpe2QmJmQuY2FsbChVUkwsdCl9O3ZhciBjPWYuWE1MSHR0cFJlcXVlc3QmJmYuWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLnNlbmQ7YyYmKFhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5zZW5kPWZ1bmN0aW9uKHQpe3QgaW5zdGFuY2VvZiBoPyh0aGlzLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LVR5cGVcIix0LnR5cGUpLGMuY2FsbCh0aGlzLGUodC5fYnVmZmVyKSkpOmMuY2FsbCh0aGlzLHQpfSksZi5GaWxlUmVhZGVyPW8sZi5GaWxlPWksZi5CbG9iPWh9KCl9KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmJiZzZWxmfHxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3d8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWwmJmdsb2JhbHx8RnVuY3Rpb24oJ3JldHVybiB0eXBlb2YgdGhpcyA9PT0gXCJvYmplY3RcIiAmJiB0aGlzLmNvbnRlbnQnKSgpfHxGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkpO3ZhciBodCx1dCxjdCxmdCxwdCxkdCxndCxtdCx5dCx2dCx3dCxidCx4dCxOdCxMdCxsZT1sZXx8ZnVuY3Rpb24ocyl7aWYoISh2b2lkIDA9PT1zfHxcInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiYvTVNJRSBbMS05XVxcLi8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSkpe3ZhciB0PXMuZG9jdW1lbnQsbD1mdW5jdGlvbigpe3JldHVybiBzLlVSTHx8cy53ZWJraXRVUkx8fHN9LGg9dC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsXCJhXCIpLHU9XCJkb3dubG9hZFwiaW4gaCxjPS9jb25zdHJ1Y3Rvci9pLnRlc3Qocy5IVE1MRWxlbWVudCl8fHMuc2FmYXJpLGY9L0NyaU9TXFwvW1xcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLHA9cy5zZXRJbW1lZGlhdGV8fHMuc2V0VGltZW91dCxkPWZ1bmN0aW9uKHQpe3AoZnVuY3Rpb24oKXt0aHJvdyB0fSwwKX0sZz1mdW5jdGlvbih0KXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XCJzdHJpbmdcIj09dHlwZW9mIHQ/bCgpLnJldm9rZU9iamVjdFVSTCh0KTp0LnJlbW92ZSgpfSw0ZTQpfSxtPWZ1bmN0aW9uKHQpe3JldHVybi9eXFxzKig/OnRleHRcXC9cXFMqfGFwcGxpY2F0aW9uXFwveG1sfFxcUypcXC9cXFMqXFwreG1sKVxccyo7LipjaGFyc2V0XFxzKj1cXHMqdXRmLTgvaS50ZXN0KHQudHlwZSk/bmV3IEJsb2IoW1N0cmluZy5mcm9tQ2hhckNvZGUoNjUyNzkpLHRdLHt0eXBlOnQudHlwZX0pOnR9LHI9ZnVuY3Rpb24odCxuLGUpe2V8fCh0PW0odCkpO3ZhciByLGk9dGhpcyxvPVwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCI9PT10LnR5cGUsYT1mdW5jdGlvbigpeyFmdW5jdGlvbih0LGUsbil7Zm9yKHZhciByPShlPVtdLmNvbmNhdChlKSkubGVuZ3RoO3ItLTspe3ZhciBpPXRbXCJvblwiK2Vbcl1dO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGkpdHJ5e2kuY2FsbCh0LG58fHQpfWNhdGNoKHQpe2QodCl9fX0oaSxcIndyaXRlc3RhcnQgcHJvZ3Jlc3Mgd3JpdGUgd3JpdGVlbmRcIi5zcGxpdChcIiBcIikpfTtpZihpLnJlYWR5U3RhdGU9aS5JTklULHUpcmV0dXJuIHI9bCgpLmNyZWF0ZU9iamVjdFVSTCh0KSx2b2lkIHAoZnVuY3Rpb24oKXt2YXIgdCxlO2guaHJlZj1yLGguZG93bmxvYWQ9bix0PWgsZT1uZXcgTW91c2VFdmVudChcImNsaWNrXCIpLHQuZGlzcGF0Y2hFdmVudChlKSxhKCksZyhyKSxpLnJlYWR5U3RhdGU9aS5ET05FfSwwKTshZnVuY3Rpb24oKXtpZigoZnx8byYmYykmJnMuRmlsZVJlYWRlcil7dmFyIGU9bmV3IEZpbGVSZWFkZXI7cmV0dXJuIGUub25sb2FkZW5kPWZ1bmN0aW9uKCl7dmFyIHQ9Zj9lLnJlc3VsdDplLnJlc3VsdC5yZXBsYWNlKC9eZGF0YTpbXjtdKjsvLFwiZGF0YTphdHRhY2htZW50L2ZpbGU7XCIpO3Mub3Blbih0LFwiX2JsYW5rXCIpfHwocy5sb2NhdGlvbi5ocmVmPXQpLHQ9dm9pZCAwLGkucmVhZHlTdGF0ZT1pLkRPTkUsYSgpfSxlLnJlYWRBc0RhdGFVUkwodCksaS5yZWFkeVN0YXRlPWkuSU5JVH1yfHwocj1sKCkuY3JlYXRlT2JqZWN0VVJMKHQpKSxvP3MubG9jYXRpb24uaHJlZj1yOnMub3BlbihyLFwiX2JsYW5rXCIpfHwocy5sb2NhdGlvbi5ocmVmPXIpO2kucmVhZHlTdGF0ZT1pLkRPTkUsYSgpLGcocil9KCl9LGU9ci5wcm90b3R5cGU7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG5hdmlnYXRvciYmbmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2I/ZnVuY3Rpb24odCxlLG4pe3JldHVybiBlPWV8fHQubmFtZXx8XCJkb3dubG9hZFwiLG58fCh0PW0odCkpLG5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iKHQsZSl9OihlLmFib3J0PWZ1bmN0aW9uKCl7fSxlLnJlYWR5U3RhdGU9ZS5JTklUPTAsZS5XUklUSU5HPTEsZS5ET05FPTIsZS5lcnJvcj1lLm9ud3JpdGVzdGFydD1lLm9ucHJvZ3Jlc3M9ZS5vbndyaXRlPWUub25hYm9ydD1lLm9uZXJyb3I9ZS5vbndyaXRlZW5kPW51bGwsZnVuY3Rpb24odCxlLG4pe3JldHVybiBuZXcgcih0LGV8fHQubmFtZXx8XCJkb3dubG9hZFwiLG4pfSl9fShcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZiYmc2VsZnx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93fHx2b2lkIDApO2Z1bmN0aW9uIEF0KHgpe3ZhciB0PTA7aWYoNzEhPT14W3QrK118fDczIT09eFt0KytdfHw3MCE9PXhbdCsrXXx8NTYhPT14W3QrK118fDU2IT0oeFt0KytdKzEmMjUzKXx8OTchPT14W3QrK10pdGhyb3dcIkludmFsaWQgR0lGIDg3YS84OWEgaGVhZGVyLlwiO3ZhciBOPXhbdCsrXXx4W3QrK108PDgsZT14W3QrK118eFt0KytdPDw4LG49eFt0KytdLHI9bj4+NyxpPTE8PCg3Jm4pKzE7eFt0KytdO3hbdCsrXTt2YXIgbz1udWxsO3ImJihvPXQsdCs9MyppKTt2YXIgYT0hMCxzPVtdLGw9MCxoPW51bGwsdT0wLGM9bnVsbDtmb3IodGhpcy53aWR0aD1OLHRoaXMuaGVpZ2h0PWU7YSYmdDx4Lmxlbmd0aDspc3dpdGNoKHhbdCsrXSl7Y2FzZSAzMzpzd2l0Y2goeFt0KytdKXtjYXNlIDI1NTppZigxMSE9PXhbdF18fDc4PT14W3QrMV0mJjY5PT14W3QrMl0mJjg0PT14W3QrM10mJjgzPT14W3QrNF0mJjY3PT14W3QrNV0mJjY1PT14W3QrNl0mJjgwPT14W3QrN10mJjY5PT14W3QrOF0mJjUwPT14W3QrOV0mJjQ2PT14W3QrMTBdJiY0OD09eFt0KzExXSYmMz09eFt0KzEyXSYmMT09eFt0KzEzXSYmMD09eFt0KzE2XSl0Kz0xNCxjPXhbdCsrXXx4W3QrK108PDgsdCsrO2Vsc2UgZm9yKHQrPTEyOzspe2lmKDA9PT0oQT14W3QrK10pKWJyZWFrO3QrPUF9YnJlYWs7Y2FzZSAyNDk6aWYoNCE9PXhbdCsrXXx8MCE9PXhbdCs0XSl0aHJvd1wiSW52YWxpZCBncmFwaGljcyBleHRlbnNpb24gYmxvY2suXCI7dmFyIGY9eFt0KytdO2w9eFt0KytdfHhbdCsrXTw8OCxoPXhbdCsrXSwwPT0oMSZmKSYmKGg9bnVsbCksdT1mPj4yJjcsdCsrO2JyZWFrO2Nhc2UgMjU0OmZvcig7Oyl7aWYoMD09PShBPXhbdCsrXSkpYnJlYWs7dCs9QX1icmVhaztkZWZhdWx0OnRocm93XCJVbmtub3duIGdyYXBoaWMgY29udHJvbCBsYWJlbDogMHhcIit4W3QtMV0udG9TdHJpbmcoMTYpfWJyZWFrO2Nhc2UgNDQ6dmFyIHA9eFt0KytdfHhbdCsrXTw8OCxkPXhbdCsrXXx4W3QrK108PDgsZz14W3QrK118eFt0KytdPDw4LG09eFt0KytdfHhbdCsrXTw8OCx5PXhbdCsrXSx2PXk+PjYmMSx3PW8sYj0hMTtpZih5Pj43KXtiPSEwO3c9dCx0Kz0zKigxPDwoNyZ5KSsxKX12YXIgTD10O2Zvcih0Kys7Oyl7dmFyIEE7aWYoMD09PShBPXhbdCsrXSkpYnJlYWs7dCs9QX1zLnB1c2goe3g6cCx5OmQsd2lkdGg6ZyxoZWlnaHQ6bSxoYXNfbG9jYWxfcGFsZXR0ZTpiLHBhbGV0dGVfb2Zmc2V0OncsZGF0YV9vZmZzZXQ6TCxkYXRhX2xlbmd0aDp0LUwsdHJhbnNwYXJlbnRfaW5kZXg6aCxpbnRlcmxhY2VkOiEhdixkZWxheTpsLGRpc3Bvc2FsOnV9KTticmVhaztjYXNlIDU5OmE9ITE7YnJlYWs7ZGVmYXVsdDp0aHJvd1wiVW5rbm93biBnaWYgYmxvY2s6IDB4XCIreFt0LTFdLnRvU3RyaW5nKDE2KX10aGlzLm51bUZyYW1lcz1mdW5jdGlvbigpe3JldHVybiBzLmxlbmd0aH0sdGhpcy5sb29wQ291bnQ9ZnVuY3Rpb24oKXtyZXR1cm4gY30sdGhpcy5mcmFtZUluZm89ZnVuY3Rpb24odCl7aWYodDwwfHx0Pj1zLmxlbmd0aCl0aHJvd1wiRnJhbWUgaW5kZXggb3V0IG9mIHJhbmdlLlwiO3JldHVybiBzW3RdfSx0aGlzLmRlY29kZUFuZEJsaXRGcmFtZUJHUkE9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmZyYW1lSW5mbyh0KSxyPW4ud2lkdGgqbi5oZWlnaHQsaT1uZXcgVWludDhBcnJheShyKTtTdCh4LG4uZGF0YV9vZmZzZXQsaSxyKTt2YXIgbz1uLnBhbGV0dGVfb2Zmc2V0LGE9bi50cmFuc3BhcmVudF9pbmRleDtudWxsPT09YSYmKGE9MjU2KTt2YXIgcz1uLndpZHRoLGw9Ti1zLGg9cyx1PTQqKG4ueSpOK24ueCksYz00Kigobi55K24uaGVpZ2h0KSpOK24ueCksZj11LHA9NCpsOyEwPT09bi5pbnRlcmxhY2VkJiYocCs9NCoocytsKSo3KTtmb3IodmFyIGQ9OCxnPTAsbT1pLmxlbmd0aDtnPG07KytnKXt2YXIgeT1pW2ddO2lmKDA9PT1oJiYoaD1zLGM8PShmKz1wKSYmKHA9bCs0KihzK2wpKihkLTEpLGY9dSsocytsKSooZDw8MSksZD4+PTEpKSx5PT09YSlmKz00O2Vsc2V7dmFyIHY9eFtvKzMqeV0sdz14W28rMyp5KzFdLGI9eFtvKzMqeSsyXTtlW2YrK109YixlW2YrK109dyxlW2YrK109dixlW2YrK109MjU1fS0taH19LHRoaXMuZGVjb2RlQW5kQmxpdEZyYW1lUkdCQT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZnJhbWVJbmZvKHQpLHI9bi53aWR0aCpuLmhlaWdodCxpPW5ldyBVaW50OEFycmF5KHIpO1N0KHgsbi5kYXRhX29mZnNldCxpLHIpO3ZhciBvPW4ucGFsZXR0ZV9vZmZzZXQsYT1uLnRyYW5zcGFyZW50X2luZGV4O251bGw9PT1hJiYoYT0yNTYpO3ZhciBzPW4ud2lkdGgsbD1OLXMsaD1zLHU9NCoobi55Kk4rbi54KSxjPTQqKChuLnkrbi5oZWlnaHQpKk4rbi54KSxmPXUscD00Kmw7ITA9PT1uLmludGVybGFjZWQmJihwKz00KihzK2wpKjcpO2Zvcih2YXIgZD04LGc9MCxtPWkubGVuZ3RoO2c8bTsrK2cpe3ZhciB5PWlbZ107aWYoMD09PWgmJihoPXMsYzw9KGYrPXApJiYocD1sKzQqKHMrbCkqKGQtMSksZj11KyhzK2wpKihkPDwxKSxkPj49MSkpLHk9PT1hKWYrPTQ7ZWxzZXt2YXIgdj14W28rMyp5XSx3PXhbbyszKnkrMV0sYj14W28rMyp5KzJdO2VbZisrXT12LGVbZisrXT13LGVbZisrXT1iLGVbZisrXT0yNTV9LS1ofX19ZnVuY3Rpb24gU3QodCxlLG4scil7Zm9yKHZhciBpPXRbZSsrXSxvPTE8PGksYT1vKzEscz1hKzEsbD1pKzEsaD0oMTw8bCktMSx1PTAsYz0wLGY9MCxwPXRbZSsrXSxkPW5ldyBJbnQzMkFycmF5KDQwOTYpLGc9bnVsbDs7KXtmb3IoO3U8MTYmJjAhPT1wOyljfD10W2UrK108PHUsdSs9OCwxPT09cD9wPXRbZSsrXTotLXA7aWYodTxsKWJyZWFrO3ZhciBtPWMmaDtpZihjPj49bCx1LT1sLG0hPT1vKXtpZihtPT09YSlicmVhaztmb3IodmFyIHk9bTxzP206Zyx2PTAsdz15O288dzspdz1kW3ddPj44LCsrdjt2YXIgYj13O2lmKHI8Zit2Kyh5IT09bT8xOjApKXJldHVybiB2b2lkIGNvbnNvbGUubG9nKFwiV2FybmluZywgZ2lmIHN0cmVhbSBsb25nZXIgdGhhbiBleHBlY3RlZC5cIik7bltmKytdPWI7dmFyIHg9Zis9djtmb3IoeSE9PW0mJihuW2YrK109Yiksdz15O3YtLTspdz1kW3ddLG5bLS14XT0yNTUmdyx3Pj49ODtudWxsIT09ZyYmczw0MDk2JiYoZFtzKytdPWc8PDh8YixoKzE8PXMmJmw8MTImJigrK2wsaD1oPDwxfDEpKSxnPW19ZWxzZSBzPWErMSxoPSgxPDwobD1pKzEpKS0xLGc9bnVsbH1yZXR1cm4gZiE9PXImJmNvbnNvbGUubG9nKFwiV2FybmluZywgZ2lmIHN0cmVhbSBzaG9ydGVyIHRoYW4gZXhwZWN0ZWQuXCIpLG59dHJ5e2V4cG9ydHMuR2lmV3JpdGVyPWZ1bmN0aW9uKHksdCxlLG4pe3ZhciB2PTAscj12b2lkIDA9PT0obj12b2lkIDA9PT1uP3t9Om4pLmxvb3A/bnVsbDpuLmxvb3Asdz12b2lkIDA9PT1uLnBhbGV0dGU/bnVsbDpuLnBhbGV0dGU7aWYodDw9MHx8ZTw9MHx8NjU1MzU8dHx8NjU1MzU8ZSl0aHJvd1wiV2lkdGgvSGVpZ2h0IGludmFsaWQuXCI7ZnVuY3Rpb24gYih0KXt2YXIgZT10Lmxlbmd0aDtpZihlPDJ8fDI1NjxlfHxlJmUtMSl0aHJvd1wiSW52YWxpZCBjb2RlL2NvbG9yIGxlbmd0aCwgbXVzdCBiZSBwb3dlciBvZiAyIGFuZCAyIC4uIDI1Ni5cIjtyZXR1cm4gZX15W3YrK109NzEseVt2KytdPTczLHlbdisrXT03MCx5W3YrK109NTYseVt2KytdPTU3LHlbdisrXT05Nzt2YXIgaT0wLG89MDtpZihudWxsIT09dyl7Zm9yKHZhciBhPWIodyk7YT4+PTE7KSsraTtpZihhPTE8PGksLS1pLHZvaWQgMCE9PW4uYmFja2dyb3VuZCl7aWYoYTw9KG89bi5iYWNrZ3JvdW5kKSl0aHJvd1wiQmFja2dyb3VuZCBpbmRleCBvdXQgb2YgcmFuZ2UuXCI7aWYoMD09PW8pdGhyb3dcIkJhY2tncm91bmQgaW5kZXggZXhwbGljaXRseSBwYXNzZWQgYXMgMC5cIn19aWYoeVt2KytdPTI1NSZ0LHlbdisrXT10Pj44JjI1NSx5W3YrK109MjU1JmUseVt2KytdPWU+PjgmMjU1LHlbdisrXT0obnVsbCE9PXc/MTI4OjApfGkseVt2KytdPW8seVt2KytdPTAsbnVsbCE9PXcpZm9yKHZhciBzPTAsbD13Lmxlbmd0aDtzPGw7KytzKXt2YXIgaD13W3NdO3lbdisrXT1oPj4xNiYyNTUseVt2KytdPWg+PjgmMjU1LHlbdisrXT0yNTUmaH1pZihudWxsIT09cil7aWYocjwwfHw2NTUzNTxyKXRocm93XCJMb29wIGNvdW50IGludmFsaWQuXCI7eVt2KytdPTMzLHlbdisrXT0yNTUseVt2KytdPTExLHlbdisrXT03OCx5W3YrK109NjkseVt2KytdPTg0LHlbdisrXT04Myx5W3YrK109NjcseVt2KytdPTY1LHlbdisrXT04MCx5W3YrK109NjkseVt2KytdPTUwLHlbdisrXT00Nix5W3YrK109NDgseVt2KytdPTMseVt2KytdPTEseVt2KytdPTI1NSZyLHlbdisrXT1yPj44JjI1NSx5W3YrK109MH12YXIgeD0hMTt0aGlzLmFkZEZyYW1lPWZ1bmN0aW9uKHQsZSxuLHIsaSxvKXtpZighMD09PXgmJigtLXYseD0hMSksbz12b2lkIDA9PT1vP3t9Om8sdDwwfHxlPDB8fDY1NTM1PHR8fDY1NTM1PGUpdGhyb3dcIngveSBpbnZhbGlkLlwiO2lmKG48PTB8fHI8PTB8fDY1NTM1PG58fDY1NTM1PHIpdGhyb3dcIldpZHRoL0hlaWdodCBpbnZhbGlkLlwiO2lmKGkubGVuZ3RoPG4qcil0aHJvd1wiTm90IGVub3VnaCBwaXhlbHMgZm9yIHRoZSBmcmFtZSBzaXplLlwiO3ZhciBhPSEwLHM9by5wYWxldHRlO2lmKG51bGw9PXMmJihhPSExLHM9dyksbnVsbD09cyl0aHJvd1wiTXVzdCBzdXBwbHkgZWl0aGVyIGEgbG9jYWwgb3IgZ2xvYmFsIHBhbGV0dGUuXCI7Zm9yKHZhciBsPWIocyksaD0wO2w+Pj0xOykrK2g7bD0xPDxoO3ZhciB1PXZvaWQgMD09PW8uZGVsYXk/MDpvLmRlbGF5LGM9dm9pZCAwPT09by5kaXNwb3NhbD8wOm8uZGlzcG9zYWw7aWYoYzwwfHwzPGMpdGhyb3dcIkRpc3Bvc2FsIG91dCBvZiByYW5nZS5cIjt2YXIgZj0hMSxwPTA7aWYodm9pZCAwIT09by50cmFuc3BhcmVudCYmbnVsbCE9PW8udHJhbnNwYXJlbnQmJihmPSEwLChwPW8udHJhbnNwYXJlbnQpPDB8fGw8PXApKXRocm93XCJUcmFuc3BhcmVudCBjb2xvciBpbmRleC5cIjtpZigoMCE9PWN8fGZ8fDAhPT11KSYmKHlbdisrXT0zMyx5W3YrK109MjQ5LHlbdisrXT00LHlbdisrXT1jPDwyfCghMD09PWY/MTowKSx5W3YrK109MjU1JnUseVt2KytdPXU+PjgmMjU1LHlbdisrXT1wLHlbdisrXT0wKSx5W3YrK109NDQseVt2KytdPTI1NSZ0LHlbdisrXT10Pj44JjI1NSx5W3YrK109MjU1JmUseVt2KytdPWU+PjgmMjU1LHlbdisrXT0yNTUmbix5W3YrK109bj4+OCYyNTUseVt2KytdPTI1NSZyLHlbdisrXT1yPj44JjI1NSx5W3YrK109ITA9PT1hPzEyOHxoLTE6MCwhMD09PWEpZm9yKHZhciBkPTAsZz1zLmxlbmd0aDtkPGc7KytkKXt2YXIgbT1zW2RdO3lbdisrXT1tPj4xNiYyNTUseVt2KytdPW0+PjgmMjU1LHlbdisrXT0yNTUmbX12PWZ1bmN0aW9uKGUsbix0LHIpe2VbbisrXT10O3ZhciBpPW4rKyxvPTE8PHQsYT1vLTEscz1vKzEsbD1zKzEsaD10KzEsdT0wLGM9MDtmdW5jdGlvbiBmKHQpe2Zvcig7dDw9dTspZVtuKytdPTI1NSZjLGM+Pj04LHUtPTgsbj09PWkrMjU2JiYoZVtpXT0yNTUsaT1uKyspfWZ1bmN0aW9uIHAodCl7Y3w9dDw8dSx1Kz1oLGYoOCl9dmFyIGQ9clswXSZhLGc9e307cChvKTtmb3IodmFyIG09MSx5PXIubGVuZ3RoO208eTsrK20pe3ZhciB2PXJbbV0mYSx3PWQ8PDh8dixiPWdbd107aWYodm9pZCAwPT09Yil7Zm9yKGN8PWQ8PHUsdSs9aDs4PD11OyllW24rK109MjU1JmMsYz4+PTgsdS09OCxuPT09aSsyNTYmJihlW2ldPTI1NSxpPW4rKyk7NDA5Nj09PWw/KHAobyksbD1zKzEsaD10KzEsZz17fSk6KDE8PGg8PWwmJisraCxnW3ddPWwrKyksZD12fWVsc2UgZD1ifXJldHVybiBwKGQpLHAocyksZigxKSxpKzE9PT1uP2VbaV09MDooZVtpXT1uLWktMSxlW24rK109MCksbn0oeSx2LGg8Mj8yOmgsaSl9LHRoaXMuZW5kPWZ1bmN0aW9uKCl7cmV0dXJuITE9PT14JiYoeVt2KytdPTU5LHg9ITApLHZ9fSxleHBvcnRzLkdpZlJlYWRlcj1BdH1jYXRjaCh0KXt9XG4vKlxuICAgIENvcHlyaWdodCAoYykgMjAwOCwgQWRvYmUgU3lzdGVtcyBJbmNvcnBvcmF0ZWRcbiAgICBBbGwgcmlnaHRzIHJlc2VydmVkLlxuXG4gICAgUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0IFxuICAgIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcmVcbiAgICBtZXQ6XG5cbiAgICAqIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgXG4gICAgICB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLlxuICAgIFxuICAgICogUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHRcbiAgICAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgXG4gICAgICBkb2N1bWVudGF0aW9uIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLlxuICAgIFxuICAgICogTmVpdGhlciB0aGUgbmFtZSBvZiBBZG9iZSBTeXN0ZW1zIEluY29ycG9yYXRlZCBub3IgdGhlIG5hbWVzIG9mIGl0cyBcbiAgICAgIGNvbnRyaWJ1dG9ycyBtYXkgYmUgdXNlZCB0byBlbmRvcnNlIG9yIHByb21vdGUgcHJvZHVjdHMgZGVyaXZlZCBmcm9tIFxuICAgICAgdGhpcyBzb2Z0d2FyZSB3aXRob3V0IHNwZWNpZmljIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbi5cblxuICAgIFRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgXCJBU1xuICAgIElTXCIgQU5EIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sXG4gICAgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUlxuICAgIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBDT1BZUklHSFQgT1dORVIgT1IgXG4gICAgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsXG4gICAgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLFxuICAgIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUlxuICAgIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0ZcbiAgICBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElOR1xuICAgIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJU1xuICAgIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLlxuICAqL1xuZnVuY3Rpb24gX3QodCl7dmFyIE4sTCxBLFMsZSxjPU1hdGguZmxvb3IsXz1uZXcgQXJyYXkoNjQpLEY9bmV3IEFycmF5KDY0KSxQPW5ldyBBcnJheSg2NCksaz1uZXcgQXJyYXkoNjQpLHk9bmV3IEFycmF5KDY1NTM1KSx2PW5ldyBBcnJheSg2NTUzNSksWj1uZXcgQXJyYXkoNjQpLHc9bmV3IEFycmF5KDY0KSxJPVtdLEM9MCxCPTcsaj1uZXcgQXJyYXkoNjQpLEU9bmV3IEFycmF5KDY0KSxNPW5ldyBBcnJheSg2NCksbj1uZXcgQXJyYXkoMjU2KSxPPW5ldyBBcnJheSgyMDQ4KSxiPVswLDEsNSw2LDE0LDE1LDI3LDI4LDIsNCw3LDEzLDE2LDI2LDI5LDQyLDMsOCwxMiwxNywyNSwzMCw0MSw0Myw5LDExLDE4LDI0LDMxLDQwLDQ0LDUzLDEwLDE5LDIzLDMyLDM5LDQ1LDUyLDU0LDIwLDIyLDMzLDM4LDQ2LDUxLDU1LDYwLDIxLDM0LDM3LDQ3LDUwLDU2LDU5LDYxLDM1LDM2LDQ4LDQ5LDU3LDU4LDYyLDYzXSxxPVswLDAsMSw1LDEsMSwxLDEsMSwxLDAsMCwwLDAsMCwwLDBdLFQ9WzAsMSwyLDMsNCw1LDYsNyw4LDksMTAsMTFdLFI9WzAsMCwyLDEsMywzLDIsNCwzLDUsNSw0LDQsMCwwLDEsMTI1XSxEPVsxLDIsMywwLDQsMTcsNSwxOCwzMyw0OSw2NSw2LDE5LDgxLDk3LDcsMzQsMTEzLDIwLDUwLDEyOSwxNDUsMTYxLDgsMzUsNjYsMTc3LDE5MywyMSw4MiwyMDksMjQwLDM2LDUxLDk4LDExNCwxMzAsOSwxMCwyMiwyMywyNCwyNSwyNiwzNywzOCwzOSw0MCw0MSw0Miw1Miw1Myw1NCw1NSw1Niw1Nyw1OCw2Nyw2OCw2OSw3MCw3MSw3Miw3Myw3NCw4Myw4NCw4NSw4Niw4Nyw4OCw4OSw5MCw5OSwxMDAsMTAxLDEwMiwxMDMsMTA0LDEwNSwxMDYsMTE1LDExNiwxMTcsMTE4LDExOSwxMjAsMTIxLDEyMiwxMzEsMTMyLDEzMywxMzQsMTM1LDEzNiwxMzcsMTM4LDE0NiwxNDcsMTQ4LDE0OSwxNTAsMTUxLDE1MiwxNTMsMTU0LDE2MiwxNjMsMTY0LDE2NSwxNjYsMTY3LDE2OCwxNjksMTcwLDE3OCwxNzksMTgwLDE4MSwxODIsMTgzLDE4NCwxODUsMTg2LDE5NCwxOTUsMTk2LDE5NywxOTgsMTk5LDIwMCwyMDEsMjAyLDIxMCwyMTEsMjEyLDIxMywyMTQsMjE1LDIxNiwyMTcsMjE4LDIyNSwyMjYsMjI3LDIyOCwyMjksMjMwLDIzMSwyMzIsMjMzLDIzNCwyNDEsMjQyLDI0MywyNDQsMjQ1LDI0NiwyNDcsMjQ4LDI0OSwyNTBdLFU9WzAsMCwzLDEsMSwxLDEsMSwxLDEsMSwxLDAsMCwwLDAsMF0sej1bMCwxLDIsMyw0LDUsNiw3LDgsOSwxMCwxMV0sSD1bMCwwLDIsMSwyLDQsNCwzLDQsNyw1LDQsNCwwLDEsMiwxMTldLFc9WzAsMSwyLDMsMTcsNCw1LDMzLDQ5LDYsMTgsNjUsODEsNyw5NywxMTMsMTksMzQsNTAsMTI5LDgsMjAsNjYsMTQ1LDE2MSwxNzcsMTkzLDksMzUsNTEsODIsMjQwLDIxLDk4LDExNCwyMDksMTAsMjIsMzYsNTIsMjI1LDM3LDI0MSwyMywyNCwyNSwyNiwzOCwzOSw0MCw0MSw0Miw1Myw1NCw1NSw1Niw1Nyw1OCw2Nyw2OCw2OSw3MCw3MSw3Miw3Myw3NCw4Myw4NCw4NSw4Niw4Nyw4OCw4OSw5MCw5OSwxMDAsMTAxLDEwMiwxMDMsMTA0LDEwNSwxMDYsMTE1LDExNiwxMTcsMTE4LDExOSwxMjAsMTIxLDEyMiwxMzAsMTMxLDEzMiwxMzMsMTM0LDEzNSwxMzYsMTM3LDEzOCwxNDYsMTQ3LDE0OCwxNDksMTUwLDE1MSwxNTIsMTUzLDE1NCwxNjIsMTYzLDE2NCwxNjUsMTY2LDE2NywxNjgsMTY5LDE3MCwxNzgsMTc5LDE4MCwxODEsMTgyLDE4MywxODQsMTg1LDE4NiwxOTQsMTk1LDE5NiwxOTcsMTk4LDE5OSwyMDAsMjAxLDIwMiwyMTAsMjExLDIxMiwyMTMsMjE0LDIxNSwyMTYsMjE3LDIxOCwyMjYsMjI3LDIyOCwyMjksMjMwLDIzMSwyMzIsMjMzLDIzNCwyNDIsMjQzLDI0NCwyNDUsMjQ2LDI0NywyNDgsMjQ5LDI1MF07ZnVuY3Rpb24gcih0LGUpe2Zvcih2YXIgbj0wLHI9MCxpPW5ldyBBcnJheSxvPTE7bzw9MTY7bysrKXtmb3IodmFyIGE9MTthPD10W29dO2ErKylpW2Vbcl1dPVtdLGlbZVtyXV1bMF09bixpW2Vbcl1dWzFdPW8scisrLG4rKztuKj0yfXJldHVybiBpfWZ1bmN0aW9uIFYodCl7Zm9yKHZhciBlPXRbMF0sbj10WzFdLTE7MDw9bjspZSYxPDxuJiYoQ3w9MTw8Qiksbi0tLC0tQjwwJiYoMjU1PT1DPyhHKDI1NSksRygwKSk6RyhDKSxCPTcsQz0wKX1mdW5jdGlvbiBHKHQpe0kucHVzaCh0KX1mdW5jdGlvbiBZKHQpe0codD4+OCYyNTUpLEcoMjU1JnQpfWZ1bmN0aW9uIEoodCxlLG4scixpKXtmb3IodmFyIG8sYT1pWzBdLHM9aVsyNDBdLGw9ZnVuY3Rpb24odCxlKXt2YXIgbixyLGksbyxhLHMsbCxoLHUsYyxmPTA7Zm9yKHU9MDt1PDg7Kyt1KXtuPXRbZl0scj10W2YrMV0saT10W2YrMl0sbz10W2YrM10sYT10W2YrNF0scz10W2YrNV0sbD10W2YrNl07dmFyIHA9bisoaD10W2YrN10pLGQ9bi1oLGc9citsLG09ci1sLHk9aStzLHY9aS1zLHc9bythLGI9by1hLHg9cCt3LE49cC13LEw9Zyt5LEE9Zy15O3RbZl09eCtMLHRbZis0XT14LUw7dmFyIFM9LjcwNzEwNjc4MSooQStOKTt0W2YrMl09TitTLHRbZis2XT1OLVM7dmFyIF89LjM4MjY4MzQzMyooKHg9Yit2KS0oQT1tK2QpKSxGPS41NDExOTYxKngrXyxQPTEuMzA2NTYyOTY1KkErXyxrPS43MDcxMDY3ODEqKEw9dittKSxJPWQrayxDPWQtazt0W2YrNV09QytGLHRbZiszXT1DLUYsdFtmKzFdPUkrUCx0W2YrN109SS1QLGYrPTh9Zm9yKHU9Zj0wO3U8ODsrK3Upe249dFtmXSxyPXRbZis4XSxpPXRbZisxNl0sbz10W2YrMjRdLGE9dFtmKzMyXSxzPXRbZis0MF0sbD10W2YrNDhdO3ZhciBCPW4rKGg9dFtmKzU2XSksaj1uLWgsRT1yK2wsTT1yLWwsTz1pK3MscT1pLXMsVD1vK2EsUj1vLWEsRD1CK1QsVT1CLVQsej1FK08sSD1FLU87dFtmXT1EK3osdFtmKzMyXT1ELXo7dmFyIFc9LjcwNzEwNjc4MSooSCtVKTt0W2YrMTZdPVUrVyx0W2YrNDhdPVUtVzt2YXIgVj0uMzgyNjgzNDMzKigoRD1SK3EpLShIPU0raikpLEc9LjU0MTE5NjEqRCtWLFk9MS4zMDY1NjI5NjUqSCtWLEo9LjcwNzEwNjc4MSooej1xK00pLFg9aitKLEs9ai1KO3RbZis0MF09SytHLHRbZisyNF09Sy1HLHRbZis4XT1YK1ksdFtmKzU2XT1YLVksZisrfWZvcih1PTA7dTw2NDsrK3UpYz10W3VdKmVbdV0sWlt1XT0wPGM/YysuNXwwOmMtLjV8MDtyZXR1cm4gWn0odCxlKSxoPTA7aDw2NDsrK2gpd1tiW2hdXT1sW2hdO3ZhciB1PXdbMF0tbjtuPXdbMF0sMD09dT9WKHJbMF0pOihWKHJbdltvPTMyNzY3K3VdXSksVih5W29dKSk7Zm9yKHZhciBjPTYzOzA8YyYmMD09d1tjXTtjLS0pO2lmKDA9PWMpcmV0dXJuIFYoYSksbjtmb3IodmFyIGYscD0xO3A8PWM7KXtmb3IodmFyIGQ9cDswPT13W3BdJiZwPD1jOysrcCk7dmFyIGc9cC1kO2lmKDE2PD1nKXtmPWc+PjQ7Zm9yKHZhciBtPTE7bTw9ZjsrK20pVihzKTtnJj0xNX1vPTMyNzY3K3dbcF0sVihpWyhnPDw0KSt2W29dXSksVih5W29dKSxwKyt9cmV0dXJuIDYzIT1jJiZWKGEpLG59ZnVuY3Rpb24gWCh0KXtpZih0PD0wJiYodD0xKSwxMDA8dCYmKHQ9MTAwKSxlIT10KXsoZnVuY3Rpb24odCl7Zm9yKHZhciBlPVsxNiwxMSwxMCwxNiwyNCw0MCw1MSw2MSwxMiwxMiwxNCwxOSwyNiw1OCw2MCw1NSwxNCwxMywxNiwyNCw0MCw1Nyw2OSw1NiwxNCwxNywyMiwyOSw1MSw4Nyw4MCw2MiwxOCwyMiwzNyw1Niw2OCwxMDksMTAzLDc3LDI0LDM1LDU1LDY0LDgxLDEwNCwxMTMsOTIsNDksNjQsNzgsODcsMTAzLDEyMSwxMjAsMTAxLDcyLDkyLDk1LDk4LDExMiwxMDAsMTAzLDk5XSxuPTA7bjw2NDtuKyspe3ZhciByPWMoKGVbbl0qdCs1MCkvMTAwKTtyPDE/cj0xOjI1NTxyJiYocj0yNTUpLF9bYltuXV09cn1mb3IodmFyIGk9WzE3LDE4LDI0LDQ3LDk5LDk5LDk5LDk5LDE4LDIxLDI2LDY2LDk5LDk5LDk5LDk5LDI0LDI2LDU2LDk5LDk5LDk5LDk5LDk5LDQ3LDY2LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5LDk5XSxvPTA7bzw2NDtvKyspe3ZhciBhPWMoKGlbb10qdCs1MCkvMTAwKTthPDE/YT0xOjI1NTxhJiYoYT0yNTUpLEZbYltvXV09YX1mb3IodmFyIHM9WzEsMS4zODcwMzk4NDUsMS4zMDY1NjI5NjUsMS4xNzU4NzU2MDIsMSwuNzg1Njk0OTU4LC41NDExOTYxLC4yNzU4OTkzNzldLGw9MCxoPTA7aDw4O2grKylmb3IodmFyIHU9MDt1PDg7dSsrKVBbbF09MS8oX1tiW2xdXSpzW2hdKnNbdV0qOCksa1tsXT0xLyhGW2JbbF1dKnNbaF0qc1t1XSo4KSxsKyt9KSh0PDUwP01hdGguZmxvb3IoNWUzL3QpOk1hdGguZmxvb3IoMjAwLTIqdCkpLGU9dH19dGhpcy5lbmNvZGU9ZnVuY3Rpb24odCxlKXt2YXIgbixyOyhuZXcgRGF0ZSkuZ2V0VGltZSgpO2UmJlgoZSksST1uZXcgQXJyYXksQz0wLEI9NyxZKDY1NDk2KSxZKDY1NTA0KSxZKDE2KSxHKDc0KSxHKDcwKSxHKDczKSxHKDcwKSxHKDApLEcoMSksRygxKSxHKDApLFkoMSksWSgxKSxHKDApLEcoMCksZnVuY3Rpb24oKXtZKDY1NDk5KSxZKDEzMiksRygwKTtmb3IodmFyIHQ9MDt0PDY0O3QrKylHKF9bdF0pO0coMSk7Zm9yKHZhciBlPTA7ZTw2NDtlKyspRyhGW2VdKX0oKSxuPXQud2lkdGgscj10LmhlaWdodCxZKDY1NDcyKSxZKDE3KSxHKDgpLFkociksWShuKSxHKDMpLEcoMSksRygxNyksRygwKSxHKDIpLEcoMTcpLEcoMSksRygzKSxHKDE3KSxHKDEpLGZ1bmN0aW9uKCl7WSg2NTQ3NiksWSg0MTgpLEcoMCk7Zm9yKHZhciB0PTA7dDwxNjt0KyspRyhxW3QrMV0pO2Zvcih2YXIgZT0wO2U8PTExO2UrKylHKFRbZV0pO0coMTYpO2Zvcih2YXIgbj0wO248MTY7bisrKUcoUltuKzFdKTtmb3IodmFyIHI9MDtyPD0xNjE7cisrKUcoRFtyXSk7RygxKTtmb3IodmFyIGk9MDtpPDE2O2krKylHKFVbaSsxXSk7Zm9yKHZhciBvPTA7bzw9MTE7bysrKUcoeltvXSk7RygxNyk7Zm9yKHZhciBhPTA7YTwxNjthKyspRyhIW2ErMV0pO2Zvcih2YXIgcz0wO3M8PTE2MTtzKyspRyhXW3NdKX0oKSxZKDY1NDk4KSxZKDEyKSxHKDMpLEcoMSksRygwKSxHKDIpLEcoMTcpLEcoMyksRygxNyksRygwKSxHKDYzKSxHKDApO3ZhciBpPTAsbz0wLGE9MDtDPTAsQj03LHRoaXMuZW5jb2RlLmRpc3BsYXlOYW1lPVwiX2VuY29kZV9cIjtmb3IodmFyIHMsbCxoLHUsYyxmLHAsZCxnLG09dC5kYXRhLHk9dC53aWR0aCx2PXQuaGVpZ2h0LHc9NCp5LGI9MDtiPHY7KXtmb3Iocz0wO3M8dzspe2ZvcihmPWM9dypiK3MscD0tMSxnPWQ9MDtnPDY0O2crKylmPWMrKGQ9Zz4+MykqdysocD00Kig3JmcpKSx2PD1iK2QmJihmLT13KihiKzErZC12KSksdzw9cytwJiYoZi09cytwLXcrNCksbD1tW2YrK10saD1tW2YrK10sdT1tW2YrK10saltnXT0oT1tsXStPW2grMjU2Pj4wXStPW3UrNTEyPj4wXT4+MTYpLTEyOCxFW2ddPShPW2wrNzY4Pj4wXStPW2grMTAyND4+MF0rT1t1KzEyODA+PjBdPj4xNiktMTI4LE1bZ109KE9bbCsxMjgwPj4wXStPW2grMTUzNj4+MF0rT1t1KzE3OTI+PjBdPj4xNiktMTI4O2k9SihqLFAsaSxOLEEpLG89SihFLGssbyxMLFMpLGE9SihNLGssYSxMLFMpLHMrPTMyfWIrPTh9aWYoMDw9Qil7dmFyIHg9W107eFsxXT1CKzEseFswXT0oMTw8QisxKS0xLFYoeCl9cmV0dXJuIFkoNjU0OTcpLG5ldyBVaW50OEFycmF5KEkpfSxmdW5jdGlvbigpeyhuZXcgRGF0ZSkuZ2V0VGltZSgpO3R8fCh0PTUwKSxmdW5jdGlvbigpe2Zvcih2YXIgdD1TdHJpbmcuZnJvbUNoYXJDb2RlLGU9MDtlPDI1NjtlKyspbltlXT10KGUpfSgpLE49cihxLFQpLEw9cihVLHopLEE9cihSLEQpLFM9cihILFcpLGZ1bmN0aW9uKCl7Zm9yKHZhciB0PTEsZT0yLG49MTtuPD0xNTtuKyspe2Zvcih2YXIgcj10O3I8ZTtyKyspdlszMjc2NytyXT1uLHlbMzI3Njcrcl09W10seVszMjc2NytyXVsxXT1uLHlbMzI3Njcrcl1bMF09cjtmb3IodmFyIGk9LShlLTEpO2k8PS10O2krKyl2WzMyNzY3K2ldPW4seVszMjc2NytpXT1bXSx5WzMyNzY3K2ldWzFdPW4seVszMjc2NytpXVswXT1lLTEraTt0PDw9MSxlPDw9MX19KCksZnVuY3Rpb24oKXtmb3IodmFyIHQ9MDt0PDI1Njt0KyspT1t0XT0xOTU5NSp0LE9bdCsyNTY+PjBdPTM4NDcwKnQsT1t0KzUxMj4+MF09NzQ3MSp0KzMyNzY4LE9bdCs3Njg+PjBdPS0xMTA1OSp0LE9bdCsxMDI0Pj4wXT0tMjE3MDkqdCxPW3QrMTI4MD4+MF09MzI3NjgqdCs4NDIxMzc1LE9bdCsxNTM2Pj4wXT0tMjc0MzkqdCxPW3QrMTc5Mj4+MF09LTUzMjkqdH0oKSxYKHQpLChuZXcgRGF0ZSkuZ2V0VGltZSgpfSgpfWZ1bmN0aW9uIEZ0KHQsZSl7aWYodGhpcy5wb3M9MCx0aGlzLmJ1ZmZlcj10LHRoaXMuZGF0YXY9bmV3IERhdGFWaWV3KHQuYnVmZmVyKSx0aGlzLmlzX3dpdGhfYWxwaGE9ISFlLHRoaXMuYm90dG9tX3VwPSEwLHRoaXMuZmxhZz1TdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMuYnVmZmVyWzBdKStTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMuYnVmZmVyWzFdKSx0aGlzLnBvcys9MiwtMT09PVtcIkJNXCIsXCJCQVwiLFwiQ0lcIixcIkNQXCIsXCJJQ1wiLFwiUFRcIl0uaW5kZXhPZih0aGlzLmZsYWcpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgQk1QIEZpbGVcIik7dGhpcy5wYXJzZUhlYWRlcigpLHRoaXMucGFyc2VCR1IoKX13aW5kb3cudG1wPUF0LGx0LkFQSS5hZGxlcjMyY3M9KGR0PVwiZnVuY3Rpb25cIj09dHlwZW9mIEFycmF5QnVmZmVyJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBVaW50OEFycmF5LGd0PW51bGwsbXQ9ZnVuY3Rpb24oKXtpZighZHQpcmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuITF9O3RyeXt2YXIgdD17fTtcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LkJ1ZmZlciYmKGd0PXQuQnVmZmVyKX1jYXRjaCh0KXt9cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgQXJyYXlCdWZmZXJ8fG51bGwhPT1ndCYmdCBpbnN0YW5jZW9mIGd0fX0oKSx5dD1udWxsIT09Z3Q/ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBndCh0LFwidXRmOFwiKS50b1N0cmluZyhcImJpbmFyeVwiKX06ZnVuY3Rpb24odCl7cmV0dXJuIHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCh0KSl9LHZ0PWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTY1NTM1JnQscj10Pj4+MTYsaT0wLG89ZS5sZW5ndGg7aTxvO2krKyluPShuKygyNTUmZS5jaGFyQ29kZUF0KGkpKSklNjU1MjEscj0ocituKSU2NTUyMTtyZXR1cm4ocjw8MTZ8bik+Pj4wfSx3dD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj02NTUzNSZ0LHI9dD4+PjE2LGk9MCxvPWUubGVuZ3RoO2k8bztpKyspbj0obitlW2ldKSU2NTUyMSxyPShyK24pJTY1NTIxO3JldHVybihyPDwxNnxuKT4+PjB9LHh0PShidD17fSkuQWRsZXIzMj0oKChwdD0oZnQ9ZnVuY3Rpb24odCl7aWYoISh0aGlzIGluc3RhbmNlb2YgZnQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDb25zdHJ1Y3RvciBjYW5ub3QgY2FsbGVkIGJlIGFzIGEgZnVuY3Rpb24uXCIpO2lmKCFpc0Zpbml0ZSh0PW51bGw9PXQ/MTordCkpdGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgYXJndW1lbnRzIG5lZWRzIHRvIGJlIGEgZmluaXRlIG51bWJlci5cIik7dGhpcy5jaGVja3N1bT10Pj4+MH0pLnByb3RvdHlwZT17fSkuY29uc3RydWN0b3I9ZnQpLmZyb209KChodD1mdW5jdGlvbih0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBmdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNvbnN0cnVjdG9yIGNhbm5vdCBjYWxsZWQgYmUgYXMgYSBmdW5jdGlvbi5cIik7aWYobnVsbD09dCl0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBhcmd1bWVudCBuZWVkcyB0byBiZSBhIHN0cmluZy5cIik7dGhpcy5jaGVja3N1bT12dCgxLHQudG9TdHJpbmcoKSl9KS5wcm90b3R5cGU9cHQsaHQpLGZ0LmZyb21VdGY4PSgodXQ9ZnVuY3Rpb24odCl7aWYoISh0aGlzIGluc3RhbmNlb2YgZnQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDb25zdHJ1Y3RvciBjYW5ub3QgY2FsbGVkIGJlIGFzIGEgZnVuY3Rpb24uXCIpO2lmKG51bGw9PXQpdGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgYXJndW1lbnQgbmVlZHMgdG8gYmUgYSBzdHJpbmcuXCIpO3ZhciBlPXl0KHQudG9TdHJpbmcoKSk7dGhpcy5jaGVja3N1bT12dCgxLGUpfSkucHJvdG90eXBlPXB0LHV0KSxkdCYmKGZ0LmZyb21CdWZmZXI9KChjdD1mdW5jdGlvbih0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBmdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNvbnN0cnVjdG9yIGNhbm5vdCBjYWxsZWQgYmUgYXMgYSBmdW5jdGlvbi5cIik7aWYoIW10KHQpKXRocm93IG5ldyBFcnJvcihcIkZpcnN0IGFyZ3VtZW50IG5lZWRzIHRvIGJlIEFycmF5QnVmZmVyLlwiKTt2YXIgZT1uZXcgVWludDhBcnJheSh0KTtyZXR1cm4gdGhpcy5jaGVja3N1bT13dCgxLGUpfSkucHJvdG90eXBlPXB0LGN0KSkscHQudXBkYXRlPWZ1bmN0aW9uKHQpe2lmKG51bGw9PXQpdGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgYXJndW1lbnQgbmVlZHMgdG8gYmUgYSBzdHJpbmcuXCIpO3JldHVybiB0PXQudG9TdHJpbmcoKSx0aGlzLmNoZWNrc3VtPXZ0KHRoaXMuY2hlY2tzdW0sdCl9LHB0LnVwZGF0ZVV0Zjg9ZnVuY3Rpb24odCl7aWYobnVsbD09dCl0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBhcmd1bWVudCBuZWVkcyB0byBiZSBhIHN0cmluZy5cIik7dmFyIGU9eXQodC50b1N0cmluZygpKTtyZXR1cm4gdGhpcy5jaGVja3N1bT12dCh0aGlzLmNoZWNrc3VtLGUpfSxkdCYmKHB0LnVwZGF0ZUJ1ZmZlcj1mdW5jdGlvbih0KXtpZighbXQodCkpdGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgYXJndW1lbnQgbmVlZHMgdG8gYmUgQXJyYXlCdWZmZXIuXCIpO3ZhciBlPW5ldyBVaW50OEFycmF5KHQpO3JldHVybiB0aGlzLmNoZWNrc3VtPXd0KHRoaXMuY2hlY2tzdW0sZSl9KSxwdC5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgeHQodGhpcy5jaGVja3N1bSl9LGZ0KSxidC5mcm9tPWZ1bmN0aW9uKHQpe2lmKG51bGw9PXQpdGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgYXJndW1lbnQgbmVlZHMgdG8gYmUgYSBzdHJpbmcuXCIpO3JldHVybiB2dCgxLHQudG9TdHJpbmcoKSl9LGJ0LmZyb21VdGY4PWZ1bmN0aW9uKHQpe2lmKG51bGw9PXQpdGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgYXJndW1lbnQgbmVlZHMgdG8gYmUgYSBzdHJpbmcuXCIpO3ZhciBlPXl0KHQudG9TdHJpbmcoKSk7cmV0dXJuIHZ0KDEsZSl9LGR0JiYoYnQuZnJvbUJ1ZmZlcj1mdW5jdGlvbih0KXtpZighbXQodCkpdGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgYXJndW1lbnQgbmVlZCB0byBiZSBBcnJheUJ1ZmZlci5cIik7dmFyIGU9bmV3IFVpbnQ4QXJyYXkodCk7cmV0dXJuIHd0KDEsZSl9KSxidCksZnVuY3Rpb24odCl7dC5fX2JpZGlFbmdpbmVfXz10LnByb3RvdHlwZS5fX2JpZGlFbmdpbmVfXz1mdW5jdGlvbih0KXt2YXIgZCxnLGMsZixpLG8sYSxzPWUsbT1bWzAsMywwLDEsMCwwLDBdLFswLDMsMCwxLDIsMiwwXSxbMCwzLDAsMTcsMiwwLDFdLFswLDMsNSw1LDQsMSwwXSxbMCwzLDIxLDIxLDQsMCwxXSxbMCwzLDUsNSw0LDIsMF1dLHk9W1syLDAsMSwxLDAsMSwwXSxbMiwwLDEsMSwwLDIsMF0sWzIsMCwyLDEsMywyLDBdLFsyLDAsMiwzMywzLDEsMV1dLHY9e0w6MCxSOjEsRU46MixBTjozLE46NCxCOjUsUzo2fSxsPXswOjAsNToxLDY6Miw3OjMsMzI6NCwyNTE6NSwyNTQ6NiwyNTU6N30saD1bXCIoXCIsXCIpXCIsXCIoXCIsXCI8XCIsXCI+XCIsXCI8XCIsXCJbXCIsXCJdXCIsXCJbXCIsXCJ7XCIsXCJ9XCIsXCJ7XCIsXCLCq1wiLFwiwrtcIixcIsKrXCIsXCLigLlcIixcIuKAulwiLFwi4oC5XCIsXCLigYVcIixcIuKBhlwiLFwi4oGFXCIsXCLigb1cIixcIuKBvlwiLFwi4oG9XCIsXCLigo1cIixcIuKCjlwiLFwi4oKNXCIsXCLiiaRcIixcIuKJpVwiLFwi4omkXCIsXCLijKlcIixcIuKMqlwiLFwi4oypXCIsXCLvuZlcIixcIu+5mlwiLFwi77mZXCIsXCLvuZtcIixcIu+5nFwiLFwi77mbXCIsXCLvuZ1cIixcIu+5nlwiLFwi77mdXCIsXCLvuaRcIixcIu+5pVwiLFwi77mkXCJdLHU9bmV3IFJlZ0V4cCgvXihbMS00fDldfDFbMC05XXwyWzAtOV18M1swMTY4XXw0WzA0NTg5XXw1WzAxMl18N1s3OF18MTU5fDE2WzAtOV18MTdbMC0yXXwyMVs1NjldfDIyWzAzNDg5XXwyNTApJC8pLHc9ITEsYj0wO3RoaXMuX19iaWRpRW5naW5lX189e307dmFyIHg9ZnVuY3Rpb24odCl7dmFyIGU9dC5jaGFyQ29kZUF0KCksbj1lPj44LHI9bFtuXTtyZXR1cm4gdm9pZCAwIT09cj9zWzI1NipyKygyNTUmZSldOjI1Mj09PW58fDI1Mz09PW4/XCJBTFwiOnUudGVzdChuKT9cIkxcIjo4PT09bj9cIlJcIjpcIk5cIn0scD1mdW5jdGlvbih0KXtmb3IodmFyIGUsbj0wO248dC5sZW5ndGg7bisrKXtpZihcIkxcIj09PShlPXgodC5jaGFyQXQobikpKSlyZXR1cm4hMTtpZihcIlJcIj09PWUpcmV0dXJuITB9cmV0dXJuITF9LE49ZnVuY3Rpb24odCxlLG4scil7dmFyIGksbyxhLHMsbD1lW3JdO3N3aXRjaChsKXtjYXNlXCJMXCI6Y2FzZVwiUlwiOnc9ITE7YnJlYWs7Y2FzZVwiTlwiOmNhc2VcIkFOXCI6YnJlYWs7Y2FzZVwiRU5cIjp3JiYobD1cIkFOXCIpO2JyZWFrO2Nhc2VcIkFMXCI6dz0hMCxsPVwiUlwiO2JyZWFrO2Nhc2VcIldTXCI6bD1cIk5cIjticmVhaztjYXNlXCJDU1wiOnI8MXx8cisxPj1lLmxlbmd0aHx8XCJFTlwiIT09KGk9bltyLTFdKSYmXCJBTlwiIT09aXx8XCJFTlwiIT09KG89ZVtyKzFdKSYmXCJBTlwiIT09bz9sPVwiTlwiOncmJihvPVwiQU5cIiksbD1vPT09aT9vOlwiTlwiO2JyZWFrO2Nhc2VcIkVTXCI6bD1cIkVOXCI9PT0oaT0wPHI/bltyLTFdOlwiQlwiKSYmcisxPGUubGVuZ3RoJiZcIkVOXCI9PT1lW3IrMV0/XCJFTlwiOlwiTlwiO2JyZWFrO2Nhc2VcIkVUXCI6aWYoMDxyJiZcIkVOXCI9PT1uW3ItMV0pe2w9XCJFTlwiO2JyZWFrfWlmKHcpe2w9XCJOXCI7YnJlYWt9Zm9yKGE9cisxLHM9ZS5sZW5ndGg7YTxzJiZcIkVUXCI9PT1lW2FdOylhKys7bD1hPHMmJlwiRU5cIj09PWVbYV0/XCJFTlwiOlwiTlwiO2JyZWFrO2Nhc2VcIk5TTVwiOmlmKGMmJiFmKXtmb3Iocz1lLmxlbmd0aCxhPXIrMTthPHMmJlwiTlNNXCI9PT1lW2FdOylhKys7aWYoYTxzKXt2YXIgaD10W3JdLHU9MTQyNTw9aCYmaDw9MjMwM3x8NjQyODY9PT1oO2lmKGk9ZVthXSx1JiYoXCJSXCI9PT1pfHxcIkFMXCI9PT1pKSl7bD1cIlJcIjticmVha319fWw9cjwxfHxcIkJcIj09PShpPWVbci0xXSk/XCJOXCI6bltyLTFdO2JyZWFrO2Nhc2VcIkJcIjpkPSEodz0hMSksbD1iO2JyZWFrO2Nhc2VcIlNcIjpnPSEwLGw9XCJOXCI7YnJlYWs7Y2FzZVwiTFJFXCI6Y2FzZVwiUkxFXCI6Y2FzZVwiTFJPXCI6Y2FzZVwiUkxPXCI6Y2FzZVwiUERGXCI6dz0hMTticmVhaztjYXNlXCJCTlwiOmw9XCJOXCJ9cmV0dXJuIGx9LEw9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXQuc3BsaXQoXCJcIik7cmV0dXJuIG4mJkEocixuLHtoaUxldmVsOmJ9KSxyLnJldmVyc2UoKSxlJiZlLnJldmVyc2UoKSxyLmpvaW4oXCJcIil9LEE9ZnVuY3Rpb24odCxlLG4pe3ZhciByLGksbyxhLHMsbD0tMSxoPXQubGVuZ3RoLHU9MCxjPVtdLGY9Yj95Om0scD1bXTtmb3IoZz1kPXc9ITEsaT0wO2k8aDtpKyspcFtpXT14KHRbaV0pO2ZvcihvPTA7bzxoO28rKyl7aWYocz11LGNbb109Tih0LHAsYyxvKSxyPTI0MCYodT1mW3NdW3ZbY1tvXV1dKSx1Jj0xNSxlW29dPWE9Zlt1XVs1XSwwPHIpaWYoMTY9PT1yKXtmb3IoaT1sO2k8bztpKyspZVtpXT0xO2w9LTF9ZWxzZSBsPS0xO2lmKGZbdV1bNl0pLTE9PT1sJiYobD1vKTtlbHNlIGlmKC0xPGwpe2ZvcihpPWw7aTxvO2krKyllW2ldPWE7bD0tMX1cIkJcIj09PXBbb10mJihlW29dPTApLG4uaGlMZXZlbHw9YX1nJiZmdW5jdGlvbih0LGUsbil7Zm9yKHZhciByPTA7cjxuO3IrKylpZihcIlNcIj09PXRbcl0pe2Vbcl09Yjtmb3IodmFyIGk9ci0xOzA8PWkmJlwiV1NcIj09PXRbaV07aS0tKWVbaV09Yn19KHAsZSxoKX0sUz1mdW5jdGlvbih0LGUsbixyLGkpe2lmKCEoaS5oaUxldmVsPHQpKXtpZigxPT09dCYmMT09PWImJiFkKXJldHVybiBlLnJldmVyc2UoKSx2b2lkKG4mJm4ucmV2ZXJzZSgpKTtmb3IodmFyIG8sYSxzLGwsaD1lLmxlbmd0aCx1PTA7dTxoOyl7aWYoclt1XT49dCl7Zm9yKHM9dSsxO3M8aCYmcltzXT49dDspcysrO2ZvcihsPXUsYT1zLTE7bDxhO2wrKyxhLS0pbz1lW2xdLGVbbF09ZVthXSxlW2FdPW8sbiYmKG89bltsXSxuW2xdPW5bYV0sblthXT1vKTt1PXN9dSsrfX19LF89ZnVuY3Rpb24odCxlLG4pe3ZhciByPXQuc3BsaXQoXCJcIiksaT17aGlMZXZlbDpifTtyZXR1cm4gbnx8KG49W10pLEEocixuLGkpLGZ1bmN0aW9uKHQsZSxuKXtpZigwIT09bi5oaUxldmVsJiZhKWZvcih2YXIgcixpPTA7aTx0Lmxlbmd0aDtpKyspMT09PWVbaV0mJjA8PShyPWguaW5kZXhPZih0W2ldKSkmJih0W2ldPWhbcisxXSl9KHIsbixpKSxTKDIscixlLG4saSksUygxLHIsZSxuLGkpLHIuam9pbihcIlwiKX07cmV0dXJuIHRoaXMuX19iaWRpRW5naW5lX18uZG9CaWRpUmVvcmRlcj1mdW5jdGlvbih0LGUsbil7aWYoZnVuY3Rpb24odCxlKXtpZihlKWZvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKWVbbl09bjt2b2lkIDA9PT1mJiYoZj1wKHQpKSx2b2lkIDA9PT1vJiYobz1wKHQpKX0odCxlKSxjfHwhaXx8bylpZihjJiZpJiZmXm8pYj1mPzE6MCx0PUwodCxlLG4pO2Vsc2UgaWYoIWMmJmkmJm8pYj1mPzE6MCx0PV8odCxlLG4pLHQ9TCh0LGUpO2Vsc2UgaWYoIWN8fGZ8fGl8fG8pe2lmKGMmJiFpJiZmXm8pdD1MKHQsZSksdD1mPyhiPTAsXyh0LGUsbikpOihiPTEsdD1fKHQsZSxuKSxMKHQsZSkpO2Vsc2UgaWYoYyYmZiYmIWkmJm8pYj0xLHQ9Xyh0LGUsbiksdD1MKHQsZSk7ZWxzZSBpZighYyYmIWkmJmZebyl7dmFyIHI9YTtmPyhiPTEsdD1fKHQsZSxuKSxiPTAsYT0hMSx0PV8odCxlLG4pLGE9cik6KGI9MCx0PV8odCxlLG4pLHQ9TCh0LGUpLGE9IShiPTEpLHQ9Xyh0LGUsbiksYT1yLHQ9TCh0LGUpKX19ZWxzZSBiPTAsdD1fKHQsZSxuKTtlbHNlIGI9Zj8xOjAsdD1fKHQsZSxuKTtyZXR1cm4gdH0sdGhpcy5fX2JpZGlFbmdpbmVfXy5zZXRPcHRpb25zPWZ1bmN0aW9uKHQpe3QmJihjPXQuaXNJbnB1dFZpc3VhbCxpPXQuaXNPdXRwdXRWaXN1YWwsZj10LmlzSW5wdXRSdGwsbz10LmlzT3V0cHV0UnRsLGE9dC5pc1N5bW1ldHJpY1N3YXBwaW5nKX0sdGhpcy5fX2JpZGlFbmdpbmVfXy5zZXRPcHRpb25zKHQpLHRoaXMuX19iaWRpRW5naW5lX199O3ZhciBlPVtcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIlNcIixcIkJcIixcIlNcIixcIldTXCIsXCJCXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJcIixcIkJcIixcIkJcIixcIlNcIixcIldTXCIsXCJOXCIsXCJOXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJFU1wiLFwiQ1NcIixcIkVTXCIsXCJDU1wiLFwiQ1NcIixcIkVOXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJDU1wiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJDU1wiLFwiTlwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIkxcIixcIk5cIixcIk5cIixcIkJOXCIsXCJOXCIsXCJOXCIsXCJFVFwiLFwiRVRcIixcIkVOXCIsXCJFTlwiLFwiTlwiLFwiTFwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiRU5cIixcIkxcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIkxcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIkVUXCIsXCJOXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJSXCIsXCJOU01cIixcIlJcIixcIk5TTVwiLFwiTlNNXCIsXCJSXCIsXCJOU01cIixcIk5TTVwiLFwiUlwiLFwiTlNNXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJBTlwiLFwiQU5cIixcIkFOXCIsXCJBTlwiLFwiQU5cIixcIkFOXCIsXCJOXCIsXCJOXCIsXCJBTFwiLFwiRVRcIixcIkVUXCIsXCJBTFwiLFwiQ1NcIixcIkFMXCIsXCJOXCIsXCJOXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiQUxcIixcIkFMXCIsXCJOXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJBTlwiLFwiQU5cIixcIkFOXCIsXCJBTlwiLFwiQU5cIixcIkFOXCIsXCJBTlwiLFwiQU5cIixcIkFOXCIsXCJBTlwiLFwiRVRcIixcIkFOXCIsXCJBTlwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiTlNNXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiQU5cIixcIk5cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIkFMXCIsXCJBTFwiLFwiTlNNXCIsXCJOU01cIixcIk5cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiQUxcIixcIkFMXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJOXCIsXCJBTFwiLFwiQUxcIixcIk5TTVwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlwiLFwiTlwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiQUxcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIlJcIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIlJcIixcIlJcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIlJcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIldTXCIsXCJXU1wiLFwiV1NcIixcIldTXCIsXCJXU1wiLFwiV1NcIixcIldTXCIsXCJXU1wiLFwiV1NcIixcIldTXCIsXCJXU1wiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiTFwiLFwiUlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiV1NcIixcIkJcIixcIkxSRVwiLFwiUkxFXCIsXCJQREZcIixcIkxST1wiLFwiUkxPXCIsXCJDU1wiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJDU1wiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiV1NcIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiTlwiLFwiTFJJXCIsXCJSTElcIixcIkZTSVwiLFwiUERJXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJCTlwiLFwiQk5cIixcIkJOXCIsXCJFTlwiLFwiTFwiLFwiTlwiLFwiTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRVNcIixcIkVTXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJMXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRVNcIixcIkVTXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJMXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiUlwiLFwiTlNNXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJSXCIsXCJFU1wiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiTlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiTlwiLFwiUlwiLFwiTlwiLFwiUlwiLFwiUlwiLFwiTlwiLFwiUlwiLFwiUlwiLFwiTlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiUlwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5TTVwiLFwiTlNNXCIsXCJOU01cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIkNTXCIsXCJOXCIsXCJDU1wiLFwiTlwiLFwiTlwiLFwiQ1NcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIkVUXCIsXCJOXCIsXCJOXCIsXCJFU1wiLFwiRVNcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIkVUXCIsXCJFVFwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJOXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJBTFwiLFwiQUxcIixcIkFMXCIsXCJOXCIsXCJOXCIsXCJCTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiRVRcIixcIkVUXCIsXCJFVFwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiRVNcIixcIkNTXCIsXCJFU1wiLFwiQ1NcIixcIkNTXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiRU5cIixcIkVOXCIsXCJFTlwiLFwiQ1NcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIk5cIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIk5cIixcIkxcIixcIkxcIixcIkxcIixcIk5cIixcIk5cIixcIk5cIixcIkVUXCIsXCJFVFwiLFwiTlwiLFwiTlwiLFwiTlwiLFwiRVRcIixcIkVUXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCIsXCJOXCJdLG89bmV3IHQuX19iaWRpRW5naW5lX18oe2lzSW5wdXRWaXN1YWw6ITB9KTt0LkFQSS5ldmVudHMucHVzaChbXCJwb3N0UHJvY2Vzc1RleHRcIixmdW5jdGlvbih0KXt2YXIgZT10LnRleHQsbj0odC54LHQueSx0Lm9wdGlvbnN8fHt9KSxyPSh0Lm11dGV4LG4ubGFuZyxbXSk7aWYoXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKXt2YXIgaT0wO2ZvcihyPVtdLGk9MDtpPGUubGVuZ3RoO2krPTEpXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGVbaV0pP3IucHVzaChbby5kb0JpZGlSZW9yZGVyKGVbaV1bMF0pLGVbaV1bMV0sZVtpXVsyXV0pOnIucHVzaChbby5kb0JpZGlSZW9yZGVyKGVbaV0pXSk7dC50ZXh0PXJ9ZWxzZSB0LnRleHQ9by5kb0JpZGlSZW9yZGVyKGUpfV0pfShsdCksd2luZG93LnRtcD1fdCxGdC5wcm90b3R5cGUucGFyc2VIZWFkZXI9ZnVuY3Rpb24oKXtpZih0aGlzLmZpbGVTaXplPXRoaXMuZGF0YXYuZ2V0VWludDMyKHRoaXMucG9zLCEwKSx0aGlzLnBvcys9NCx0aGlzLnJlc2VydmVkPXRoaXMuZGF0YXYuZ2V0VWludDMyKHRoaXMucG9zLCEwKSx0aGlzLnBvcys9NCx0aGlzLm9mZnNldD10aGlzLmRhdGF2LmdldFVpbnQzMih0aGlzLnBvcywhMCksdGhpcy5wb3MrPTQsdGhpcy5oZWFkZXJTaXplPXRoaXMuZGF0YXYuZ2V0VWludDMyKHRoaXMucG9zLCEwKSx0aGlzLnBvcys9NCx0aGlzLndpZHRoPXRoaXMuZGF0YXYuZ2V0VWludDMyKHRoaXMucG9zLCEwKSx0aGlzLnBvcys9NCx0aGlzLmhlaWdodD10aGlzLmRhdGF2LmdldEludDMyKHRoaXMucG9zLCEwKSx0aGlzLnBvcys9NCx0aGlzLnBsYW5lcz10aGlzLmRhdGF2LmdldFVpbnQxNih0aGlzLnBvcywhMCksdGhpcy5wb3MrPTIsdGhpcy5iaXRQUD10aGlzLmRhdGF2LmdldFVpbnQxNih0aGlzLnBvcywhMCksdGhpcy5wb3MrPTIsdGhpcy5jb21wcmVzcz10aGlzLmRhdGF2LmdldFVpbnQzMih0aGlzLnBvcywhMCksdGhpcy5wb3MrPTQsdGhpcy5yYXdTaXplPXRoaXMuZGF0YXYuZ2V0VWludDMyKHRoaXMucG9zLCEwKSx0aGlzLnBvcys9NCx0aGlzLmhyPXRoaXMuZGF0YXYuZ2V0VWludDMyKHRoaXMucG9zLCEwKSx0aGlzLnBvcys9NCx0aGlzLnZyPXRoaXMuZGF0YXYuZ2V0VWludDMyKHRoaXMucG9zLCEwKSx0aGlzLnBvcys9NCx0aGlzLmNvbG9ycz10aGlzLmRhdGF2LmdldFVpbnQzMih0aGlzLnBvcywhMCksdGhpcy5wb3MrPTQsdGhpcy5pbXBvcnRhbnRDb2xvcnM9dGhpcy5kYXRhdi5nZXRVaW50MzIodGhpcy5wb3MsITApLHRoaXMucG9zKz00LDE2PT09dGhpcy5iaXRQUCYmdGhpcy5pc193aXRoX2FscGhhJiYodGhpcy5iaXRQUD0xNSksdGhpcy5iaXRQUDwxNSl7dmFyIHQ9MD09PXRoaXMuY29sb3JzPzE8PHRoaXMuYml0UFA6dGhpcy5jb2xvcnM7dGhpcy5wYWxldHRlPW5ldyBBcnJheSh0KTtmb3IodmFyIGU9MDtlPHQ7ZSsrKXt2YXIgbj10aGlzLmRhdGF2LmdldFVpbnQ4KHRoaXMucG9zKyssITApLHI9dGhpcy5kYXRhdi5nZXRVaW50OCh0aGlzLnBvcysrLCEwKSxpPXRoaXMuZGF0YXYuZ2V0VWludDgodGhpcy5wb3MrKywhMCksbz10aGlzLmRhdGF2LmdldFVpbnQ4KHRoaXMucG9zKyssITApO3RoaXMucGFsZXR0ZVtlXT17cmVkOmksZ3JlZW46cixibHVlOm4scXVhZDpvfX19dGhpcy5oZWlnaHQ8MCYmKHRoaXMuaGVpZ2h0Kj0tMSx0aGlzLmJvdHRvbV91cD0hMSl9LEZ0LnByb3RvdHlwZS5wYXJzZUJHUj1mdW5jdGlvbigpe3RoaXMucG9zPXRoaXMub2Zmc2V0O3RyeXt2YXIgdD1cImJpdFwiK3RoaXMuYml0UFAsZT10aGlzLndpZHRoKnRoaXMuaGVpZ2h0KjQ7dGhpcy5kYXRhPW5ldyBVaW50OEFycmF5KGUpLHRoaXNbdF0oKX1jYXRjaCh0KXtjb25zb2xlLmxvZyhcImJpdCBkZWNvZGUgZXJyb3I6XCIrdCl9fSxGdC5wcm90b3R5cGUuYml0MT1mdW5jdGlvbigpe3ZhciB0PU1hdGguY2VpbCh0aGlzLndpZHRoLzgpLGU9dCU0LG49MDw9dGhpcy5oZWlnaHQ/dGhpcy5oZWlnaHQtMTotdGhpcy5oZWlnaHQ7Zm9yKG49dGhpcy5oZWlnaHQtMTswPD1uO24tLSl7Zm9yKHZhciByPXRoaXMuYm90dG9tX3VwP246dGhpcy5oZWlnaHQtMS1uLGk9MDtpPHQ7aSsrKWZvcih2YXIgbz10aGlzLmRhdGF2LmdldFVpbnQ4KHRoaXMucG9zKyssITApLGE9cip0aGlzLndpZHRoKjQrOCppKjQscz0wO3M8OCYmOCppK3M8dGhpcy53aWR0aDtzKyspe3ZhciBsPXRoaXMucGFsZXR0ZVtvPj43LXMmMV07dGhpcy5kYXRhW2ErNCpzXT1sLmJsdWUsdGhpcy5kYXRhW2ErNCpzKzFdPWwuZ3JlZW4sdGhpcy5kYXRhW2ErNCpzKzJdPWwucmVkLHRoaXMuZGF0YVthKzQqcyszXT0yNTV9MCE9ZSYmKHRoaXMucG9zKz00LWUpfX0sRnQucHJvdG90eXBlLmJpdDQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9TWF0aC5jZWlsKHRoaXMud2lkdGgvMiksZT10JTQsbj10aGlzLmhlaWdodC0xOzA8PW47bi0tKXtmb3IodmFyIHI9dGhpcy5ib3R0b21fdXA/bjp0aGlzLmhlaWdodC0xLW4saT0wO2k8dDtpKyspe3ZhciBvPXRoaXMuZGF0YXYuZ2V0VWludDgodGhpcy5wb3MrKywhMCksYT1yKnRoaXMud2lkdGgqNCsyKmkqNCxzPW8+PjQsbD0xNSZvLGg9dGhpcy5wYWxldHRlW3NdO2lmKHRoaXMuZGF0YVthXT1oLmJsdWUsdGhpcy5kYXRhW2ErMV09aC5ncmVlbix0aGlzLmRhdGFbYSsyXT1oLnJlZCx0aGlzLmRhdGFbYSszXT0yNTUsMippKzE+PXRoaXMud2lkdGgpYnJlYWs7aD10aGlzLnBhbGV0dGVbbF0sdGhpcy5kYXRhW2ErNF09aC5ibHVlLHRoaXMuZGF0YVthKzQrMV09aC5ncmVlbix0aGlzLmRhdGFbYSs0KzJdPWgucmVkLHRoaXMuZGF0YVthKzQrM109MjU1fTAhPWUmJih0aGlzLnBvcys9NC1lKX19LEZ0LnByb3RvdHlwZS5iaXQ4PWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMud2lkdGglNCxlPXRoaXMuaGVpZ2h0LTE7MDw9ZTtlLS0pe2Zvcih2YXIgbj10aGlzLmJvdHRvbV91cD9lOnRoaXMuaGVpZ2h0LTEtZSxyPTA7cjx0aGlzLndpZHRoO3IrKyl7dmFyIGk9dGhpcy5kYXRhdi5nZXRVaW50OCh0aGlzLnBvcysrLCEwKSxvPW4qdGhpcy53aWR0aCo0KzQqcjtpZihpPHRoaXMucGFsZXR0ZS5sZW5ndGgpe3ZhciBhPXRoaXMucGFsZXR0ZVtpXTt0aGlzLmRhdGFbb109YS5yZWQsdGhpcy5kYXRhW28rMV09YS5ncmVlbix0aGlzLmRhdGFbbysyXT1hLmJsdWUsdGhpcy5kYXRhW28rM109MjU1fWVsc2UgdGhpcy5kYXRhW29dPTI1NSx0aGlzLmRhdGFbbysxXT0yNTUsdGhpcy5kYXRhW28rMl09MjU1LHRoaXMuZGF0YVtvKzNdPTI1NX0wIT10JiYodGhpcy5wb3MrPTQtdCl9fSxGdC5wcm90b3R5cGUuYml0MTU9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy53aWR0aCUzLGU9cGFyc2VJbnQoXCIxMTExMVwiLDIpLG49dGhpcy5oZWlnaHQtMTswPD1uO24tLSl7Zm9yKHZhciByPXRoaXMuYm90dG9tX3VwP246dGhpcy5oZWlnaHQtMS1uLGk9MDtpPHRoaXMud2lkdGg7aSsrKXt2YXIgbz10aGlzLmRhdGF2LmdldFVpbnQxNih0aGlzLnBvcywhMCk7dGhpcy5wb3MrPTI7dmFyIGE9KG8mZSkvZSoyNTV8MCxzPShvPj41JmUpL2UqMjU1fDAsbD0obz4+MTAmZSkvZSoyNTV8MCxoPW8+PjE1PzI1NTowLHU9cip0aGlzLndpZHRoKjQrNCppO3RoaXMuZGF0YVt1XT1sLHRoaXMuZGF0YVt1KzFdPXMsdGhpcy5kYXRhW3UrMl09YSx0aGlzLmRhdGFbdSszXT1ofXRoaXMucG9zKz10fX0sRnQucHJvdG90eXBlLmJpdDE2PWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMud2lkdGglMyxlPXBhcnNlSW50KFwiMTExMTFcIiwyKSxuPXBhcnNlSW50KFwiMTExMTExXCIsMikscj10aGlzLmhlaWdodC0xOzA8PXI7ci0tKXtmb3IodmFyIGk9dGhpcy5ib3R0b21fdXA/cjp0aGlzLmhlaWdodC0xLXIsbz0wO288dGhpcy53aWR0aDtvKyspe3ZhciBhPXRoaXMuZGF0YXYuZ2V0VWludDE2KHRoaXMucG9zLCEwKTt0aGlzLnBvcys9Mjt2YXIgcz0oYSZlKS9lKjI1NXwwLGw9KGE+PjUmbikvbioyNTV8MCxoPShhPj4xMSkvZSoyNTV8MCx1PWkqdGhpcy53aWR0aCo0KzQqbzt0aGlzLmRhdGFbdV09aCx0aGlzLmRhdGFbdSsxXT1sLHRoaXMuZGF0YVt1KzJdPXMsdGhpcy5kYXRhW3UrM109MjU1fXRoaXMucG9zKz10fX0sRnQucHJvdG90eXBlLmJpdDI0PWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuaGVpZ2h0LTE7MDw9dDt0LS0pe2Zvcih2YXIgZT10aGlzLmJvdHRvbV91cD90OnRoaXMuaGVpZ2h0LTEtdCxuPTA7bjx0aGlzLndpZHRoO24rKyl7dmFyIHI9dGhpcy5kYXRhdi5nZXRVaW50OCh0aGlzLnBvcysrLCEwKSxpPXRoaXMuZGF0YXYuZ2V0VWludDgodGhpcy5wb3MrKywhMCksbz10aGlzLmRhdGF2LmdldFVpbnQ4KHRoaXMucG9zKyssITApLGE9ZSp0aGlzLndpZHRoKjQrNCpuO3RoaXMuZGF0YVthXT1vLHRoaXMuZGF0YVthKzFdPWksdGhpcy5kYXRhW2ErMl09cix0aGlzLmRhdGFbYSszXT0yNTV9dGhpcy5wb3MrPXRoaXMud2lkdGglNH19LEZ0LnByb3RvdHlwZS5iaXQzMj1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmhlaWdodC0xOzA8PXQ7dC0tKWZvcih2YXIgZT10aGlzLmJvdHRvbV91cD90OnRoaXMuaGVpZ2h0LTEtdCxuPTA7bjx0aGlzLndpZHRoO24rKyl7dmFyIHI9dGhpcy5kYXRhdi5nZXRVaW50OCh0aGlzLnBvcysrLCEwKSxpPXRoaXMuZGF0YXYuZ2V0VWludDgodGhpcy5wb3MrKywhMCksbz10aGlzLmRhdGF2LmdldFVpbnQ4KHRoaXMucG9zKyssITApLGE9dGhpcy5kYXRhdi5nZXRVaW50OCh0aGlzLnBvcysrLCEwKSxzPWUqdGhpcy53aWR0aCo0KzQqbjt0aGlzLmRhdGFbc109byx0aGlzLmRhdGFbcysxXT1pLHRoaXMuZGF0YVtzKzJdPXIsdGhpcy5kYXRhW3MrM109YX19LEZ0LnByb3RvdHlwZS5nZXREYXRhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0YX0sd2luZG93LnRtcD1GdCxcbi8qXG4gICBDb3B5cmlnaHQgKGMpIDIwMTMgR2lsZGFzIExvcm1lYXUuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG5cbiAgIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dFxuICAgbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6XG5cbiAgIDEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSxcbiAgIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXG5cbiAgIDIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IFxuICAgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIFxuICAgdGhlIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uXG5cbiAgIDMuIFRoZSBuYW1lcyBvZiB0aGUgYXV0aG9ycyBtYXkgbm90IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzXG4gICBkZXJpdmVkIGZyb20gdGhpcyBzb2Z0d2FyZSB3aXRob3V0IHNwZWNpZmljIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbi5cblxuICAgVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBgYEFTIElTJycgQU5EIEFOWSBFWFBSRVNTRUQgT1IgSU1QTElFRCBXQVJSQU5USUVTLFxuICAgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORFxuICAgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIEpDUkFGVCxcbiAgIElOQy4gT1IgQU5ZIENPTlRSSUJVVE9SUyBUTyBUSElTIFNPRlRXQVJFIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gICBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UXG4gICBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSxcbiAgIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0ZcbiAgIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HXG4gICBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsXG4gICBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLlxuICAgKi9cbmZ1bmN0aW9uKHQpe3ZhciBkPTE1LGc9NTczLGU9WzAsMSwyLDMsNCw0LDUsNSw2LDYsNiw2LDcsNyw3LDcsOCw4LDgsOCw4LDgsOCw4LDksOSw5LDksOSw5LDksOSwxMCwxMCwxMCwxMCwxMCwxMCwxMCwxMCwxMCwxMCwxMCwxMCwxMCwxMCwxMCwxMCwxMSwxMSwxMSwxMSwxMSwxMSwxMSwxMSwxMSwxMSwxMSwxMSwxMSwxMSwxMSwxMSwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMiwxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxMywxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNCwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwxNSwwLDAsMTYsMTcsMTgsMTgsMTksMTksMjAsMjAsMjAsMjAsMjEsMjEsMjEsMjEsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjgsMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjksMjldO2Z1bmN0aW9uIGN0KCl7dmFyIHA9dGhpcztmdW5jdGlvbiBsKHQsZSl7Zm9yKHZhciBuPTA7bnw9MSZ0LHQ+Pj49MSxuPDw9MSwwPC0tZTspO3JldHVybiBuPj4+MX1wLmJ1aWxkX3RyZWU9ZnVuY3Rpb24odCl7dmFyIGUsbixyLGk9cC5keW5fdHJlZSxvPXAuc3RhdF9kZXNjLnN0YXRpY190cmVlLGE9cC5zdGF0X2Rlc2MuZWxlbXMscz0tMTtmb3IodC5oZWFwX2xlbj0wLHQuaGVhcF9tYXg9ZyxlPTA7ZTxhO2UrKykwIT09aVsyKmVdPyh0LmhlYXBbKyt0LmhlYXBfbGVuXT1zPWUsdC5kZXB0aFtlXT0wKTppWzIqZSsxXT0wO2Zvcig7dC5oZWFwX2xlbjwyOylpWzIqKHI9dC5oZWFwWysrdC5oZWFwX2xlbl09czwyPysrczowKV09MSx0LmRlcHRoW3JdPTAsdC5vcHRfbGVuLS0sbyYmKHQuc3RhdGljX2xlbi09b1syKnIrMV0pO2ZvcihwLm1heF9jb2RlPXMsZT1NYXRoLmZsb29yKHQuaGVhcF9sZW4vMik7MTw9ZTtlLS0pdC5wcWRvd25oZWFwKGksZSk7Zm9yKHI9YTtlPXQuaGVhcFsxXSx0LmhlYXBbMV09dC5oZWFwW3QuaGVhcF9sZW4tLV0sdC5wcWRvd25oZWFwKGksMSksbj10LmhlYXBbMV0sdC5oZWFwWy0tdC5oZWFwX21heF09ZSx0LmhlYXBbLS10LmhlYXBfbWF4XT1uLGlbMipyXT1pWzIqZV0raVsyKm5dLHQuZGVwdGhbcl09TWF0aC5tYXgodC5kZXB0aFtlXSx0LmRlcHRoW25dKSsxLGlbMiplKzFdPWlbMipuKzFdPXIsdC5oZWFwWzFdPXIrKyx0LnBxZG93bmhlYXAoaSwxKSwyPD10LmhlYXBfbGVuOyk7dC5oZWFwWy0tdC5oZWFwX21heF09dC5oZWFwWzFdLGZ1bmN0aW9uKHQpe3ZhciBlLG4scixpLG8sYSxzPXAuZHluX3RyZWUsbD1wLnN0YXRfZGVzYy5zdGF0aWNfdHJlZSxoPXAuc3RhdF9kZXNjLmV4dHJhX2JpdHMsdT1wLnN0YXRfZGVzYy5leHRyYV9iYXNlLGM9cC5zdGF0X2Rlc2MubWF4X2xlbmd0aCxmPTA7Zm9yKGk9MDtpPD1kO2krKyl0LmJsX2NvdW50W2ldPTA7Zm9yKHNbMip0LmhlYXBbdC5oZWFwX21heF0rMV09MCxlPXQuaGVhcF9tYXgrMTtlPGc7ZSsrKWM8KGk9c1syKnNbMioobj10LmhlYXBbZV0pKzFdKzFdKzEpJiYoaT1jLGYrKyksc1syKm4rMV09aSxuPnAubWF4X2NvZGV8fCh0LmJsX2NvdW50W2ldKyssbz0wLHU8PW4mJihvPWhbbi11XSksYT1zWzIqbl0sdC5vcHRfbGVuKz1hKihpK28pLGwmJih0LnN0YXRpY19sZW4rPWEqKGxbMipuKzFdK28pKSk7aWYoMCE9PWYpe2Rve2ZvcihpPWMtMTswPT09dC5ibF9jb3VudFtpXTspaS0tO3QuYmxfY291bnRbaV0tLSx0LmJsX2NvdW50W2krMV0rPTIsdC5ibF9jb3VudFtjXS0tLGYtPTJ9d2hpbGUoMDxmKTtmb3IoaT1jOzAhPT1pO2ktLSlmb3Iobj10LmJsX2NvdW50W2ldOzAhPT1uOykocj10LmhlYXBbLS1lXSk+cC5tYXhfY29kZXx8KHNbMipyKzFdIT1pJiYodC5vcHRfbGVuKz0oaS1zWzIqcisxXSkqc1syKnJdLHNbMipyKzFdPWkpLG4tLSl9fSh0KSxmdW5jdGlvbih0LGUsbil7dmFyIHIsaSxvLGE9W10scz0wO2ZvcihyPTE7cjw9ZDtyKyspYVtyXT1zPXMrbltyLTFdPDwxO2ZvcihpPTA7aTw9ZTtpKyspMCE9PShvPXRbMippKzFdKSYmKHRbMippXT1sKGFbb10rKyxvKSl9KGkscC5tYXhfY29kZSx0LmJsX2NvdW50KX19ZnVuY3Rpb24gZnQodCxlLG4scixpKXt0aGlzLnN0YXRpY190cmVlPXQsdGhpcy5leHRyYV9iaXRzPWUsdGhpcy5leHRyYV9iYXNlPW4sdGhpcy5lbGVtcz1yLHRoaXMubWF4X2xlbmd0aD1pfWN0Ll9sZW5ndGhfY29kZT1bMCwxLDIsMyw0LDUsNiw3LDgsOCw5LDksMTAsMTAsMTEsMTEsMTIsMTIsMTIsMTIsMTMsMTMsMTMsMTMsMTQsMTQsMTQsMTQsMTUsMTUsMTUsMTUsMTYsMTYsMTYsMTYsMTYsMTYsMTYsMTYsMTcsMTcsMTcsMTcsMTcsMTcsMTcsMTcsMTgsMTgsMTgsMTgsMTgsMTgsMTgsMTgsMTksMTksMTksMTksMTksMTksMTksMTksMjAsMjAsMjAsMjAsMjAsMjAsMjAsMjAsMjAsMjAsMjAsMjAsMjAsMjAsMjAsMjAsMjEsMjEsMjEsMjEsMjEsMjEsMjEsMjEsMjEsMjEsMjEsMjEsMjEsMjEsMjEsMjEsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjIsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjMsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjQsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjUsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjYsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjcsMjhdLGN0LmJhc2VfbGVuZ3RoPVswLDEsMiwzLDQsNSw2LDcsOCwxMCwxMiwxNCwxNiwyMCwyNCwyOCwzMiw0MCw0OCw1Niw2NCw4MCw5NiwxMTIsMTI4LDE2MCwxOTIsMjI0LDBdLGN0LmJhc2VfZGlzdD1bMCwxLDIsMyw0LDYsOCwxMiwxNiwyNCwzMiw0OCw2NCw5NiwxMjgsMTkyLDI1NiwzODQsNTEyLDc2OCwxMDI0LDE1MzYsMjA0OCwzMDcyLDQwOTYsNjE0NCw4MTkyLDEyMjg4LDE2Mzg0LDI0NTc2XSxjdC5kX2NvZGU9ZnVuY3Rpb24odCl7cmV0dXJuIHQ8MjU2P2VbdF06ZVsyNTYrKHQ+Pj43KV19LGN0LmV4dHJhX2xiaXRzPVswLDAsMCwwLDAsMCwwLDAsMSwxLDEsMSwyLDIsMiwyLDMsMywzLDMsNCw0LDQsNCw1LDUsNSw1LDBdLGN0LmV4dHJhX2RiaXRzPVswLDAsMCwwLDEsMSwyLDIsMywzLDQsNCw1LDUsNiw2LDcsNyw4LDgsOSw5LDEwLDEwLDExLDExLDEyLDEyLDEzLDEzXSxjdC5leHRyYV9ibGJpdHM9WzAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMiwzLDddLGN0LmJsX29yZGVyPVsxNiwxNywxOCwwLDgsNyw5LDYsMTAsNSwxMSw0LDEyLDMsMTMsMiwxNCwxLDE1XSxmdC5zdGF0aWNfbHRyZWU9WzEyLDgsMTQwLDgsNzYsOCwyMDQsOCw0NCw4LDE3Miw4LDEwOCw4LDIzNiw4LDI4LDgsMTU2LDgsOTIsOCwyMjAsOCw2MCw4LDE4OCw4LDEyNCw4LDI1Miw4LDIsOCwxMzAsOCw2Niw4LDE5NCw4LDM0LDgsMTYyLDgsOTgsOCwyMjYsOCwxOCw4LDE0Niw4LDgyLDgsMjEwLDgsNTAsOCwxNzgsOCwxMTQsOCwyNDIsOCwxMCw4LDEzOCw4LDc0LDgsMjAyLDgsNDIsOCwxNzAsOCwxMDYsOCwyMzQsOCwyNiw4LDE1NCw4LDkwLDgsMjE4LDgsNTgsOCwxODYsOCwxMjIsOCwyNTAsOCw2LDgsMTM0LDgsNzAsOCwxOTgsOCwzOCw4LDE2Niw4LDEwMiw4LDIzMCw4LDIyLDgsMTUwLDgsODYsOCwyMTQsOCw1NCw4LDE4Miw4LDExOCw4LDI0Niw4LDE0LDgsMTQyLDgsNzgsOCwyMDYsOCw0Niw4LDE3NCw4LDExMCw4LDIzOCw4LDMwLDgsMTU4LDgsOTQsOCwyMjIsOCw2Miw4LDE5MCw4LDEyNiw4LDI1NCw4LDEsOCwxMjksOCw2NSw4LDE5Myw4LDMzLDgsMTYxLDgsOTcsOCwyMjUsOCwxNyw4LDE0NSw4LDgxLDgsMjA5LDgsNDksOCwxNzcsOCwxMTMsOCwyNDEsOCw5LDgsMTM3LDgsNzMsOCwyMDEsOCw0MSw4LDE2OSw4LDEwNSw4LDIzMyw4LDI1LDgsMTUzLDgsODksOCwyMTcsOCw1Nyw4LDE4NSw4LDEyMSw4LDI0OSw4LDUsOCwxMzMsOCw2OSw4LDE5Nyw4LDM3LDgsMTY1LDgsMTAxLDgsMjI5LDgsMjEsOCwxNDksOCw4NSw4LDIxMyw4LDUzLDgsMTgxLDgsMTE3LDgsMjQ1LDgsMTMsOCwxNDEsOCw3Nyw4LDIwNSw4LDQ1LDgsMTczLDgsMTA5LDgsMjM3LDgsMjksOCwxNTcsOCw5Myw4LDIyMSw4LDYxLDgsMTg5LDgsMTI1LDgsMjUzLDgsMTksOSwyNzUsOSwxNDcsOSw0MDMsOSw4Myw5LDMzOSw5LDIxMSw5LDQ2Nyw5LDUxLDksMzA3LDksMTc5LDksNDM1LDksMTE1LDksMzcxLDksMjQzLDksNDk5LDksMTEsOSwyNjcsOSwxMzksOSwzOTUsOSw3NSw5LDMzMSw5LDIwMyw5LDQ1OSw5LDQzLDksMjk5LDksMTcxLDksNDI3LDksMTA3LDksMzYzLDksMjM1LDksNDkxLDksMjcsOSwyODMsOSwxNTUsOSw0MTEsOSw5MSw5LDM0Nyw5LDIxOSw5LDQ3NSw5LDU5LDksMzE1LDksMTg3LDksNDQzLDksMTIzLDksMzc5LDksMjUxLDksNTA3LDksNyw5LDI2Myw5LDEzNSw5LDM5MSw5LDcxLDksMzI3LDksMTk5LDksNDU1LDksMzksOSwyOTUsOSwxNjcsOSw0MjMsOSwxMDMsOSwzNTksOSwyMzEsOSw0ODcsOSwyMyw5LDI3OSw5LDE1MSw5LDQwNyw5LDg3LDksMzQzLDksMjE1LDksNDcxLDksNTUsOSwzMTEsOSwxODMsOSw0MzksOSwxMTksOSwzNzUsOSwyNDcsOSw1MDMsOSwxNSw5LDI3MSw5LDE0Myw5LDM5OSw5LDc5LDksMzM1LDksMjA3LDksNDYzLDksNDcsOSwzMDMsOSwxNzUsOSw0MzEsOSwxMTEsOSwzNjcsOSwyMzksOSw0OTUsOSwzMSw5LDI4Nyw5LDE1OSw5LDQxNSw5LDk1LDksMzUxLDksMjIzLDksNDc5LDksNjMsOSwzMTksOSwxOTEsOSw0NDcsOSwxMjcsOSwzODMsOSwyNTUsOSw1MTEsOSwwLDcsNjQsNywzMiw3LDk2LDcsMTYsNyw4MCw3LDQ4LDcsMTEyLDcsOCw3LDcyLDcsNDAsNywxMDQsNywyNCw3LDg4LDcsNTYsNywxMjAsNyw0LDcsNjgsNywzNiw3LDEwMCw3LDIwLDcsODQsNyw1Miw3LDExNiw3LDMsOCwxMzEsOCw2Nyw4LDE5NSw4LDM1LDgsMTYzLDgsOTksOCwyMjcsOF0sZnQuc3RhdGljX2R0cmVlPVswLDUsMTYsNSw4LDUsMjQsNSw0LDUsMjAsNSwxMiw1LDI4LDUsMiw1LDE4LDUsMTAsNSwyNiw1LDYsNSwyMiw1LDE0LDUsMzAsNSwxLDUsMTcsNSw5LDUsMjUsNSw1LDUsMjEsNSwxMyw1LDI5LDUsMyw1LDE5LDUsMTEsNSwyNyw1LDcsNSwyMyw1XSxmdC5zdGF0aWNfbF9kZXNjPW5ldyBmdChmdC5zdGF0aWNfbHRyZWUsY3QuZXh0cmFfbGJpdHMsMjU3LDI4NixkKSxmdC5zdGF0aWNfZF9kZXNjPW5ldyBmdChmdC5zdGF0aWNfZHRyZWUsY3QuZXh0cmFfZGJpdHMsMCwzMCxkKSxmdC5zdGF0aWNfYmxfZGVzYz1uZXcgZnQobnVsbCxjdC5leHRyYV9ibGJpdHMsMCwxOSw3KTtmdW5jdGlvbiBuKHQsZSxuLHIsaSl7dGhpcy5nb29kX2xlbmd0aD10LHRoaXMubWF4X2xhenk9ZSx0aGlzLm5pY2VfbGVuZ3RoPW4sdGhpcy5tYXhfY2hhaW49cix0aGlzLmZ1bmM9aX12YXIgcHQ9W25ldyBuKDAsMCwwLDAsMCksbmV3IG4oNCw0LDgsNCwxKSxuZXcgbig0LDUsMTYsOCwxKSxuZXcgbig0LDYsMzIsMzIsMSksbmV3IG4oNCw0LDE2LDE2LDIpLG5ldyBuKDgsMTYsMzIsMzIsMiksbmV3IG4oOCwxNiwxMjgsMTI4LDIpLG5ldyBuKDgsMzIsMTI4LDI1NiwyKSxuZXcgbigzMiwxMjgsMjU4LDEwMjQsMiksbmV3IG4oMzIsMjU4LDI1OCw0MDk2LDIpXSxkdD1bXCJuZWVkIGRpY3Rpb25hcnlcIixcInN0cmVhbSBlbmRcIixcIlwiLFwiXCIsXCJzdHJlYW0gZXJyb3JcIixcImRhdGEgZXJyb3JcIixcIlwiLFwiYnVmZmVyIGVycm9yXCIsXCJcIixcIlwiXTtmdW5jdGlvbiBndCh0LGUsbixyKXt2YXIgaT10WzIqZV0sbz10WzIqbl07cmV0dXJuIGk8b3x8aT09byYmcltlXTw9cltuXX1mdW5jdGlvbiByKCl7dmFyIGwsaCx1LGMsZixwLGQsZyxpLG0seSx2LHcsYSxiLHgsTixMLEEsUyxfLEYsUCxrLEksQyxCLGosRSxNLHMsTyxxLFQsUixELFUsbyx6LEgsVyxWPXRoaXMsRz1uZXcgY3QsWT1uZXcgY3QsSj1uZXcgY3Q7ZnVuY3Rpb24gWCgpe3ZhciB0O2Zvcih0PTA7dDwyODY7dCsrKXNbMip0XT0wO2Zvcih0PTA7dDwzMDt0KyspT1syKnRdPTA7Zm9yKHQ9MDt0PDE5O3QrKylxWzIqdF09MDtzWzUxMl09MSxWLm9wdF9sZW49Vi5zdGF0aWNfbGVuPTAsRD1vPTB9ZnVuY3Rpb24gSyh0LGUpe3ZhciBuLHIsaT0tMSxvPXRbMV0sYT0wLHM9NyxsPTQ7Zm9yKDA9PT1vJiYocz0xMzgsbD0zKSx0WzIqKGUrMSkrMV09NjU1MzUsbj0wO248PWU7bisrKXI9byxvPXRbMioobisxKSsxXSwrK2E8cyYmcj09b3x8KGE8bD9xWzIqcl0rPWE6MCE9PXI/KHIhPWkmJnFbMipyXSsrLHFbMzJdKyspOmE8PTEwP3FbMzRdKys6cVszNl0rKyxpPXIsbD0oYT0wKT09PW8/KHM9MTM4LDMpOnI9PW8/KHM9NiwzKToocz03LDQpKX1mdW5jdGlvbiBaKHQpe1YucGVuZGluZ19idWZbVi5wZW5kaW5nKytdPXR9ZnVuY3Rpb24gUSh0KXtaKDI1NSZ0KSxaKHQ+Pj44JjI1NSl9ZnVuY3Rpb24gJCh0LGUpe3ZhciBuLHI9ZTsxNi1yPFc/KFEoSHw9KG49dCk8PFcmNjU1MzUpLEg9bj4+PjE2LVcsVys9ci0xNik6KEh8PXQ8PFcmNjU1MzUsVys9cil9ZnVuY3Rpb24gdHQodCxlKXt2YXIgbj0yKnQ7JCg2NTUzNSZlW25dLDY1NTM1JmVbbisxXSl9ZnVuY3Rpb24gZXQodCxlKXt2YXIgbixyLGk9LTEsbz10WzFdLGE9MCxzPTcsbD00O2ZvcigwPT09byYmKHM9MTM4LGw9Myksbj0wO248PWU7bisrKWlmKHI9byxvPXRbMioobisxKSsxXSwhKCsrYTxzJiZyPT1vKSl7aWYoYTxsKWZvcig7dHQocixxKSwwIT0tLWE7KTtlbHNlIDAhPT1yPyhyIT1pJiYodHQocixxKSxhLS0pLHR0KDE2LHEpLCQoYS0zLDIpKTphPD0xMD8odHQoMTcscSksJChhLTMsMykpOih0dCgxOCxxKSwkKGEtMTEsNykpO2k9cixsPShhPTApPT09bz8ocz0xMzgsMyk6cj09bz8ocz02LDMpOihzPTcsNCl9fWZ1bmN0aW9uIG50KCl7MTY9PVc/KFEoSCksVz1IPTApOjg8PVcmJihaKDI1NSZIKSxIPj4+PTgsVy09OCl9ZnVuY3Rpb24gcnQodCxlKXt2YXIgbixyLGk7aWYoVi5wZW5kaW5nX2J1ZltVKzIqRF09dD4+PjgmMjU1LFYucGVuZGluZ19idWZbVSsyKkQrMV09MjU1JnQsVi5wZW5kaW5nX2J1ZltUK0RdPTI1NSZlLEQrKywwPT09dD9zWzIqZV0rKzoobysrLHQtLSxzWzIqKGN0Ll9sZW5ndGhfY29kZVtlXSsyNTYrMSldKyssT1syKmN0LmRfY29kZSh0KV0rKyksMD09KDgxOTEmRCkmJjI8Qil7Zm9yKG49OCpELHI9Xy1OLGk9MDtpPDMwO2krKyluKz1PWzIqaV0qKDUrY3QuZXh0cmFfZGJpdHNbaV0pO2lmKG4+Pj49MyxvPE1hdGguZmxvb3IoRC8yKSYmbjxNYXRoLmZsb29yKHIvMikpcmV0dXJuITB9cmV0dXJuIEQ9PVItMX1mdW5jdGlvbiBpdCh0LGUpe3ZhciBuLHIsaSxvLGE9MDtpZigwIT09RClmb3IoO249Vi5wZW5kaW5nX2J1ZltVKzIqYV08PDgmNjUyODB8MjU1JlYucGVuZGluZ19idWZbVSsyKmErMV0scj0yNTUmVi5wZW5kaW5nX2J1ZltUK2FdLGErKywwPT09bj90dChyLHQpOih0dCgoaT1jdC5fbGVuZ3RoX2NvZGVbcl0pKzI1NisxLHQpLDAhPT0obz1jdC5leHRyYV9sYml0c1tpXSkmJiQoci09Y3QuYmFzZV9sZW5ndGhbaV0sbyksdHQoaT1jdC5kX2NvZGUoLS1uKSxlKSwwIT09KG89Y3QuZXh0cmFfZGJpdHNbaV0pJiYkKG4tPWN0LmJhc2VfZGlzdFtpXSxvKSksYTxEOyk7dHQoMjU2LHQpLHo9dFs1MTNdfWZ1bmN0aW9uIG90KCl7ODxXP1EoSCk6MDxXJiZaKDI1NSZIKSxXPUg9MH1mdW5jdGlvbiBhdCh0LGUsbil7dmFyIHIsaSxvOyQoMCsobj8xOjApLDMpLHI9dCxpPWUsbz0hMCxvdCgpLHo9OCxvJiYoUShpKSxRKH5pKSksVi5wZW5kaW5nX2J1Zi5zZXQoZy5zdWJhcnJheShyLHIraSksVi5wZW5kaW5nKSxWLnBlbmRpbmcrPWl9ZnVuY3Rpb24gZSh0LGUsbil7dmFyIHIsaSxvPTA7MDxCPyhHLmJ1aWxkX3RyZWUoViksWS5idWlsZF90cmVlKFYpLG89ZnVuY3Rpb24oKXt2YXIgdDtmb3IoSyhzLEcubWF4X2NvZGUpLEsoTyxZLm1heF9jb2RlKSxKLmJ1aWxkX3RyZWUoViksdD0xODszPD10JiYwPT09cVsyKmN0LmJsX29yZGVyW3RdKzFdO3QtLSk7cmV0dXJuIFYub3B0X2xlbis9MyoodCsxKSs1KzUrNCx0fSgpLHI9Vi5vcHRfbGVuKzMrNz4+PjMsKGk9Vi5zdGF0aWNfbGVuKzMrNz4+PjMpPD1yJiYocj1pKSk6cj1pPWUrNSxlKzQ8PXImJi0xIT10P2F0KHQsZSxuKTppPT1yPygkKDIrKG4/MTowKSwzKSxpdChmdC5zdGF0aWNfbHRyZWUsZnQuc3RhdGljX2R0cmVlKSk6KCQoNCsobj8xOjApLDMpLGZ1bmN0aW9uKHQsZSxuKXt2YXIgcjtmb3IoJCh0LTI1Nyw1KSwkKGUtMSw1KSwkKG4tNCw0KSxyPTA7cjxuO3IrKykkKHFbMipjdC5ibF9vcmRlcltyXSsxXSwzKTtldChzLHQtMSksZXQoTyxlLTEpfShHLm1heF9jb2RlKzEsWS5tYXhfY29kZSsxLG8rMSksaXQocyxPKSksWCgpLG4mJm90KCl9ZnVuY3Rpb24gc3QodCl7ZSgwPD1OP046LTEsXy1OLHQpLE49XyxsLmZsdXNoX3BlbmRpbmcoKX1mdW5jdGlvbiBsdCgpe3ZhciB0LGUsbixyO2Rve2lmKDA9PT0ocj1pLVAtXykmJjA9PT1fJiYwPT09UClyPWY7ZWxzZSBpZigtMT09cilyLS07ZWxzZSBpZihmK2YtMjYyPD1fKXtmb3IoZy5zZXQoZy5zdWJhcnJheShmLGYrZiksMCksRi09ZixfLT1mLE4tPWYsbj10PXc7ZT02NTUzNSZ5Wy0tbl0seVtuXT1mPD1lP2UtZjowLDAhPS0tdDspO2ZvcihuPXQ9ZjtlPTY1NTM1Jm1bLS1uXSxtW25dPWY8PWU/ZS1mOjAsMCE9LS10Oyk7cis9Zn1pZigwPT09bC5hdmFpbF9pbilyZXR1cm47dD1sLnJlYWRfYnVmKGcsXytQLHIpLDM8PShQKz10KSYmKHY9KCh2PTI1NSZnW19dKTw8eF4yNTUmZ1tfKzFdKSZiKX13aGlsZShQPDI2MiYmMCE9PWwuYXZhaWxfaW4pfWZ1bmN0aW9uIGh0KHQpe3ZhciBlLG4scj1JLGk9XyxvPWssYT1mLTI2MjxfP18tKGYtMjYyKTowLHM9TSxsPWQsaD1fKzI1OCx1PWdbaStvLTFdLGM9Z1tpK29dO0U8PWsmJihyPj49MiksUDxzJiYocz1QKTtkb3tpZihnWyhlPXQpK29dPT1jJiZnW2Urby0xXT09dSYmZ1tlXT09Z1tpXSYmZ1srK2VdPT1nW2krMV0pe2krPTIsZSsrO2Rve313aGlsZShnWysraV09PWdbKytlXSYmZ1srK2ldPT1nWysrZV0mJmdbKytpXT09Z1srK2VdJiZnWysraV09PWdbKytlXSYmZ1srK2ldPT1nWysrZV0mJmdbKytpXT09Z1srK2VdJiZnWysraV09PWdbKytlXSYmZ1srK2ldPT1nWysrZV0mJmk8aCk7aWYobj0yNTgtKGgtaSksaT1oLTI1OCxvPG4pe2lmKEY9dCxzPD0obz1uKSlicmVhazt1PWdbaStvLTFdLGM9Z1tpK29dfX19d2hpbGUoKHQ9NjU1MzUmbVt0JmxdKT5hJiYwIT0tLXIpO3JldHVybiBvPD1QP286UH1mdW5jdGlvbiB1dCh0KXtyZXR1cm4gdC50b3RhbF9pbj10LnRvdGFsX291dD0wLHQubXNnPW51bGwsVi5wZW5kaW5nPTAsVi5wZW5kaW5nX291dD0wLGg9MTEzLGM9MCxHLmR5bl90cmVlPXMsRy5zdGF0X2Rlc2M9ZnQuc3RhdGljX2xfZGVzYyxZLmR5bl90cmVlPU8sWS5zdGF0X2Rlc2M9ZnQuc3RhdGljX2RfZGVzYyxKLmR5bl90cmVlPXEsSi5zdGF0X2Rlc2M9ZnQuc3RhdGljX2JsX2Rlc2MsVz1IPTAsej04LFgoKSxmdW5jdGlvbigpe3ZhciB0O2ZvcihpPTIqZix0PXlbdy0xXT0wO3Q8dy0xO3QrKyl5W3RdPTA7Qz1wdFtCXS5tYXhfbGF6eSxFPXB0W0JdLmdvb2RfbGVuZ3RoLE09cHRbQl0ubmljZV9sZW5ndGgsST1wdFtCXS5tYXhfY2hhaW4sTD1rPTIsdj1TPVA9Tj1fPTB9KCksMH1WLmRlcHRoPVtdLFYuYmxfY291bnQ9W10sVi5oZWFwPVtdLHM9W10sTz1bXSxxPVtdLFYucHFkb3duaGVhcD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1WLmhlYXAscj1uW2VdLGk9ZTw8MTtpPD1WLmhlYXBfbGVuJiYoaTxWLmhlYXBfbGVuJiZndCh0LG5baSsxXSxuW2ldLFYuZGVwdGgpJiZpKyssIWd0KHQscixuW2ldLFYuZGVwdGgpKTspbltlXT1uW2ldLGU9aSxpPDw9MTtuW2VdPXJ9LFYuZGVmbGF0ZUluaXQ9ZnVuY3Rpb24odCxlLG4scixpLG8pe3JldHVybiByfHwocj04KSxpfHwoaT04KSxvfHwobz0wKSx0Lm1zZz1udWxsLC0xPT1lJiYoZT02KSxpPDF8fDk8aXx8OCE9cnx8bjw5fHwxNTxufHxlPDB8fDk8ZXx8bzwwfHwyPG8/LTI6KHQuZHN0YXRlPVYsZD0oZj0xPDwocD1uKSktMSxiPSh3PTE8PChhPWkrNykpLTEseD1NYXRoLmZsb29yKChhKzMtMSkvMyksZz1uZXcgVWludDhBcnJheSgyKmYpLG09W10seT1bXSxSPTE8PGkrNixWLnBlbmRpbmdfYnVmPW5ldyBVaW50OEFycmF5KDQqUiksdT00KlIsVT1NYXRoLmZsb29yKFIvMiksVD0zKlIsQj1lLGo9byx1dCh0KSl9LFYuZGVmbGF0ZUVuZD1mdW5jdGlvbigpe3JldHVybiA0MiE9aCYmMTEzIT1oJiY2NjYhPWg/LTI6KFYucGVuZGluZ19idWY9bnVsbCxnPW09eT1udWxsLFYuZHN0YXRlPW51bGwsMTEzPT1oPy0zOjApfSxWLmRlZmxhdGVQYXJhbXM9ZnVuY3Rpb24odCxlLG4pe3ZhciByPTA7cmV0dXJuLTE9PWUmJihlPTYpLGU8MHx8OTxlfHxuPDB8fDI8bj8tMjoocHRbQl0uZnVuYyE9cHRbZV0uZnVuYyYmMCE9PXQudG90YWxfaW4mJihyPXQuZGVmbGF0ZSgxKSksQiE9ZSYmKEM9cHRbQj1lXS5tYXhfbGF6eSxFPXB0W0JdLmdvb2RfbGVuZ3RoLE09cHRbQl0ubmljZV9sZW5ndGgsST1wdFtCXS5tYXhfY2hhaW4pLGo9bixyKX0sVi5kZWZsYXRlU2V0RGljdGlvbmFyeT1mdW5jdGlvbih0LGUsbil7dmFyIHIsaT1uLG89MDtpZighZXx8NDIhPWgpcmV0dXJuLTI7aWYoaTwzKXJldHVybiAwO2ZvcihmLTI2MjxpJiYobz1uLShpPWYtMjYyKSksZy5zZXQoZS5zdWJhcnJheShvLG8raSksMCksTj1fPWksdj0oKHY9MjU1JmdbMF0pPDx4XjI1NSZnWzFdKSZiLHI9MDtyPD1pLTM7cisrKXY9KHY8PHheMjU1JmdbcisyXSkmYixtW3ImZF09eVt2XSx5W3ZdPXI7cmV0dXJuIDB9LFYuZGVmbGF0ZT1mdW5jdGlvbih0LGUpe3ZhciBuLHIsaSxvLGEscztpZig0PGV8fGU8MClyZXR1cm4tMjtpZighdC5uZXh0X291dHx8IXQubmV4dF9pbiYmMCE9PXQuYXZhaWxfaW58fDY2Nj09aCYmNCE9ZSlyZXR1cm4gdC5tc2c9ZHRbNF0sLTI7aWYoMD09PXQuYXZhaWxfb3V0KXJldHVybiB0Lm1zZz1kdFs3XSwtNTtpZihsPXQsbz1jLGM9ZSw0Mj09aCYmKHI9OCsocC04PDw0KTw8OCwzPChpPShCLTEmMjU1KT4+MSkmJihpPTMpLHJ8PWk8PDYsMCE9PV8mJihyfD0zMiksaD0xMTMsWigocz1yKz0zMS1yJTMxKT4+OCYyNTUpLFooMjU1JnMpKSwwIT09Vi5wZW5kaW5nKXtpZihsLmZsdXNoX3BlbmRpbmcoKSwwPT09bC5hdmFpbF9vdXQpcmV0dXJuIGM9LTEsMH1lbHNlIGlmKDA9PT1sLmF2YWlsX2luJiZlPD1vJiY0IT1lKXJldHVybiBsLm1zZz1kdFs3XSwtNTtpZig2NjY9PWgmJjAhPT1sLmF2YWlsX2luKXJldHVybiB0Lm1zZz1kdFs3XSwtNTtpZigwIT09bC5hdmFpbF9pbnx8MCE9PVB8fDAhPWUmJjY2NiE9aCl7c3dpdGNoKGE9LTEscHRbQl0uZnVuYyl7Y2FzZSAwOmE9ZnVuY3Rpb24odCl7dmFyIGUsbj02NTUzNTtmb3IodS01PG4mJihuPXUtNSk7Oyl7aWYoUDw9MSl7aWYobHQoKSwwPT09UCYmMD09dClyZXR1cm4gMDtpZigwPT09UClicmVha31pZihfKz1QLGU9TituLCgoUD0wKT09PV98fGU8PV8pJiYoUD1fLWUsXz1lLHN0KCExKSwwPT09bC5hdmFpbF9vdXQpKXJldHVybiAwO2lmKGYtMjYyPD1fLU4mJihzdCghMSksMD09PWwuYXZhaWxfb3V0KSlyZXR1cm4gMH1yZXR1cm4gc3QoND09dCksMD09PWwuYXZhaWxfb3V0PzQ9PXQ/MjowOjQ9PXQ/MzoxfShlKTticmVhaztjYXNlIDE6YT1mdW5jdGlvbih0KXtmb3IodmFyIGUsbj0wOzspe2lmKFA8MjYyKXtpZihsdCgpLFA8MjYyJiYwPT10KXJldHVybiAwO2lmKDA9PT1QKWJyZWFrfWlmKDM8PVAmJih2PSh2PDx4XjI1NSZnW18rMl0pJmIsbj02NTUzNSZ5W3ZdLG1bXyZkXT15W3ZdLHlbdl09XyksMCE9PW4mJihfLW4mNjU1MzUpPD1mLTI2MiYmMiE9aiYmKEw9aHQobikpLDM8PUwpaWYoZT1ydChfLUYsTC0zKSxQLT1MLEw8PUMmJjM8PVApe2ZvcihMLS07dj0odjw8eF4yNTUmZ1srK18rMl0pJmIsbj02NTUzNSZ5W3ZdLG1bXyZkXT15W3ZdLHlbdl09XywwIT0tLUw7KTtfKyt9ZWxzZSBfKz1MLEw9MCx2PSgodj0yNTUmZ1tfXSk8PHheMjU1JmdbXysxXSkmYjtlbHNlIGU9cnQoMCwyNTUmZ1tfXSksUC0tLF8rKztpZihlJiYoc3QoITEpLDA9PT1sLmF2YWlsX291dCkpcmV0dXJuIDB9cmV0dXJuIHN0KDQ9PXQpLDA9PT1sLmF2YWlsX291dD80PT10PzI6MDo0PT10PzM6MX0oZSk7YnJlYWs7Y2FzZSAyOmE9ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG4scj0wOzspe2lmKFA8MjYyKXtpZihsdCgpLFA8MjYyJiYwPT10KXJldHVybiAwO2lmKDA9PT1QKWJyZWFrfWlmKDM8PVAmJih2PSh2PDx4XjI1NSZnW18rMl0pJmIscj02NTUzNSZ5W3ZdLG1bXyZkXT15W3ZdLHlbdl09Xyksaz1MLEE9RixMPTIsMCE9PXImJms8QyYmKF8tciY2NTUzNSk8PWYtMjYyJiYoMiE9aiYmKEw9aHQocikpLEw8PTUmJigxPT1qfHwzPT1MJiY0MDk2PF8tRikmJihMPTIpKSwzPD1rJiZMPD1rKXtmb3Iobj1fK1AtMyxlPXJ0KF8tMS1BLGstMyksUC09ay0xLGstPTI7KytfPD1uJiYodj0odjw8eF4yNTUmZ1tfKzJdKSZiLHI9NjU1MzUmeVt2XSxtW18mZF09eVt2XSx5W3ZdPV8pLDAhPS0tazspO2lmKFM9MCxMPTIsXysrLGUmJihzdCghMSksMD09PWwuYXZhaWxfb3V0KSlyZXR1cm4gMH1lbHNlIGlmKDAhPT1TKXtpZigoZT1ydCgwLDI1NSZnW18tMV0pKSYmc3QoITEpLF8rKyxQLS0sMD09PWwuYXZhaWxfb3V0KXJldHVybiAwfWVsc2UgUz0xLF8rKyxQLS19cmV0dXJuIDAhPT1TJiYoZT1ydCgwLDI1NSZnW18tMV0pLFM9MCksc3QoND09dCksMD09PWwuYXZhaWxfb3V0PzQ9PXQ/MjowOjQ9PXQ/MzoxfShlKX1pZigyIT1hJiYzIT1hfHwoaD02NjYpLDA9PWF8fDI9PWEpcmV0dXJuIDA9PT1sLmF2YWlsX291dCYmKGM9LTEpLDA7aWYoMT09YSl7aWYoMT09ZSkkKDIsMyksdHQoMjU2LGZ0LnN0YXRpY19sdHJlZSksbnQoKSwxK3orMTAtVzw5JiYoJCgyLDMpLHR0KDI1NixmdC5zdGF0aWNfbHRyZWUpLG50KCkpLHo9NztlbHNlIGlmKGF0KDAsMCwhMSksMz09ZSlmb3Iobj0wO248dztuKyspeVtuXT0wO2lmKGwuZmx1c2hfcGVuZGluZygpLDA9PT1sLmF2YWlsX291dClyZXR1cm4gYz0tMSwwfX1yZXR1cm4gNCE9ZT8wOjF9fWZ1bmN0aW9uIGkoKXt0aGlzLm5leHRfaW5faW5kZXg9MCx0aGlzLm5leHRfb3V0X2luZGV4PTAsdGhpcy5hdmFpbF9pbj0wLHRoaXMudG90YWxfaW49MCx0aGlzLmF2YWlsX291dD0wLHRoaXMudG90YWxfb3V0PTB9aS5wcm90b3R5cGU9e2RlZmxhdGVJbml0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZHN0YXRlPW5ldyByLGV8fChlPWQpLHRoaXMuZHN0YXRlLmRlZmxhdGVJbml0KHRoaXMsdCxlKX0sZGVmbGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kc3RhdGU/dGhpcy5kc3RhdGUuZGVmbGF0ZSh0aGlzLHQpOi0yfSxkZWZsYXRlRW5kOmZ1bmN0aW9uKCl7aWYoIXRoaXMuZHN0YXRlKXJldHVybi0yO3ZhciB0PXRoaXMuZHN0YXRlLmRlZmxhdGVFbmQoKTtyZXR1cm4gdGhpcy5kc3RhdGU9bnVsbCx0fSxkZWZsYXRlUGFyYW1zOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZHN0YXRlP3RoaXMuZHN0YXRlLmRlZmxhdGVQYXJhbXModGhpcyx0LGUpOi0yfSxkZWZsYXRlU2V0RGljdGlvbmFyeTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmRzdGF0ZT90aGlzLmRzdGF0ZS5kZWZsYXRlU2V0RGljdGlvbmFyeSh0aGlzLHQsZSk6LTJ9LHJlYWRfYnVmOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLmF2YWlsX2luO3JldHVybiBuPHImJihyPW4pLDA9PT1yPzA6KHRoaXMuYXZhaWxfaW4tPXIsdC5zZXQodGhpcy5uZXh0X2luLnN1YmFycmF5KHRoaXMubmV4dF9pbl9pbmRleCx0aGlzLm5leHRfaW5faW5kZXgrciksZSksdGhpcy5uZXh0X2luX2luZGV4Kz1yLHRoaXMudG90YWxfaW4rPXIscil9LGZsdXNoX3BlbmRpbmc6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5kc3RhdGUucGVuZGluZztlPnQuYXZhaWxfb3V0JiYoZT10LmF2YWlsX291dCksMCE9PWUmJih0Lm5leHRfb3V0LnNldCh0LmRzdGF0ZS5wZW5kaW5nX2J1Zi5zdWJhcnJheSh0LmRzdGF0ZS5wZW5kaW5nX291dCx0LmRzdGF0ZS5wZW5kaW5nX291dCtlKSx0Lm5leHRfb3V0X2luZGV4KSx0Lm5leHRfb3V0X2luZGV4Kz1lLHQuZHN0YXRlLnBlbmRpbmdfb3V0Kz1lLHQudG90YWxfb3V0Kz1lLHQuYXZhaWxfb3V0LT1lLHQuZHN0YXRlLnBlbmRpbmctPWUsMD09PXQuZHN0YXRlLnBlbmRpbmcmJih0LmRzdGF0ZS5wZW5kaW5nX291dD0wKSl9fTt2YXIgbz10LnppcHx8dDtvLkRlZmxhdGVyPW8uX2p6bGliX0RlZmxhdGVyPWZ1bmN0aW9uKHQpe3ZhciBzPW5ldyBpLGw9bmV3IFVpbnQ4QXJyYXkoNTEyKSxlPXQ/dC5sZXZlbDotMTt2b2lkIDA9PT1lJiYoZT0tMSkscy5kZWZsYXRlSW5pdChlKSxzLm5leHRfb3V0PWwsdGhpcy5hcHBlbmQ9ZnVuY3Rpb24odCxlKXt2YXIgbixyPVtdLGk9MCxvPTAsYT0wO2lmKHQubGVuZ3RoKXtzLm5leHRfaW5faW5kZXg9MCxzLm5leHRfaW49dCxzLmF2YWlsX2luPXQubGVuZ3RoO2Rve2lmKHMubmV4dF9vdXRfaW5kZXg9MCxzLmF2YWlsX291dD01MTIsMCE9cy5kZWZsYXRlKDApKXRocm93IG5ldyBFcnJvcihcImRlZmxhdGluZzogXCIrcy5tc2cpO3MubmV4dF9vdXRfaW5kZXgmJig1MTI9PXMubmV4dF9vdXRfaW5kZXg/ci5wdXNoKG5ldyBVaW50OEFycmF5KGwpKTpyLnB1c2gobmV3IFVpbnQ4QXJyYXkobC5zdWJhcnJheSgwLHMubmV4dF9vdXRfaW5kZXgpKSkpLGErPXMubmV4dF9vdXRfaW5kZXgsZSYmMDxzLm5leHRfaW5faW5kZXgmJnMubmV4dF9pbl9pbmRleCE9aSYmKGUocy5uZXh0X2luX2luZGV4KSxpPXMubmV4dF9pbl9pbmRleCl9d2hpbGUoMDxzLmF2YWlsX2lufHwwPT09cy5hdmFpbF9vdXQpO3JldHVybiBuPW5ldyBVaW50OEFycmF5KGEpLHIuZm9yRWFjaChmdW5jdGlvbih0KXtuLnNldCh0LG8pLG8rPXQubGVuZ3RofSksbn19LHRoaXMuZmx1c2g9ZnVuY3Rpb24oKXt2YXIgdCxlLG49W10scj0wLGk9MDtkb3tpZihzLm5leHRfb3V0X2luZGV4PTAscy5hdmFpbF9vdXQ9NTEyLDEhPSh0PXMuZGVmbGF0ZSg0KSkmJjAhPXQpdGhyb3cgbmV3IEVycm9yKFwiZGVmbGF0aW5nOiBcIitzLm1zZyk7MDw1MTItcy5hdmFpbF9vdXQmJm4ucHVzaChuZXcgVWludDhBcnJheShsLnN1YmFycmF5KDAscy5uZXh0X291dF9pbmRleCkpKSxpKz1zLm5leHRfb3V0X2luZGV4fXdoaWxlKDA8cy5hdmFpbF9pbnx8MD09PXMuYXZhaWxfb3V0KTtyZXR1cm4gcy5kZWZsYXRlRW5kKCksZT1uZXcgVWludDhBcnJheShpKSxuLmZvckVhY2goZnVuY3Rpb24odCl7ZS5zZXQodCxyKSxyKz10Lmxlbmd0aH0pLGV9fX0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGZ8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbCYmZ2xvYmFsfHxGdW5jdGlvbigncmV0dXJuIHR5cGVvZiB0aGlzID09PSBcIm9iamVjdFwiICYmIHRoaXMuY29udGVudCcpKCl8fEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSksKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmJiZzZWxmfHxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3d8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWwmJmdsb2JhbHx8RnVuY3Rpb24oJ3JldHVybiB0eXBlb2YgdGhpcyA9PT0gXCJvYmplY3RcIiAmJiB0aGlzLmNvbnRlbnQnKSgpfHxGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkpLlJHQkNvbG9yPWZ1bmN0aW9uKHQpe3ZhciBlO3Q9dHx8XCJcIix0aGlzLm9rPSExLFwiI1wiPT10LmNoYXJBdCgwKSYmKHQ9dC5zdWJzdHIoMSw2KSksdD0odD10LnJlcGxhY2UoLyAvZyxcIlwiKSkudG9Mb3dlckNhc2UoKTt2YXIgbj17YWxpY2VibHVlOlwiZjBmOGZmXCIsYW50aXF1ZXdoaXRlOlwiZmFlYmQ3XCIsYXF1YTpcIjAwZmZmZlwiLGFxdWFtYXJpbmU6XCI3ZmZmZDRcIixhenVyZTpcImYwZmZmZlwiLGJlaWdlOlwiZjVmNWRjXCIsYmlzcXVlOlwiZmZlNGM0XCIsYmxhY2s6XCIwMDAwMDBcIixibGFuY2hlZGFsbW9uZDpcImZmZWJjZFwiLGJsdWU6XCIwMDAwZmZcIixibHVldmlvbGV0OlwiOGEyYmUyXCIsYnJvd246XCJhNTJhMmFcIixidXJseXdvb2Q6XCJkZWI4ODdcIixjYWRldGJsdWU6XCI1ZjllYTBcIixjaGFydHJldXNlOlwiN2ZmZjAwXCIsY2hvY29sYXRlOlwiZDI2OTFlXCIsY29yYWw6XCJmZjdmNTBcIixjb3JuZmxvd2VyYmx1ZTpcIjY0OTVlZFwiLGNvcm5zaWxrOlwiZmZmOGRjXCIsY3JpbXNvbjpcImRjMTQzY1wiLGN5YW46XCIwMGZmZmZcIixkYXJrYmx1ZTpcIjAwMDA4YlwiLGRhcmtjeWFuOlwiMDA4YjhiXCIsZGFya2dvbGRlbnJvZDpcImI4ODYwYlwiLGRhcmtncmF5OlwiYTlhOWE5XCIsZGFya2dyZWVuOlwiMDA2NDAwXCIsZGFya2toYWtpOlwiYmRiNzZiXCIsZGFya21hZ2VudGE6XCI4YjAwOGJcIixkYXJrb2xpdmVncmVlbjpcIjU1NmIyZlwiLGRhcmtvcmFuZ2U6XCJmZjhjMDBcIixkYXJrb3JjaGlkOlwiOTkzMmNjXCIsZGFya3JlZDpcIjhiMDAwMFwiLGRhcmtzYWxtb246XCJlOTk2N2FcIixkYXJrc2VhZ3JlZW46XCI4ZmJjOGZcIixkYXJrc2xhdGVibHVlOlwiNDgzZDhiXCIsZGFya3NsYXRlZ3JheTpcIjJmNGY0ZlwiLGRhcmt0dXJxdW9pc2U6XCIwMGNlZDFcIixkYXJrdmlvbGV0OlwiOTQwMGQzXCIsZGVlcHBpbms6XCJmZjE0OTNcIixkZWVwc2t5Ymx1ZTpcIjAwYmZmZlwiLGRpbWdyYXk6XCI2OTY5NjlcIixkb2RnZXJibHVlOlwiMWU5MGZmXCIsZmVsZHNwYXI6XCJkMTkyNzVcIixmaXJlYnJpY2s6XCJiMjIyMjJcIixmbG9yYWx3aGl0ZTpcImZmZmFmMFwiLGZvcmVzdGdyZWVuOlwiMjI4YjIyXCIsZnVjaHNpYTpcImZmMDBmZlwiLGdhaW5zYm9ybzpcImRjZGNkY1wiLGdob3N0d2hpdGU6XCJmOGY4ZmZcIixnb2xkOlwiZmZkNzAwXCIsZ29sZGVucm9kOlwiZGFhNTIwXCIsZ3JheTpcIjgwODA4MFwiLGdyZWVuOlwiMDA4MDAwXCIsZ3JlZW55ZWxsb3c6XCJhZGZmMmZcIixob25leWRldzpcImYwZmZmMFwiLGhvdHBpbms6XCJmZjY5YjRcIixpbmRpYW5yZWQ6XCJjZDVjNWNcIixpbmRpZ286XCI0YjAwODJcIixpdm9yeTpcImZmZmZmMFwiLGtoYWtpOlwiZjBlNjhjXCIsbGF2ZW5kZXI6XCJlNmU2ZmFcIixsYXZlbmRlcmJsdXNoOlwiZmZmMGY1XCIsbGF3bmdyZWVuOlwiN2NmYzAwXCIsbGVtb25jaGlmZm9uOlwiZmZmYWNkXCIsbGlnaHRibHVlOlwiYWRkOGU2XCIsbGlnaHRjb3JhbDpcImYwODA4MFwiLGxpZ2h0Y3lhbjpcImUwZmZmZlwiLGxpZ2h0Z29sZGVucm9keWVsbG93OlwiZmFmYWQyXCIsbGlnaHRncmV5OlwiZDNkM2QzXCIsbGlnaHRncmVlbjpcIjkwZWU5MFwiLGxpZ2h0cGluazpcImZmYjZjMVwiLGxpZ2h0c2FsbW9uOlwiZmZhMDdhXCIsbGlnaHRzZWFncmVlbjpcIjIwYjJhYVwiLGxpZ2h0c2t5Ymx1ZTpcIjg3Y2VmYVwiLGxpZ2h0c2xhdGVibHVlOlwiODQ3MGZmXCIsbGlnaHRzbGF0ZWdyYXk6XCI3Nzg4OTlcIixsaWdodHN0ZWVsYmx1ZTpcImIwYzRkZVwiLGxpZ2h0eWVsbG93OlwiZmZmZmUwXCIsbGltZTpcIjAwZmYwMFwiLGxpbWVncmVlbjpcIjMyY2QzMlwiLGxpbmVuOlwiZmFmMGU2XCIsbWFnZW50YTpcImZmMDBmZlwiLG1hcm9vbjpcIjgwMDAwMFwiLG1lZGl1bWFxdWFtYXJpbmU6XCI2NmNkYWFcIixtZWRpdW1ibHVlOlwiMDAwMGNkXCIsbWVkaXVtb3JjaGlkOlwiYmE1NWQzXCIsbWVkaXVtcHVycGxlOlwiOTM3MGQ4XCIsbWVkaXVtc2VhZ3JlZW46XCIzY2IzNzFcIixtZWRpdW1zbGF0ZWJsdWU6XCI3YjY4ZWVcIixtZWRpdW1zcHJpbmdncmVlbjpcIjAwZmE5YVwiLG1lZGl1bXR1cnF1b2lzZTpcIjQ4ZDFjY1wiLG1lZGl1bXZpb2xldHJlZDpcImM3MTU4NVwiLG1pZG5pZ2h0Ymx1ZTpcIjE5MTk3MFwiLG1pbnRjcmVhbTpcImY1ZmZmYVwiLG1pc3R5cm9zZTpcImZmZTRlMVwiLG1vY2Nhc2luOlwiZmZlNGI1XCIsbmF2YWpvd2hpdGU6XCJmZmRlYWRcIixuYXZ5OlwiMDAwMDgwXCIsb2xkbGFjZTpcImZkZjVlNlwiLG9saXZlOlwiODA4MDAwXCIsb2xpdmVkcmFiOlwiNmI4ZTIzXCIsb3JhbmdlOlwiZmZhNTAwXCIsb3JhbmdlcmVkOlwiZmY0NTAwXCIsb3JjaGlkOlwiZGE3MGQ2XCIscGFsZWdvbGRlbnJvZDpcImVlZThhYVwiLHBhbGVncmVlbjpcIjk4ZmI5OFwiLHBhbGV0dXJxdW9pc2U6XCJhZmVlZWVcIixwYWxldmlvbGV0cmVkOlwiZDg3MDkzXCIscGFwYXlhd2hpcDpcImZmZWZkNVwiLHBlYWNocHVmZjpcImZmZGFiOVwiLHBlcnU6XCJjZDg1M2ZcIixwaW5rOlwiZmZjMGNiXCIscGx1bTpcImRkYTBkZFwiLHBvd2RlcmJsdWU6XCJiMGUwZTZcIixwdXJwbGU6XCI4MDAwODBcIixyZWQ6XCJmZjAwMDBcIixyb3N5YnJvd246XCJiYzhmOGZcIixyb3lhbGJsdWU6XCI0MTY5ZTFcIixzYWRkbGVicm93bjpcIjhiNDUxM1wiLHNhbG1vbjpcImZhODA3MlwiLHNhbmR5YnJvd246XCJmNGE0NjBcIixzZWFncmVlbjpcIjJlOGI1N1wiLHNlYXNoZWxsOlwiZmZmNWVlXCIsc2llbm5hOlwiYTA1MjJkXCIsc2lsdmVyOlwiYzBjMGMwXCIsc2t5Ymx1ZTpcIjg3Y2VlYlwiLHNsYXRlYmx1ZTpcIjZhNWFjZFwiLHNsYXRlZ3JheTpcIjcwODA5MFwiLHNub3c6XCJmZmZhZmFcIixzcHJpbmdncmVlbjpcIjAwZmY3ZlwiLHN0ZWVsYmx1ZTpcIjQ2ODJiNFwiLHRhbjpcImQyYjQ4Y1wiLHRlYWw6XCIwMDgwODBcIix0aGlzdGxlOlwiZDhiZmQ4XCIsdG9tYXRvOlwiZmY2MzQ3XCIsdHVycXVvaXNlOlwiNDBlMGQwXCIsdmlvbGV0OlwiZWU4MmVlXCIsdmlvbGV0cmVkOlwiZDAyMDkwXCIsd2hlYXQ6XCJmNWRlYjNcIix3aGl0ZTpcImZmZmZmZlwiLHdoaXRlc21va2U6XCJmNWY1ZjVcIix5ZWxsb3c6XCJmZmZmMDBcIix5ZWxsb3dncmVlbjpcIjlhY2QzMlwifTtmb3IodmFyIHIgaW4gbil0PT1yJiYodD1uW3JdKTtmb3IodmFyIGk9W3tyZTovXnJnYlxcKChcXGR7MSwzfSksXFxzKihcXGR7MSwzfSksXFxzKihcXGR7MSwzfSlcXCkkLyxleGFtcGxlOltcInJnYigxMjMsIDIzNCwgNDUpXCIsXCJyZ2IoMjU1LDIzNCwyNDUpXCJdLHByb2Nlc3M6ZnVuY3Rpb24odCl7cmV0dXJuW3BhcnNlSW50KHRbMV0pLHBhcnNlSW50KHRbMl0pLHBhcnNlSW50KHRbM10pXX19LHtyZTovXihcXHd7Mn0pKFxcd3syfSkoXFx3ezJ9KSQvLGV4YW1wbGU6W1wiIzAwZmYwMFwiLFwiMzM2Njk5XCJdLHByb2Nlc3M6ZnVuY3Rpb24odCl7cmV0dXJuW3BhcnNlSW50KHRbMV0sMTYpLHBhcnNlSW50KHRbMl0sMTYpLHBhcnNlSW50KHRbM10sMTYpXX19LHtyZTovXihcXHd7MX0pKFxcd3sxfSkoXFx3ezF9KSQvLGV4YW1wbGU6W1wiI2ZiMFwiLFwiZjBmXCJdLHByb2Nlc3M6ZnVuY3Rpb24odCl7cmV0dXJuW3BhcnNlSW50KHRbMV0rdFsxXSwxNikscGFyc2VJbnQodFsyXSt0WzJdLDE2KSxwYXJzZUludCh0WzNdK3RbM10sMTYpXX19XSxvPTA7bzxpLmxlbmd0aDtvKyspe3ZhciBhPWlbb10ucmUscz1pW29dLnByb2Nlc3MsbD1hLmV4ZWModCk7bCYmKGU9cyhsKSx0aGlzLnI9ZVswXSx0aGlzLmc9ZVsxXSx0aGlzLmI9ZVsyXSx0aGlzLm9rPSEwKX10aGlzLnI9dGhpcy5yPDB8fGlzTmFOKHRoaXMucik/MDoyNTU8dGhpcy5yPzI1NTp0aGlzLnIsdGhpcy5nPXRoaXMuZzwwfHxpc05hTih0aGlzLmcpPzA6MjU1PHRoaXMuZz8yNTU6dGhpcy5nLHRoaXMuYj10aGlzLmI8MHx8aXNOYU4odGhpcy5iKT8wOjI1NTx0aGlzLmI/MjU1OnRoaXMuYix0aGlzLnRvUkdCPWZ1bmN0aW9uKCl7cmV0dXJuXCJyZ2IoXCIrdGhpcy5yK1wiLCBcIit0aGlzLmcrXCIsIFwiK3RoaXMuYitcIilcIn0sdGhpcy50b0hleD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuci50b1N0cmluZygxNiksZT10aGlzLmcudG9TdHJpbmcoMTYpLG49dGhpcy5iLnRvU3RyaW5nKDE2KTtyZXR1cm4gMT09dC5sZW5ndGgmJih0PVwiMFwiK3QpLDE9PWUubGVuZ3RoJiYoZT1cIjBcIitlKSwxPT1uLmxlbmd0aCYmKG49XCIwXCIrbiksXCIjXCIrdCtlK259fSxmdW5jdGlvbih0KXt2YXIgbj1cIitcIi5jaGFyQ29kZUF0KDApLHI9XCIvXCIuY2hhckNvZGVBdCgwKSxpPVwiMFwiLmNoYXJDb2RlQXQoMCksbz1cImFcIi5jaGFyQ29kZUF0KDApLGE9XCJBXCIuY2hhckNvZGVBdCgwKSxzPVwiLVwiLmNoYXJDb2RlQXQoMCksbD1cIl9cIi5jaGFyQ29kZUF0KDApLHU9ZnVuY3Rpb24odCl7dmFyIGU9dC5jaGFyQ29kZUF0KDApO3JldHVybiBlPT09bnx8ZT09PXM/NjI6ZT09PXJ8fGU9PT1sPzYzOmU8aT8tMTplPGkrMTA/ZS1pKzI2KzI2OmU8YSsyNj9lLWE6ZTxvKzI2P2UtbysyNjp2b2lkIDB9O3QuQVBJLlRURkZvbnQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBpKHQsZSxuKXt2YXIgcjtpZih0aGlzLnJhd0RhdGE9dCxyPXRoaXMuY29udGVudHM9bmV3IEoodCksdGhpcy5jb250ZW50cy5wb3M9NCxcInR0Y2ZcIj09PXIucmVhZFN0cmluZyg0KSl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKFwiTXVzdCBzcGVjaWZ5IGEgZm9udCBuYW1lIGZvciBUVEMgZmlsZXMuXCIpO3Rocm93IG5ldyBFcnJvcihcIkZvbnQgXCIrZStcIiBub3QgZm91bmQgaW4gVFRDIGZpbGUuXCIpfXIucG9zPTAsdGhpcy5wYXJzZSgpLHRoaXMuc3Vic2V0PW5ldyBQKHRoaXMpLHRoaXMucmVnaXN0ZXJUVEYoKX1yZXR1cm4gaS5vcGVuPWZ1bmN0aW9uKHQsZSxuLHIpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBuKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnQgc3VwcGxpZWQgaW4gVFRGRm9udC5vcGVuXCIpO3JldHVybiBuZXcgaShmdW5jdGlvbih0KXt2YXIgZSxuLHIsaSxvLGE7aWYoMDx0Lmxlbmd0aCU0KXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDRcIik7dmFyIHM9dC5sZW5ndGg7bz1cIj1cIj09PXQuY2hhckF0KHMtMik/MjpcIj1cIj09PXQuY2hhckF0KHMtMSk/MTowLGE9bmV3IFVpbnQ4QXJyYXkoMyp0Lmxlbmd0aC80LW8pLHI9MDxvP3QubGVuZ3RoLTQ6dC5sZW5ndGg7dmFyIGw9MDtmdW5jdGlvbiBoKHQpe2FbbCsrXT10fWZvcihuPWU9MDtlPHI7ZSs9NCxuKz0zKWgoKDE2NzExNjgwJihpPXUodC5jaGFyQXQoZSkpPDwxOHx1KHQuY2hhckF0KGUrMSkpPDwxMnx1KHQuY2hhckF0KGUrMikpPDw2fHUodC5jaGFyQXQoZSszKSkpKT4+MTYpLGgoKDY1MjgwJmkpPj44KSxoKDI1NSZpKTtyZXR1cm4gMj09PW8/aCgyNTUmKGk9dSh0LmNoYXJBdChlKSk8PDJ8dSh0LmNoYXJBdChlKzEpKT4+NCkpOjE9PT1vJiYoaCgoaT11KHQuY2hhckF0KGUpKTw8MTB8dSh0LmNoYXJBdChlKzEpKTw8NHx1KHQuY2hhckF0KGUrMikpPj4yKT4+OCYyNTUpLGgoMjU1JmkpKSxhfShuKSxlLHIpfSxpLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRpcmVjdG9yeT1uZXcgZSh0aGlzLmNvbnRlbnRzKSx0aGlzLmhlYWQ9bmV3IHAodGhpcyksdGhpcy5uYW1lPW5ldyBiKHRoaXMpLHRoaXMuY21hcD1uZXcgeSh0aGlzKSx0aGlzLnRvVW5pY29kZT1uZXcgTWFwLHRoaXMuaGhlYT1uZXcgZyh0aGlzKSx0aGlzLm1heHA9bmV3IHgodGhpcyksdGhpcy5obXR4PW5ldyBOKHRoaXMpLHRoaXMucG9zdD1uZXcgdih0aGlzKSx0aGlzLm9zMj1uZXcgbSh0aGlzKSx0aGlzLmxvY2E9bmV3IEYodGhpcyksdGhpcy5nbHlmPW5ldyBBKHRoaXMpLHRoaXMuYXNjZW5kZXI9dGhpcy5vczIuZXhpc3RzJiZ0aGlzLm9zMi5hc2NlbmRlcnx8dGhpcy5oaGVhLmFzY2VuZGVyLHRoaXMuZGVjZW5kZXI9dGhpcy5vczIuZXhpc3RzJiZ0aGlzLm9zMi5kZWNlbmRlcnx8dGhpcy5oaGVhLmRlY2VuZGVyLHRoaXMubGluZUdhcD10aGlzLm9zMi5leGlzdHMmJnRoaXMub3MyLmxpbmVHYXB8fHRoaXMuaGhlYS5saW5lR2FwLHRoaXMuYmJveD1bdGhpcy5oZWFkLnhNaW4sdGhpcy5oZWFkLnlNaW4sdGhpcy5oZWFkLnhNYXgsdGhpcy5oZWFkLnlNYXhdfSxpLnByb3RvdHlwZS5yZWdpc3RlclRURj1mdW5jdGlvbigpe3ZhciBpLHQsZSxuLHI7aWYodGhpcy5zY2FsZUZhY3Rvcj0xZTMvdGhpcy5oZWFkLnVuaXRzUGVyRW0sdGhpcy5iYm94PWZ1bmN0aW9uKCl7dmFyIHQsZSxuLHI7Zm9yKHI9W10sdD0wLGU9KG49dGhpcy5iYm94KS5sZW5ndGg7dDxlO3QrKylpPW5bdF0sci5wdXNoKE1hdGgucm91bmQoaSp0aGlzLnNjYWxlRmFjdG9yKSk7cmV0dXJuIHJ9LmNhbGwodGhpcyksdGhpcy5zdGVtVj0wLHRoaXMucG9zdC5leGlzdHM/KGU9MjU1JihuPXRoaXMucG9zdC5pdGFsaWNfYW5nbGUpLCEwJih0PW4+PjE2KSYmKHQ9LSgxKyg2NTUzNV50KSkpLHRoaXMuaXRhbGljQW5nbGU9Kyh0K1wiLlwiK2UpKTp0aGlzLml0YWxpY0FuZ2xlPTAsdGhpcy5hc2NlbmRlcj1NYXRoLnJvdW5kKHRoaXMuYXNjZW5kZXIqdGhpcy5zY2FsZUZhY3RvciksdGhpcy5kZWNlbmRlcj1NYXRoLnJvdW5kKHRoaXMuZGVjZW5kZXIqdGhpcy5zY2FsZUZhY3RvciksdGhpcy5saW5lR2FwPU1hdGgucm91bmQodGhpcy5saW5lR2FwKnRoaXMuc2NhbGVGYWN0b3IpLHRoaXMuY2FwSGVpZ2h0PXRoaXMub3MyLmV4aXN0cyYmdGhpcy5vczIuY2FwSGVpZ2h0fHx0aGlzLmFzY2VuZGVyLHRoaXMueEhlaWdodD10aGlzLm9zMi5leGlzdHMmJnRoaXMub3MyLnhIZWlnaHR8fDAsdGhpcy5mYW1pbHlDbGFzcz0odGhpcy5vczIuZXhpc3RzJiZ0aGlzLm9zMi5mYW1pbHlDbGFzc3x8MCk+PjgsdGhpcy5pc1NlcmlmPTE9PT0ocj10aGlzLmZhbWlseUNsYXNzKXx8Mj09PXJ8fDM9PT1yfHw0PT09cnx8NT09PXJ8fDc9PT1yLHRoaXMuaXNTY3JpcHQ9MTA9PT10aGlzLmZhbWlseUNsYXNzLHRoaXMuZmxhZ3M9MCx0aGlzLnBvc3QuaXNGaXhlZFBpdGNoJiYodGhpcy5mbGFnc3w9MSksdGhpcy5pc1NlcmlmJiYodGhpcy5mbGFnc3w9MiksdGhpcy5pc1NjcmlwdCYmKHRoaXMuZmxhZ3N8PTgpLDAhPT10aGlzLml0YWxpY0FuZ2xlJiYodGhpcy5mbGFnc3w9NjQpLHRoaXMuZmxhZ3N8PTMyLCF0aGlzLmNtYXAudW5pY29kZSl0aHJvdyBuZXcgRXJyb3IoXCJObyB1bmljb2RlIGNtYXAgZm9yIGZvbnRcIil9LGkucHJvdG90eXBlLmNoYXJhY3RlclRvR2x5cGg9ZnVuY3Rpb24odCl7dmFyIGU7cmV0dXJuKG51bGwhPShlPXRoaXMuY21hcC51bmljb2RlKT9lLmNvZGVNYXBbdF06dm9pZCAwKXx8MH0saS5wcm90b3R5cGUud2lkdGhPZkdseXBoPWZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiBlPTFlMy90aGlzLmhlYWQudW5pdHNQZXJFbSx0aGlzLmhtdHguZm9yR2x5cGgodCkuYWR2YW5jZSplfSxpLnByb3RvdHlwZS53aWR0aE9mU3RyaW5nPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpLG8sYSxzO2ZvcihpPWE9bz0wLHM9KHQ9XCJcIit0KS5sZW5ndGg7MDw9cz9hPHM6czxhO2k9MDw9cz8rK2E6LS1hKXI9dC5jaGFyQ29kZUF0KGkpLG8rPXRoaXMud2lkdGhPZkdseXBoKHRoaXMuY2hhcmFjdGVyVG9HbHlwaChyKSkrbiooMWUzL2UpfHwwO3JldHVybiBvKihlLzFlMyl9LGkucHJvdG90eXBlLmxpbmVIZWlnaHQ9ZnVuY3Rpb24odCxlKXt2YXIgbjtyZXR1cm4gbnVsbD09ZSYmKGU9ITEpLG49ZT90aGlzLmxpbmVHYXA6MCwodGhpcy5hc2NlbmRlcituLXRoaXMuZGVjZW5kZXIpLzFlMyp0fSxpfSgpO3ZhciBoLEo9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuZGF0YT1udWxsIT10P3Q6W10sdGhpcy5wb3M9MCx0aGlzLmxlbmd0aD10aGlzLmRhdGEubGVuZ3RofXJldHVybiB0LnByb3RvdHlwZS5yZWFkQnl0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRhdGFbdGhpcy5wb3MrK119LHQucHJvdG90eXBlLndyaXRlQnl0ZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kYXRhW3RoaXMucG9zKytdPXR9LHQucHJvdG90eXBlLnJlYWRVSW50MzI9ZnVuY3Rpb24oKXtyZXR1cm4gMTY3NzcyMTYqdGhpcy5yZWFkQnl0ZSgpKyh0aGlzLnJlYWRCeXRlKCk8PDE2KSsodGhpcy5yZWFkQnl0ZSgpPDw4KSt0aGlzLnJlYWRCeXRlKCl9LHQucHJvdG90eXBlLndyaXRlVUludDMyPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLndyaXRlQnl0ZSh0Pj4+MjQmMjU1KSx0aGlzLndyaXRlQnl0ZSh0Pj4xNiYyNTUpLHRoaXMud3JpdGVCeXRlKHQ+PjgmMjU1KSx0aGlzLndyaXRlQnl0ZSgyNTUmdCl9LHQucHJvdG90eXBlLnJlYWRJbnQzMj1mdW5jdGlvbigpe3ZhciB0O3JldHVybiAyMTQ3NDgzNjQ4PD0odD10aGlzLnJlYWRVSW50MzIoKSk/dC00Mjk0OTY3Mjk2OnR9LHQucHJvdG90eXBlLndyaXRlSW50MzI9ZnVuY3Rpb24odCl7cmV0dXJuIHQ8MCYmKHQrPTQyOTQ5NjcyOTYpLHRoaXMud3JpdGVVSW50MzIodCl9LHQucHJvdG90eXBlLnJlYWRVSW50MTY9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZWFkQnl0ZSgpPDw4fHRoaXMucmVhZEJ5dGUoKX0sdC5wcm90b3R5cGUud3JpdGVVSW50MTY9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMud3JpdGVCeXRlKHQ+PjgmMjU1KSx0aGlzLndyaXRlQnl0ZSgyNTUmdCl9LHQucHJvdG90eXBlLnJlYWRJbnQxNj1mdW5jdGlvbigpe3ZhciB0O3JldHVybiAzMjc2ODw9KHQ9dGhpcy5yZWFkVUludDE2KCkpP3QtNjU1MzY6dH0sdC5wcm90b3R5cGUud3JpdGVJbnQxNj1mdW5jdGlvbih0KXtyZXR1cm4gdDwwJiYodCs9NjU1MzYpLHRoaXMud3JpdGVVSW50MTYodCl9LHQucHJvdG90eXBlLnJlYWRTdHJpbmc9ZnVuY3Rpb24odCl7dmFyIGUsbixyO2ZvcihuPVtdLGU9cj0wOzA8PXQ/cjx0OnQ8cjtlPTA8PXQ/KytyOi0tciluW2VdPVN0cmluZy5mcm9tQ2hhckNvZGUodGhpcy5yZWFkQnl0ZSgpKTtyZXR1cm4gbi5qb2luKFwiXCIpfSx0LnByb3RvdHlwZS53cml0ZVN0cmluZz1mdW5jdGlvbih0KXt2YXIgZSxuLHIsaTtmb3IoaT1bXSxlPW49MCxyPXQubGVuZ3RoOzA8PXI/bjxyOnI8bjtlPTA8PXI/KytuOi0tbilpLnB1c2godGhpcy53cml0ZUJ5dGUodC5jaGFyQ29kZUF0KGUpKSk7cmV0dXJuIGl9LHQucHJvdG90eXBlLnJlYWRTaG9ydD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJlYWRJbnQxNigpfSx0LnByb3RvdHlwZS53cml0ZVNob3J0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLndyaXRlSW50MTYodCl9LHQucHJvdG90eXBlLnJlYWRMb25nTG9uZz1mdW5jdGlvbigpe3ZhciB0LGUsbixyLGksbyxhLHM7cmV0dXJuIHQ9dGhpcy5yZWFkQnl0ZSgpLGU9dGhpcy5yZWFkQnl0ZSgpLG49dGhpcy5yZWFkQnl0ZSgpLHI9dGhpcy5yZWFkQnl0ZSgpLGk9dGhpcy5yZWFkQnl0ZSgpLG89dGhpcy5yZWFkQnl0ZSgpLGE9dGhpcy5yZWFkQnl0ZSgpLHM9dGhpcy5yZWFkQnl0ZSgpLDEyOCZ0Py0xKig3MjA1NzU5NDAzNzkyNzk0MCooMjU1XnQpKzI4MTQ3NDk3NjcxMDY1NiooMjU1XmUpKzEwOTk1MTE2Mjc3NzYqKDI1NV5uKSs0Mjk0OTY3Mjk2KigyNTVecikrMTY3NzcyMTYqKDI1NV5pKSs2NTUzNiooMjU1Xm8pKzI1NiooMjU1XmEpKygyNTVecykrMSk6NzIwNTc1OTQwMzc5Mjc5NDAqdCsyODE0NzQ5NzY3MTA2NTYqZSsxMDk5NTExNjI3Nzc2Km4rNDI5NDk2NzI5NipyKzE2Nzc3MjE2KmkrNjU1MzYqbysyNTYqYStzfSx0LnByb3RvdHlwZS53cml0ZUxvbmdMb25nPWZ1bmN0aW9uKHQpe3ZhciBlLG47cmV0dXJuIGU9TWF0aC5mbG9vcih0LzQyOTQ5NjcyOTYpLG49NDI5NDk2NzI5NSZ0LHRoaXMud3JpdGVCeXRlKGU+PjI0JjI1NSksdGhpcy53cml0ZUJ5dGUoZT4+MTYmMjU1KSx0aGlzLndyaXRlQnl0ZShlPj44JjI1NSksdGhpcy53cml0ZUJ5dGUoMjU1JmUpLHRoaXMud3JpdGVCeXRlKG4+PjI0JjI1NSksdGhpcy53cml0ZUJ5dGUobj4+MTYmMjU1KSx0aGlzLndyaXRlQnl0ZShuPj44JjI1NSksdGhpcy53cml0ZUJ5dGUoMjU1Jm4pfSx0LnByb3RvdHlwZS5yZWFkSW50PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVhZEludDMyKCl9LHQucHJvdG90eXBlLndyaXRlSW50PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLndyaXRlSW50MzIodCl9LHQucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24odCl7dmFyIGUsbjtmb3IoZT1bXSxuPTA7MDw9dD9uPHQ6dDxuOzA8PXQ/KytuOi0tbillLnB1c2godGhpcy5yZWFkQnl0ZSgpKTtyZXR1cm4gZX0sdC5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCl7dmFyIGUsbixyLGk7Zm9yKGk9W10sbj0wLHI9dC5sZW5ndGg7bjxyO24rKyllPXRbbl0saS5wdXNoKHRoaXMud3JpdGVCeXRlKGUpKTtyZXR1cm4gaX0sdH0oKSxlPWZ1bmN0aW9uKCl7dmFyIGQ7ZnVuY3Rpb24gdCh0KXt2YXIgZSxuLHI7Zm9yKHRoaXMuc2NhbGFyVHlwZT10LnJlYWRJbnQoKSx0aGlzLnRhYmxlQ291bnQ9dC5yZWFkU2hvcnQoKSx0aGlzLnNlYXJjaFJhbmdlPXQucmVhZFNob3J0KCksdGhpcy5lbnRyeVNlbGVjdG9yPXQucmVhZFNob3J0KCksdGhpcy5yYW5nZVNoaWZ0PXQucmVhZFNob3J0KCksdGhpcy50YWJsZXM9e30sbj0wLHI9dGhpcy50YWJsZUNvdW50OzA8PXI/bjxyOnI8bjswPD1yPysrbjotLW4pZT17dGFnOnQucmVhZFN0cmluZyg0KSxjaGVja3N1bTp0LnJlYWRJbnQoKSxvZmZzZXQ6dC5yZWFkSW50KCksbGVuZ3RoOnQucmVhZEludCgpfSx0aGlzLnRhYmxlc1tlLnRhZ109ZX1yZXR1cm4gdC5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKHQpe3ZhciBlLG4scixpLG8sYSxzLGwsaCx1LGMsZixwO2ZvcihwIGluIGM9T2JqZWN0LmtleXModCkubGVuZ3RoLGE9TWF0aC5sb2coMiksaD0xNipNYXRoLmZsb29yKE1hdGgubG9nKGMpL2EpLGk9TWF0aC5mbG9vcihoL2EpLGw9MTYqYy1oLChuPW5ldyBKKS53cml0ZUludCh0aGlzLnNjYWxhclR5cGUpLG4ud3JpdGVTaG9ydChjKSxuLndyaXRlU2hvcnQoaCksbi53cml0ZVNob3J0KGkpLG4ud3JpdGVTaG9ydChsKSxyPTE2KmMscz1uLnBvcytyLG89bnVsbCxmPVtdLHQpZm9yKHU9dFtwXSxuLndyaXRlU3RyaW5nKHApLG4ud3JpdGVJbnQoZCh1KSksbi53cml0ZUludChzKSxuLndyaXRlSW50KHUubGVuZ3RoKSxmPWYuY29uY2F0KHUpLFwiaGVhZFwiPT09cCYmKG89cykscys9dS5sZW5ndGg7cyU0OylmLnB1c2goMCkscysrO3JldHVybiBuLndyaXRlKGYpLGU9Mjk4MTE0NjU1NC1kKG4uZGF0YSksbi5wb3M9bys4LG4ud3JpdGVVSW50MzIoZSksbi5kYXRhfSxkPWZ1bmN0aW9uKHQpe3ZhciBlLG4scixpO2Zvcih0PUwuY2FsbCh0KTt0Lmxlbmd0aCU0Oyl0LnB1c2goMCk7Zm9yKG49bmV3IEoodCkscj1lPTAsaT10Lmxlbmd0aDtyPGk7cis9NCllKz1uLnJlYWRVSW50MzIoKTtyZXR1cm4gNDI5NDk2NzI5NSZlfSx0fSgpLGM9e30uaGFzT3duUHJvcGVydHksZj1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKWMuY2FsbChlLG4pJiYodFtuXT1lW25dKTtmdW5jdGlvbiByKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fXJldHVybiByLnByb3RvdHlwZT1lLnByb3RvdHlwZSx0LnByb3RvdHlwZT1uZXcgcix0Ll9fc3VwZXJfXz1lLnByb3RvdHlwZSx0fTtoPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt2YXIgZTt0aGlzLmZpbGU9dCxlPXRoaXMuZmlsZS5kaXJlY3RvcnkudGFibGVzW3RoaXMudGFnXSx0aGlzLmV4aXN0cz0hIWUsZSYmKHRoaXMub2Zmc2V0PWUub2Zmc2V0LHRoaXMubGVuZ3RoPWUubGVuZ3RoLHRoaXMucGFyc2UodGhpcy5maWxlLmNvbnRlbnRzKSl9cmV0dXJuIHQucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKCl7fSx0LnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXt9LHQucHJvdG90eXBlLnJhdz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmV4aXN0cz8odGhpcy5maWxlLmNvbnRlbnRzLnBvcz10aGlzLm9mZnNldCx0aGlzLmZpbGUuY29udGVudHMucmVhZCh0aGlzLmxlbmd0aCkpOm51bGx9LHR9KCk7dmFyIHA9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBlLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9cmV0dXJuIGYoZSxoKSxlLnByb3RvdHlwZS50YWc9XCJoZWFkXCIsZS5wcm90b3R5cGUucGFyc2U9ZnVuY3Rpb24odCl7cmV0dXJuIHQucG9zPXRoaXMub2Zmc2V0LHRoaXMudmVyc2lvbj10LnJlYWRJbnQoKSx0aGlzLnJldmlzaW9uPXQucmVhZEludCgpLHRoaXMuY2hlY2tTdW1BZGp1c3RtZW50PXQucmVhZEludCgpLHRoaXMubWFnaWNOdW1iZXI9dC5yZWFkSW50KCksdGhpcy5mbGFncz10LnJlYWRTaG9ydCgpLHRoaXMudW5pdHNQZXJFbT10LnJlYWRTaG9ydCgpLHRoaXMuY3JlYXRlZD10LnJlYWRMb25nTG9uZygpLHRoaXMubW9kaWZpZWQ9dC5yZWFkTG9uZ0xvbmcoKSx0aGlzLnhNaW49dC5yZWFkU2hvcnQoKSx0aGlzLnlNaW49dC5yZWFkU2hvcnQoKSx0aGlzLnhNYXg9dC5yZWFkU2hvcnQoKSx0aGlzLnlNYXg9dC5yZWFkU2hvcnQoKSx0aGlzLm1hY1N0eWxlPXQucmVhZFNob3J0KCksdGhpcy5sb3dlc3RSZWNQUEVNPXQucmVhZFNob3J0KCksdGhpcy5mb250RGlyZWN0aW9uSGludD10LnJlYWRTaG9ydCgpLHRoaXMuaW5kZXhUb0xvY0Zvcm1hdD10LnJlYWRTaG9ydCgpLHRoaXMuZ2x5cGhEYXRhRm9ybWF0PXQucmVhZFNob3J0KCl9LGUucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4oZT1uZXcgSikud3JpdGVJbnQodGhpcy52ZXJzaW9uKSxlLndyaXRlSW50KHRoaXMucmV2aXNpb24pLGUud3JpdGVJbnQodGhpcy5jaGVja1N1bUFkanVzdG1lbnQpLGUud3JpdGVJbnQodGhpcy5tYWdpY051bWJlciksZS53cml0ZVNob3J0KHRoaXMuZmxhZ3MpLGUud3JpdGVTaG9ydCh0aGlzLnVuaXRzUGVyRW0pLGUud3JpdGVMb25nTG9uZyh0aGlzLmNyZWF0ZWQpLGUud3JpdGVMb25nTG9uZyh0aGlzLm1vZGlmaWVkKSxlLndyaXRlU2hvcnQodGhpcy54TWluKSxlLndyaXRlU2hvcnQodGhpcy55TWluKSxlLndyaXRlU2hvcnQodGhpcy54TWF4KSxlLndyaXRlU2hvcnQodGhpcy55TWF4KSxlLndyaXRlU2hvcnQodGhpcy5tYWNTdHlsZSksZS53cml0ZVNob3J0KHRoaXMubG93ZXN0UmVjUFBFTSksZS53cml0ZVNob3J0KHRoaXMuZm9udERpcmVjdGlvbkhpbnQpLGUud3JpdGVTaG9ydCh0KSxlLndyaXRlU2hvcnQodGhpcy5nbHlwaERhdGFGb3JtYXQpLGUuZGF0YX0sZX0oKSxkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChuLHQpe3ZhciBlLHIsaSxvLGEscyxsLGgsdSxjLGYscCxkLGcsbSx5LHYsdztzd2l0Y2godGhpcy5wbGF0Zm9ybUlEPW4ucmVhZFVJbnQxNigpLHRoaXMuZW5jb2RpbmdJRD1uLnJlYWRTaG9ydCgpLHRoaXMub2Zmc2V0PXQrbi5yZWFkSW50KCksdT1uLnBvcyxuLnBvcz10aGlzLm9mZnNldCx0aGlzLmZvcm1hdD1uLnJlYWRVSW50MTYoKSx0aGlzLmxlbmd0aD1uLnJlYWRVSW50MTYoKSx0aGlzLmxhbmd1YWdlPW4ucmVhZFVJbnQxNigpLHRoaXMuaXNVbmljb2RlPTM9PT10aGlzLnBsYXRmb3JtSUQmJjE9PT10aGlzLmVuY29kaW5nSUQmJjQ9PT10aGlzLmZvcm1hdHx8MD09PXRoaXMucGxhdGZvcm1JRCYmND09PXRoaXMuZm9ybWF0LHRoaXMuY29kZU1hcD17fSx0aGlzLmZvcm1hdCl7Y2FzZSAwOmZvcihzPW09MDttPDI1NjtzPSsrbSl0aGlzLmNvZGVNYXBbc109bi5yZWFkQnl0ZSgpO2JyZWFrO2Nhc2UgNDpmb3IoZj1uLnJlYWRVSW50MTYoKSxjPWYvMixuLnBvcys9NixpPWZ1bmN0aW9uKCl7dmFyIHQsZTtmb3IoZT1bXSxzPXQ9MDswPD1jP3Q8YzpjPHQ7cz0wPD1jPysrdDotLXQpZS5wdXNoKG4ucmVhZFVJbnQxNigpKTtyZXR1cm4gZX0oKSxuLnBvcys9MixkPWZ1bmN0aW9uKCl7dmFyIHQsZTtmb3IoZT1bXSxzPXQ9MDswPD1jP3Q8YzpjPHQ7cz0wPD1jPysrdDotLXQpZS5wdXNoKG4ucmVhZFVJbnQxNigpKTtyZXR1cm4gZX0oKSxsPWZ1bmN0aW9uKCl7dmFyIHQsZTtmb3IoZT1bXSxzPXQ9MDswPD1jP3Q8YzpjPHQ7cz0wPD1jPysrdDotLXQpZS5wdXNoKG4ucmVhZFVJbnQxNigpKTtyZXR1cm4gZX0oKSxoPWZ1bmN0aW9uKCl7dmFyIHQsZTtmb3IoZT1bXSxzPXQ9MDswPD1jP3Q8YzpjPHQ7cz0wPD1jPysrdDotLXQpZS5wdXNoKG4ucmVhZFVJbnQxNigpKTtyZXR1cm4gZX0oKSxyPSh0aGlzLmxlbmd0aC1uLnBvcyt0aGlzLm9mZnNldCkvMixhPWZ1bmN0aW9uKCl7dmFyIHQsZTtmb3IoZT1bXSxzPXQ9MDswPD1yP3Q8cjpyPHQ7cz0wPD1yPysrdDotLXQpZS5wdXNoKG4ucmVhZFVJbnQxNigpKTtyZXR1cm4gZX0oKSxzPXk9MCx3PWkubGVuZ3RoO3k8dztzPSsreSlmb3IoZz1pW3NdLGU9dj1wPWRbc107cDw9Zz92PD1nOmc8PXY7ZT1wPD1nPysrdjotLXYpMD09PWhbc10/bz1lK2xbc106MCE9PShvPWFbaFtzXS8yKyhlLXApLShjLXMpXXx8MCkmJihvKz1sW3NdKSx0aGlzLmNvZGVNYXBbZV09NjU1MzUmb31uLnBvcz11fXJldHVybiB0LmVuY29kZT1mdW5jdGlvbih0LGUpe3ZhciBuLHIsaSxvLGEscyxsLGgsdSxjLGYscCxkLGcsbSx5LHYsdyxiLHgsTixMLEEsUyxfLEYsUCxrLEksQyxCLGosRSxNLE8scSxULFIsRCxVLHosSCxXLFYsRyxZO3N3aXRjaChrPW5ldyBKLG89T2JqZWN0LmtleXModCkuc29ydChmdW5jdGlvbih0LGUpe3JldHVybiB0LWV9KSxlKXtjYXNlXCJtYWNyb21hblwiOmZvcihkPTAsZz1mdW5jdGlvbigpe3ZhciB0LGU7Zm9yKGU9W10scD10PTA7dDwyNTY7cD0rK3QpZS5wdXNoKDApO3JldHVybiBlfSgpLHk9ezA6MH0saT17fSxJPTAsRT1vLmxlbmd0aDtJPEU7SSsrKW51bGw9PXlbVz10W3I9b1tJXV1dJiYoeVtXXT0rK2QpLGlbcl09e29sZDp0W3JdLG5ldzp5W3Rbcl1dfSxnW3JdPXlbdFtyXV07cmV0dXJuIGsud3JpdGVVSW50MTYoMSksay53cml0ZVVJbnQxNigwKSxrLndyaXRlVUludDMyKDEyKSxrLndyaXRlVUludDE2KDApLGsud3JpdGVVSW50MTYoMjYyKSxrLndyaXRlVUludDE2KDApLGsud3JpdGUoZykse2NoYXJNYXA6aSxzdWJ0YWJsZTprLmRhdGEsbWF4R2x5cGhJRDpkKzF9O2Nhc2VcInVuaWNvZGVcIjpmb3IoRj1bXSx1PVtdLHk9e30sbj17fSxtPWw9bnVsbCxDPXY9MCxNPW8ubGVuZ3RoO0M8TTtDKyspbnVsbD09eVtiPXRbcj1vW0NdXV0mJih5W2JdPSsrdiksbltyXT17b2xkOmIsbmV3OnlbYl19LGE9eVtiXS1yLG51bGwhPW0mJmE9PT1sfHwobSYmdS5wdXNoKG0pLEYucHVzaChyKSxsPWEpLG09cjtmb3IobSYmdS5wdXNoKG0pLHUucHVzaCg2NTUzNSksRi5wdXNoKDY1NTM1KSxTPTIqKEE9Ri5sZW5ndGgpLEw9MipNYXRoLnBvdyhNYXRoLmxvZyhBKS9NYXRoLkxOMiwyKSxjPU1hdGgubG9nKEwvMikvTWF0aC5MTjIsTj0yKkEtTCxzPVtdLHg9W10sZj1bXSxwPUI9MCxPPUYubGVuZ3RoO0I8TztwPSsrQil7aWYoXz1GW3BdLGg9dVtwXSw2NTUzNT09PV8pe3MucHVzaCgwKSx4LnB1c2goMCk7YnJlYWt9aWYoMzI3Njg8PV8tKFA9bltfXS5uZXcpKWZvcihzLnB1c2goMCkseC5wdXNoKDIqKGYubGVuZ3RoK0EtcCkpLHI9aj1fO188PWg/ajw9aDpoPD1qO3I9Xzw9aD8rK2o6LS1qKWYucHVzaChuW3JdLm5ldyk7ZWxzZSBzLnB1c2goUC1fKSx4LnB1c2goMCl9Zm9yKGsud3JpdGVVSW50MTYoMyksay53cml0ZVVJbnQxNigxKSxrLndyaXRlVUludDMyKDEyKSxrLndyaXRlVUludDE2KDQpLGsud3JpdGVVSW50MTYoMTYrOCpBKzIqZi5sZW5ndGgpLGsud3JpdGVVSW50MTYoMCksay53cml0ZVVJbnQxNihTKSxrLndyaXRlVUludDE2KEwpLGsud3JpdGVVSW50MTYoYyksay53cml0ZVVJbnQxNihOKSx6PTAscT11Lmxlbmd0aDt6PHE7eisrKXI9dVt6XSxrLndyaXRlVUludDE2KHIpO2ZvcihrLndyaXRlVUludDE2KDApLEg9MCxUPUYubGVuZ3RoO0g8VDtIKyspcj1GW0hdLGsud3JpdGVVSW50MTYocik7Zm9yKFY9MCxSPXMubGVuZ3RoO1Y8UjtWKyspYT1zW1ZdLGsud3JpdGVVSW50MTYoYSk7Zm9yKEc9MCxEPXgubGVuZ3RoO0c8RDtHKyspdz14W0ddLGsud3JpdGVVSW50MTYodyk7Zm9yKFk9MCxVPWYubGVuZ3RoO1k8VTtZKyspZD1mW1ldLGsud3JpdGVVSW50MTYoZCk7cmV0dXJue2NoYXJNYXA6bixzdWJ0YWJsZTprLmRhdGEsbWF4R2x5cGhJRDp2KzF9fX0sdH0oKSx5PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gZS5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBmKGUsaCksZS5wcm90b3R5cGUudGFnPVwiY21hcFwiLGUucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKHQpe3ZhciBlLG4scjtmb3IodC5wb3M9dGhpcy5vZmZzZXQsdGhpcy52ZXJzaW9uPXQucmVhZFVJbnQxNigpLG49dC5yZWFkVUludDE2KCksdGhpcy50YWJsZXM9W10sdGhpcy51bmljb2RlPW51bGwscj0wOzA8PW4/cjxuOm48cjswPD1uPysrcjotLXIpZT1uZXcgZCh0LHRoaXMub2Zmc2V0KSx0aGlzLnRhYmxlcy5wdXNoKGUpLGUuaXNVbmljb2RlJiZudWxsPT10aGlzLnVuaWNvZGUmJih0aGlzLnVuaWNvZGU9ZSk7cmV0dXJuITB9LGUuZW5jb2RlPWZ1bmN0aW9uKHQsZSl7dmFyIG4scjtyZXR1cm4gbnVsbD09ZSYmKGU9XCJtYWNyb21hblwiKSxuPWQuZW5jb2RlKHQsZSksKHI9bmV3IEopLndyaXRlVUludDE2KDApLHIud3JpdGVVSW50MTYoMSksbi50YWJsZT1yLmRhdGEuY29uY2F0KG4uc3VidGFibGUpLG59LGV9KCksZz1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIGUuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gZihlLGgpLGUucHJvdG90eXBlLnRhZz1cImhoZWFcIixlLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbih0KXtyZXR1cm4gdC5wb3M9dGhpcy5vZmZzZXQsdGhpcy52ZXJzaW9uPXQucmVhZEludCgpLHRoaXMuYXNjZW5kZXI9dC5yZWFkU2hvcnQoKSx0aGlzLmRlY2VuZGVyPXQucmVhZFNob3J0KCksdGhpcy5saW5lR2FwPXQucmVhZFNob3J0KCksdGhpcy5hZHZhbmNlV2lkdGhNYXg9dC5yZWFkU2hvcnQoKSx0aGlzLm1pbkxlZnRTaWRlQmVhcmluZz10LnJlYWRTaG9ydCgpLHRoaXMubWluUmlnaHRTaWRlQmVhcmluZz10LnJlYWRTaG9ydCgpLHRoaXMueE1heEV4dGVudD10LnJlYWRTaG9ydCgpLHRoaXMuY2FyZXRTbG9wZVJpc2U9dC5yZWFkU2hvcnQoKSx0aGlzLmNhcmV0U2xvcGVSdW49dC5yZWFkU2hvcnQoKSx0aGlzLmNhcmV0T2Zmc2V0PXQucmVhZFNob3J0KCksdC5wb3MrPTgsdGhpcy5tZXRyaWNEYXRhRm9ybWF0PXQucmVhZFNob3J0KCksdGhpcy5udW1iZXJPZk1ldHJpY3M9dC5yZWFkVUludDE2KCl9LGV9KCksbT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIGUuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gZihlLGgpLGUucHJvdG90eXBlLnRhZz1cIk9TLzJcIixlLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbihuKXtpZihuLnBvcz10aGlzLm9mZnNldCx0aGlzLnZlcnNpb249bi5yZWFkVUludDE2KCksdGhpcy5hdmVyYWdlQ2hhcldpZHRoPW4ucmVhZFNob3J0KCksdGhpcy53ZWlnaHRDbGFzcz1uLnJlYWRVSW50MTYoKSx0aGlzLndpZHRoQ2xhc3M9bi5yZWFkVUludDE2KCksdGhpcy50eXBlPW4ucmVhZFNob3J0KCksdGhpcy55U3Vic2NyaXB0WFNpemU9bi5yZWFkU2hvcnQoKSx0aGlzLnlTdWJzY3JpcHRZU2l6ZT1uLnJlYWRTaG9ydCgpLHRoaXMueVN1YnNjcmlwdFhPZmZzZXQ9bi5yZWFkU2hvcnQoKSx0aGlzLnlTdWJzY3JpcHRZT2Zmc2V0PW4ucmVhZFNob3J0KCksdGhpcy55U3VwZXJzY3JpcHRYU2l6ZT1uLnJlYWRTaG9ydCgpLHRoaXMueVN1cGVyc2NyaXB0WVNpemU9bi5yZWFkU2hvcnQoKSx0aGlzLnlTdXBlcnNjcmlwdFhPZmZzZXQ9bi5yZWFkU2hvcnQoKSx0aGlzLnlTdXBlcnNjcmlwdFlPZmZzZXQ9bi5yZWFkU2hvcnQoKSx0aGlzLnlTdHJpa2VvdXRTaXplPW4ucmVhZFNob3J0KCksdGhpcy55U3RyaWtlb3V0UG9zaXRpb249bi5yZWFkU2hvcnQoKSx0aGlzLmZhbWlseUNsYXNzPW4ucmVhZFNob3J0KCksdGhpcy5wYW5vc2U9ZnVuY3Rpb24oKXt2YXIgdCxlO2ZvcihlPVtdLHQ9MDt0PDEwOysrdCllLnB1c2gobi5yZWFkQnl0ZSgpKTtyZXR1cm4gZX0oKSx0aGlzLmNoYXJSYW5nZT1mdW5jdGlvbigpe3ZhciB0LGU7Zm9yKGU9W10sdD0wO3Q8NDsrK3QpZS5wdXNoKG4ucmVhZEludCgpKTtyZXR1cm4gZX0oKSx0aGlzLnZlbmRvcklEPW4ucmVhZFN0cmluZyg0KSx0aGlzLnNlbGVjdGlvbj1uLnJlYWRTaG9ydCgpLHRoaXMuZmlyc3RDaGFySW5kZXg9bi5yZWFkU2hvcnQoKSx0aGlzLmxhc3RDaGFySW5kZXg9bi5yZWFkU2hvcnQoKSwwPHRoaXMudmVyc2lvbiYmKHRoaXMuYXNjZW50PW4ucmVhZFNob3J0KCksdGhpcy5kZXNjZW50PW4ucmVhZFNob3J0KCksdGhpcy5saW5lR2FwPW4ucmVhZFNob3J0KCksdGhpcy53aW5Bc2NlbnQ9bi5yZWFkU2hvcnQoKSx0aGlzLndpbkRlc2NlbnQ9bi5yZWFkU2hvcnQoKSx0aGlzLmNvZGVQYWdlUmFuZ2U9ZnVuY3Rpb24oKXt2YXIgdCxlO2ZvcihlPVtdLHQ9MDt0PDI7Kyt0KWUucHVzaChuLnJlYWRJbnQoKSk7cmV0dXJuIGV9KCksMTx0aGlzLnZlcnNpb24pKXJldHVybiB0aGlzLnhIZWlnaHQ9bi5yZWFkU2hvcnQoKSx0aGlzLmNhcEhlaWdodD1uLnJlYWRTaG9ydCgpLHRoaXMuZGVmYXVsdENoYXI9bi5yZWFkU2hvcnQoKSx0aGlzLmJyZWFrQ2hhcj1uLnJlYWRTaG9ydCgpLHRoaXMubWF4Q29udGV4dD1uLnJlYWRTaG9ydCgpfSxlfSgpLHY9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBlLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9cmV0dXJuIGYoZSxoKSxlLnByb3RvdHlwZS50YWc9XCJwb3N0XCIsZS5wcm90b3R5cGUucGFyc2U9ZnVuY3Rpb24ocil7dmFyIHQsZSxuLGk7c3dpdGNoKHIucG9zPXRoaXMub2Zmc2V0LHRoaXMuZm9ybWF0PXIucmVhZEludCgpLHRoaXMuaXRhbGljQW5nbGU9ci5yZWFkSW50KCksdGhpcy51bmRlcmxpbmVQb3NpdGlvbj1yLnJlYWRTaG9ydCgpLHRoaXMudW5kZXJsaW5lVGhpY2tuZXNzPXIucmVhZFNob3J0KCksdGhpcy5pc0ZpeGVkUGl0Y2g9ci5yZWFkSW50KCksdGhpcy5taW5NZW1UeXBlNDI9ci5yZWFkSW50KCksdGhpcy5tYXhNZW1UeXBlNDI9ci5yZWFkSW50KCksdGhpcy5taW5NZW1UeXBlMT1yLnJlYWRJbnQoKSx0aGlzLm1heE1lbVR5cGUxPXIucmVhZEludCgpLHRoaXMuZm9ybWF0KXtjYXNlIDY1NTM2OmJyZWFrO2Nhc2UgMTMxMDcyOmZvcihlPXIucmVhZFVJbnQxNigpLHRoaXMuZ2x5cGhOYW1lSW5kZXg9W10sbj0wOzA8PWU/bjxlOmU8bjswPD1lPysrbjotLW4pdGhpcy5nbHlwaE5hbWVJbmRleC5wdXNoKHIucmVhZFVJbnQxNigpKTtmb3IodGhpcy5uYW1lcz1bXSxpPVtdO3IucG9zPHRoaXMub2Zmc2V0K3RoaXMubGVuZ3RoOyl0PXIucmVhZEJ5dGUoKSxpLnB1c2godGhpcy5uYW1lcy5wdXNoKHIucmVhZFN0cmluZyh0KSkpO3JldHVybiBpO2Nhc2UgMTUxNTUyOnJldHVybiBlPXIucmVhZFVJbnQxNigpLHRoaXMub2Zmc2V0cz1yLnJlYWQoZSk7Y2FzZSAxOTY2MDg6YnJlYWs7Y2FzZSAyNjIxNDQ6cmV0dXJuIHRoaXMubWFwPWZ1bmN0aW9uKCl7dmFyIHQsZSxuO2ZvcihuPVtdLHQ9MCxlPXRoaXMuZmlsZS5tYXhwLm51bUdseXBoczswPD1lP3Q8ZTplPHQ7MDw9ZT8rK3Q6LS10KW4ucHVzaChyLnJlYWRVSW50MzIoKSk7cmV0dXJuIG59LmNhbGwodGhpcyl9fSxlfSgpLHc9ZnVuY3Rpb24odCxlKXt0aGlzLnJhdz10LHRoaXMubGVuZ3RoPXQubGVuZ3RoLHRoaXMucGxhdGZvcm1JRD1lLnBsYXRmb3JtSUQsdGhpcy5lbmNvZGluZ0lEPWUuZW5jb2RpbmdJRCx0aGlzLmxhbmd1YWdlSUQ9ZS5sYW5ndWFnZUlEfSxiPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gZS5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBmKGUsaCksZS5wcm90b3R5cGUudGFnPVwibmFtZVwiLGUucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKHQpe3ZhciBlLG4scixpLG8sYSxzLGwsaCx1LGMsZjtmb3IodC5wb3M9dGhpcy5vZmZzZXQsdC5yZWFkU2hvcnQoKSxlPXQucmVhZFNob3J0KCksYT10LnJlYWRTaG9ydCgpLG49W10saT1oPTA7MDw9ZT9oPGU6ZTxoO2k9MDw9ZT8rK2g6LS1oKW4ucHVzaCh7cGxhdGZvcm1JRDp0LnJlYWRTaG9ydCgpLGVuY29kaW5nSUQ6dC5yZWFkU2hvcnQoKSxsYW5ndWFnZUlEOnQucmVhZFNob3J0KCksbmFtZUlEOnQucmVhZFNob3J0KCksbGVuZ3RoOnQucmVhZFNob3J0KCksb2Zmc2V0OnRoaXMub2Zmc2V0K2ErdC5yZWFkU2hvcnQoKX0pO2ZvcihzPXt9LGk9dT0wLGM9bi5sZW5ndGg7dTxjO2k9Kyt1KXI9bltpXSx0LnBvcz1yLm9mZnNldCxsPXQucmVhZFN0cmluZyhyLmxlbmd0aCksbz1uZXcgdyhsLHIpLG51bGw9PXNbZj1yLm5hbWVJRF0mJihzW2ZdPVtdKSxzW3IubmFtZUlEXS5wdXNoKG8pO3RoaXMuc3RyaW5ncz1zLHRoaXMuY29weXJpZ2h0PXNbMF0sdGhpcy5mb250RmFtaWx5PXNbMV0sdGhpcy5mb250U3ViZmFtaWx5PXNbMl0sdGhpcy51bmlxdWVTdWJmYW1pbHk9c1szXSx0aGlzLmZvbnROYW1lPXNbNF0sdGhpcy52ZXJzaW9uPXNbNV07dHJ5e3RoaXMucG9zdHNjcmlwdE5hbWU9c1s2XVswXS5yYXcucmVwbGFjZSgvW1xceDAwLVxceDE5XFx4ODAtXFx4ZmZdL2csXCJcIil9Y2F0Y2godCl7dGhpcy5wb3N0c2NyaXB0TmFtZT1zWzRdWzBdLnJhdy5yZXBsYWNlKC9bXFx4MDAtXFx4MTlcXHg4MC1cXHhmZl0vZyxcIlwiKX1yZXR1cm4gdGhpcy50cmFkZW1hcms9c1s3XSx0aGlzLm1hbnVmYWN0dXJlcj1zWzhdLHRoaXMuZGVzaWduZXI9c1s5XSx0aGlzLmRlc2NyaXB0aW9uPXNbMTBdLHRoaXMudmVuZG9yVXJsPXNbMTFdLHRoaXMuZGVzaWduZXJVcmw9c1sxMl0sdGhpcy5saWNlbnNlPXNbMTNdLHRoaXMubGljZW5zZVVybD1zWzE0XSx0aGlzLnByZWZlcnJlZEZhbWlseT1zWzE1XSx0aGlzLnByZWZlcnJlZFN1YmZhbWlseT1zWzE3XSx0aGlzLmNvbXBhdGlibGVGdWxsPXNbMThdLHRoaXMuc2FtcGxlVGV4dD1zWzE5XX0sZX0oKSx4PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gZS5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBmKGUsaCksZS5wcm90b3R5cGUudGFnPVwibWF4cFwiLGUucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKHQpe3JldHVybiB0LnBvcz10aGlzLm9mZnNldCx0aGlzLnZlcnNpb249dC5yZWFkSW50KCksdGhpcy5udW1HbHlwaHM9dC5yZWFkVUludDE2KCksdGhpcy5tYXhQb2ludHM9dC5yZWFkVUludDE2KCksdGhpcy5tYXhDb250b3Vycz10LnJlYWRVSW50MTYoKSx0aGlzLm1heENvbXBvc2l0ZVBvaW50cz10LnJlYWRVSW50MTYoKSx0aGlzLm1heENvbXBvbmVudENvbnRvdXJzPXQucmVhZFVJbnQxNigpLHRoaXMubWF4Wm9uZXM9dC5yZWFkVUludDE2KCksdGhpcy5tYXhUd2lsaWdodFBvaW50cz10LnJlYWRVSW50MTYoKSx0aGlzLm1heFN0b3JhZ2U9dC5yZWFkVUludDE2KCksdGhpcy5tYXhGdW5jdGlvbkRlZnM9dC5yZWFkVUludDE2KCksdGhpcy5tYXhJbnN0cnVjdGlvbkRlZnM9dC5yZWFkVUludDE2KCksdGhpcy5tYXhTdGFja0VsZW1lbnRzPXQucmVhZFVJbnQxNigpLHRoaXMubWF4U2l6ZU9mSW5zdHJ1Y3Rpb25zPXQucmVhZFVJbnQxNigpLHRoaXMubWF4Q29tcG9uZW50RWxlbWVudHM9dC5yZWFkVUludDE2KCksdGhpcy5tYXhDb21wb25lbnREZXB0aD10LnJlYWRVSW50MTYoKX0sZX0oKSxOPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gZS5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBmKGUsaCksZS5wcm90b3R5cGUudGFnPVwiaG10eFwiLGUucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKG4pe3ZhciB0LHIsaSxlLG8sYSxzO2ZvcihuLnBvcz10aGlzLm9mZnNldCx0aGlzLm1ldHJpY3M9W10sZT0wLGE9dGhpcy5maWxlLmhoZWEubnVtYmVyT2ZNZXRyaWNzOzA8PWE/ZTxhOmE8ZTswPD1hPysrZTotLWUpdGhpcy5tZXRyaWNzLnB1c2goe2FkdmFuY2U6bi5yZWFkVUludDE2KCksbHNiOm4ucmVhZEludDE2KCl9KTtmb3Iocj10aGlzLmZpbGUubWF4cC5udW1HbHlwaHMtdGhpcy5maWxlLmhoZWEubnVtYmVyT2ZNZXRyaWNzLHRoaXMubGVmdFNpZGVCZWFyaW5ncz1mdW5jdGlvbigpe3ZhciB0LGU7Zm9yKGU9W10sdD0wOzA8PXI/dDxyOnI8dDswPD1yPysrdDotLXQpZS5wdXNoKG4ucmVhZEludDE2KCkpO3JldHVybiBlfSgpLHRoaXMud2lkdGhzPWZ1bmN0aW9uKCl7dmFyIHQsZSxuLHI7Zm9yKHI9W10sdD0wLGU9KG49dGhpcy5tZXRyaWNzKS5sZW5ndGg7dDxlO3QrKylpPW5bdF0sci5wdXNoKGkuYWR2YW5jZSk7cmV0dXJuIHJ9LmNhbGwodGhpcyksdD10aGlzLndpZHRoc1t0aGlzLndpZHRocy5sZW5ndGgtMV0scz1bXSxvPTA7MDw9cj9vPHI6cjxvOzA8PXI/KytvOi0tbylzLnB1c2godGhpcy53aWR0aHMucHVzaCh0KSk7cmV0dXJuIHN9LGUucHJvdG90eXBlLmZvckdseXBoPWZ1bmN0aW9uKHQpe3JldHVybiB0IGluIHRoaXMubWV0cmljcz90aGlzLm1ldHJpY3NbdF06e2FkdmFuY2U6dGhpcy5tZXRyaWNzW3RoaXMubWV0cmljcy5sZW5ndGgtMV0uYWR2YW5jZSxsc2I6dGhpcy5sZWZ0U2lkZUJlYXJpbmdzW3QtdGhpcy5tZXRyaWNzLmxlbmd0aF19fSxlfSgpLEw9W10uc2xpY2UsQT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIGUuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gZihlLGgpLGUucHJvdG90eXBlLnRhZz1cImdseWZcIixlLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5jYWNoZT17fX0sZS5wcm90b3R5cGUuZ2x5cGhGb3I9ZnVuY3Rpb24odCl7dmFyIGUsbixyLGksbyxhLHMsbCxoLHU7cmV0dXJuKHQ9dClpbiB0aGlzLmNhY2hlP3RoaXMuY2FjaGVbdF06KGk9dGhpcy5maWxlLmxvY2EsZT10aGlzLmZpbGUuY29udGVudHMsbj1pLmluZGV4T2YodCksMD09PShyPWkubGVuZ3RoT2YodCkpP3RoaXMuY2FjaGVbdF09bnVsbDooZS5wb3M9dGhpcy5vZmZzZXQrbixvPShhPW5ldyBKKGUucmVhZChyKSkpLnJlYWRTaG9ydCgpLGw9YS5yZWFkU2hvcnQoKSx1PWEucmVhZFNob3J0KCkscz1hLnJlYWRTaG9ydCgpLGg9YS5yZWFkU2hvcnQoKSx0aGlzLmNhY2hlW3RdPS0xPT09bz9uZXcgXyhhLGwsdSxzLGgpOm5ldyBTKGEsbyxsLHUscyxoKSx0aGlzLmNhY2hlW3RdKSl9LGUucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbih0LGUsbil7dmFyIHIsaSxvLGEscztmb3Iobz1bXSxpPVtdLGE9MCxzPWUubGVuZ3RoO2E8czthKyspcj10W2VbYV1dLGkucHVzaChvLmxlbmd0aCksciYmKG89by5jb25jYXQoci5lbmNvZGUobikpKTtyZXR1cm4gaS5wdXNoKG8ubGVuZ3RoKSx7dGFibGU6byxvZmZzZXRzOml9fSxlfSgpLFM9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxuLHIsaSxvKXt0aGlzLnJhdz10LHRoaXMubnVtYmVyT2ZDb250b3Vycz1lLHRoaXMueE1pbj1uLHRoaXMueU1pbj1yLHRoaXMueE1heD1pLHRoaXMueU1heD1vLHRoaXMuY29tcG91bmQ9ITF9cmV0dXJuIHQucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJhdy5kYXRhfSx0fSgpLF89ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxuLHIsaSl7dmFyIG8sYTtmb3IodGhpcy5yYXc9dCx0aGlzLnhNaW49ZSx0aGlzLnlNaW49bix0aGlzLnhNYXg9cix0aGlzLnlNYXg9aSx0aGlzLmNvbXBvdW5kPSEwLHRoaXMuZ2x5cGhJRHM9W10sdGhpcy5nbHlwaE9mZnNldHM9W10sbz10aGlzLnJhdzthPW8ucmVhZFNob3J0KCksdGhpcy5nbHlwaE9mZnNldHMucHVzaChvLnBvcyksdGhpcy5nbHlwaElEcy5wdXNoKG8ucmVhZFNob3J0KCkpLDMyJmE7KW8ucG9zKz0xJmE/NDoyLDEyOCZhP28ucG9zKz04OjY0JmE/by5wb3MrPTQ6OCZhJiYoby5wb3MrPTIpfXJldHVybiAxLDgsMzIsNjQsMTI4LHQucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbih0KXt2YXIgZSxuLHIsaSxvO2ZvcihuPW5ldyBKKEwuY2FsbCh0aGlzLnJhdy5kYXRhKSksZT1yPTAsaT0obz10aGlzLmdseXBoSURzKS5sZW5ndGg7cjxpO2U9KytyKW9bZV0sbi5wb3M9dGhpcy5nbHlwaE9mZnNldHNbZV07cmV0dXJuIG4uZGF0YX0sdH0oKSxGPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gZS5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBmKGUsaCksZS5wcm90b3R5cGUudGFnPVwibG9jYVwiLGUucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKHIpe3ZhciB0O3JldHVybiByLnBvcz10aGlzLm9mZnNldCx0PXRoaXMuZmlsZS5oZWFkLmluZGV4VG9Mb2NGb3JtYXQsdGhpcy5vZmZzZXRzPTA9PT10P2Z1bmN0aW9uKCl7dmFyIHQsZSxuO2ZvcihuPVtdLHQ9MCxlPXRoaXMubGVuZ3RoO3Q8ZTt0Kz0yKW4ucHVzaCgyKnIucmVhZFVJbnQxNigpKTtyZXR1cm4gbn0uY2FsbCh0aGlzKTpmdW5jdGlvbigpe3ZhciB0LGUsbjtmb3Iobj1bXSx0PTAsZT10aGlzLmxlbmd0aDt0PGU7dCs9NCluLnB1c2goci5yZWFkVUludDMyKCkpO3JldHVybiBufS5jYWxsKHRoaXMpfSxlLnByb3RvdHlwZS5pbmRleE9mPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm9mZnNldHNbdF19LGUucHJvdG90eXBlLmxlbmd0aE9mPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm9mZnNldHNbdCsxXS10aGlzLm9mZnNldHNbdF19LGUucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1uZXcgVWludDMyQXJyYXkodGhpcy5vZmZzZXRzLmxlbmd0aCkscj0wLGk9MCxvPTA7bzxuLmxlbmd0aDsrK28paWYobltvXT1yLGk8ZS5sZW5ndGgmJmVbaV09PW8peysraSxuW29dPXI7dmFyIGE9dGhpcy5vZmZzZXRzW29dLHM9dGhpcy5vZmZzZXRzW28rMV0tYTswPHMmJihyKz1zKX1mb3IodmFyIGw9bmV3IEFycmF5KDQqbi5sZW5ndGgpLGg9MDtoPG4ubGVuZ3RoOysraClsWzQqaCszXT0yNTUmbltoXSxsWzQqaCsyXT0oNjUyODAmbltoXSk+PjgsbFs0KmgrMV09KDE2NzExNjgwJm5baF0pPj4xNixsWzQqaF09KDQyNzgxOTAwODAmbltoXSk+PjI0O3JldHVybiBsfSxlfSgpLFA9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuZm9udD10LHRoaXMuc3Vic2V0PXt9LHRoaXMudW5pY29kZXM9e30sdGhpcy5uZXh0PTMzfXJldHVybiB0LnByb3RvdHlwZS5nZW5lcmF0ZUNtYXA9ZnVuY3Rpb24oKXt2YXIgdCxlLG4scixpO2ZvcihlIGluIHI9dGhpcy5mb250LmNtYXAudGFibGVzWzBdLmNvZGVNYXAsdD17fSxpPXRoaXMuc3Vic2V0KW49aVtlXSx0W2VdPXJbbl07cmV0dXJuIHR9LHQucHJvdG90eXBlLmdseXBoc0Zvcj1mdW5jdGlvbih0KXt2YXIgZSxuLHIsaSxvLGEscztmb3Iocj17fSxvPTAsYT10Lmxlbmd0aDtvPGE7bysrKXJbaT10W29dXT10aGlzLmZvbnQuZ2x5Zi5nbHlwaEZvcihpKTtmb3IoaSBpbiBlPVtdLHIpKG51bGwhPShuPXJbaV0pP24uY29tcG91bmQ6dm9pZCAwKSYmZS5wdXNoLmFwcGx5KGUsbi5nbHlwaElEcyk7aWYoMDxlLmxlbmd0aClmb3IoaSBpbiBzPXRoaXMuZ2x5cGhzRm9yKGUpKW49c1tpXSxyW2ldPW47cmV0dXJuIHJ9LHQucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbih0LGUpe3ZhciBuLHIsaSxvLGEscyxsLGgsdSxjLGYscCxkLGcsbTtmb3IociBpbiBuPXkuZW5jb2RlKHRoaXMuZ2VuZXJhdGVDbWFwKCksXCJ1bmljb2RlXCIpLG89dGhpcy5nbHlwaHNGb3IodCksZj17MDowfSxtPW4uY2hhck1hcClmWyhzPW1bcl0pLm9sZF09cy5uZXc7Zm9yKHAgaW4gYz1uLm1heEdseXBoSUQsbylwIGluIGZ8fChmW3BdPWMrKyk7cmV0dXJuIGg9ZnVuY3Rpb24odCl7dmFyIGUsbjtmb3IoZSBpbiBuPXt9LHQpblt0W2VdXT1lO3JldHVybiBufShmKSx1PU9iamVjdC5rZXlzKGgpLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1lfSksZD1mdW5jdGlvbigpe3ZhciB0LGUsbjtmb3Iobj1bXSx0PTAsZT11Lmxlbmd0aDt0PGU7dCsrKWE9dVt0XSxuLnB1c2goaFthXSk7cmV0dXJuIG59KCksaT10aGlzLmZvbnQuZ2x5Zi5lbmNvZGUobyxkLGYpLGw9dGhpcy5mb250LmxvY2EuZW5jb2RlKGkub2Zmc2V0cyxkKSxnPXtjbWFwOnRoaXMuZm9udC5jbWFwLnJhdygpLGdseWY6aS50YWJsZSxsb2NhOmwsaG10eDp0aGlzLmZvbnQuaG10eC5yYXcoKSxoaGVhOnRoaXMuZm9udC5oaGVhLnJhdygpLG1heHA6dGhpcy5mb250Lm1heHAucmF3KCkscG9zdDp0aGlzLmZvbnQucG9zdC5yYXcoKSxuYW1lOnRoaXMuZm9udC5uYW1lLnJhdygpLGhlYWQ6dGhpcy5mb250LmhlYWQuZW5jb2RlKGUpfSx0aGlzLmZvbnQub3MyLmV4aXN0cyYmKGdbXCJPUy8yXCJdPXRoaXMuZm9udC5vczIucmF3KCkpLHRoaXMuZm9udC5kaXJlY3RvcnkuZW5jb2RlKGcpfSx0fSgpO3QuQVBJLlBERk9iamVjdD1mdW5jdGlvbigpe3ZhciBvO2Z1bmN0aW9uIGEoKXt9cmV0dXJuIG89ZnVuY3Rpb24odCxlKXtyZXR1cm4oQXJyYXkoZSsxKS5qb2luKFwiMFwiKSt0KS5zbGljZSgtZSl9LGEuY29udmVydD1mdW5jdGlvbihyKXt2YXIgaSx0LGUsbjtpZihBcnJheS5pc0FycmF5KHIpKXJldHVyblwiW1wiK2Z1bmN0aW9uKCl7dmFyIHQsZSxuO2ZvcihuPVtdLHQ9MCxlPXIubGVuZ3RoO3Q8ZTt0KyspaT1yW3RdLG4ucHVzaChhLmNvbnZlcnQoaSkpO3JldHVybiBufSgpLmpvaW4oXCIgXCIpK1wiXVwiO2lmKFwic3RyaW5nXCI9PXR5cGVvZiByKXJldHVyblwiL1wiK3I7aWYobnVsbCE9cj9yLmlzU3RyaW5nOnZvaWQgMClyZXR1cm5cIihcIityK1wiKVwiO2lmKHIgaW5zdGFuY2VvZiBEYXRlKXJldHVyblwiKEQ6XCIrbyhyLmdldFVUQ0Z1bGxZZWFyKCksNCkrbyhyLmdldFVUQ01vbnRoKCksMikrbyhyLmdldFVUQ0RhdGUoKSwyKStvKHIuZ2V0VVRDSG91cnMoKSwyKStvKHIuZ2V0VVRDTWludXRlcygpLDIpK28oci5nZXRVVENTZWNvbmRzKCksMikrXCJaKVwiO2lmKFwiW29iamVjdCBPYmplY3RdXCIhPT17fS50b1N0cmluZy5jYWxsKHIpKXJldHVyblwiXCIrcjtmb3IodCBpbiBlPVtcIjw8XCJdLHIpbj1yW3RdLGUucHVzaChcIi9cIit0K1wiIFwiK2EuY29udmVydChuKSk7cmV0dXJuIGUucHVzaChcIj4+XCIpLGUuam9pbihcIlxcblwiKX0sYX0oKX0obHQpLFxuLypcbiAgIyBQTkcuanNcbiAgIyBDb3B5cmlnaHQgKGMpIDIwMTEgRGV2b24gR292ZXR0XG4gICMgTUlUIExJQ0VOU0VcbiAgIyBcbiAgIyBcbiAgKi9cbk50PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmJiZzZWxmfHxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3d8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWwmJmdsb2JhbHx8RnVuY3Rpb24oJ3JldHVybiB0eXBlb2YgdGhpcyA9PT0gXCJvYmplY3RcIiAmJiB0aGlzLmNvbnRlbnQnKSgpfHxGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCksTHQ9ZnVuY3Rpb24oKXt2YXIgaCxuLHI7ZnVuY3Rpb24gaSh0KXt2YXIgZSxuLHIsaSxvLGEscyxsLGgsdSxjLGYscCxkO2Zvcih0aGlzLmRhdGE9dCx0aGlzLnBvcz04LHRoaXMucGFsZXR0ZT1bXSx0aGlzLmltZ0RhdGE9W10sdGhpcy50cmFuc3BhcmVuY3k9e30sdGhpcy5hbmltYXRpb249bnVsbCx0aGlzLnRleHQ9e30sYT1udWxsOzspe3N3aXRjaChlPXRoaXMucmVhZFVJbnQzMigpLGg9ZnVuY3Rpb24oKXt2YXIgdCxlO2ZvcihlPVtdLHQ9MDt0PDQ7Kyt0KWUucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMuZGF0YVt0aGlzLnBvcysrXSkpO3JldHVybiBlfS5jYWxsKHRoaXMpLmpvaW4oXCJcIikpe2Nhc2VcIklIRFJcIjp0aGlzLndpZHRoPXRoaXMucmVhZFVJbnQzMigpLHRoaXMuaGVpZ2h0PXRoaXMucmVhZFVJbnQzMigpLHRoaXMuYml0cz10aGlzLmRhdGFbdGhpcy5wb3MrK10sdGhpcy5jb2xvclR5cGU9dGhpcy5kYXRhW3RoaXMucG9zKytdLHRoaXMuY29tcHJlc3Npb25NZXRob2Q9dGhpcy5kYXRhW3RoaXMucG9zKytdLHRoaXMuZmlsdGVyTWV0aG9kPXRoaXMuZGF0YVt0aGlzLnBvcysrXSx0aGlzLmludGVybGFjZU1ldGhvZD10aGlzLmRhdGFbdGhpcy5wb3MrK107YnJlYWs7Y2FzZVwiYWNUTFwiOnRoaXMuYW5pbWF0aW9uPXtudW1GcmFtZXM6dGhpcy5yZWFkVUludDMyKCksbnVtUGxheXM6dGhpcy5yZWFkVUludDMyKCl8fDEvMCxmcmFtZXM6W119O2JyZWFrO2Nhc2VcIlBMVEVcIjp0aGlzLnBhbGV0dGU9dGhpcy5yZWFkKGUpO2JyZWFrO2Nhc2VcImZjVExcIjphJiZ0aGlzLmFuaW1hdGlvbi5mcmFtZXMucHVzaChhKSx0aGlzLnBvcys9NCxhPXt3aWR0aDp0aGlzLnJlYWRVSW50MzIoKSxoZWlnaHQ6dGhpcy5yZWFkVUludDMyKCkseE9mZnNldDp0aGlzLnJlYWRVSW50MzIoKSx5T2Zmc2V0OnRoaXMucmVhZFVJbnQzMigpfSxvPXRoaXMucmVhZFVJbnQxNigpLGk9dGhpcy5yZWFkVUludDE2KCl8fDEwMCxhLmRlbGF5PTFlMypvL2ksYS5kaXNwb3NlT3A9dGhpcy5kYXRhW3RoaXMucG9zKytdLGEuYmxlbmRPcD10aGlzLmRhdGFbdGhpcy5wb3MrK10sYS5kYXRhPVtdO2JyZWFrO2Nhc2VcIklEQVRcIjpjYXNlXCJmZEFUXCI6Zm9yKFwiZmRBVFwiPT09aCYmKHRoaXMucG9zKz00LGUtPTQpLHQ9KG51bGwhPWE/YS5kYXRhOnZvaWQgMCl8fHRoaXMuaW1nRGF0YSxmPTA7MDw9ZT9mPGU6ZTxmOzA8PWU/KytmOi0tZil0LnB1c2godGhpcy5kYXRhW3RoaXMucG9zKytdKTticmVhaztjYXNlXCJ0Uk5TXCI6c3dpdGNoKHRoaXMudHJhbnNwYXJlbmN5PXt9LHRoaXMuY29sb3JUeXBlKXtjYXNlIDM6aWYocj10aGlzLnBhbGV0dGUubGVuZ3RoLzMsdGhpcy50cmFuc3BhcmVuY3kuaW5kZXhlZD10aGlzLnJlYWQoZSksdGhpcy50cmFuc3BhcmVuY3kuaW5kZXhlZC5sZW5ndGg+cil0aHJvdyBuZXcgRXJyb3IoXCJNb3JlIHRyYW5zcGFyZW50IGNvbG9ycyB0aGFuIHBhbGV0dGUgc2l6ZVwiKTtpZigwPCh1PXItdGhpcy50cmFuc3BhcmVuY3kuaW5kZXhlZC5sZW5ndGgpKWZvcihwPTA7MDw9dT9wPHU6dTxwOzA8PXU/KytwOi0tcCl0aGlzLnRyYW5zcGFyZW5jeS5pbmRleGVkLnB1c2goMjU1KTticmVhaztjYXNlIDA6dGhpcy50cmFuc3BhcmVuY3kuZ3JheXNjYWxlPXRoaXMucmVhZChlKVswXTticmVhaztjYXNlIDI6dGhpcy50cmFuc3BhcmVuY3kucmdiPXRoaXMucmVhZChlKX1icmVhaztjYXNlXCJ0RVh0XCI6cz0oYz10aGlzLnJlYWQoZSkpLmluZGV4T2YoMCksbD1TdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxjLnNsaWNlKDAscykpLHRoaXMudGV4dFtsXT1TdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxjLnNsaWNlKHMrMSkpO2JyZWFrO2Nhc2VcIklFTkRcIjpyZXR1cm4gYSYmdGhpcy5hbmltYXRpb24uZnJhbWVzLnB1c2goYSksdGhpcy5jb2xvcnM9ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5jb2xvclR5cGUpe2Nhc2UgMDpjYXNlIDM6Y2FzZSA0OnJldHVybiAxO2Nhc2UgMjpjYXNlIDY6cmV0dXJuIDN9fS5jYWxsKHRoaXMpLHRoaXMuaGFzQWxwaGFDaGFubmVsPTQ9PT0oZD10aGlzLmNvbG9yVHlwZSl8fDY9PT1kLG49dGhpcy5jb2xvcnMrKHRoaXMuaGFzQWxwaGFDaGFubmVsPzE6MCksdGhpcy5waXhlbEJpdGxlbmd0aD10aGlzLmJpdHMqbix0aGlzLmNvbG9yU3BhY2U9ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5jb2xvcnMpe2Nhc2UgMTpyZXR1cm5cIkRldmljZUdyYXlcIjtjYXNlIDM6cmV0dXJuXCJEZXZpY2VSR0JcIn19LmNhbGwodGhpcyksdm9pZCh0aGlzLmltZ0RhdGE9bmV3IFVpbnQ4QXJyYXkodGhpcy5pbWdEYXRhKSk7ZGVmYXVsdDp0aGlzLnBvcys9ZX1pZih0aGlzLnBvcys9NCx0aGlzLnBvcz50aGlzLmRhdGEubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkluY29tcGxldGUgb3IgY29ycnVwdCBQTkcgZmlsZVwiKX19aS5sb2FkPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcjtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlJiYobj1lKSwocj1uZXcgWE1MSHR0cFJlcXVlc3QpLm9wZW4oXCJHRVRcIix0LCEwKSxyLnJlc3BvbnNlVHlwZT1cImFycmF5YnVmZmVyXCIsci5vbmxvYWQ9ZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gdD1uZXcgaShuZXcgVWludDhBcnJheShyLnJlc3BvbnNlfHxyLm1velJlc3BvbnNlQXJyYXlCdWZmZXIpKSxcImZ1bmN0aW9uXCI9PXR5cGVvZihudWxsIT1lP2UuZ2V0Q29udGV4dDp2b2lkIDApJiZ0LnJlbmRlcihlKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24odCk6dm9pZCAwfSxyLnNlbmQobnVsbCl9LGkucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24odCl7dmFyIGUsbjtmb3Iobj1bXSxlPTA7MDw9dD9lPHQ6dDxlOzA8PXQ/KytlOi0tZSluLnB1c2godGhpcy5kYXRhW3RoaXMucG9zKytdKTtyZXR1cm4gbn0saS5wcm90b3R5cGUucmVhZFVJbnQzMj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRhdGFbdGhpcy5wb3MrK108PDI0fHRoaXMuZGF0YVt0aGlzLnBvcysrXTw8MTZ8dGhpcy5kYXRhW3RoaXMucG9zKytdPDw4fHRoaXMuZGF0YVt0aGlzLnBvcysrXX0saS5wcm90b3R5cGUucmVhZFVJbnQxNj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRhdGFbdGhpcy5wb3MrK108PDh8dGhpcy5kYXRhW3RoaXMucG9zKytdfSxpLnByb3RvdHlwZS5kZWNvZGVQaXhlbHM9ZnVuY3Rpb24oQyl7dmFyIEI9dGhpcy5waXhlbEJpdGxlbmd0aC84LGo9bmV3IFVpbnQ4QXJyYXkodGhpcy53aWR0aCp0aGlzLmhlaWdodCpCKSxFPTAsTT10aGlzO2lmKG51bGw9PUMmJihDPXRoaXMuaW1nRGF0YSksMD09PUMubGVuZ3RoKXJldHVybiBuZXcgVWludDhBcnJheSgwKTtmdW5jdGlvbiB0KHQsZSxuLHIpe3ZhciBpLG8sYSxzLGwsaCx1LGMsZixwLGQsZyxtLHksdix3LGIseCxOLEwsQSxTPU1hdGguY2VpbCgoTS53aWR0aC10KS9uKSxfPU1hdGguY2VpbCgoTS5oZWlnaHQtZSkvciksRj1NLndpZHRoPT1TJiZNLmhlaWdodD09Xztmb3IoeT1CKlMsZz1GP2o6bmV3IFVpbnQ4QXJyYXkoeSpfKSxoPUMubGVuZ3RoLG89bT0wO208XyYmRTxoOyl7c3dpdGNoKENbRSsrXSl7Y2FzZSAwOmZvcihzPWI9MDtiPHk7cz1iKz0xKWdbbysrXT1DW0UrK107YnJlYWs7Y2FzZSAxOmZvcihzPXg9MDt4PHk7cz14Kz0xKWk9Q1tFKytdLGw9czxCPzA6Z1tvLUJdLGdbbysrXT0oaStsKSUyNTY7YnJlYWs7Y2FzZSAyOmZvcihzPU49MDtOPHk7cz1OKz0xKWk9Q1tFKytdLGE9KHMtcyVCKS9CLHY9bSYmZ1sobS0xKSp5K2EqQitzJUJdLGdbbysrXT0oditpKSUyNTY7YnJlYWs7Y2FzZSAzOmZvcihzPUw9MDtMPHk7cz1MKz0xKWk9Q1tFKytdLGE9KHMtcyVCKS9CLGw9czxCPzA6Z1tvLUJdLHY9bSYmZ1sobS0xKSp5K2EqQitzJUJdLGdbbysrXT0oaStNYXRoLmZsb29yKChsK3YpLzIpKSUyNTY7YnJlYWs7Y2FzZSA0OmZvcihzPUE9MDtBPHk7cz1BKz0xKWk9Q1tFKytdLGE9KHMtcyVCKS9CLGw9czxCPzA6Z1tvLUJdLDA9PT1tP3Y9dz0wOih2PWdbKG0tMSkqeSthKkIrcyVCXSx3PWEmJmdbKG0tMSkqeSsoYS0xKSpCK3MlQl0pLHU9bCt2LXcsYz1NYXRoLmFicyh1LWwpLHA9TWF0aC5hYnModS12KSxkPU1hdGguYWJzKHUtdyksZj1jPD1wJiZjPD1kP2w6cDw9ZD92OncsZ1tvKytdPShpK2YpJTI1NjticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZmlsdGVyIGFsZ29yaXRobTogXCIrQ1tFLTFdKX1pZighRil7dmFyIFA9KChlK20qcikqTS53aWR0aCt0KSpCLGs9bSp5O2ZvcihzPTA7czxTO3MrPTEpe2Zvcih2YXIgST0wO0k8QjtJKz0xKWpbUCsrXT1nW2srK107UCs9KG4tMSkqQn19bSsrfX1yZXR1cm4gQz0oQz1uZXcga3QoQykpLmdldEJ5dGVzKCksMT09TS5pbnRlcmxhY2VNZXRob2Q/KHQoMCwwLDgsOCksdCg0LDAsOCw4KSx0KDAsNCw0LDgpLHQoMiwwLDQsNCksdCgwLDIsMiw0KSx0KDEsMCwyLDIpLHQoMCwxLDEsMikpOnQoMCwwLDEsMSksan0saS5wcm90b3R5cGUuZGVjb2RlUGFsZXR0ZT1mdW5jdGlvbigpe3ZhciB0LGUsbixyLGksbyxhLHMsbDtmb3Iobj10aGlzLnBhbGV0dGUsbz10aGlzLnRyYW5zcGFyZW5jeS5pbmRleGVkfHxbXSxpPW5ldyBVaW50OEFycmF5KChvLmxlbmd0aHx8MCkrbi5sZW5ndGgpLHI9MCxuLmxlbmd0aCxlPWE9dD0wLHM9bi5sZW5ndGg7YTxzO2U9YSs9MylpW3IrK109bltlXSxpW3IrK109bltlKzFdLGlbcisrXT1uW2UrMl0saVtyKytdPW51bGwhPShsPW9bdCsrXSk/bDoyNTU7cmV0dXJuIGl9LGkucHJvdG90eXBlLmNvcHlUb0ltYWdlRGF0YT1mdW5jdGlvbih0LGUpe3ZhciBuLHIsaSxvLGEscyxsLGgsdSxjLGY7aWYocj10aGlzLmNvbG9ycyx1PW51bGwsbj10aGlzLmhhc0FscGhhQ2hhbm5lbCx0aGlzLnBhbGV0dGUubGVuZ3RoJiYodT1udWxsIT0oZj10aGlzLl9kZWNvZGVkUGFsZXR0ZSk/Zjp0aGlzLl9kZWNvZGVkUGFsZXR0ZT10aGlzLmRlY29kZVBhbGV0dGUoKSxyPTQsbj0hMCksaD0oaT10LmRhdGF8fHQpLmxlbmd0aCxhPXV8fGUsbz1zPTAsMT09PXIpZm9yKDtvPGg7KWw9dT80KmVbby80XTpzLGM9YVtsKytdLGlbbysrXT1jLGlbbysrXT1jLGlbbysrXT1jLGlbbysrXT1uP2FbbCsrXToyNTUscz1sO2Vsc2UgZm9yKDtvPGg7KWw9dT80KmVbby80XTpzLGlbbysrXT1hW2wrK10saVtvKytdPWFbbCsrXSxpW28rK109YVtsKytdLGlbbysrXT1uP2FbbCsrXToyNTUscz1sfSxpLnByb3RvdHlwZS5kZWNvZGU9ZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gdD1uZXcgVWludDhBcnJheSh0aGlzLndpZHRoKnRoaXMuaGVpZ2h0KjQpLHRoaXMuY29weVRvSW1hZ2VEYXRhKHQsdGhpcy5kZWNvZGVQaXhlbHMoKSksdH07dHJ5e249TnQuZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSxyPW4uZ2V0Q29udGV4dChcIjJkXCIpfWNhdGNoKHQpe3JldHVybi0xfXJldHVybiBoPWZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiByLndpZHRoPXQud2lkdGgsci5oZWlnaHQ9dC5oZWlnaHQsci5jbGVhclJlY3QoMCwwLHQud2lkdGgsdC5oZWlnaHQpLHIucHV0SW1hZ2VEYXRhKHQsMCwwKSwoZT1uZXcgSW1hZ2UpLnNyYz1uLnRvRGF0YVVSTCgpLGV9LGkucHJvdG90eXBlLmRlY29kZUZyYW1lcz1mdW5jdGlvbih0KXt2YXIgZSxuLHIsaSxvLGEscyxsO2lmKHRoaXMuYW5pbWF0aW9uKXtmb3IobD1bXSxuPW89MCxhPShzPXRoaXMuYW5pbWF0aW9uLmZyYW1lcykubGVuZ3RoO288YTtuPSsrbyllPXNbbl0scj10LmNyZWF0ZUltYWdlRGF0YShlLndpZHRoLGUuaGVpZ2h0KSxpPXRoaXMuZGVjb2RlUGl4ZWxzKG5ldyBVaW50OEFycmF5KGUuZGF0YSkpLHRoaXMuY29weVRvSW1hZ2VEYXRhKHIsaSksZS5pbWFnZURhdGE9cixsLnB1c2goZS5pbWFnZT1oKHIpKTtyZXR1cm4gbH19LGkucHJvdG90eXBlLnJlbmRlckZyYW1lPWZ1bmN0aW9uKHQsZSl7dmFyIG4scixpO3JldHVybiBuPShyPXRoaXMuYW5pbWF0aW9uLmZyYW1lcylbZV0saT1yW2UtMV0sMD09PWUmJnQuY2xlYXJSZWN0KDAsMCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSwxPT09KG51bGwhPWk/aS5kaXNwb3NlT3A6dm9pZCAwKT90LmNsZWFyUmVjdChpLnhPZmZzZXQsaS55T2Zmc2V0LGkud2lkdGgsaS5oZWlnaHQpOjI9PT0obnVsbCE9aT9pLmRpc3Bvc2VPcDp2b2lkIDApJiZ0LnB1dEltYWdlRGF0YShpLmltYWdlRGF0YSxpLnhPZmZzZXQsaS55T2Zmc2V0KSwwPT09bi5ibGVuZE9wJiZ0LmNsZWFyUmVjdChuLnhPZmZzZXQsbi55T2Zmc2V0LG4ud2lkdGgsbi5oZWlnaHQpLHQuZHJhd0ltYWdlKG4uaW1hZ2Usbi54T2Zmc2V0LG4ueU9mZnNldCl9LGkucHJvdG90eXBlLmFuaW1hdGU9ZnVuY3Rpb24obil7dmFyIHIsaSxvLGEscyx0LGw9dGhpcztyZXR1cm4gaT0wLHQ9dGhpcy5hbmltYXRpb24sYT10Lm51bUZyYW1lcyxvPXQuZnJhbWVzLHM9dC5udW1QbGF5cywocj1mdW5jdGlvbigpe3ZhciB0LGU7aWYodD1pKyslYSxlPW9bdF0sbC5yZW5kZXJGcmFtZShuLHQpLDE8YSYmaS9hPHMpcmV0dXJuIGwuYW5pbWF0aW9uLl90aW1lb3V0PXNldFRpbWVvdXQocixlLmRlbGF5KX0pKCl9LGkucHJvdG90eXBlLnN0b3BBbmltYXRpb249ZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gY2xlYXJUaW1lb3V0KG51bGwhPSh0PXRoaXMuYW5pbWF0aW9uKT90Ll90aW1lb3V0OnZvaWQgMCl9LGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbih0KXt2YXIgZSxuO3JldHVybiB0Ll9wbmcmJnQuX3BuZy5zdG9wQW5pbWF0aW9uKCksdC5fcG5nPXRoaXMsdC53aWR0aD10aGlzLndpZHRoLHQuaGVpZ2h0PXRoaXMuaGVpZ2h0LGU9dC5nZXRDb250ZXh0KFwiMmRcIiksdGhpcy5hbmltYXRpb24/KHRoaXMuZGVjb2RlRnJhbWVzKGUpLHRoaXMuYW5pbWF0ZShlKSk6KG49ZS5jcmVhdGVJbWFnZURhdGEodGhpcy53aWR0aCx0aGlzLmhlaWdodCksdGhpcy5jb3B5VG9JbWFnZURhdGEobix0aGlzLmRlY29kZVBpeGVscygpKSxlLnB1dEltYWdlRGF0YShuLDAsMCkpfSxpfSgpLE50LlBORz1MdDtcbi8qXG4gICAqIEV4dHJhY3RlZCBmcm9tIHBkZi5qc1xuICAgKiBodHRwczovL2dpdGh1Yi5jb20vYW5kcmVhc2dhbC9wZGYuanNcbiAgICpcbiAgICogQ29weXJpZ2h0IChjKSAyMDExIE1vemlsbGEgRm91bmRhdGlvblxuICAgKlxuICAgKiBDb250cmlidXRvcnM6IEFuZHJlYXMgR2FsIDxnYWxAbW96aWxsYS5jb20+XG4gICAqICAgICAgICAgICAgICAgQ2hyaXMgRyBKb25lcyA8Y2pvbmVzQG1vemlsbGEuY29tPlxuICAgKiAgICAgICAgICAgICAgIFNoYW9uIEJhcm1hbiA8c2hhb24uYmFybWFuQGdtYWlsLmNvbT5cbiAgICogICAgICAgICAgICAgICBWaXZpZW4gTmljb2xhcyA8MjFAdmluZ3RldHVuLm9yZz5cbiAgICogICAgICAgICAgICAgICBKdXN0aW4gRCdBcmNhbmdlbG8gPGp1c3RpbmRhcmNAZ21haWwuY29tPlxuICAgKiAgICAgICAgICAgICAgIFl1cnkgRGVsZW5kaWtcbiAgICpcbiAgICogXG4gICAqL1xudmFyIFB0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3RoaXMucG9zPTAsdGhpcy5idWZmZXJMZW5ndGg9MCx0aGlzLmVvZj0hMSx0aGlzLmJ1ZmZlcj1udWxsfXJldHVybiB0LnByb3RvdHlwZT17ZW5zdXJlQnVmZmVyOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYnVmZmVyLG49ZT9lLmJ5dGVMZW5ndGg6MDtpZih0PG4pcmV0dXJuIGU7Zm9yKHZhciByPTUxMjtyPHQ7KXI8PD0xO2Zvcih2YXIgaT1uZXcgVWludDhBcnJheShyKSxvPTA7bzxuOysrbylpW29dPWVbb107cmV0dXJuIHRoaXMuYnVmZmVyPWl9LGdldEJ5dGU6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5wb3M7dGhpcy5idWZmZXJMZW5ndGg8PXQ7KXtpZih0aGlzLmVvZilyZXR1cm4gbnVsbDt0aGlzLnJlYWRCbG9jaygpfXJldHVybiB0aGlzLmJ1ZmZlclt0aGlzLnBvcysrXX0sZ2V0Qnl0ZXM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5wb3M7aWYodCl7dGhpcy5lbnN1cmVCdWZmZXIoZSt0KTtmb3IodmFyIG49ZSt0OyF0aGlzLmVvZiYmdGhpcy5idWZmZXJMZW5ndGg8bjspdGhpcy5yZWFkQmxvY2soKTt2YXIgcj10aGlzLmJ1ZmZlckxlbmd0aDtyPG4mJihuPXIpfWVsc2V7Zm9yKDshdGhpcy5lb2Y7KXRoaXMucmVhZEJsb2NrKCk7bj10aGlzLmJ1ZmZlckxlbmd0aH1yZXR1cm4gdGhpcy5wb3M9bix0aGlzLmJ1ZmZlci5zdWJhcnJheShlLG4pfSxsb29rQ2hhcjpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLnBvczt0aGlzLmJ1ZmZlckxlbmd0aDw9dDspe2lmKHRoaXMuZW9mKXJldHVybiBudWxsO3RoaXMucmVhZEJsb2NrKCl9cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUodGhpcy5idWZmZXJbdGhpcy5wb3NdKX0sZ2V0Q2hhcjpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLnBvczt0aGlzLmJ1ZmZlckxlbmd0aDw9dDspe2lmKHRoaXMuZW9mKXJldHVybiBudWxsO3RoaXMucmVhZEJsb2NrKCl9cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUodGhpcy5idWZmZXJbdGhpcy5wb3MrK10pfSxtYWtlU3ViU3RyZWFtOmZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9dCtlO3RoaXMuYnVmZmVyTGVuZ3RoPD1yJiYhdGhpcy5lb2Y7KXRoaXMucmVhZEJsb2NrKCk7cmV0dXJuIG5ldyBTdHJlYW0odGhpcy5idWZmZXIsdCxlLG4pfSxza2lwOmZ1bmN0aW9uKHQpe3R8fCh0PTEpLHRoaXMucG9zKz10fSxyZXNldDpmdW5jdGlvbigpe3RoaXMucG9zPTB9fSx0fSgpLGt0PWZ1bmN0aW9uKCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFVpbnQzMkFycmF5KXt2YXIgaz1uZXcgVWludDMyQXJyYXkoWzE2LDE3LDE4LDAsOCw3LDksNiwxMCw1LDExLDQsMTIsMywxMywyLDE0LDEsMTVdKSxJPW5ldyBVaW50MzJBcnJheShbMyw0LDUsNiw3LDgsOSwxMCw2NTU0Nyw2NTU0OSw2NTU1MSw2NTU1MywxMzEwOTEsMTMxMDk1LDEzMTA5OSwxMzExMDMsMTk2NjQzLDE5NjY1MSwxOTY2NTksMTk2NjY3LDI2MjIxMSwyNjIyMjcsMjYyMjQzLDI2MjI1OSwzMjc4MTEsMzI3ODQzLDMyNzg3NSwzMjc5MDcsMjU4LDI1OCwyNThdKSxDPW5ldyBVaW50MzJBcnJheShbMSwyLDMsNCw2NTU0MSw2NTU0MywxMzEwODEsMTMxMDg1LDE5NjYyNSwxOTY2MzMsMjYyMTc3LDI2MjE5MywzMjc3NDUsMzI3Nzc3LDM5MzM0NSwzOTM0MDksNDU5MDA5LDQ1OTEzNyw1MjQ4MDEsNTI1MDU3LDU5MDg0OSw1OTEzNjEsNjU3NDA5LDY1ODQzMyw3MjQ5OTMsNzI3MDQxLDc5NDYyNSw3OTg3MjEsODY4MzUzLDg3NjU0NV0pLEI9W25ldyBVaW50MzJBcnJheShbNDU5MDA4LDUyNDM2OCw1MjQzMDQsNTI0NTY4LDQ1OTAyNCw1MjQ0MDAsNTI0MzM2LDU5MDAxNiw0NTkwMTYsNTI0Mzg0LDUyNDMyMCw1ODk5ODQsNTI0Mjg4LDUyNDQxNiw1MjQzNTIsNTkwMDQ4LDQ1OTAxMiw1MjQzNzYsNTI0MzEyLDU4OTk2OCw0NTkwMjgsNTI0NDA4LDUyNDM0NCw1OTAwMzIsNDU5MDIwLDUyNDM5Miw1MjQzMjgsNTllNCw1MjQyOTYsNTI0NDI0LDUyNDM2MCw1OTAwNjQsNDU5MDEwLDUyNDM3Miw1MjQzMDgsNTI0NTcyLDQ1OTAyNiw1MjQ0MDQsNTI0MzQwLDU5MDAyNCw0NTkwMTgsNTI0Mzg4LDUyNDMyNCw1ODk5OTIsNTI0MjkyLDUyNDQyMCw1MjQzNTYsNTkwMDU2LDQ1OTAxNCw1MjQzODAsNTI0MzE2LDU4OTk3Niw0NTkwMzAsNTI0NDEyLDUyNDM0OCw1OTAwNDAsNDU5MDIyLDUyNDM5Niw1MjQzMzIsNTkwMDA4LDUyNDMwMCw1MjQ0MjgsNTI0MzY0LDU5MDA3Miw0NTkwMDksNTI0MzcwLDUyNDMwNiw1MjQ1NzAsNDU5MDI1LDUyNDQwMiw1MjQzMzgsNTkwMDIwLDQ1OTAxNyw1MjQzODYsNTI0MzIyLDU4OTk4OCw1MjQyOTAsNTI0NDE4LDUyNDM1NCw1OTAwNTIsNDU5MDEzLDUyNDM3OCw1MjQzMTQsNTg5OTcyLDQ1OTAyOSw1MjQ0MTAsNTI0MzQ2LDU5MDAzNiw0NTkwMjEsNTI0Mzk0LDUyNDMzMCw1OTAwMDQsNTI0Mjk4LDUyNDQyNiw1MjQzNjIsNTkwMDY4LDQ1OTAxMSw1MjQzNzQsNTI0MzEwLDUyNDU3NCw0NTkwMjcsNTI0NDA2LDUyNDM0Miw1OTAwMjgsNDU5MDE5LDUyNDM5MCw1MjQzMjYsNTg5OTk2LDUyNDI5NCw1MjQ0MjIsNTI0MzU4LDU5MDA2MCw0NTkwMTUsNTI0MzgyLDUyNDMxOCw1ODk5ODAsNDU5MDMxLDUyNDQxNCw1MjQzNTAsNTkwMDQ0LDQ1OTAyMyw1MjQzOTgsNTI0MzM0LDU5MDAxMiw1MjQzMDIsNTI0NDMwLDUyNDM2Niw1OTAwNzYsNDU5MDA4LDUyNDM2OSw1MjQzMDUsNTI0NTY5LDQ1OTAyNCw1MjQ0MDEsNTI0MzM3LDU5MDAxOCw0NTkwMTYsNTI0Mzg1LDUyNDMyMSw1ODk5ODYsNTI0Mjg5LDUyNDQxNyw1MjQzNTMsNTkwMDUwLDQ1OTAxMiw1MjQzNzcsNTI0MzEzLDU4OTk3MCw0NTkwMjgsNTI0NDA5LDUyNDM0NSw1OTAwMzQsNDU5MDIwLDUyNDM5Myw1MjQzMjksNTkwMDAyLDUyNDI5Nyw1MjQ0MjUsNTI0MzYxLDU5MDA2Niw0NTkwMTAsNTI0MzczLDUyNDMwOSw1MjQ1NzMsNDU5MDI2LDUyNDQwNSw1MjQzNDEsNTkwMDI2LDQ1OTAxOCw1MjQzODksNTI0MzI1LDU4OTk5NCw1MjQyOTMsNTI0NDIxLDUyNDM1Nyw1OTAwNTgsNDU5MDE0LDUyNDM4MSw1MjQzMTcsNTg5OTc4LDQ1OTAzMCw1MjQ0MTMsNTI0MzQ5LDU5MDA0Miw0NTkwMjIsNTI0Mzk3LDUyNDMzMyw1OTAwMTAsNTI0MzAxLDUyNDQyOSw1MjQzNjUsNTkwMDc0LDQ1OTAwOSw1MjQzNzEsNTI0MzA3LDUyNDU3MSw0NTkwMjUsNTI0NDAzLDUyNDMzOSw1OTAwMjIsNDU5MDE3LDUyNDM4Nyw1MjQzMjMsNTg5OTkwLDUyNDI5MSw1MjQ0MTksNTI0MzU1LDU5MDA1NCw0NTkwMTMsNTI0Mzc5LDUyNDMxNSw1ODk5NzQsNDU5MDI5LDUyNDQxMSw1MjQzNDcsNTkwMDM4LDQ1OTAyMSw1MjQzOTUsNTI0MzMxLDU5MDAwNiw1MjQyOTksNTI0NDI3LDUyNDM2Myw1OTAwNzAsNDU5MDExLDUyNDM3NSw1MjQzMTEsNTI0NTc1LDQ1OTAyNyw1MjQ0MDcsNTI0MzQzLDU5MDAzMCw0NTkwMTksNTI0MzkxLDUyNDMyNyw1ODk5OTgsNTI0Mjk1LDUyNDQyMyw1MjQzNTksNTkwMDYyLDQ1OTAxNSw1MjQzODMsNTI0MzE5LDU4OTk4Miw0NTkwMzEsNTI0NDE1LDUyNDM1MSw1OTAwNDYsNDU5MDIzLDUyNDM5OSw1MjQzMzUsNTkwMDE0LDUyNDMwMyw1MjQ0MzEsNTI0MzY3LDU5MDA3OCw0NTkwMDgsNTI0MzY4LDUyNDMwNCw1MjQ1NjgsNDU5MDI0LDUyNDQwMCw1MjQzMzYsNTkwMDE3LDQ1OTAxNiw1MjQzODQsNTI0MzIwLDU4OTk4NSw1MjQyODgsNTI0NDE2LDUyNDM1Miw1OTAwNDksNDU5MDEyLDUyNDM3Niw1MjQzMTIsNTg5OTY5LDQ1OTAyOCw1MjQ0MDgsNTI0MzQ0LDU5MDAzMyw0NTkwMjAsNTI0MzkyLDUyNDMyOCw1OTAwMDEsNTI0Mjk2LDUyNDQyNCw1MjQzNjAsNTkwMDY1LDQ1OTAxMCw1MjQzNzIsNTI0MzA4LDUyNDU3Miw0NTkwMjYsNTI0NDA0LDUyNDM0MCw1OTAwMjUsNDU5MDE4LDUyNDM4OCw1MjQzMjQsNTg5OTkzLDUyNDI5Miw1MjQ0MjAsNTI0MzU2LDU5MDA1Nyw0NTkwMTQsNTI0MzgwLDUyNDMxNiw1ODk5NzcsNDU5MDMwLDUyNDQxMiw1MjQzNDgsNTkwMDQxLDQ1OTAyMiw1MjQzOTYsNTI0MzMyLDU5MDAwOSw1MjQzMDAsNTI0NDI4LDUyNDM2NCw1OTAwNzMsNDU5MDA5LDUyNDM3MCw1MjQzMDYsNTI0NTcwLDQ1OTAyNSw1MjQ0MDIsNTI0MzM4LDU5MDAyMSw0NTkwMTcsNTI0Mzg2LDUyNDMyMiw1ODk5ODksNTI0MjkwLDUyNDQxOCw1MjQzNTQsNTkwMDUzLDQ1OTAxMyw1MjQzNzgsNTI0MzE0LDU4OTk3Myw0NTkwMjksNTI0NDEwLDUyNDM0Niw1OTAwMzcsNDU5MDIxLDUyNDM5NCw1MjQzMzAsNTkwMDA1LDUyNDI5OCw1MjQ0MjYsNTI0MzYyLDU5MDA2OSw0NTkwMTEsNTI0Mzc0LDUyNDMxMCw1MjQ1NzQsNDU5MDI3LDUyNDQwNiw1MjQzNDIsNTkwMDI5LDQ1OTAxOSw1MjQzOTAsNTI0MzI2LDU4OTk5Nyw1MjQyOTQsNTI0NDIyLDUyNDM1OCw1OTAwNjEsNDU5MDE1LDUyNDM4Miw1MjQzMTgsNTg5OTgxLDQ1OTAzMSw1MjQ0MTQsNTI0MzUwLDU5MDA0NSw0NTkwMjMsNTI0Mzk4LDUyNDMzNCw1OTAwMTMsNTI0MzAyLDUyNDQzMCw1MjQzNjYsNTkwMDc3LDQ1OTAwOCw1MjQzNjksNTI0MzA1LDUyNDU2OSw0NTkwMjQsNTI0NDAxLDUyNDMzNyw1OTAwMTksNDU5MDE2LDUyNDM4NSw1MjQzMjEsNTg5OTg3LDUyNDI4OSw1MjQ0MTcsNTI0MzUzLDU5MDA1MSw0NTkwMTIsNTI0Mzc3LDUyNDMxMyw1ODk5NzEsNDU5MDI4LDUyNDQwOSw1MjQzNDUsNTkwMDM1LDQ1OTAyMCw1MjQzOTMsNTI0MzI5LDU5MDAwMyw1MjQyOTcsNTI0NDI1LDUyNDM2MSw1OTAwNjcsNDU5MDEwLDUyNDM3Myw1MjQzMDksNTI0NTczLDQ1OTAyNiw1MjQ0MDUsNTI0MzQxLDU5MDAyNyw0NTkwMTgsNTI0Mzg5LDUyNDMyNSw1ODk5OTUsNTI0MjkzLDUyNDQyMSw1MjQzNTcsNTkwMDU5LDQ1OTAxNCw1MjQzODEsNTI0MzE3LDU4OTk3OSw0NTkwMzAsNTI0NDEzLDUyNDM0OSw1OTAwNDMsNDU5MDIyLDUyNDM5Nyw1MjQzMzMsNTkwMDExLDUyNDMwMSw1MjQ0MjksNTI0MzY1LDU5MDA3NSw0NTkwMDksNTI0MzcxLDUyNDMwNyw1MjQ1NzEsNDU5MDI1LDUyNDQwMyw1MjQzMzksNTkwMDIzLDQ1OTAxNyw1MjQzODcsNTI0MzIzLDU4OTk5MSw1MjQyOTEsNTI0NDE5LDUyNDM1NSw1OTAwNTUsNDU5MDEzLDUyNDM3OSw1MjQzMTUsNTg5OTc1LDQ1OTAyOSw1MjQ0MTEsNTI0MzQ3LDU5MDAzOSw0NTkwMjEsNTI0Mzk1LDUyNDMzMSw1OTAwMDcsNTI0Mjk5LDUyNDQyNyw1MjQzNjMsNTkwMDcxLDQ1OTAxMSw1MjQzNzUsNTI0MzExLDUyNDU3NSw0NTkwMjcsNTI0NDA3LDUyNDM0Myw1OTAwMzEsNDU5MDE5LDUyNDM5MSw1MjQzMjcsNTg5OTk5LDUyNDI5NSw1MjQ0MjMsNTI0MzU5LDU5MDA2Myw0NTkwMTUsNTI0MzgzLDUyNDMxOSw1ODk5ODMsNDU5MDMxLDUyNDQxNSw1MjQzNTEsNTkwMDQ3LDQ1OTAyMyw1MjQzOTksNTI0MzM1LDU5MDAxNSw1MjQzMDMsNTI0NDMxLDUyNDM2Nyw1OTAwNzldKSw5XSxqPVtuZXcgVWludDMyQXJyYXkoWzMyNzY4MCwzMjc2OTYsMzI3Njg4LDMyNzcwNCwzMjc2ODQsMzI3NzAwLDMyNzY5MiwzMjc3MDgsMzI3NjgyLDMyNzY5OCwzMjc2OTAsMzI3NzA2LDMyNzY4NiwzMjc3MDIsMzI3Njk0LDAsMzI3NjgxLDMyNzY5NywzMjc2ODksMzI3NzA1LDMyNzY4NSwzMjc3MDEsMzI3NjkzLDMyNzcwOSwzMjc2ODMsMzI3Njk5LDMyNzY5MSwzMjc3MDcsMzI3Njg3LDMyNzcwMywzMjc2OTUsMF0pLDVdO3JldHVybih0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFB0LnByb3RvdHlwZSkpLmdldEJpdHM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49dGhpcy5jb2RlU2l6ZSxyPXRoaXMuY29kZUJ1ZixpPXRoaXMuYnl0ZXMsbz10aGlzLmJ5dGVzUG9zO248dDspdm9pZCAwPT09KGU9aVtvKytdKSYmRShcIkJhZCBlbmNvZGluZyBpbiBmbGF0ZSBzdHJlYW1cIikscnw9ZTw8bixuKz04O3JldHVybiBlPXImKDE8PHQpLTEsdGhpcy5jb2RlQnVmPXI+PnQsdGhpcy5jb2RlU2l6ZT1uLT10LHRoaXMuYnl0ZXNQb3M9byxlfSx0LnByb3RvdHlwZS5nZXRDb2RlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10WzBdLG49dFsxXSxyPXRoaXMuY29kZVNpemUsaT10aGlzLmNvZGVCdWYsbz10aGlzLmJ5dGVzLGE9dGhpcy5ieXRlc1BvcztyPG47KXt2YXIgczt2b2lkIDA9PT0ocz1vW2ErK10pJiZFKFwiQmFkIGVuY29kaW5nIGluIGZsYXRlIHN0cmVhbVwiKSxpfD1zPDxyLHIrPTh9dmFyIGw9ZVtpJigxPDxuKS0xXSxoPWw+PjE2LHU9NjU1MzUmbDtyZXR1cm4oMD09cnx8cjxofHwwPT1oKSYmRShcIkJhZCBlbmNvZGluZyBpbiBmbGF0ZSBzdHJlYW1cIiksdGhpcy5jb2RlQnVmPWk+PmgsdGhpcy5jb2RlU2l6ZT1yLWgsdGhpcy5ieXRlc1Bvcz1hLHV9LHQucHJvdG90eXBlLmdlbmVyYXRlSHVmZm1hblRhYmxlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10Lmxlbmd0aCxuPTAscj0wO3I8ZTsrK3IpdFtyXT5uJiYobj10W3JdKTtmb3IodmFyIGk9MTw8bixvPW5ldyBVaW50MzJBcnJheShpKSxhPTEscz0wLGw9MjthPD1uOysrYSxzPDw9MSxsPDw9MSlmb3IodmFyIGg9MDtoPGU7KytoKWlmKHRbaF09PWEpe3ZhciB1PTAsYz1zO2ZvcihyPTA7cjxhOysrcil1PXU8PDF8MSZjLGM+Pj0xO2ZvcihyPXU7cjxpO3IrPWwpb1tyXT1hPDwxNnxoOysrc31yZXR1cm5bbyxuXX0sdC5wcm90b3R5cGUucmVhZEJsb2NrPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUsbixyLGkpe2Zvcih2YXIgbz10LmdldEJpdHMobikrcjswPG8tLTspZVtsKytdPWl9dmFyIGU9dGhpcy5nZXRCaXRzKDMpO2lmKDEmZSYmKHRoaXMuZW9mPSEwKSwwIT0oZT4+PTEpKXt2YXIgbixyO2lmKDE9PWUpbj1CLHI9ajtlbHNlIGlmKDI9PWUpe2Zvcih2YXIgaT10aGlzLmdldEJpdHMoNSkrMjU3LG89dGhpcy5nZXRCaXRzKDUpKzEsYT10aGlzLmdldEJpdHMoNCkrNCxzPUFycmF5KGsubGVuZ3RoKSxsPTA7bDxhOylzW2tbbCsrXV09dGhpcy5nZXRCaXRzKDMpO2Zvcih2YXIgaD10aGlzLmdlbmVyYXRlSHVmZm1hblRhYmxlKHMpLHU9MCxjPShsPTAsaStvKSxmPW5ldyBBcnJheShjKTtsPGM7KXt2YXIgcD10aGlzLmdldENvZGUoaCk7MTY9PXA/dCh0aGlzLGYsMiwzLHUpOjE3PT1wP3QodGhpcyxmLDMsMyx1PTApOjE4PT1wP3QodGhpcyxmLDcsMTEsdT0wKTpmW2wrK109dT1wfW49dGhpcy5nZW5lcmF0ZUh1ZmZtYW5UYWJsZShmLnNsaWNlKDAsaSkpLHI9dGhpcy5nZW5lcmF0ZUh1ZmZtYW5UYWJsZShmLnNsaWNlKGksYykpfWVsc2UgRShcIlVua25vd24gYmxvY2sgdHlwZSBpbiBmbGF0ZSBzdHJlYW1cIik7Zm9yKHZhciBkPShfPXRoaXMuYnVmZmVyKT9fLmxlbmd0aDowLGc9dGhpcy5idWZmZXJMZW5ndGg7Oyl7dmFyIG09dGhpcy5nZXRDb2RlKG4pO2lmKG08MjU2KWQ8PWcrMSYmKGQ9KF89dGhpcy5lbnN1cmVCdWZmZXIoZysxKSkubGVuZ3RoKSxfW2crK109bTtlbHNle2lmKDI1Nj09bSlyZXR1cm4gdm9pZCh0aGlzLmJ1ZmZlckxlbmd0aD1nKTt2YXIgeT0obT1JW20tPTI1N10pPj4xNjswPHkmJih5PXRoaXMuZ2V0Qml0cyh5KSk7dT0oNjU1MzUmbSkreTttPXRoaXMuZ2V0Q29kZShyKSwwPCh5PShtPUNbbV0pPj4xNikmJih5PXRoaXMuZ2V0Qml0cyh5KSk7dmFyIHY9KDY1NTM1Jm0pK3k7ZDw9Zyt1JiYoZD0oXz10aGlzLmVuc3VyZUJ1ZmZlcihnK3UpKS5sZW5ndGgpO2Zvcih2YXIgdz0wO3c8dTsrK3csKytnKV9bZ109X1tnLXZdfX19ZWxzZXt2YXIgYix4PXRoaXMuYnl0ZXMsTj10aGlzLmJ5dGVzUG9zO3ZvaWQgMD09PShiPXhbTisrXSkmJkUoXCJCYWQgYmxvY2sgaGVhZGVyIGluIGZsYXRlIHN0cmVhbVwiKTt2YXIgTD1iO3ZvaWQgMD09PShiPXhbTisrXSkmJkUoXCJCYWQgYmxvY2sgaGVhZGVyIGluIGZsYXRlIHN0cmVhbVwiKSxMfD1iPDw4LHZvaWQgMD09PShiPXhbTisrXSkmJkUoXCJCYWQgYmxvY2sgaGVhZGVyIGluIGZsYXRlIHN0cmVhbVwiKTt2YXIgQT1iO3ZvaWQgMD09PShiPXhbTisrXSkmJkUoXCJCYWQgYmxvY2sgaGVhZGVyIGluIGZsYXRlIHN0cmVhbVwiKSwoQXw9Yjw8OCkhPSg2NTUzNSZ+TCkmJkUoXCJCYWQgdW5jb21wcmVzc2VkIGJsb2NrIGxlbmd0aCBpbiBmbGF0ZSBzdHJlYW1cIiksdGhpcy5jb2RlQnVmPTAsdGhpcy5jb2RlU2l6ZT0wO3ZhciBTPXRoaXMuYnVmZmVyTGVuZ3RoLF89dGhpcy5lbnN1cmVCdWZmZXIoUytMKSxGPVMrTDt0aGlzLmJ1ZmZlckxlbmd0aD1GO2Zvcih2YXIgUD1TO1A8RjsrK1Ape2lmKHZvaWQgMD09PShiPXhbTisrXSkpe3RoaXMuZW9mPSEwO2JyZWFrfV9bUF09Yn10aGlzLmJ5dGVzUG9zPU59fSx0fWZ1bmN0aW9uIEUodCl7dGhyb3cgbmV3IEVycm9yKHQpfWZ1bmN0aW9uIHQodCl7dmFyIGU9MCxuPXRbZSsrXSxyPXRbZSsrXTstMSE9biYmLTEhPXJ8fEUoXCJJbnZhbGlkIGhlYWRlciBpbiBmbGF0ZSBzdHJlYW1cIiksOCE9KDE1Jm4pJiZFKFwiVW5rbm93biBjb21wcmVzc2lvbiBtZXRob2QgaW4gZmxhdGUgc3RyZWFtXCIpLCgobjw8OCkrciklMzEhPTAmJkUoXCJCYWQgRkNIRUNLIGluIGZsYXRlIHN0cmVhbVwiKSwzMiZyJiZFKFwiRkRJQ1QgYml0IHNldCBpbiBmbGF0ZSBzdHJlYW1cIiksdGhpcy5ieXRlcz10LHRoaXMuYnl0ZXNQb3M9Mix0aGlzLmNvZGVTaXplPTAsdGhpcy5jb2RlQnVmPTAsUHQuY2FsbCh0aGlzKX19KCk7d2luZG93LnRtcD1rdH0pO3RyeXttb2R1bGUuZXhwb3J0cz1qc1BERn1jYXRjaCh0KXt9IiwiLyohXG4gKiBAb3ZlcnZpZXcgZXM2LXByb21pc2UgLSBhIHRpbnkgaW1wbGVtZW50YXRpb24gb2YgUHJvbWlzZXMvQSsuXG4gKiBAY29weXJpZ2h0IENvcHlyaWdodCAoYykgMjAxNCBZZWh1ZGEgS2F0eiwgVG9tIERhbGUsIFN0ZWZhbiBQZW5uZXIgYW5kIGNvbnRyaWJ1dG9ycyAoQ29udmVyc2lvbiB0byBFUzYgQVBJIGJ5IEpha2UgQXJjaGliYWxkKVxuICogQGxpY2Vuc2UgICBMaWNlbnNlZCB1bmRlciBNSVQgbGljZW5zZVxuICogICAgICAgICAgICBTZWUgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3N0ZWZhbnBlbm5lci9lczYtcHJvbWlzZS9tYXN0ZXIvTElDRU5TRVxuICogQHZlcnNpb24gICB2NC4yLjgrMWU2OGRjZTZcbiAqL1xuXG4oZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuXHR0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKSA6XG5cdHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShmYWN0b3J5KSA6XG5cdChnbG9iYWwuRVM2UHJvbWlzZSA9IGZhY3RvcnkoKSk7XG59KHRoaXMsIChmdW5jdGlvbiAoKSB7ICd1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gb2JqZWN0T3JGdW5jdGlvbih4KSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHg7XG4gIHJldHVybiB4ICE9PSBudWxsICYmICh0eXBlID09PSAnb2JqZWN0JyB8fCB0eXBlID09PSAnZnVuY3Rpb24nKTtcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbih4KSB7XG4gIHJldHVybiB0eXBlb2YgeCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuXG5cbnZhciBfaXNBcnJheSA9IHZvaWQgMDtcbmlmIChBcnJheS5pc0FycmF5KSB7XG4gIF9pc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbn0gZWxzZSB7XG4gIF9pc0FycmF5ID0gZnVuY3Rpb24gKHgpIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHgpID09PSAnW29iamVjdCBBcnJheV0nO1xuICB9O1xufVxuXG52YXIgaXNBcnJheSA9IF9pc0FycmF5O1xuXG52YXIgbGVuID0gMDtcbnZhciB2ZXJ0eE5leHQgPSB2b2lkIDA7XG52YXIgY3VzdG9tU2NoZWR1bGVyRm4gPSB2b2lkIDA7XG5cbnZhciBhc2FwID0gZnVuY3Rpb24gYXNhcChjYWxsYmFjaywgYXJnKSB7XG4gIHF1ZXVlW2xlbl0gPSBjYWxsYmFjaztcbiAgcXVldWVbbGVuICsgMV0gPSBhcmc7XG4gIGxlbiArPSAyO1xuICBpZiAobGVuID09PSAyKSB7XG4gICAgLy8gSWYgbGVuIGlzIDIsIHRoYXQgbWVhbnMgdGhhdCB3ZSBuZWVkIHRvIHNjaGVkdWxlIGFuIGFzeW5jIGZsdXNoLlxuICAgIC8vIElmIGFkZGl0aW9uYWwgY2FsbGJhY2tzIGFyZSBxdWV1ZWQgYmVmb3JlIHRoZSBxdWV1ZSBpcyBmbHVzaGVkLCB0aGV5XG4gICAgLy8gd2lsbCBiZSBwcm9jZXNzZWQgYnkgdGhpcyBmbHVzaCB0aGF0IHdlIGFyZSBzY2hlZHVsaW5nLlxuICAgIGlmIChjdXN0b21TY2hlZHVsZXJGbikge1xuICAgICAgY3VzdG9tU2NoZWR1bGVyRm4oZmx1c2gpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzY2hlZHVsZUZsdXNoKCk7XG4gICAgfVxuICB9XG59O1xuXG5mdW5jdGlvbiBzZXRTY2hlZHVsZXIoc2NoZWR1bGVGbikge1xuICBjdXN0b21TY2hlZHVsZXJGbiA9IHNjaGVkdWxlRm47XG59XG5cbmZ1bmN0aW9uIHNldEFzYXAoYXNhcEZuKSB7XG4gIGFzYXAgPSBhc2FwRm47XG59XG5cbnZhciBicm93c2VyV2luZG93ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB1bmRlZmluZWQ7XG52YXIgYnJvd3Nlckdsb2JhbCA9IGJyb3dzZXJXaW5kb3cgfHwge307XG52YXIgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIgPSBicm93c2VyR2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIgfHwgYnJvd3Nlckdsb2JhbC5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xudmFyIGlzTm9kZSA9IHR5cGVvZiBzZWxmID09PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYge30udG9TdHJpbmcuY2FsbChwcm9jZXNzKSA9PT0gJ1tvYmplY3QgcHJvY2Vzc10nO1xuXG4vLyB0ZXN0IGZvciB3ZWIgd29ya2VyIGJ1dCBub3QgaW4gSUUxMFxudmFyIGlzV29ya2VyID0gdHlwZW9mIFVpbnQ4Q2xhbXBlZEFycmF5ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgaW1wb3J0U2NyaXB0cyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIE1lc3NhZ2VDaGFubmVsICE9PSAndW5kZWZpbmVkJztcblxuLy8gbm9kZVxuZnVuY3Rpb24gdXNlTmV4dFRpY2soKSB7XG4gIC8vIG5vZGUgdmVyc2lvbiAwLjEwLnggZGlzcGxheXMgYSBkZXByZWNhdGlvbiB3YXJuaW5nIHdoZW4gbmV4dFRpY2sgaXMgdXNlZCByZWN1cnNpdmVseVxuICAvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2N1am9qcy93aGVuL2lzc3Vlcy80MTAgZm9yIGRldGFpbHNcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmbHVzaCk7XG4gIH07XG59XG5cbi8vIHZlcnR4XG5mdW5jdGlvbiB1c2VWZXJ0eFRpbWVyKCkge1xuICBpZiAodHlwZW9mIHZlcnR4TmV4dCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgdmVydHhOZXh0KGZsdXNoKTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHVzZVNldFRpbWVvdXQoKTtcbn1cblxuZnVuY3Rpb24gdXNlTXV0YXRpb25PYnNlcnZlcigpIHtcbiAgdmFyIGl0ZXJhdGlvbnMgPSAwO1xuICB2YXIgb2JzZXJ2ZXIgPSBuZXcgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIoZmx1c2gpO1xuICB2YXIgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTtcbiAgb2JzZXJ2ZXIub2JzZXJ2ZShub2RlLCB7IGNoYXJhY3RlckRhdGE6IHRydWUgfSk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBub2RlLmRhdGEgPSBpdGVyYXRpb25zID0gKytpdGVyYXRpb25zICUgMjtcbiAgfTtcbn1cblxuLy8gd2ViIHdvcmtlclxuZnVuY3Rpb24gdXNlTWVzc2FnZUNoYW5uZWwoKSB7XG4gIHZhciBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gZmx1c2g7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGNoYW5uZWwucG9ydDIucG9zdE1lc3NhZ2UoMCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHVzZVNldFRpbWVvdXQoKSB7XG4gIC8vIFN0b3JlIHNldFRpbWVvdXQgcmVmZXJlbmNlIHNvIGVzNi1wcm9taXNlIHdpbGwgYmUgdW5hZmZlY3RlZCBieVxuICAvLyBvdGhlciBjb2RlIG1vZGlmeWluZyBzZXRUaW1lb3V0IChsaWtlIHNpbm9uLnVzZUZha2VUaW1lcnMoKSlcbiAgdmFyIGdsb2JhbFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBnbG9iYWxTZXRUaW1lb3V0KGZsdXNoLCAxKTtcbiAgfTtcbn1cblxudmFyIHF1ZXVlID0gbmV3IEFycmF5KDEwMDApO1xuZnVuY3Rpb24gZmx1c2goKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDIpIHtcbiAgICB2YXIgY2FsbGJhY2sgPSBxdWV1ZVtpXTtcbiAgICB2YXIgYXJnID0gcXVldWVbaSArIDFdO1xuXG4gICAgY2FsbGJhY2soYXJnKTtcblxuICAgIHF1ZXVlW2ldID0gdW5kZWZpbmVkO1xuICAgIHF1ZXVlW2kgKyAxXSA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGxlbiA9IDA7XG59XG5cbmZ1bmN0aW9uIGF0dGVtcHRWZXJ0eCgpIHtcbiAgdHJ5IHtcbiAgICB2YXIgdmVydHggPSBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpLnJlcXVpcmUoJ3ZlcnR4Jyk7XG4gICAgdmVydHhOZXh0ID0gdmVydHgucnVuT25Mb29wIHx8IHZlcnR4LnJ1bk9uQ29udGV4dDtcbiAgICByZXR1cm4gdXNlVmVydHhUaW1lcigpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHVzZVNldFRpbWVvdXQoKTtcbiAgfVxufVxuXG52YXIgc2NoZWR1bGVGbHVzaCA9IHZvaWQgMDtcbi8vIERlY2lkZSB3aGF0IGFzeW5jIG1ldGhvZCB0byB1c2UgdG8gdHJpZ2dlcmluZyBwcm9jZXNzaW5nIG9mIHF1ZXVlZCBjYWxsYmFja3M6XG5pZiAoaXNOb2RlKSB7XG4gIHNjaGVkdWxlRmx1c2ggPSB1c2VOZXh0VGljaygpO1xufSBlbHNlIGlmIChCcm93c2VyTXV0YXRpb25PYnNlcnZlcikge1xuICBzY2hlZHVsZUZsdXNoID0gdXNlTXV0YXRpb25PYnNlcnZlcigpO1xufSBlbHNlIGlmIChpc1dvcmtlcikge1xuICBzY2hlZHVsZUZsdXNoID0gdXNlTWVzc2FnZUNoYW5uZWwoKTtcbn0gZWxzZSBpZiAoYnJvd3NlcldpbmRvdyA9PT0gdW5kZWZpbmVkICYmIHR5cGVvZiByZXF1aXJlID09PSAnZnVuY3Rpb24nKSB7XG4gIHNjaGVkdWxlRmx1c2ggPSBhdHRlbXB0VmVydHgoKTtcbn0gZWxzZSB7XG4gIHNjaGVkdWxlRmx1c2ggPSB1c2VTZXRUaW1lb3V0KCk7XG59XG5cbmZ1bmN0aW9uIHRoZW4ob25GdWxmaWxsbWVudCwgb25SZWplY3Rpb24pIHtcbiAgdmFyIHBhcmVudCA9IHRoaXM7XG5cbiAgdmFyIGNoaWxkID0gbmV3IHRoaXMuY29uc3RydWN0b3Iobm9vcCk7XG5cbiAgaWYgKGNoaWxkW1BST01JU0VfSURdID09PSB1bmRlZmluZWQpIHtcbiAgICBtYWtlUHJvbWlzZShjaGlsZCk7XG4gIH1cblxuICB2YXIgX3N0YXRlID0gcGFyZW50Ll9zdGF0ZTtcblxuXG4gIGlmIChfc3RhdGUpIHtcbiAgICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHNbX3N0YXRlIC0gMV07XG4gICAgYXNhcChmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gaW52b2tlQ2FsbGJhY2soX3N0YXRlLCBjaGlsZCwgY2FsbGJhY2ssIHBhcmVudC5fcmVzdWx0KTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBzdWJzY3JpYmUocGFyZW50LCBjaGlsZCwgb25GdWxmaWxsbWVudCwgb25SZWplY3Rpb24pO1xuICB9XG5cbiAgcmV0dXJuIGNoaWxkO1xufVxuXG4vKipcbiAgYFByb21pc2UucmVzb2x2ZWAgcmV0dXJucyBhIHByb21pc2UgdGhhdCB3aWxsIGJlY29tZSByZXNvbHZlZCB3aXRoIHRoZVxuICBwYXNzZWQgYHZhbHVlYC4gSXQgaXMgc2hvcnRoYW5kIGZvciB0aGUgZm9sbG93aW5nOlxuXG4gIGBgYGphdmFzY3JpcHRcbiAgbGV0IHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3Qpe1xuICAgIHJlc29sdmUoMSk7XG4gIH0pO1xuXG4gIHByb21pc2UudGhlbihmdW5jdGlvbih2YWx1ZSl7XG4gICAgLy8gdmFsdWUgPT09IDFcbiAgfSk7XG4gIGBgYFxuXG4gIEluc3RlYWQgb2Ygd3JpdGluZyB0aGUgYWJvdmUsIHlvdXIgY29kZSBub3cgc2ltcGx5IGJlY29tZXMgdGhlIGZvbGxvd2luZzpcblxuICBgYGBqYXZhc2NyaXB0XG4gIGxldCBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKDEpO1xuXG4gIHByb21pc2UudGhlbihmdW5jdGlvbih2YWx1ZSl7XG4gICAgLy8gdmFsdWUgPT09IDFcbiAgfSk7XG4gIGBgYFxuXG4gIEBtZXRob2QgcmVzb2x2ZVxuICBAc3RhdGljXG4gIEBwYXJhbSB7QW55fSB2YWx1ZSB2YWx1ZSB0aGF0IHRoZSByZXR1cm5lZCBwcm9taXNlIHdpbGwgYmUgcmVzb2x2ZWQgd2l0aFxuICBVc2VmdWwgZm9yIHRvb2xpbmcuXG4gIEByZXR1cm4ge1Byb21pc2V9IGEgcHJvbWlzZSB0aGF0IHdpbGwgYmVjb21lIGZ1bGZpbGxlZCB3aXRoIHRoZSBnaXZlblxuICBgdmFsdWVgXG4qL1xuZnVuY3Rpb24gcmVzb2x2ZSQxKG9iamVjdCkge1xuICAvKmpzaGludCB2YWxpZHRoaXM6dHJ1ZSAqL1xuICB2YXIgQ29uc3RydWN0b3IgPSB0aGlzO1xuXG4gIGlmIChvYmplY3QgJiYgdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgb2JqZWN0LmNvbnN0cnVjdG9yID09PSBDb25zdHJ1Y3Rvcikge1xuICAgIHJldHVybiBvYmplY3Q7XG4gIH1cblxuICB2YXIgcHJvbWlzZSA9IG5ldyBDb25zdHJ1Y3Rvcihub29wKTtcbiAgcmVzb2x2ZShwcm9taXNlLCBvYmplY3QpO1xuICByZXR1cm4gcHJvbWlzZTtcbn1cblxudmFyIFBST01JU0VfSUQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMik7XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG52YXIgUEVORElORyA9IHZvaWQgMDtcbnZhciBGVUxGSUxMRUQgPSAxO1xudmFyIFJFSkVDVEVEID0gMjtcblxuZnVuY3Rpb24gc2VsZkZ1bGZpbGxtZW50KCkge1xuICByZXR1cm4gbmV3IFR5cGVFcnJvcihcIllvdSBjYW5ub3QgcmVzb2x2ZSBhIHByb21pc2Ugd2l0aCBpdHNlbGZcIik7XG59XG5cbmZ1bmN0aW9uIGNhbm5vdFJldHVybk93bigpIHtcbiAgcmV0dXJuIG5ldyBUeXBlRXJyb3IoJ0EgcHJvbWlzZXMgY2FsbGJhY2sgY2Fubm90IHJldHVybiB0aGF0IHNhbWUgcHJvbWlzZS4nKTtcbn1cblxuZnVuY3Rpb24gdHJ5VGhlbih0aGVuJCQxLCB2YWx1ZSwgZnVsZmlsbG1lbnRIYW5kbGVyLCByZWplY3Rpb25IYW5kbGVyKSB7XG4gIHRyeSB7XG4gICAgdGhlbiQkMS5jYWxsKHZhbHVlLCBmdWxmaWxsbWVudEhhbmRsZXIsIHJlamVjdGlvbkhhbmRsZXIpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGU7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlRm9yZWlnblRoZW5hYmxlKHByb21pc2UsIHRoZW5hYmxlLCB0aGVuJCQxKSB7XG4gIGFzYXAoZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgICB2YXIgc2VhbGVkID0gZmFsc2U7XG4gICAgdmFyIGVycm9yID0gdHJ5VGhlbih0aGVuJCQxLCB0aGVuYWJsZSwgZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICBpZiAoc2VhbGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNlYWxlZCA9IHRydWU7XG4gICAgICBpZiAodGhlbmFibGUgIT09IHZhbHVlKSB7XG4gICAgICAgIHJlc29sdmUocHJvbWlzZSwgdmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZnVsZmlsbChwcm9taXNlLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgaWYgKHNlYWxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzZWFsZWQgPSB0cnVlO1xuXG4gICAgICByZWplY3QocHJvbWlzZSwgcmVhc29uKTtcbiAgICB9LCAnU2V0dGxlOiAnICsgKHByb21pc2UuX2xhYmVsIHx8ICcgdW5rbm93biBwcm9taXNlJykpO1xuXG4gICAgaWYgKCFzZWFsZWQgJiYgZXJyb3IpIHtcbiAgICAgIHNlYWxlZCA9IHRydWU7XG4gICAgICByZWplY3QocHJvbWlzZSwgZXJyb3IpO1xuICAgIH1cbiAgfSwgcHJvbWlzZSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU93blRoZW5hYmxlKHByb21pc2UsIHRoZW5hYmxlKSB7XG4gIGlmICh0aGVuYWJsZS5fc3RhdGUgPT09IEZVTEZJTExFRCkge1xuICAgIGZ1bGZpbGwocHJvbWlzZSwgdGhlbmFibGUuX3Jlc3VsdCk7XG4gIH0gZWxzZSBpZiAodGhlbmFibGUuX3N0YXRlID09PSBSRUpFQ1RFRCkge1xuICAgIHJlamVjdChwcm9taXNlLCB0aGVuYWJsZS5fcmVzdWx0KTtcbiAgfSBlbHNlIHtcbiAgICBzdWJzY3JpYmUodGhlbmFibGUsIHVuZGVmaW5lZCwgZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICByZXR1cm4gcmVzb2x2ZShwcm9taXNlLCB2YWx1ZSk7XG4gICAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgcmV0dXJuIHJlamVjdChwcm9taXNlLCByZWFzb24pO1xuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU1heWJlVGhlbmFibGUocHJvbWlzZSwgbWF5YmVUaGVuYWJsZSwgdGhlbiQkMSkge1xuICBpZiAobWF5YmVUaGVuYWJsZS5jb25zdHJ1Y3RvciA9PT0gcHJvbWlzZS5jb25zdHJ1Y3RvciAmJiB0aGVuJCQxID09PSB0aGVuICYmIG1heWJlVGhlbmFibGUuY29uc3RydWN0b3IucmVzb2x2ZSA9PT0gcmVzb2x2ZSQxKSB7XG4gICAgaGFuZGxlT3duVGhlbmFibGUocHJvbWlzZSwgbWF5YmVUaGVuYWJsZSk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKHRoZW4kJDEgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZnVsZmlsbChwcm9taXNlLCBtYXliZVRoZW5hYmxlKTtcbiAgICB9IGVsc2UgaWYgKGlzRnVuY3Rpb24odGhlbiQkMSkpIHtcbiAgICAgIGhhbmRsZUZvcmVpZ25UaGVuYWJsZShwcm9taXNlLCBtYXliZVRoZW5hYmxlLCB0aGVuJCQxKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZnVsZmlsbChwcm9taXNlLCBtYXliZVRoZW5hYmxlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVzb2x2ZShwcm9taXNlLCB2YWx1ZSkge1xuICBpZiAocHJvbWlzZSA9PT0gdmFsdWUpIHtcbiAgICByZWplY3QocHJvbWlzZSwgc2VsZkZ1bGZpbGxtZW50KCkpO1xuICB9IGVsc2UgaWYgKG9iamVjdE9yRnVuY3Rpb24odmFsdWUpKSB7XG4gICAgdmFyIHRoZW4kJDEgPSB2b2lkIDA7XG4gICAgdHJ5IHtcbiAgICAgIHRoZW4kJDEgPSB2YWx1ZS50aGVuO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZWplY3QocHJvbWlzZSwgZXJyb3IpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBoYW5kbGVNYXliZVRoZW5hYmxlKHByb21pc2UsIHZhbHVlLCB0aGVuJCQxKTtcbiAgfSBlbHNlIHtcbiAgICBmdWxmaWxsKHByb21pc2UsIHZhbHVlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwdWJsaXNoUmVqZWN0aW9uKHByb21pc2UpIHtcbiAgaWYgKHByb21pc2UuX29uZXJyb3IpIHtcbiAgICBwcm9taXNlLl9vbmVycm9yKHByb21pc2UuX3Jlc3VsdCk7XG4gIH1cblxuICBwdWJsaXNoKHByb21pc2UpO1xufVxuXG5mdW5jdGlvbiBmdWxmaWxsKHByb21pc2UsIHZhbHVlKSB7XG4gIGlmIChwcm9taXNlLl9zdGF0ZSAhPT0gUEVORElORykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHByb21pc2UuX3Jlc3VsdCA9IHZhbHVlO1xuICBwcm9taXNlLl9zdGF0ZSA9IEZVTEZJTExFRDtcblxuICBpZiAocHJvbWlzZS5fc3Vic2NyaWJlcnMubGVuZ3RoICE9PSAwKSB7XG4gICAgYXNhcChwdWJsaXNoLCBwcm9taXNlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZWplY3QocHJvbWlzZSwgcmVhc29uKSB7XG4gIGlmIChwcm9taXNlLl9zdGF0ZSAhPT0gUEVORElORykge1xuICAgIHJldHVybjtcbiAgfVxuICBwcm9taXNlLl9zdGF0ZSA9IFJFSkVDVEVEO1xuICBwcm9taXNlLl9yZXN1bHQgPSByZWFzb247XG5cbiAgYXNhcChwdWJsaXNoUmVqZWN0aW9uLCBwcm9taXNlKTtcbn1cblxuZnVuY3Rpb24gc3Vic2NyaWJlKHBhcmVudCwgY2hpbGQsIG9uRnVsZmlsbG1lbnQsIG9uUmVqZWN0aW9uKSB7XG4gIHZhciBfc3Vic2NyaWJlcnMgPSBwYXJlbnQuX3N1YnNjcmliZXJzO1xuICB2YXIgbGVuZ3RoID0gX3N1YnNjcmliZXJzLmxlbmd0aDtcblxuXG4gIHBhcmVudC5fb25lcnJvciA9IG51bGw7XG5cbiAgX3N1YnNjcmliZXJzW2xlbmd0aF0gPSBjaGlsZDtcbiAgX3N1YnNjcmliZXJzW2xlbmd0aCArIEZVTEZJTExFRF0gPSBvbkZ1bGZpbGxtZW50O1xuICBfc3Vic2NyaWJlcnNbbGVuZ3RoICsgUkVKRUNURURdID0gb25SZWplY3Rpb247XG5cbiAgaWYgKGxlbmd0aCA9PT0gMCAmJiBwYXJlbnQuX3N0YXRlKSB7XG4gICAgYXNhcChwdWJsaXNoLCBwYXJlbnQpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHB1Ymxpc2gocHJvbWlzZSkge1xuICB2YXIgc3Vic2NyaWJlcnMgPSBwcm9taXNlLl9zdWJzY3JpYmVycztcbiAgdmFyIHNldHRsZWQgPSBwcm9taXNlLl9zdGF0ZTtcblxuICBpZiAoc3Vic2NyaWJlcnMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGNoaWxkID0gdm9pZCAwLFxuICAgICAgY2FsbGJhY2sgPSB2b2lkIDAsXG4gICAgICBkZXRhaWwgPSBwcm9taXNlLl9yZXN1bHQ7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdWJzY3JpYmVycy5sZW5ndGg7IGkgKz0gMykge1xuICAgIGNoaWxkID0gc3Vic2NyaWJlcnNbaV07XG4gICAgY2FsbGJhY2sgPSBzdWJzY3JpYmVyc1tpICsgc2V0dGxlZF07XG5cbiAgICBpZiAoY2hpbGQpIHtcbiAgICAgIGludm9rZUNhbGxiYWNrKHNldHRsZWQsIGNoaWxkLCBjYWxsYmFjaywgZGV0YWlsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2soZGV0YWlsKTtcbiAgICB9XG4gIH1cblxuICBwcm9taXNlLl9zdWJzY3JpYmVycy5sZW5ndGggPSAwO1xufVxuXG5mdW5jdGlvbiBpbnZva2VDYWxsYmFjayhzZXR0bGVkLCBwcm9taXNlLCBjYWxsYmFjaywgZGV0YWlsKSB7XG4gIHZhciBoYXNDYWxsYmFjayA9IGlzRnVuY3Rpb24oY2FsbGJhY2spLFxuICAgICAgdmFsdWUgPSB2b2lkIDAsXG4gICAgICBlcnJvciA9IHZvaWQgMCxcbiAgICAgIHN1Y2NlZWRlZCA9IHRydWU7XG5cbiAgaWYgKGhhc0NhbGxiYWNrKSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhbHVlID0gY2FsbGJhY2soZGV0YWlsKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBzdWNjZWVkZWQgPSBmYWxzZTtcbiAgICAgIGVycm9yID0gZTtcbiAgICB9XG5cbiAgICBpZiAocHJvbWlzZSA9PT0gdmFsdWUpIHtcbiAgICAgIHJlamVjdChwcm9taXNlLCBjYW5ub3RSZXR1cm5Pd24oKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHZhbHVlID0gZGV0YWlsO1xuICB9XG5cbiAgaWYgKHByb21pc2UuX3N0YXRlICE9PSBQRU5ESU5HKSB7XG4gICAgLy8gbm9vcFxuICB9IGVsc2UgaWYgKGhhc0NhbGxiYWNrICYmIHN1Y2NlZWRlZCkge1xuICAgIHJlc29sdmUocHJvbWlzZSwgdmFsdWUpO1xuICB9IGVsc2UgaWYgKHN1Y2NlZWRlZCA9PT0gZmFsc2UpIHtcbiAgICByZWplY3QocHJvbWlzZSwgZXJyb3IpO1xuICB9IGVsc2UgaWYgKHNldHRsZWQgPT09IEZVTEZJTExFRCkge1xuICAgIGZ1bGZpbGwocHJvbWlzZSwgdmFsdWUpO1xuICB9IGVsc2UgaWYgKHNldHRsZWQgPT09IFJFSkVDVEVEKSB7XG4gICAgcmVqZWN0KHByb21pc2UsIHZhbHVlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0aWFsaXplUHJvbWlzZShwcm9taXNlLCByZXNvbHZlcikge1xuICB0cnkge1xuICAgIHJlc29sdmVyKGZ1bmN0aW9uIHJlc29sdmVQcm9taXNlKHZhbHVlKSB7XG4gICAgICByZXNvbHZlKHByb21pc2UsIHZhbHVlKTtcbiAgICB9LCBmdW5jdGlvbiByZWplY3RQcm9taXNlKHJlYXNvbikge1xuICAgICAgcmVqZWN0KHByb21pc2UsIHJlYXNvbik7XG4gICAgfSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZWplY3QocHJvbWlzZSwgZSk7XG4gIH1cbn1cblxudmFyIGlkID0gMDtcbmZ1bmN0aW9uIG5leHRJZCgpIHtcbiAgcmV0dXJuIGlkKys7XG59XG5cbmZ1bmN0aW9uIG1ha2VQcm9taXNlKHByb21pc2UpIHtcbiAgcHJvbWlzZVtQUk9NSVNFX0lEXSA9IGlkKys7XG4gIHByb21pc2UuX3N0YXRlID0gdW5kZWZpbmVkO1xuICBwcm9taXNlLl9yZXN1bHQgPSB1bmRlZmluZWQ7XG4gIHByb21pc2UuX3N1YnNjcmliZXJzID0gW107XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRpb25FcnJvcigpIHtcbiAgcmV0dXJuIG5ldyBFcnJvcignQXJyYXkgTWV0aG9kcyBtdXN0IGJlIHByb3ZpZGVkIGFuIEFycmF5Jyk7XG59XG5cbnZhciBFbnVtZXJhdG9yID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBFbnVtZXJhdG9yKENvbnN0cnVjdG9yLCBpbnB1dCkge1xuICAgIHRoaXMuX2luc3RhbmNlQ29uc3RydWN0b3IgPSBDb25zdHJ1Y3RvcjtcbiAgICB0aGlzLnByb21pc2UgPSBuZXcgQ29uc3RydWN0b3Iobm9vcCk7XG5cbiAgICBpZiAoIXRoaXMucHJvbWlzZVtQUk9NSVNFX0lEXSkge1xuICAgICAgbWFrZVByb21pc2UodGhpcy5wcm9taXNlKTtcbiAgICB9XG5cbiAgICBpZiAoaXNBcnJheShpbnB1dCkpIHtcbiAgICAgIHRoaXMubGVuZ3RoID0gaW5wdXQubGVuZ3RoO1xuICAgICAgdGhpcy5fcmVtYWluaW5nID0gaW5wdXQubGVuZ3RoO1xuXG4gICAgICB0aGlzLl9yZXN1bHQgPSBuZXcgQXJyYXkodGhpcy5sZW5ndGgpO1xuXG4gICAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgZnVsZmlsbCh0aGlzLnByb21pc2UsIHRoaXMuX3Jlc3VsdCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmxlbmd0aCA9IHRoaXMubGVuZ3RoIHx8IDA7XG4gICAgICAgIHRoaXMuX2VudW1lcmF0ZShpbnB1dCk7XG4gICAgICAgIGlmICh0aGlzLl9yZW1haW5pbmcgPT09IDApIHtcbiAgICAgICAgICBmdWxmaWxsKHRoaXMucHJvbWlzZSwgdGhpcy5fcmVzdWx0KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZWplY3QodGhpcy5wcm9taXNlLCB2YWxpZGF0aW9uRXJyb3IoKSk7XG4gICAgfVxuICB9XG5cbiAgRW51bWVyYXRvci5wcm90b3R5cGUuX2VudW1lcmF0ZSA9IGZ1bmN0aW9uIF9lbnVtZXJhdGUoaW5wdXQpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgdGhpcy5fc3RhdGUgPT09IFBFTkRJTkcgJiYgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLl9lYWNoRW50cnkoaW5wdXRbaV0sIGkpO1xuICAgIH1cbiAgfTtcblxuICBFbnVtZXJhdG9yLnByb3RvdHlwZS5fZWFjaEVudHJ5ID0gZnVuY3Rpb24gX2VhY2hFbnRyeShlbnRyeSwgaSkge1xuICAgIHZhciBjID0gdGhpcy5faW5zdGFuY2VDb25zdHJ1Y3RvcjtcbiAgICB2YXIgcmVzb2x2ZSQkMSA9IGMucmVzb2x2ZTtcblxuXG4gICAgaWYgKHJlc29sdmUkJDEgPT09IHJlc29sdmUkMSkge1xuICAgICAgdmFyIF90aGVuID0gdm9pZCAwO1xuICAgICAgdmFyIGVycm9yID0gdm9pZCAwO1xuICAgICAgdmFyIGRpZEVycm9yID0gZmFsc2U7XG4gICAgICB0cnkge1xuICAgICAgICBfdGhlbiA9IGVudHJ5LnRoZW47XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGRpZEVycm9yID0gdHJ1ZTtcbiAgICAgICAgZXJyb3IgPSBlO1xuICAgICAgfVxuXG4gICAgICBpZiAoX3RoZW4gPT09IHRoZW4gJiYgZW50cnkuX3N0YXRlICE9PSBQRU5ESU5HKSB7XG4gICAgICAgIHRoaXMuX3NldHRsZWRBdChlbnRyeS5fc3RhdGUsIGksIGVudHJ5Ll9yZXN1bHQpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgX3RoZW4gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhpcy5fcmVtYWluaW5nLS07XG4gICAgICAgIHRoaXMuX3Jlc3VsdFtpXSA9IGVudHJ5O1xuICAgICAgfSBlbHNlIGlmIChjID09PSBQcm9taXNlJDEpIHtcbiAgICAgICAgdmFyIHByb21pc2UgPSBuZXcgYyhub29wKTtcbiAgICAgICAgaWYgKGRpZEVycm9yKSB7XG4gICAgICAgICAgcmVqZWN0KHByb21pc2UsIGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBoYW5kbGVNYXliZVRoZW5hYmxlKHByb21pc2UsIGVudHJ5LCBfdGhlbik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fd2lsbFNldHRsZUF0KHByb21pc2UsIGkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fd2lsbFNldHRsZUF0KG5ldyBjKGZ1bmN0aW9uIChyZXNvbHZlJCQxKSB7XG4gICAgICAgICAgcmV0dXJuIHJlc29sdmUkJDEoZW50cnkpO1xuICAgICAgICB9KSwgaSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3dpbGxTZXR0bGVBdChyZXNvbHZlJCQxKGVudHJ5KSwgaSk7XG4gICAgfVxuICB9O1xuXG4gIEVudW1lcmF0b3IucHJvdG90eXBlLl9zZXR0bGVkQXQgPSBmdW5jdGlvbiBfc2V0dGxlZEF0KHN0YXRlLCBpLCB2YWx1ZSkge1xuICAgIHZhciBwcm9taXNlID0gdGhpcy5wcm9taXNlO1xuXG5cbiAgICBpZiAocHJvbWlzZS5fc3RhdGUgPT09IFBFTkRJTkcpIHtcbiAgICAgIHRoaXMuX3JlbWFpbmluZy0tO1xuXG4gICAgICBpZiAoc3RhdGUgPT09IFJFSkVDVEVEKSB7XG4gICAgICAgIHJlamVjdChwcm9taXNlLCB2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9yZXN1bHRbaV0gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodGhpcy5fcmVtYWluaW5nID09PSAwKSB7XG4gICAgICBmdWxmaWxsKHByb21pc2UsIHRoaXMuX3Jlc3VsdCk7XG4gICAgfVxuICB9O1xuXG4gIEVudW1lcmF0b3IucHJvdG90eXBlLl93aWxsU2V0dGxlQXQgPSBmdW5jdGlvbiBfd2lsbFNldHRsZUF0KHByb21pc2UsIGkpIHtcbiAgICB2YXIgZW51bWVyYXRvciA9IHRoaXM7XG5cbiAgICBzdWJzY3JpYmUocHJvbWlzZSwgdW5kZWZpbmVkLCBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgIHJldHVybiBlbnVtZXJhdG9yLl9zZXR0bGVkQXQoRlVMRklMTEVELCBpLCB2YWx1ZSk7XG4gICAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgcmV0dXJuIGVudW1lcmF0b3IuX3NldHRsZWRBdChSRUpFQ1RFRCwgaSwgcmVhc29uKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gRW51bWVyYXRvcjtcbn0oKTtcblxuLyoqXG4gIGBQcm9taXNlLmFsbGAgYWNjZXB0cyBhbiBhcnJheSBvZiBwcm9taXNlcywgYW5kIHJldHVybnMgYSBuZXcgcHJvbWlzZSB3aGljaFxuICBpcyBmdWxmaWxsZWQgd2l0aCBhbiBhcnJheSBvZiBmdWxmaWxsbWVudCB2YWx1ZXMgZm9yIHRoZSBwYXNzZWQgcHJvbWlzZXMsIG9yXG4gIHJlamVjdGVkIHdpdGggdGhlIHJlYXNvbiBvZiB0aGUgZmlyc3QgcGFzc2VkIHByb21pc2UgdG8gYmUgcmVqZWN0ZWQuIEl0IGNhc3RzIGFsbFxuICBlbGVtZW50cyBvZiB0aGUgcGFzc2VkIGl0ZXJhYmxlIHRvIHByb21pc2VzIGFzIGl0IHJ1bnMgdGhpcyBhbGdvcml0aG0uXG5cbiAgRXhhbXBsZTpcblxuICBgYGBqYXZhc2NyaXB0XG4gIGxldCBwcm9taXNlMSA9IHJlc29sdmUoMSk7XG4gIGxldCBwcm9taXNlMiA9IHJlc29sdmUoMik7XG4gIGxldCBwcm9taXNlMyA9IHJlc29sdmUoMyk7XG4gIGxldCBwcm9taXNlcyA9IFsgcHJvbWlzZTEsIHByb21pc2UyLCBwcm9taXNlMyBdO1xuXG4gIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKGZ1bmN0aW9uKGFycmF5KXtcbiAgICAvLyBUaGUgYXJyYXkgaGVyZSB3b3VsZCBiZSBbIDEsIDIsIDMgXTtcbiAgfSk7XG4gIGBgYFxuXG4gIElmIGFueSBvZiB0aGUgYHByb21pc2VzYCBnaXZlbiB0byBgYWxsYCBhcmUgcmVqZWN0ZWQsIHRoZSBmaXJzdCBwcm9taXNlXG4gIHRoYXQgaXMgcmVqZWN0ZWQgd2lsbCBiZSBnaXZlbiBhcyBhbiBhcmd1bWVudCB0byB0aGUgcmV0dXJuZWQgcHJvbWlzZXMnc1xuICByZWplY3Rpb24gaGFuZGxlci4gRm9yIGV4YW1wbGU6XG5cbiAgRXhhbXBsZTpcblxuICBgYGBqYXZhc2NyaXB0XG4gIGxldCBwcm9taXNlMSA9IHJlc29sdmUoMSk7XG4gIGxldCBwcm9taXNlMiA9IHJlamVjdChuZXcgRXJyb3IoXCIyXCIpKTtcbiAgbGV0IHByb21pc2UzID0gcmVqZWN0KG5ldyBFcnJvcihcIjNcIikpO1xuICBsZXQgcHJvbWlzZXMgPSBbIHByb21pc2UxLCBwcm9taXNlMiwgcHJvbWlzZTMgXTtcblxuICBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbihmdW5jdGlvbihhcnJheSl7XG4gICAgLy8gQ29kZSBoZXJlIG5ldmVyIHJ1bnMgYmVjYXVzZSB0aGVyZSBhcmUgcmVqZWN0ZWQgcHJvbWlzZXMhXG4gIH0sIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgLy8gZXJyb3IubWVzc2FnZSA9PT0gXCIyXCJcbiAgfSk7XG4gIGBgYFxuXG4gIEBtZXRob2QgYWxsXG4gIEBzdGF0aWNcbiAgQHBhcmFtIHtBcnJheX0gZW50cmllcyBhcnJheSBvZiBwcm9taXNlc1xuICBAcGFyYW0ge1N0cmluZ30gbGFiZWwgb3B0aW9uYWwgc3RyaW5nIGZvciBsYWJlbGluZyB0aGUgcHJvbWlzZS5cbiAgVXNlZnVsIGZvciB0b29saW5nLlxuICBAcmV0dXJuIHtQcm9taXNlfSBwcm9taXNlIHRoYXQgaXMgZnVsZmlsbGVkIHdoZW4gYWxsIGBwcm9taXNlc2AgaGF2ZSBiZWVuXG4gIGZ1bGZpbGxlZCwgb3IgcmVqZWN0ZWQgaWYgYW55IG9mIHRoZW0gYmVjb21lIHJlamVjdGVkLlxuICBAc3RhdGljXG4qL1xuZnVuY3Rpb24gYWxsKGVudHJpZXMpIHtcbiAgcmV0dXJuIG5ldyBFbnVtZXJhdG9yKHRoaXMsIGVudHJpZXMpLnByb21pc2U7XG59XG5cbi8qKlxuICBgUHJvbWlzZS5yYWNlYCByZXR1cm5zIGEgbmV3IHByb21pc2Ugd2hpY2ggaXMgc2V0dGxlZCBpbiB0aGUgc2FtZSB3YXkgYXMgdGhlXG4gIGZpcnN0IHBhc3NlZCBwcm9taXNlIHRvIHNldHRsZS5cblxuICBFeGFtcGxlOlxuXG4gIGBgYGphdmFzY3JpcHRcbiAgbGV0IHByb21pc2UxID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KXtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICByZXNvbHZlKCdwcm9taXNlIDEnKTtcbiAgICB9LCAyMDApO1xuICB9KTtcblxuICBsZXQgcHJvbWlzZTIgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3Qpe1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgIHJlc29sdmUoJ3Byb21pc2UgMicpO1xuICAgIH0sIDEwMCk7XG4gIH0pO1xuXG4gIFByb21pc2UucmFjZShbcHJvbWlzZTEsIHByb21pc2UyXSkudGhlbihmdW5jdGlvbihyZXN1bHQpe1xuICAgIC8vIHJlc3VsdCA9PT0gJ3Byb21pc2UgMicgYmVjYXVzZSBpdCB3YXMgcmVzb2x2ZWQgYmVmb3JlIHByb21pc2UxXG4gICAgLy8gd2FzIHJlc29sdmVkLlxuICB9KTtcbiAgYGBgXG5cbiAgYFByb21pc2UucmFjZWAgaXMgZGV0ZXJtaW5pc3RpYyBpbiB0aGF0IG9ubHkgdGhlIHN0YXRlIG9mIHRoZSBmaXJzdFxuICBzZXR0bGVkIHByb21pc2UgbWF0dGVycy4gRm9yIGV4YW1wbGUsIGV2ZW4gaWYgb3RoZXIgcHJvbWlzZXMgZ2l2ZW4gdG8gdGhlXG4gIGBwcm9taXNlc2AgYXJyYXkgYXJndW1lbnQgYXJlIHJlc29sdmVkLCBidXQgdGhlIGZpcnN0IHNldHRsZWQgcHJvbWlzZSBoYXNcbiAgYmVjb21lIHJlamVjdGVkIGJlZm9yZSB0aGUgb3RoZXIgcHJvbWlzZXMgYmVjYW1lIGZ1bGZpbGxlZCwgdGhlIHJldHVybmVkXG4gIHByb21pc2Ugd2lsbCBiZWNvbWUgcmVqZWN0ZWQ6XG5cbiAgYGBgamF2YXNjcmlwdFxuICBsZXQgcHJvbWlzZTEgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3Qpe1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgIHJlc29sdmUoJ3Byb21pc2UgMScpO1xuICAgIH0sIDIwMCk7XG4gIH0pO1xuXG4gIGxldCBwcm9taXNlMiA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCl7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcigncHJvbWlzZSAyJykpO1xuICAgIH0sIDEwMCk7XG4gIH0pO1xuXG4gIFByb21pc2UucmFjZShbcHJvbWlzZTEsIHByb21pc2UyXSkudGhlbihmdW5jdGlvbihyZXN1bHQpe1xuICAgIC8vIENvZGUgaGVyZSBuZXZlciBydW5zXG4gIH0sIGZ1bmN0aW9uKHJlYXNvbil7XG4gICAgLy8gcmVhc29uLm1lc3NhZ2UgPT09ICdwcm9taXNlIDInIGJlY2F1c2UgcHJvbWlzZSAyIGJlY2FtZSByZWplY3RlZCBiZWZvcmVcbiAgICAvLyBwcm9taXNlIDEgYmVjYW1lIGZ1bGZpbGxlZFxuICB9KTtcbiAgYGBgXG5cbiAgQW4gZXhhbXBsZSByZWFsLXdvcmxkIHVzZSBjYXNlIGlzIGltcGxlbWVudGluZyB0aW1lb3V0czpcblxuICBgYGBqYXZhc2NyaXB0XG4gIFByb21pc2UucmFjZShbYWpheCgnZm9vLmpzb24nKSwgdGltZW91dCg1MDAwKV0pXG4gIGBgYFxuXG4gIEBtZXRob2QgcmFjZVxuICBAc3RhdGljXG4gIEBwYXJhbSB7QXJyYXl9IHByb21pc2VzIGFycmF5IG9mIHByb21pc2VzIHRvIG9ic2VydmVcbiAgVXNlZnVsIGZvciB0b29saW5nLlxuICBAcmV0dXJuIHtQcm9taXNlfSBhIHByb21pc2Ugd2hpY2ggc2V0dGxlcyBpbiB0aGUgc2FtZSB3YXkgYXMgdGhlIGZpcnN0IHBhc3NlZFxuICBwcm9taXNlIHRvIHNldHRsZS5cbiovXG5mdW5jdGlvbiByYWNlKGVudHJpZXMpIHtcbiAgLypqc2hpbnQgdmFsaWR0aGlzOnRydWUgKi9cbiAgdmFyIENvbnN0cnVjdG9yID0gdGhpcztcblxuICBpZiAoIWlzQXJyYXkoZW50cmllcykpIHtcbiAgICByZXR1cm4gbmV3IENvbnN0cnVjdG9yKGZ1bmN0aW9uIChfLCByZWplY3QpIHtcbiAgICAgIHJldHVybiByZWplY3QobmV3IFR5cGVFcnJvcignWW91IG11c3QgcGFzcyBhbiBhcnJheSB0byByYWNlLicpKTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbmV3IENvbnN0cnVjdG9yKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBsZW5ndGggPSBlbnRyaWVzLmxlbmd0aDtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgQ29uc3RydWN0b3IucmVzb2x2ZShlbnRyaWVzW2ldKS50aGVuKHJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuLyoqXG4gIGBQcm9taXNlLnJlamVjdGAgcmV0dXJucyBhIHByb21pc2UgcmVqZWN0ZWQgd2l0aCB0aGUgcGFzc2VkIGByZWFzb25gLlxuICBJdCBpcyBzaG9ydGhhbmQgZm9yIHRoZSBmb2xsb3dpbmc6XG5cbiAgYGBgamF2YXNjcmlwdFxuICBsZXQgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCl7XG4gICAgcmVqZWN0KG5ldyBFcnJvcignV0hPT1BTJykpO1xuICB9KTtcblxuICBwcm9taXNlLnRoZW4oZnVuY3Rpb24odmFsdWUpe1xuICAgIC8vIENvZGUgaGVyZSBkb2Vzbid0IHJ1biBiZWNhdXNlIHRoZSBwcm9taXNlIGlzIHJlamVjdGVkIVxuICB9LCBmdW5jdGlvbihyZWFzb24pe1xuICAgIC8vIHJlYXNvbi5tZXNzYWdlID09PSAnV0hPT1BTJ1xuICB9KTtcbiAgYGBgXG5cbiAgSW5zdGVhZCBvZiB3cml0aW5nIHRoZSBhYm92ZSwgeW91ciBjb2RlIG5vdyBzaW1wbHkgYmVjb21lcyB0aGUgZm9sbG93aW5nOlxuXG4gIGBgYGphdmFzY3JpcHRcbiAgbGV0IHByb21pc2UgPSBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ1dIT09QUycpKTtcblxuICBwcm9taXNlLnRoZW4oZnVuY3Rpb24odmFsdWUpe1xuICAgIC8vIENvZGUgaGVyZSBkb2Vzbid0IHJ1biBiZWNhdXNlIHRoZSBwcm9taXNlIGlzIHJlamVjdGVkIVxuICB9LCBmdW5jdGlvbihyZWFzb24pe1xuICAgIC8vIHJlYXNvbi5tZXNzYWdlID09PSAnV0hPT1BTJ1xuICB9KTtcbiAgYGBgXG5cbiAgQG1ldGhvZCByZWplY3RcbiAgQHN0YXRpY1xuICBAcGFyYW0ge0FueX0gcmVhc29uIHZhbHVlIHRoYXQgdGhlIHJldHVybmVkIHByb21pc2Ugd2lsbCBiZSByZWplY3RlZCB3aXRoLlxuICBVc2VmdWwgZm9yIHRvb2xpbmcuXG4gIEByZXR1cm4ge1Byb21pc2V9IGEgcHJvbWlzZSByZWplY3RlZCB3aXRoIHRoZSBnaXZlbiBgcmVhc29uYC5cbiovXG5mdW5jdGlvbiByZWplY3QkMShyZWFzb24pIHtcbiAgLypqc2hpbnQgdmFsaWR0aGlzOnRydWUgKi9cbiAgdmFyIENvbnN0cnVjdG9yID0gdGhpcztcbiAgdmFyIHByb21pc2UgPSBuZXcgQ29uc3RydWN0b3Iobm9vcCk7XG4gIHJlamVjdChwcm9taXNlLCByZWFzb24pO1xuICByZXR1cm4gcHJvbWlzZTtcbn1cblxuZnVuY3Rpb24gbmVlZHNSZXNvbHZlcigpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcignWW91IG11c3QgcGFzcyBhIHJlc29sdmVyIGZ1bmN0aW9uIGFzIHRoZSBmaXJzdCBhcmd1bWVudCB0byB0aGUgcHJvbWlzZSBjb25zdHJ1Y3RvcicpO1xufVxuXG5mdW5jdGlvbiBuZWVkc05ldygpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkZhaWxlZCB0byBjb25zdHJ1Y3QgJ1Byb21pc2UnOiBQbGVhc2UgdXNlIHRoZSAnbmV3JyBvcGVyYXRvciwgdGhpcyBvYmplY3QgY29uc3RydWN0b3IgY2Fubm90IGJlIGNhbGxlZCBhcyBhIGZ1bmN0aW9uLlwiKTtcbn1cblxuLyoqXG4gIFByb21pc2Ugb2JqZWN0cyByZXByZXNlbnQgdGhlIGV2ZW50dWFsIHJlc3VsdCBvZiBhbiBhc3luY2hyb25vdXMgb3BlcmF0aW9uLiBUaGVcbiAgcHJpbWFyeSB3YXkgb2YgaW50ZXJhY3Rpbmcgd2l0aCBhIHByb21pc2UgaXMgdGhyb3VnaCBpdHMgYHRoZW5gIG1ldGhvZCwgd2hpY2hcbiAgcmVnaXN0ZXJzIGNhbGxiYWNrcyB0byByZWNlaXZlIGVpdGhlciBhIHByb21pc2UncyBldmVudHVhbCB2YWx1ZSBvciB0aGUgcmVhc29uXG4gIHdoeSB0aGUgcHJvbWlzZSBjYW5ub3QgYmUgZnVsZmlsbGVkLlxuXG4gIFRlcm1pbm9sb2d5XG4gIC0tLS0tLS0tLS0tXG5cbiAgLSBgcHJvbWlzZWAgaXMgYW4gb2JqZWN0IG9yIGZ1bmN0aW9uIHdpdGggYSBgdGhlbmAgbWV0aG9kIHdob3NlIGJlaGF2aW9yIGNvbmZvcm1zIHRvIHRoaXMgc3BlY2lmaWNhdGlvbi5cbiAgLSBgdGhlbmFibGVgIGlzIGFuIG9iamVjdCBvciBmdW5jdGlvbiB0aGF0IGRlZmluZXMgYSBgdGhlbmAgbWV0aG9kLlxuICAtIGB2YWx1ZWAgaXMgYW55IGxlZ2FsIEphdmFTY3JpcHQgdmFsdWUgKGluY2x1ZGluZyB1bmRlZmluZWQsIGEgdGhlbmFibGUsIG9yIGEgcHJvbWlzZSkuXG4gIC0gYGV4Y2VwdGlvbmAgaXMgYSB2YWx1ZSB0aGF0IGlzIHRocm93biB1c2luZyB0aGUgdGhyb3cgc3RhdGVtZW50LlxuICAtIGByZWFzb25gIGlzIGEgdmFsdWUgdGhhdCBpbmRpY2F0ZXMgd2h5IGEgcHJvbWlzZSB3YXMgcmVqZWN0ZWQuXG4gIC0gYHNldHRsZWRgIHRoZSBmaW5hbCByZXN0aW5nIHN0YXRlIG9mIGEgcHJvbWlzZSwgZnVsZmlsbGVkIG9yIHJlamVjdGVkLlxuXG4gIEEgcHJvbWlzZSBjYW4gYmUgaW4gb25lIG9mIHRocmVlIHN0YXRlczogcGVuZGluZywgZnVsZmlsbGVkLCBvciByZWplY3RlZC5cblxuICBQcm9taXNlcyB0aGF0IGFyZSBmdWxmaWxsZWQgaGF2ZSBhIGZ1bGZpbGxtZW50IHZhbHVlIGFuZCBhcmUgaW4gdGhlIGZ1bGZpbGxlZFxuICBzdGF0ZS4gIFByb21pc2VzIHRoYXQgYXJlIHJlamVjdGVkIGhhdmUgYSByZWplY3Rpb24gcmVhc29uIGFuZCBhcmUgaW4gdGhlXG4gIHJlamVjdGVkIHN0YXRlLiAgQSBmdWxmaWxsbWVudCB2YWx1ZSBpcyBuZXZlciBhIHRoZW5hYmxlLlxuXG4gIFByb21pc2VzIGNhbiBhbHNvIGJlIHNhaWQgdG8gKnJlc29sdmUqIGEgdmFsdWUuICBJZiB0aGlzIHZhbHVlIGlzIGFsc28gYVxuICBwcm9taXNlLCB0aGVuIHRoZSBvcmlnaW5hbCBwcm9taXNlJ3Mgc2V0dGxlZCBzdGF0ZSB3aWxsIG1hdGNoIHRoZSB2YWx1ZSdzXG4gIHNldHRsZWQgc3RhdGUuICBTbyBhIHByb21pc2UgdGhhdCAqcmVzb2x2ZXMqIGEgcHJvbWlzZSB0aGF0IHJlamVjdHMgd2lsbFxuICBpdHNlbGYgcmVqZWN0LCBhbmQgYSBwcm9taXNlIHRoYXQgKnJlc29sdmVzKiBhIHByb21pc2UgdGhhdCBmdWxmaWxscyB3aWxsXG4gIGl0c2VsZiBmdWxmaWxsLlxuXG5cbiAgQmFzaWMgVXNhZ2U6XG4gIC0tLS0tLS0tLS0tLVxuXG4gIGBgYGpzXG4gIGxldCBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgLy8gb24gc3VjY2Vzc1xuICAgIHJlc29sdmUodmFsdWUpO1xuXG4gICAgLy8gb24gZmFpbHVyZVxuICAgIHJlamVjdChyZWFzb24pO1xuICB9KTtcblxuICBwcm9taXNlLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAvLyBvbiBmdWxmaWxsbWVudFxuICB9LCBmdW5jdGlvbihyZWFzb24pIHtcbiAgICAvLyBvbiByZWplY3Rpb25cbiAgfSk7XG4gIGBgYFxuXG4gIEFkdmFuY2VkIFVzYWdlOlxuICAtLS0tLS0tLS0tLS0tLS1cblxuICBQcm9taXNlcyBzaGluZSB3aGVuIGFic3RyYWN0aW5nIGF3YXkgYXN5bmNocm9ub3VzIGludGVyYWN0aW9ucyBzdWNoIGFzXG4gIGBYTUxIdHRwUmVxdWVzdGBzLlxuXG4gIGBgYGpzXG4gIGZ1bmN0aW9uIGdldEpTT04odXJsKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCl7XG4gICAgICBsZXQgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICAgIHhoci5vcGVuKCdHRVQnLCB1cmwpO1xuICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGhhbmRsZXI7XG4gICAgICB4aHIucmVzcG9uc2VUeXBlID0gJ2pzb24nO1xuICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ0FjY2VwdCcsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICB4aHIuc2VuZCgpO1xuXG4gICAgICBmdW5jdGlvbiBoYW5kbGVyKCkge1xuICAgICAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSB0aGlzLkRPTkUpIHtcbiAgICAgICAgICBpZiAodGhpcy5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgcmVzb2x2ZSh0aGlzLnJlc3BvbnNlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcignZ2V0SlNPTjogYCcgKyB1cmwgKyAnYCBmYWlsZWQgd2l0aCBzdGF0dXM6IFsnICsgdGhpcy5zdGF0dXMgKyAnXScpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG4gIH1cblxuICBnZXRKU09OKCcvcG9zdHMuanNvbicpLnRoZW4oZnVuY3Rpb24oanNvbikge1xuICAgIC8vIG9uIGZ1bGZpbGxtZW50XG4gIH0sIGZ1bmN0aW9uKHJlYXNvbikge1xuICAgIC8vIG9uIHJlamVjdGlvblxuICB9KTtcbiAgYGBgXG5cbiAgVW5saWtlIGNhbGxiYWNrcywgcHJvbWlzZXMgYXJlIGdyZWF0IGNvbXBvc2FibGUgcHJpbWl0aXZlcy5cblxuICBgYGBqc1xuICBQcm9taXNlLmFsbChbXG4gICAgZ2V0SlNPTignL3Bvc3RzJyksXG4gICAgZ2V0SlNPTignL2NvbW1lbnRzJylcbiAgXSkudGhlbihmdW5jdGlvbih2YWx1ZXMpe1xuICAgIHZhbHVlc1swXSAvLyA9PiBwb3N0c0pTT05cbiAgICB2YWx1ZXNbMV0gLy8gPT4gY29tbWVudHNKU09OXG5cbiAgICByZXR1cm4gdmFsdWVzO1xuICB9KTtcbiAgYGBgXG5cbiAgQGNsYXNzIFByb21pc2VcbiAgQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZXJcbiAgVXNlZnVsIGZvciB0b29saW5nLlxuICBAY29uc3RydWN0b3JcbiovXG5cbnZhciBQcm9taXNlJDEgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFByb21pc2UocmVzb2x2ZXIpIHtcbiAgICB0aGlzW1BST01JU0VfSURdID0gbmV4dElkKCk7XG4gICAgdGhpcy5fcmVzdWx0ID0gdGhpcy5fc3RhdGUgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5fc3Vic2NyaWJlcnMgPSBbXTtcblxuICAgIGlmIChub29wICE9PSByZXNvbHZlcikge1xuICAgICAgdHlwZW9mIHJlc29sdmVyICE9PSAnZnVuY3Rpb24nICYmIG5lZWRzUmVzb2x2ZXIoKTtcbiAgICAgIHRoaXMgaW5zdGFuY2VvZiBQcm9taXNlID8gaW5pdGlhbGl6ZVByb21pc2UodGhpcywgcmVzb2x2ZXIpIDogbmVlZHNOZXcoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgVGhlIHByaW1hcnkgd2F5IG9mIGludGVyYWN0aW5nIHdpdGggYSBwcm9taXNlIGlzIHRocm91Z2ggaXRzIGB0aGVuYCBtZXRob2QsXG4gIHdoaWNoIHJlZ2lzdGVycyBjYWxsYmFja3MgdG8gcmVjZWl2ZSBlaXRoZXIgYSBwcm9taXNlJ3MgZXZlbnR1YWwgdmFsdWUgb3IgdGhlXG4gIHJlYXNvbiB3aHkgdGhlIHByb21pc2UgY2Fubm90IGJlIGZ1bGZpbGxlZC5cbiAgIGBgYGpzXG4gIGZpbmRVc2VyKCkudGhlbihmdW5jdGlvbih1c2VyKXtcbiAgICAvLyB1c2VyIGlzIGF2YWlsYWJsZVxuICB9LCBmdW5jdGlvbihyZWFzb24pe1xuICAgIC8vIHVzZXIgaXMgdW5hdmFpbGFibGUsIGFuZCB5b3UgYXJlIGdpdmVuIHRoZSByZWFzb24gd2h5XG4gIH0pO1xuICBgYGBcbiAgIENoYWluaW5nXG4gIC0tLS0tLS0tXG4gICBUaGUgcmV0dXJuIHZhbHVlIG9mIGB0aGVuYCBpcyBpdHNlbGYgYSBwcm9taXNlLiAgVGhpcyBzZWNvbmQsICdkb3duc3RyZWFtJ1xuICBwcm9taXNlIGlzIHJlc29sdmVkIHdpdGggdGhlIHJldHVybiB2YWx1ZSBvZiB0aGUgZmlyc3QgcHJvbWlzZSdzIGZ1bGZpbGxtZW50XG4gIG9yIHJlamVjdGlvbiBoYW5kbGVyLCBvciByZWplY3RlZCBpZiB0aGUgaGFuZGxlciB0aHJvd3MgYW4gZXhjZXB0aW9uLlxuICAgYGBganNcbiAgZmluZFVzZXIoKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgcmV0dXJuIHVzZXIubmFtZTtcbiAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgIHJldHVybiAnZGVmYXVsdCBuYW1lJztcbiAgfSkudGhlbihmdW5jdGlvbiAodXNlck5hbWUpIHtcbiAgICAvLyBJZiBgZmluZFVzZXJgIGZ1bGZpbGxlZCwgYHVzZXJOYW1lYCB3aWxsIGJlIHRoZSB1c2VyJ3MgbmFtZSwgb3RoZXJ3aXNlIGl0XG4gICAgLy8gd2lsbCBiZSBgJ2RlZmF1bHQgbmFtZSdgXG4gIH0pO1xuICAgZmluZFVzZXIoKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGb3VuZCB1c2VyLCBidXQgc3RpbGwgdW5oYXBweScpO1xuICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdgZmluZFVzZXJgIHJlamVjdGVkIGFuZCB3ZSdyZSB1bmhhcHB5Jyk7XG4gIH0pLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgLy8gbmV2ZXIgcmVhY2hlZFxuICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgLy8gaWYgYGZpbmRVc2VyYCBmdWxmaWxsZWQsIGByZWFzb25gIHdpbGwgYmUgJ0ZvdW5kIHVzZXIsIGJ1dCBzdGlsbCB1bmhhcHB5Jy5cbiAgICAvLyBJZiBgZmluZFVzZXJgIHJlamVjdGVkLCBgcmVhc29uYCB3aWxsIGJlICdgZmluZFVzZXJgIHJlamVjdGVkIGFuZCB3ZSdyZSB1bmhhcHB5Jy5cbiAgfSk7XG4gIGBgYFxuICBJZiB0aGUgZG93bnN0cmVhbSBwcm9taXNlIGRvZXMgbm90IHNwZWNpZnkgYSByZWplY3Rpb24gaGFuZGxlciwgcmVqZWN0aW9uIHJlYXNvbnMgd2lsbCBiZSBwcm9wYWdhdGVkIGZ1cnRoZXIgZG93bnN0cmVhbS5cbiAgIGBgYGpzXG4gIGZpbmRVc2VyKCkudGhlbihmdW5jdGlvbiAodXNlcikge1xuICAgIHRocm93IG5ldyBQZWRhZ29naWNhbEV4Y2VwdGlvbignVXBzdHJlYW0gZXJyb3InKTtcbiAgfSkudGhlbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAvLyBuZXZlciByZWFjaGVkXG4gIH0pLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgLy8gbmV2ZXIgcmVhY2hlZFxuICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgLy8gVGhlIGBQZWRnYWdvY2lhbEV4Y2VwdGlvbmAgaXMgcHJvcGFnYXRlZCBhbGwgdGhlIHdheSBkb3duIHRvIGhlcmVcbiAgfSk7XG4gIGBgYFxuICAgQXNzaW1pbGF0aW9uXG4gIC0tLS0tLS0tLS0tLVxuICAgU29tZXRpbWVzIHRoZSB2YWx1ZSB5b3Ugd2FudCB0byBwcm9wYWdhdGUgdG8gYSBkb3duc3RyZWFtIHByb21pc2UgY2FuIG9ubHkgYmVcbiAgcmV0cmlldmVkIGFzeW5jaHJvbm91c2x5LiBUaGlzIGNhbiBiZSBhY2hpZXZlZCBieSByZXR1cm5pbmcgYSBwcm9taXNlIGluIHRoZVxuICBmdWxmaWxsbWVudCBvciByZWplY3Rpb24gaGFuZGxlci4gVGhlIGRvd25zdHJlYW0gcHJvbWlzZSB3aWxsIHRoZW4gYmUgcGVuZGluZ1xuICB1bnRpbCB0aGUgcmV0dXJuZWQgcHJvbWlzZSBpcyBzZXR0bGVkLiBUaGlzIGlzIGNhbGxlZCAqYXNzaW1pbGF0aW9uKi5cbiAgIGBgYGpzXG4gIGZpbmRVc2VyKCkudGhlbihmdW5jdGlvbiAodXNlcikge1xuICAgIHJldHVybiBmaW5kQ29tbWVudHNCeUF1dGhvcih1c2VyKTtcbiAgfSkudGhlbihmdW5jdGlvbiAoY29tbWVudHMpIHtcbiAgICAvLyBUaGUgdXNlcidzIGNvbW1lbnRzIGFyZSBub3cgYXZhaWxhYmxlXG4gIH0pO1xuICBgYGBcbiAgIElmIHRoZSBhc3NpbWxpYXRlZCBwcm9taXNlIHJlamVjdHMsIHRoZW4gdGhlIGRvd25zdHJlYW0gcHJvbWlzZSB3aWxsIGFsc28gcmVqZWN0LlxuICAgYGBganNcbiAgZmluZFVzZXIoKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgcmV0dXJuIGZpbmRDb21tZW50c0J5QXV0aG9yKHVzZXIpO1xuICB9KS50aGVuKGZ1bmN0aW9uIChjb21tZW50cykge1xuICAgIC8vIElmIGBmaW5kQ29tbWVudHNCeUF1dGhvcmAgZnVsZmlsbHMsIHdlJ2xsIGhhdmUgdGhlIHZhbHVlIGhlcmVcbiAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgIC8vIElmIGBmaW5kQ29tbWVudHNCeUF1dGhvcmAgcmVqZWN0cywgd2UnbGwgaGF2ZSB0aGUgcmVhc29uIGhlcmVcbiAgfSk7XG4gIGBgYFxuICAgU2ltcGxlIEV4YW1wbGVcbiAgLS0tLS0tLS0tLS0tLS1cbiAgIFN5bmNocm9ub3VzIEV4YW1wbGVcbiAgIGBgYGphdmFzY3JpcHRcbiAgbGV0IHJlc3VsdDtcbiAgIHRyeSB7XG4gICAgcmVzdWx0ID0gZmluZFJlc3VsdCgpO1xuICAgIC8vIHN1Y2Nlc3NcbiAgfSBjYXRjaChyZWFzb24pIHtcbiAgICAvLyBmYWlsdXJlXG4gIH1cbiAgYGBgXG4gICBFcnJiYWNrIEV4YW1wbGVcbiAgIGBgYGpzXG4gIGZpbmRSZXN1bHQoZnVuY3Rpb24ocmVzdWx0LCBlcnIpe1xuICAgIGlmIChlcnIpIHtcbiAgICAgIC8vIGZhaWx1cmVcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gc3VjY2Vzc1xuICAgIH1cbiAgfSk7XG4gIGBgYFxuICAgUHJvbWlzZSBFeGFtcGxlO1xuICAgYGBgamF2YXNjcmlwdFxuICBmaW5kUmVzdWx0KCkudGhlbihmdW5jdGlvbihyZXN1bHQpe1xuICAgIC8vIHN1Y2Nlc3NcbiAgfSwgZnVuY3Rpb24ocmVhc29uKXtcbiAgICAvLyBmYWlsdXJlXG4gIH0pO1xuICBgYGBcbiAgIEFkdmFuY2VkIEV4YW1wbGVcbiAgLS0tLS0tLS0tLS0tLS1cbiAgIFN5bmNocm9ub3VzIEV4YW1wbGVcbiAgIGBgYGphdmFzY3JpcHRcbiAgbGV0IGF1dGhvciwgYm9va3M7XG4gICB0cnkge1xuICAgIGF1dGhvciA9IGZpbmRBdXRob3IoKTtcbiAgICBib29rcyAgPSBmaW5kQm9va3NCeUF1dGhvcihhdXRob3IpO1xuICAgIC8vIHN1Y2Nlc3NcbiAgfSBjYXRjaChyZWFzb24pIHtcbiAgICAvLyBmYWlsdXJlXG4gIH1cbiAgYGBgXG4gICBFcnJiYWNrIEV4YW1wbGVcbiAgIGBgYGpzXG4gICBmdW5jdGlvbiBmb3VuZEJvb2tzKGJvb2tzKSB7XG4gICB9XG4gICBmdW5jdGlvbiBmYWlsdXJlKHJlYXNvbikge1xuICAgfVxuICAgZmluZEF1dGhvcihmdW5jdGlvbihhdXRob3IsIGVycil7XG4gICAgaWYgKGVycikge1xuICAgICAgZmFpbHVyZShlcnIpO1xuICAgICAgLy8gZmFpbHVyZVxuICAgIH0gZWxzZSB7XG4gICAgICB0cnkge1xuICAgICAgICBmaW5kQm9vb2tzQnlBdXRob3IoYXV0aG9yLCBmdW5jdGlvbihib29rcywgZXJyKSB7XG4gICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgZmFpbHVyZShlcnIpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBmb3VuZEJvb2tzKGJvb2tzKTtcbiAgICAgICAgICAgIH0gY2F0Y2gocmVhc29uKSB7XG4gICAgICAgICAgICAgIGZhaWx1cmUocmVhc29uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaChlcnJvcikge1xuICAgICAgICBmYWlsdXJlKGVycik7XG4gICAgICB9XG4gICAgICAvLyBzdWNjZXNzXG4gICAgfVxuICB9KTtcbiAgYGBgXG4gICBQcm9taXNlIEV4YW1wbGU7XG4gICBgYGBqYXZhc2NyaXB0XG4gIGZpbmRBdXRob3IoKS5cbiAgICB0aGVuKGZpbmRCb29rc0J5QXV0aG9yKS5cbiAgICB0aGVuKGZ1bmN0aW9uKGJvb2tzKXtcbiAgICAgIC8vIGZvdW5kIGJvb2tzXG4gIH0pLmNhdGNoKGZ1bmN0aW9uKHJlYXNvbil7XG4gICAgLy8gc29tZXRoaW5nIHdlbnQgd3JvbmdcbiAgfSk7XG4gIGBgYFxuICAgQG1ldGhvZCB0aGVuXG4gIEBwYXJhbSB7RnVuY3Rpb259IG9uRnVsZmlsbGVkXG4gIEBwYXJhbSB7RnVuY3Rpb259IG9uUmVqZWN0ZWRcbiAgVXNlZnVsIGZvciB0b29saW5nLlxuICBAcmV0dXJuIHtQcm9taXNlfVxuICAqL1xuXG4gIC8qKlxuICBgY2F0Y2hgIGlzIHNpbXBseSBzdWdhciBmb3IgYHRoZW4odW5kZWZpbmVkLCBvblJlamVjdGlvbilgIHdoaWNoIG1ha2VzIGl0IHRoZSBzYW1lXG4gIGFzIHRoZSBjYXRjaCBibG9jayBvZiBhIHRyeS9jYXRjaCBzdGF0ZW1lbnQuXG4gIGBgYGpzXG4gIGZ1bmN0aW9uIGZpbmRBdXRob3IoKXtcbiAgdGhyb3cgbmV3IEVycm9yKCdjb3VsZG4ndCBmaW5kIHRoYXQgYXV0aG9yJyk7XG4gIH1cbiAgLy8gc3luY2hyb25vdXNcbiAgdHJ5IHtcbiAgZmluZEF1dGhvcigpO1xuICB9IGNhdGNoKHJlYXNvbikge1xuICAvLyBzb21ldGhpbmcgd2VudCB3cm9uZ1xuICB9XG4gIC8vIGFzeW5jIHdpdGggcHJvbWlzZXNcbiAgZmluZEF1dGhvcigpLmNhdGNoKGZ1bmN0aW9uKHJlYXNvbil7XG4gIC8vIHNvbWV0aGluZyB3ZW50IHdyb25nXG4gIH0pO1xuICBgYGBcbiAgQG1ldGhvZCBjYXRjaFxuICBAcGFyYW0ge0Z1bmN0aW9ufSBvblJlamVjdGlvblxuICBVc2VmdWwgZm9yIHRvb2xpbmcuXG4gIEByZXR1cm4ge1Byb21pc2V9XG4gICovXG5cblxuICBQcm9taXNlLnByb3RvdHlwZS5jYXRjaCA9IGZ1bmN0aW9uIF9jYXRjaChvblJlamVjdGlvbikge1xuICAgIHJldHVybiB0aGlzLnRoZW4obnVsbCwgb25SZWplY3Rpb24pO1xuICB9O1xuXG4gIC8qKlxuICAgIGBmaW5hbGx5YCB3aWxsIGJlIGludm9rZWQgcmVnYXJkbGVzcyBvZiB0aGUgcHJvbWlzZSdzIGZhdGUganVzdCBhcyBuYXRpdmVcbiAgICB0cnkvY2F0Y2gvZmluYWxseSBiZWhhdmVzXG4gIFxuICAgIFN5bmNocm9ub3VzIGV4YW1wbGU6XG4gIFxuICAgIGBgYGpzXG4gICAgZmluZEF1dGhvcigpIHtcbiAgICAgIGlmIChNYXRoLnJhbmRvbSgpID4gMC41KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ldyBBdXRob3IoKTtcbiAgICB9XG4gIFxuICAgIHRyeSB7XG4gICAgICByZXR1cm4gZmluZEF1dGhvcigpOyAvLyBzdWNjZWVkIG9yIGZhaWxcbiAgICB9IGNhdGNoKGVycm9yKSB7XG4gICAgICByZXR1cm4gZmluZE90aGVyQXV0aGVyKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIC8vIGFsd2F5cyBydW5zXG4gICAgICAvLyBkb2Vzbid0IGFmZmVjdCB0aGUgcmV0dXJuIHZhbHVlXG4gICAgfVxuICAgIGBgYFxuICBcbiAgICBBc3luY2hyb25vdXMgZXhhbXBsZTpcbiAgXG4gICAgYGBganNcbiAgICBmaW5kQXV0aG9yKCkuY2F0Y2goZnVuY3Rpb24ocmVhc29uKXtcbiAgICAgIHJldHVybiBmaW5kT3RoZXJBdXRoZXIoKTtcbiAgICB9KS5maW5hbGx5KGZ1bmN0aW9uKCl7XG4gICAgICAvLyBhdXRob3Igd2FzIGVpdGhlciBmb3VuZCwgb3Igbm90XG4gICAgfSk7XG4gICAgYGBgXG4gIFxuICAgIEBtZXRob2QgZmluYWxseVxuICAgIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgQHJldHVybiB7UHJvbWlzZX1cbiAgKi9cblxuXG4gIFByb21pc2UucHJvdG90eXBlLmZpbmFsbHkgPSBmdW5jdGlvbiBfZmluYWxseShjYWxsYmFjaykge1xuICAgIHZhciBwcm9taXNlID0gdGhpcztcbiAgICB2YXIgY29uc3RydWN0b3IgPSBwcm9taXNlLmNvbnN0cnVjdG9yO1xuXG4gICAgaWYgKGlzRnVuY3Rpb24oY2FsbGJhY2spKSB7XG4gICAgICByZXR1cm4gcHJvbWlzZS50aGVuKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gY29uc3RydWN0b3IucmVzb2x2ZShjYWxsYmFjaygpKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH0pO1xuICAgICAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgICByZXR1cm4gY29uc3RydWN0b3IucmVzb2x2ZShjYWxsYmFjaygpKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB0aHJvdyByZWFzb247XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb21pc2UudGhlbihjYWxsYmFjaywgY2FsbGJhY2spO1xuICB9O1xuXG4gIHJldHVybiBQcm9taXNlO1xufSgpO1xuXG5Qcm9taXNlJDEucHJvdG90eXBlLnRoZW4gPSB0aGVuO1xuUHJvbWlzZSQxLmFsbCA9IGFsbDtcblByb21pc2UkMS5yYWNlID0gcmFjZTtcblByb21pc2UkMS5yZXNvbHZlID0gcmVzb2x2ZSQxO1xuUHJvbWlzZSQxLnJlamVjdCA9IHJlamVjdCQxO1xuUHJvbWlzZSQxLl9zZXRTY2hlZHVsZXIgPSBzZXRTY2hlZHVsZXI7XG5Qcm9taXNlJDEuX3NldEFzYXAgPSBzZXRBc2FwO1xuUHJvbWlzZSQxLl9hc2FwID0gYXNhcDtcblxuLypnbG9iYWwgc2VsZiovXG5mdW5jdGlvbiBwb2x5ZmlsbCgpIHtcbiAgdmFyIGxvY2FsID0gdm9pZCAwO1xuXG4gIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xuICAgIGxvY2FsID0gZ2xvYmFsO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykge1xuICAgIGxvY2FsID0gc2VsZjtcbiAgfSBlbHNlIHtcbiAgICB0cnkge1xuICAgICAgbG9jYWwgPSBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcigncG9seWZpbGwgZmFpbGVkIGJlY2F1c2UgZ2xvYmFsIG9iamVjdCBpcyB1bmF2YWlsYWJsZSBpbiB0aGlzIGVudmlyb25tZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgdmFyIFAgPSBsb2NhbC5Qcm9taXNlO1xuXG4gIGlmIChQKSB7XG4gICAgdmFyIHByb21pc2VUb1N0cmluZyA9IG51bGw7XG4gICAgdHJ5IHtcbiAgICAgIHByb21pc2VUb1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChQLnJlc29sdmUoKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgLy8gc2lsZW50bHkgaWdub3JlZFxuICAgIH1cblxuICAgIGlmIChwcm9taXNlVG9TdHJpbmcgPT09ICdbb2JqZWN0IFByb21pc2VdJyAmJiAhUC5jYXN0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgbG9jYWwuUHJvbWlzZSA9IFByb21pc2UkMTtcbn1cblxuLy8gU3RyYW5nZSBjb21wYXQuLlxuUHJvbWlzZSQxLnBvbHlmaWxsID0gcG9seWZpbGw7XG5Qcm9taXNlJDEuUHJvbWlzZSA9IFByb21pc2UkMTtcblxucmV0dXJuIFByb21pc2UkMTtcblxufSkpKTtcblxuXG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVzNi1wcm9taXNlLm1hcFxuIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIihmdW5jdGlvbihhLGIpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZClkZWZpbmUoW10sYik7ZWxzZSBpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgZXhwb3J0cyliKCk7ZWxzZXtiKCksYS5GaWxlU2F2ZXI9e2V4cG9ydHM6e319LmV4cG9ydHN9fSkodGhpcyxmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGIoYSxiKXtyZXR1cm5cInVuZGVmaW5lZFwiPT10eXBlb2YgYj9iPXthdXRvQm9tOiExfTpcIm9iamVjdFwiIT10eXBlb2YgYiYmKGNvbnNvbGUud2FybihcIkRlcHJlY2F0ZWQ6IEV4cGVjdGVkIHRoaXJkIGFyZ3VtZW50IHRvIGJlIGEgb2JqZWN0XCIpLGI9e2F1dG9Cb206IWJ9KSxiLmF1dG9Cb20mJi9eXFxzKig/OnRleHRcXC9cXFMqfGFwcGxpY2F0aW9uXFwveG1sfFxcUypcXC9cXFMqXFwreG1sKVxccyo7LipjaGFyc2V0XFxzKj1cXHMqdXRmLTgvaS50ZXN0KGEudHlwZSk/bmV3IEJsb2IoW1wiXFx1RkVGRlwiLGFdLHt0eXBlOmEudHlwZX0pOmF9ZnVuY3Rpb24gYyhiLGMsZCl7dmFyIGU9bmV3IFhNTEh0dHBSZXF1ZXN0O2Uub3BlbihcIkdFVFwiLGIpLGUucmVzcG9uc2VUeXBlPVwiYmxvYlwiLGUub25sb2FkPWZ1bmN0aW9uKCl7YShlLnJlc3BvbnNlLGMsZCl9LGUub25lcnJvcj1mdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IoXCJjb3VsZCBub3QgZG93bmxvYWQgZmlsZVwiKX0sZS5zZW5kKCl9ZnVuY3Rpb24gZChhKXt2YXIgYj1uZXcgWE1MSHR0cFJlcXVlc3Q7Yi5vcGVuKFwiSEVBRFwiLGEsITEpO3RyeXtiLnNlbmQoKX1jYXRjaChhKXt9cmV0dXJuIDIwMDw9Yi5zdGF0dXMmJjI5OT49Yi5zdGF0dXN9ZnVuY3Rpb24gZShhKXt0cnl7YS5kaXNwYXRjaEV2ZW50KG5ldyBNb3VzZUV2ZW50KFwiY2xpY2tcIikpfWNhdGNoKGMpe3ZhciBiPWRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiTW91c2VFdmVudHNcIik7Yi5pbml0TW91c2VFdmVudChcImNsaWNrXCIsITAsITAsd2luZG93LDAsMCwwLDgwLDIwLCExLCExLCExLCExLDAsbnVsbCksYS5kaXNwYXRjaEV2ZW50KGIpfX12YXIgZj1cIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cud2luZG93PT09d2luZG93P3dpbmRvdzpcIm9iamVjdFwiPT10eXBlb2Ygc2VsZiYmc2VsZi5zZWxmPT09c2VsZj9zZWxmOlwib2JqZWN0XCI9PXR5cGVvZiBnbG9iYWwmJmdsb2JhbC5nbG9iYWw9PT1nbG9iYWw/Z2xvYmFsOnZvaWQgMCxhPWYuc2F2ZUFzfHwoXCJvYmplY3RcIiE9dHlwZW9mIHdpbmRvd3x8d2luZG93IT09Zj9mdW5jdGlvbigpe306XCJkb3dubG9hZFwiaW4gSFRNTEFuY2hvckVsZW1lbnQucHJvdG90eXBlP2Z1bmN0aW9uKGIsZyxoKXt2YXIgaT1mLlVSTHx8Zi53ZWJraXRVUkwsaj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtnPWd8fGIubmFtZXx8XCJkb3dubG9hZFwiLGouZG93bmxvYWQ9ZyxqLnJlbD1cIm5vb3BlbmVyXCIsXCJzdHJpbmdcIj09dHlwZW9mIGI/KGouaHJlZj1iLGoub3JpZ2luPT09bG9jYXRpb24ub3JpZ2luP2Uoaik6ZChqLmhyZWYpP2MoYixnLGgpOmUoaixqLnRhcmdldD1cIl9ibGFua1wiKSk6KGouaHJlZj1pLmNyZWF0ZU9iamVjdFVSTChiKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aS5yZXZva2VPYmplY3RVUkwoai5ocmVmKX0sNEU0KSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZShqKX0sMCkpfTpcIm1zU2F2ZU9yT3BlbkJsb2JcImluIG5hdmlnYXRvcj9mdW5jdGlvbihmLGcsaCl7aWYoZz1nfHxmLm5hbWV8fFwiZG93bmxvYWRcIixcInN0cmluZ1wiIT10eXBlb2YgZiluYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYihiKGYsaCksZyk7ZWxzZSBpZihkKGYpKWMoZixnLGgpO2Vsc2V7dmFyIGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7aS5ocmVmPWYsaS50YXJnZXQ9XCJfYmxhbmtcIixzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZShpKX0pfX06ZnVuY3Rpb24oYSxiLGQsZSl7aWYoZT1lfHxvcGVuKFwiXCIsXCJfYmxhbmtcIiksZSYmKGUuZG9jdW1lbnQudGl0bGU9ZS5kb2N1bWVudC5ib2R5LmlubmVyVGV4dD1cImRvd25sb2FkaW5nLi4uXCIpLFwic3RyaW5nXCI9PXR5cGVvZiBhKXJldHVybiBjKGEsYixkKTt2YXIgZz1cImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbVwiPT09YS50eXBlLGg9L2NvbnN0cnVjdG9yL2kudGVzdChmLkhUTUxFbGVtZW50KXx8Zi5zYWZhcmksaT0vQ3JpT1NcXC9bXFxkXSsvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7aWYoKGl8fGcmJmgpJiZcIm9iamVjdFwiPT10eXBlb2YgRmlsZVJlYWRlcil7dmFyIGo9bmV3IEZpbGVSZWFkZXI7ai5vbmxvYWRlbmQ9ZnVuY3Rpb24oKXt2YXIgYT1qLnJlc3VsdDthPWk/YTphLnJlcGxhY2UoL15kYXRhOlteO10qOy8sXCJkYXRhOmF0dGFjaG1lbnQvZmlsZTtcIiksZT9lLmxvY2F0aW9uLmhyZWY9YTpsb2NhdGlvbj1hLGU9bnVsbH0sai5yZWFkQXNEYXRhVVJMKGEpfWVsc2V7dmFyIGs9Zi5VUkx8fGYud2Via2l0VVJMLGw9ay5jcmVhdGVPYmplY3RVUkwoYSk7ZT9lLmxvY2F0aW9uPWw6bG9jYXRpb24uaHJlZj1sLGU9bnVsbCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ay5yZXZva2VPYmplY3RVUkwobCl9LDRFNCl9fSk7Zi5zYXZlQXM9YS5zYXZlQXM9YSxcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlJiYobW9kdWxlLmV4cG9ydHM9YSl9KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmlsZVNhdmVyLm1pbi5qcy5tYXAiLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBpc09sZElFID0gZnVuY3Rpb24gaXNPbGRJRSgpIHtcbiAgdmFyIG1lbW87XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSgpIHtcbiAgICBpZiAodHlwZW9mIG1lbW8gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuICAgICAgLy8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuICAgICAgLy8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuICAgICAgLy8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG4gICAgICAvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcbiAgICAgIG1lbW8gPSBCb29sZWFuKHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtbztcbiAgfTtcbn0oKTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uIGdldFRhcmdldCgpIHtcbiAgdmFyIG1lbW8gPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKHRhcmdldCkge1xuICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtb1t0YXJnZXRdO1xuICB9O1xufSgpO1xuXG52YXIgc3R5bGVzSW5Eb20gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdXG4gICAgfTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZXNJbkRvbS5wdXNoKHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogYWRkU3R5bGUob2JqLCBvcHRpb25zKSxcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgdmFyIGF0dHJpYnV0ZXMgPSBvcHRpb25zLmF0dHJpYnV0ZXMgfHwge307XG5cbiAgaWYgKHR5cGVvZiBhdHRyaWJ1dGVzLm5vbmNlID09PSAndW5kZWZpbmVkJykge1xuICAgIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gJ3VuZGVmaW5lZCcgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgICBpZiAobm9uY2UpIHtcbiAgICAgIGF0dHJpYnV0ZXMubm9uY2UgPSBub25jZTtcbiAgICB9XG4gIH1cblxuICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuICB9KTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgb3B0aW9ucy5pbnNlcnQoc3R5bGUpO1xuICB9IGVsc2Uge1xuICAgIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQob3B0aW9ucy5pbnNlcnQgfHwgJ2hlYWQnKTtcblxuICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICAgIH1cblxuICAgIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH1cblxuICByZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbnZhciByZXBsYWNlVGV4dCA9IGZ1bmN0aW9uIHJlcGxhY2VUZXh0KCkge1xuICB2YXIgdGV4dFN0b3JlID0gW107XG4gIHJldHVybiBmdW5jdGlvbiByZXBsYWNlKGluZGV4LCByZXBsYWNlbWVudCkge1xuICAgIHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcbiAgICByZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcbiAgfTtcbn0oKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyhzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG4gIHZhciBjc3MgPSByZW1vdmUgPyAnJyA6IG9iai5tZWRpYSA/IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIikuY29uY2F0KG9iai5jc3MsIFwifVwiKSA6IG9iai5jc3M7IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG4gICAgdmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG4gICAgaWYgKGNoaWxkTm9kZXNbaW5kZXhdKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG4gICAgICBzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyhzdHlsZSwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBvYmouY3NzO1xuICB2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChtZWRpYSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgnbWVkaWEnLCBtZWRpYSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUucmVtb3ZlQXR0cmlidXRlKCdtZWRpYScpO1xuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiBidG9hKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZS5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhciBzaW5nbGV0b25Db3VudGVyID0gMDtcblxuZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBzdHlsZTtcbiAgdmFyIHVwZGF0ZTtcbiAgdmFyIHJlbW92ZTtcblxuICBpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcbiAgICB2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcbiAgICBzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcbiAgICByZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cbiAgICByZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgIH07XG4gIH1cblxuICB1cGRhdGUob2JqKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB1cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVtb3ZlKCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9OyAvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cbiAgLy8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXG4gIGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSAnYm9vbGVhbicpIHtcbiAgICBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcbiAgfVxuXG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobmV3TGlzdCkgIT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5Eb21bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRG9tW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5tYXBib3hnbC1leHBvcnQtbGlzdFxcbntcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLm1hcGJveGdsLWN0cmwtZ3JvdXAgLm1hcGJveGdsLWV4cG9ydC1saXN0IGJ1dHRvblxcbntcXG4gICAgYmFja2dyb3VuZDogbm9uZTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIHBhZGRpbmc6IDhweCA4cHggNnB4O1xcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogYXV0bztcXG59XFxuXFxuLm1hcGJveGdsLWV4cG9ydC1saXN0IGJ1dHRvbi5hY3RpdmVcXG57XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cXG4ubWFwYm94Z2wtZXhwb3J0LWxpc3QgYnV0dG9uOmhvdmVyXFxue1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMDUpO1xcbn1cXG5cXG4ubWFwYm94Z2wtZXhwb3J0LWxpc3QgYnV0dG9uICsgYnV0dG9uXFxue1xcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2RkZDtcXG59XFxuXFxuLm1hcGJveGdsLWV4cG9ydC1jb250cm9sXFxueyBcXG4gICAgYmFja2dyb3VuZDogdXJsKCdkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD1VVEYtOCw8c3ZnIGlkPVxcXCJDYXBhXzFcXFwiIGVuYWJsZS1iYWNrZ3JvdW5kPVxcXCJuZXcgMCAwIDUxMiA1MTJcXFwiIGhlaWdodD1cXFwiNTEyXFxcIiB2aWV3Qm94PVxcXCIwIDAgNTEyIDUxMlxcXCIgd2lkdGg9XFxcIjUxMlxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj48Zz48cGF0aCBkPVxcXCJtNDIyLjUgOTl2LTI0YzAtNDEuMzU1LTMzLjY0NS03NS03NS03NWgtMTg0Yy00MS4zNTUgMC03NSAzMy42NDUtNzUgNzV2MjR6XFxcIi8+PHBhdGggZD1cXFwibTExOC41IDMxOXYxMjIgMjYgMTVjMCAxNi41NjggMTMuNDMxIDMwIDMwIDMwaDIxNGMxNi41NjkgMCAzMC0xMy40MzIgMzAtMzB2LTE1LTI2LTEyMnptMTc3IDEyOGgtODBjLTguMjg0IDAtMTUtNi43MTYtMTUtMTVzNi43MTYtMTUgMTUtMTVoODBjOC4yODQgMCAxNSA2LjcxNiAxNSAxNXMtNi43MTYgMTUtMTUgMTV6bTAtNjRoLTgwYy04LjI4NCAwLTE1LTYuNzE2LTE1LTE1czYuNzE2LTE1IDE1LTE1aDgwYzguMjg0IDAgMTUgNi43MTYgMTUgMTVzLTYuNzE2IDE1LTE1IDE1elxcXCIvPjxwYXRoIGQ9XFxcIm00MzYuNSAxMjloLTM2MWMtNDEuMzU1IDAtNzUgMzMuNjQ1LTc1IDc1djEyMGMwIDQxLjM1NSAzMy42NDUgNzUgNzUgNzVoMTN2LTgwaC05Yy04LjI4NCAwLTE1LTYuNzE2LTE1LTE1czYuNzE2LTE1IDE1LTE1aDI0IDMwNCAyNGM4LjI4NCAwIDE1IDYuNzE2IDE1IDE1cy02LjcxNiAxNS0xNSAxNWgtOXY4MGgxNGM0MS4zNTUgMCA3NS0zMy42NDUgNzUtNzV2LTEyMGMwLTQxLjM1NS0zMy42NDUtNzUtNzUtNzV6bS0zMDkgOTRoLTQ4Yy04LjI4NCAwLTE1LTYuNzE2LTE1LTE1czYuNzE2LTE1IDE1LTE1aDQ4YzguMjg0IDAgMTUgNi43MTYgMTUgMTVzLTYuNzE2IDE1LTE1IDE1elxcXCIvPjwvZz48L3N2Zz4nKTtcXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDcwJTtcXG59XFxuXFxuLypcXG4gKiBIaWRlIGhpZ2gtcmVzIG1hcCByZW5kZXJpbmdcXG4qL1xcbi5oaWRkZW4tbWFwIHtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgaGVpZ2h0OiAwO1xcbiAgICB3aWR0aDogMDtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZVNvdXJjZU1hcCkge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJzsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG5cbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgJycpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gIHJldHVybiBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==